/* soapH.h
   Generated by gSOAP 2.8.18 from onvif.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_byte(soap, data),0) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IANA_IfTypes
#define SOAP_TYPE_tt__IANA_IfTypes (837)
#endif

#define soap_default_tt__IANA_IfTypes(soap, a) soap_default_int(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IANA_IfTypes(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_tt__IANA_IfTypes(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__IANA_IfTypes(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_tt__IANA_IfTypes
#define soap_write_tt__IANA_IfTypes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__IANA_IfTypes(soap, data),0) || soap_put_tt__IANA_IfTypes(soap, data, "tt:IANA-IfTypes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_tt__IANA_IfTypes(struct soap*, int *, const char*, const char*);

#ifndef soap_read_tt__IANA_IfTypes
#define soap_read_tt__IANA_IfTypes(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IANA_IfTypes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_int(soap, data),0) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__duration
#define SOAP_TYPE_xsd__duration (67)
#endif
SOAP_FMAC1 void SOAP_FMAC2 soap_default_xsd__duration(struct soap*, LONG64 *);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_xsd__duration2s(struct soap*, LONG64);
SOAP_FMAC1 int SOAP_FMAC2 soap_out_xsd__duration(struct soap*, const char*, int, const LONG64 *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2xsd__duration(struct soap*, const char*, LONG64 *);
SOAP_FMAC1 LONG64 * SOAP_FMAC2 soap_in_xsd__duration(struct soap*, const char*, LONG64 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__duration(struct soap*, const LONG64 *, const char*, const char*);

#ifndef soap_write_xsd__duration
#define soap_write_xsd__duration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__duration(soap, data),0) || soap_put_xsd__duration(soap, data, "xsd:duration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_xsd__duration(struct soap*, LONG64 *, const char*, const char*);

#ifndef soap_read_xsd__duration
#define soap_read_xsd__duration(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__duration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_float
#define SOAP_TYPE_float (986)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_float(struct soap*, float *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_float(struct soap*, const char*, int, const float *, const char*);
SOAP_FMAC3 float * SOAP_FMAC4 soap_in_float(struct soap*, const char*, float *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_float(struct soap*, const float *, const char*, const char*);

#ifndef soap_write_float
#define soap_write_float(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_float(soap, data),0) || soap_put_float(soap, data, "float", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 float * SOAP_FMAC4 soap_get_float(struct soap*, float *, const char*, const char*);

#ifndef soap_read_float
#define soap_read_float(soap, data) ( soap_begin_recv(soap) || !soap_get_float(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_unsignedByte
#define SOAP_TYPE_unsignedByte (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedByte(struct soap*, unsigned char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_unsignedByte(struct soap*, const char*, unsigned char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_write_unsignedByte
#define soap_write_unsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_unsignedByte(soap, data),0) || soap_put_unsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef soap_read_unsignedByte
#define soap_read_unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_write_unsignedInt
#define soap_write_unsignedInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_unsignedInt(soap, data),0) || soap_put_unsignedInt(soap, data, "unsignedInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef soap_read_unsignedInt
#define soap_read_unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


/* _wsa5__RetryAfter is a typedef element/attribute synonym for unsignedLONG64 */

#ifndef SOAP_TYPE__wsa5__RetryAfter
#define SOAP_TYPE__wsa5__RetryAfter (36)
#endif

#define soap_default__wsa5__RetryAfter(soap, a) soap_default_unsignedLONG64(soap, a)


#define soap_out__wsa5__RetryAfter soap_out_unsignedLONG64


#define soap_in__wsa5__RetryAfter soap_in_unsignedLONG64


#define soap_put__wsa5__RetryAfter soap_put_unsignedLONG64


#define soap_get__wsa5__RetryAfter soap_get_unsignedLONG64


#ifndef SOAP_TYPE_unsignedLONG64
#define SOAP_TYPE_unsignedLONG64 (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedLONG64(struct soap*, ULONG64 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedLONG64(struct soap*, const char*, int, const ULONG64 *, const char*);
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_in_unsignedLONG64(struct soap*, const char*, ULONG64 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedLONG64(struct soap*, const ULONG64 *, const char*, const char*);

#ifndef soap_write_unsignedLONG64
#define soap_write_unsignedLONG64(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_unsignedLONG64(soap, data),0) || soap_put_unsignedLONG64(soap, data, "unsignedLong", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_get_unsignedLONG64(struct soap*, ULONG64 *, const char*, const char*);

#ifndef soap_read_unsignedLONG64
#define soap_read_unsignedLONG64(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedLONG64(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_time
#define SOAP_TYPE_time (961)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_time(struct soap*, time_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_time(struct soap*, const char*, int, const time_t *, const char*);
SOAP_FMAC3 time_t * SOAP_FMAC4 soap_in_time(struct soap*, const char*, time_t *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_time(struct soap*, const time_t *, const char*, const char*);

#ifndef soap_write_time
#define soap_write_time(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_time(soap, data),0) || soap_put_time(soap, data, "dateTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_get_time(struct soap*, time_t *, const char*, const char*);

#ifndef soap_read_time
#define soap_read_time(soap, data) ( soap_begin_recv(soap) || !soap_get_time(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (913)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

#ifndef soap_write_bool
#define soap_write_bool(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_bool(soap, data),0) || soap_put_bool(soap, data, "boolean", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

#ifndef soap_read_bool
#define soap_read_bool(soap, data) ( soap_begin_recv(soap) || !soap_get_bool(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__OSDType
#define SOAP_TYPE_tt__OSDType (897)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__OSDType(struct soap*, enum tt__OSDType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDType(struct soap*, const char*, int, const enum tt__OSDType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__OSDType2s(struct soap*, enum tt__OSDType);
SOAP_FMAC3 enum tt__OSDType * SOAP_FMAC4 soap_in_tt__OSDType(struct soap*, const char*, enum tt__OSDType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__OSDType(struct soap*, const char*, enum tt__OSDType *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__OSDType(struct soap*, const enum tt__OSDType *, const char*, const char*);

#ifndef soap_write_tt__OSDType
#define soap_write_tt__OSDType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__OSDType(soap, data),0) || soap_put_tt__OSDType(soap, data, "tt:OSDType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__OSDType * SOAP_FMAC4 soap_get_tt__OSDType(struct soap*, enum tt__OSDType *, const char*, const char*);

#ifndef soap_read_tt__OSDType
#define soap_read_tt__OSDType(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__OSDType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ModeOfOperation
#define SOAP_TYPE_tt__ModeOfOperation (895)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__ModeOfOperation(struct soap*, enum tt__ModeOfOperation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ModeOfOperation(struct soap*, const char*, int, const enum tt__ModeOfOperation *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__ModeOfOperation2s(struct soap*, enum tt__ModeOfOperation);
SOAP_FMAC3 enum tt__ModeOfOperation * SOAP_FMAC4 soap_in_tt__ModeOfOperation(struct soap*, const char*, enum tt__ModeOfOperation *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__ModeOfOperation(struct soap*, const char*, enum tt__ModeOfOperation *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ModeOfOperation(struct soap*, const enum tt__ModeOfOperation *, const char*, const char*);

#ifndef soap_write_tt__ModeOfOperation
#define soap_write_tt__ModeOfOperation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__ModeOfOperation(soap, data),0) || soap_put_tt__ModeOfOperation(soap, data, "tt:ModeOfOperation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__ModeOfOperation * SOAP_FMAC4 soap_get_tt__ModeOfOperation(struct soap*, enum tt__ModeOfOperation *, const char*, const char*);

#ifndef soap_read_tt__ModeOfOperation
#define soap_read_tt__ModeOfOperation(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ModeOfOperation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__TrackType
#define SOAP_TYPE_tt__TrackType (892)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__TrackType(struct soap*, enum tt__TrackType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__TrackType(struct soap*, const char*, int, const enum tt__TrackType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__TrackType2s(struct soap*, enum tt__TrackType);
SOAP_FMAC3 enum tt__TrackType * SOAP_FMAC4 soap_in_tt__TrackType(struct soap*, const char*, enum tt__TrackType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__TrackType(struct soap*, const char*, enum tt__TrackType *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__TrackType(struct soap*, const enum tt__TrackType *, const char*, const char*);

#ifndef soap_write_tt__TrackType
#define soap_write_tt__TrackType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__TrackType(soap, data),0) || soap_put_tt__TrackType(soap, data, "tt:TrackType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__TrackType * SOAP_FMAC4 soap_get_tt__TrackType(struct soap*, enum tt__TrackType *, const char*, const char*);

#ifndef soap_read_tt__TrackType
#define soap_read_tt__TrackType(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__TrackType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RecordingStatus
#define SOAP_TYPE_tt__RecordingStatus (891)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__RecordingStatus(struct soap*, enum tt__RecordingStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingStatus(struct soap*, const char*, int, const enum tt__RecordingStatus *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__RecordingStatus2s(struct soap*, enum tt__RecordingStatus);
SOAP_FMAC3 enum tt__RecordingStatus * SOAP_FMAC4 soap_in_tt__RecordingStatus(struct soap*, const char*, enum tt__RecordingStatus *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__RecordingStatus(struct soap*, const char*, enum tt__RecordingStatus *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__RecordingStatus(struct soap*, const enum tt__RecordingStatus *, const char*, const char*);

#ifndef soap_write_tt__RecordingStatus
#define soap_write_tt__RecordingStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__RecordingStatus(soap, data),0) || soap_put_tt__RecordingStatus(soap, data, "tt:RecordingStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__RecordingStatus * SOAP_FMAC4 soap_get_tt__RecordingStatus(struct soap*, enum tt__RecordingStatus *, const char*, const char*);

#ifndef soap_read_tt__RecordingStatus
#define soap_read_tt__RecordingStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RecordingStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SearchState
#define SOAP_TYPE_tt__SearchState (890)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__SearchState(struct soap*, enum tt__SearchState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SearchState(struct soap*, const char*, int, const enum tt__SearchState *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__SearchState2s(struct soap*, enum tt__SearchState);
SOAP_FMAC3 enum tt__SearchState * SOAP_FMAC4 soap_in_tt__SearchState(struct soap*, const char*, enum tt__SearchState *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__SearchState(struct soap*, const char*, enum tt__SearchState *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__SearchState(struct soap*, const enum tt__SearchState *, const char*, const char*);

#ifndef soap_write_tt__SearchState
#define soap_write_tt__SearchState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__SearchState(soap, data),0) || soap_put_tt__SearchState(soap, data, "tt:SearchState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__SearchState * SOAP_FMAC4 soap_get_tt__SearchState(struct soap*, enum tt__SearchState *, const char*, const char*);

#ifndef soap_read_tt__SearchState
#define soap_read_tt__SearchState(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__SearchState(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ReceiverState
#define SOAP_TYPE_tt__ReceiverState (887)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__ReceiverState(struct soap*, enum tt__ReceiverState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ReceiverState(struct soap*, const char*, int, const enum tt__ReceiverState *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__ReceiverState2s(struct soap*, enum tt__ReceiverState);
SOAP_FMAC3 enum tt__ReceiverState * SOAP_FMAC4 soap_in_tt__ReceiverState(struct soap*, const char*, enum tt__ReceiverState *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__ReceiverState(struct soap*, const char*, enum tt__ReceiverState *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ReceiverState(struct soap*, const enum tt__ReceiverState *, const char*, const char*);

#ifndef soap_write_tt__ReceiverState
#define soap_write_tt__ReceiverState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__ReceiverState(soap, data),0) || soap_put_tt__ReceiverState(soap, data, "tt:ReceiverState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__ReceiverState * SOAP_FMAC4 soap_get_tt__ReceiverState(struct soap*, enum tt__ReceiverState *, const char*, const char*);

#ifndef soap_read_tt__ReceiverState
#define soap_read_tt__ReceiverState(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ReceiverState(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ReceiverMode
#define SOAP_TYPE_tt__ReceiverMode (886)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__ReceiverMode(struct soap*, enum tt__ReceiverMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ReceiverMode(struct soap*, const char*, int, const enum tt__ReceiverMode *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__ReceiverMode2s(struct soap*, enum tt__ReceiverMode);
SOAP_FMAC3 enum tt__ReceiverMode * SOAP_FMAC4 soap_in_tt__ReceiverMode(struct soap*, const char*, enum tt__ReceiverMode *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__ReceiverMode(struct soap*, const char*, enum tt__ReceiverMode *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ReceiverMode(struct soap*, const enum tt__ReceiverMode *, const char*, const char*);

#ifndef soap_write_tt__ReceiverMode
#define soap_write_tt__ReceiverMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__ReceiverMode(soap, data),0) || soap_put_tt__ReceiverMode(soap, data, "tt:ReceiverMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__ReceiverMode * SOAP_FMAC4 soap_get_tt__ReceiverMode(struct soap*, enum tt__ReceiverMode *, const char*, const char*);

#ifndef soap_read_tt__ReceiverMode
#define soap_read_tt__ReceiverMode(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ReceiverMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ClassType
#define SOAP_TYPE_tt__ClassType (885)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__ClassType(struct soap*, enum tt__ClassType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ClassType(struct soap*, const char*, int, const enum tt__ClassType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__ClassType2s(struct soap*, enum tt__ClassType);
SOAP_FMAC3 enum tt__ClassType * SOAP_FMAC4 soap_in_tt__ClassType(struct soap*, const char*, enum tt__ClassType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__ClassType(struct soap*, const char*, enum tt__ClassType *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ClassType(struct soap*, const enum tt__ClassType *, const char*, const char*);

#ifndef soap_write_tt__ClassType
#define soap_write_tt__ClassType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__ClassType(soap, data),0) || soap_put_tt__ClassType(soap, data, "tt:ClassType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__ClassType * SOAP_FMAC4 soap_get_tt__ClassType(struct soap*, enum tt__ClassType *, const char*, const char*);

#ifndef soap_read_tt__ClassType
#define soap_read_tt__ClassType(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ClassType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Direction
#define SOAP_TYPE_tt__Direction (884)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Direction(struct soap*, enum tt__Direction *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Direction(struct soap*, const char*, int, const enum tt__Direction *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__Direction2s(struct soap*, enum tt__Direction);
SOAP_FMAC3 enum tt__Direction * SOAP_FMAC4 soap_in_tt__Direction(struct soap*, const char*, enum tt__Direction *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__Direction(struct soap*, const char*, enum tt__Direction *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Direction(struct soap*, const enum tt__Direction *, const char*, const char*);

#ifndef soap_write_tt__Direction
#define soap_write_tt__Direction(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__Direction(soap, data),0) || soap_put_tt__Direction(soap, data, "tt:Direction", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__Direction * SOAP_FMAC4 soap_get_tt__Direction(struct soap*, enum tt__Direction *, const char*, const char*);

#ifndef soap_read_tt__Direction
#define soap_read_tt__Direction(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Direction(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PropertyOperation
#define SOAP_TYPE_tt__PropertyOperation (883)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__PropertyOperation(struct soap*, enum tt__PropertyOperation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PropertyOperation(struct soap*, const char*, int, const enum tt__PropertyOperation *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__PropertyOperation2s(struct soap*, enum tt__PropertyOperation);
SOAP_FMAC3 enum tt__PropertyOperation * SOAP_FMAC4 soap_in_tt__PropertyOperation(struct soap*, const char*, enum tt__PropertyOperation *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__PropertyOperation(struct soap*, const char*, enum tt__PropertyOperation *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__PropertyOperation(struct soap*, const enum tt__PropertyOperation *, const char*, const char*);

#ifndef soap_write_tt__PropertyOperation
#define soap_write_tt__PropertyOperation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__PropertyOperation(soap, data),0) || soap_put_tt__PropertyOperation(soap, data, "tt:PropertyOperation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__PropertyOperation * SOAP_FMAC4 soap_get_tt__PropertyOperation(struct soap*, enum tt__PropertyOperation *, const char*, const char*);

#ifndef soap_read_tt__PropertyOperation
#define soap_read_tt__PropertyOperation(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PropertyOperation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IrCutFilterAutoBoundaryType
#define SOAP_TYPE_tt__IrCutFilterAutoBoundaryType (881)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__IrCutFilterAutoBoundaryType(struct soap*, enum tt__IrCutFilterAutoBoundaryType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IrCutFilterAutoBoundaryType(struct soap*, const char*, int, const enum tt__IrCutFilterAutoBoundaryType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__IrCutFilterAutoBoundaryType2s(struct soap*, enum tt__IrCutFilterAutoBoundaryType);
SOAP_FMAC3 enum tt__IrCutFilterAutoBoundaryType * SOAP_FMAC4 soap_in_tt__IrCutFilterAutoBoundaryType(struct soap*, const char*, enum tt__IrCutFilterAutoBoundaryType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__IrCutFilterAutoBoundaryType(struct soap*, const char*, enum tt__IrCutFilterAutoBoundaryType *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__IrCutFilterAutoBoundaryType(struct soap*, const enum tt__IrCutFilterAutoBoundaryType *, const char*, const char*);

#ifndef soap_write_tt__IrCutFilterAutoBoundaryType
#define soap_write_tt__IrCutFilterAutoBoundaryType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__IrCutFilterAutoBoundaryType(soap, data),0) || soap_put_tt__IrCutFilterAutoBoundaryType(soap, data, "tt:IrCutFilterAutoBoundaryType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__IrCutFilterAutoBoundaryType * SOAP_FMAC4 soap_get_tt__IrCutFilterAutoBoundaryType(struct soap*, enum tt__IrCutFilterAutoBoundaryType *, const char*, const char*);

#ifndef soap_read_tt__IrCutFilterAutoBoundaryType
#define soap_read_tt__IrCutFilterAutoBoundaryType(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IrCutFilterAutoBoundaryType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ImageStabilizationMode
#define SOAP_TYPE_tt__ImageStabilizationMode (880)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__ImageStabilizationMode(struct soap*, enum tt__ImageStabilizationMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImageStabilizationMode(struct soap*, const char*, int, const enum tt__ImageStabilizationMode *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__ImageStabilizationMode2s(struct soap*, enum tt__ImageStabilizationMode);
SOAP_FMAC3 enum tt__ImageStabilizationMode * SOAP_FMAC4 soap_in_tt__ImageStabilizationMode(struct soap*, const char*, enum tt__ImageStabilizationMode *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__ImageStabilizationMode(struct soap*, const char*, enum tt__ImageStabilizationMode *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ImageStabilizationMode(struct soap*, const enum tt__ImageStabilizationMode *, const char*, const char*);

#ifndef soap_write_tt__ImageStabilizationMode
#define soap_write_tt__ImageStabilizationMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__ImageStabilizationMode(soap, data),0) || soap_put_tt__ImageStabilizationMode(soap, data, "tt:ImageStabilizationMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__ImageStabilizationMode * SOAP_FMAC4 soap_get_tt__ImageStabilizationMode(struct soap*, enum tt__ImageStabilizationMode *, const char*, const char*);

#ifndef soap_read_tt__ImageStabilizationMode
#define soap_read_tt__ImageStabilizationMode(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ImageStabilizationMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IrCutFilterMode
#define SOAP_TYPE_tt__IrCutFilterMode (879)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__IrCutFilterMode(struct soap*, enum tt__IrCutFilterMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IrCutFilterMode(struct soap*, const char*, int, const enum tt__IrCutFilterMode *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__IrCutFilterMode2s(struct soap*, enum tt__IrCutFilterMode);
SOAP_FMAC3 enum tt__IrCutFilterMode * SOAP_FMAC4 soap_in_tt__IrCutFilterMode(struct soap*, const char*, enum tt__IrCutFilterMode *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__IrCutFilterMode(struct soap*, const char*, enum tt__IrCutFilterMode *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__IrCutFilterMode(struct soap*, const enum tt__IrCutFilterMode *, const char*, const char*);

#ifndef soap_write_tt__IrCutFilterMode
#define soap_write_tt__IrCutFilterMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__IrCutFilterMode(soap, data),0) || soap_put_tt__IrCutFilterMode(soap, data, "tt:IrCutFilterMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__IrCutFilterMode * SOAP_FMAC4 soap_get_tt__IrCutFilterMode(struct soap*, enum tt__IrCutFilterMode *, const char*, const char*);

#ifndef soap_read_tt__IrCutFilterMode
#define soap_read_tt__IrCutFilterMode(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IrCutFilterMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__WhiteBalanceMode
#define SOAP_TYPE_tt__WhiteBalanceMode (878)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__WhiteBalanceMode(struct soap*, enum tt__WhiteBalanceMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__WhiteBalanceMode(struct soap*, const char*, int, const enum tt__WhiteBalanceMode *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__WhiteBalanceMode2s(struct soap*, enum tt__WhiteBalanceMode);
SOAP_FMAC3 enum tt__WhiteBalanceMode * SOAP_FMAC4 soap_in_tt__WhiteBalanceMode(struct soap*, const char*, enum tt__WhiteBalanceMode *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__WhiteBalanceMode(struct soap*, const char*, enum tt__WhiteBalanceMode *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__WhiteBalanceMode(struct soap*, const enum tt__WhiteBalanceMode *, const char*, const char*);

#ifndef soap_write_tt__WhiteBalanceMode
#define soap_write_tt__WhiteBalanceMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__WhiteBalanceMode(soap, data),0) || soap_put_tt__WhiteBalanceMode(soap, data, "tt:WhiteBalanceMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__WhiteBalanceMode * SOAP_FMAC4 soap_get_tt__WhiteBalanceMode(struct soap*, enum tt__WhiteBalanceMode *, const char*, const char*);

#ifndef soap_read_tt__WhiteBalanceMode
#define soap_read_tt__WhiteBalanceMode(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__WhiteBalanceMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Enabled
#define SOAP_TYPE_tt__Enabled (877)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Enabled(struct soap*, enum tt__Enabled *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Enabled(struct soap*, const char*, int, const enum tt__Enabled *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__Enabled2s(struct soap*, enum tt__Enabled);
SOAP_FMAC3 enum tt__Enabled * SOAP_FMAC4 soap_in_tt__Enabled(struct soap*, const char*, enum tt__Enabled *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__Enabled(struct soap*, const char*, enum tt__Enabled *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Enabled(struct soap*, const enum tt__Enabled *, const char*, const char*);

#ifndef soap_write_tt__Enabled
#define soap_write_tt__Enabled(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__Enabled(soap, data),0) || soap_put_tt__Enabled(soap, data, "tt:Enabled", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__Enabled * SOAP_FMAC4 soap_get_tt__Enabled(struct soap*, enum tt__Enabled *, const char*, const char*);

#ifndef soap_read_tt__Enabled
#define soap_read_tt__Enabled(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Enabled(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ExposureMode
#define SOAP_TYPE_tt__ExposureMode (876)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__ExposureMode(struct soap*, enum tt__ExposureMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ExposureMode(struct soap*, const char*, int, const enum tt__ExposureMode *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__ExposureMode2s(struct soap*, enum tt__ExposureMode);
SOAP_FMAC3 enum tt__ExposureMode * SOAP_FMAC4 soap_in_tt__ExposureMode(struct soap*, const char*, enum tt__ExposureMode *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__ExposureMode(struct soap*, const char*, enum tt__ExposureMode *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ExposureMode(struct soap*, const enum tt__ExposureMode *, const char*, const char*);

#ifndef soap_write_tt__ExposureMode
#define soap_write_tt__ExposureMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__ExposureMode(soap, data),0) || soap_put_tt__ExposureMode(soap, data, "tt:ExposureMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__ExposureMode * SOAP_FMAC4 soap_get_tt__ExposureMode(struct soap*, enum tt__ExposureMode *, const char*, const char*);

#ifndef soap_read_tt__ExposureMode
#define soap_read_tt__ExposureMode(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ExposureMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ExposurePriority
#define SOAP_TYPE_tt__ExposurePriority (875)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__ExposurePriority(struct soap*, enum tt__ExposurePriority *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ExposurePriority(struct soap*, const char*, int, const enum tt__ExposurePriority *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__ExposurePriority2s(struct soap*, enum tt__ExposurePriority);
SOAP_FMAC3 enum tt__ExposurePriority * SOAP_FMAC4 soap_in_tt__ExposurePriority(struct soap*, const char*, enum tt__ExposurePriority *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__ExposurePriority(struct soap*, const char*, enum tt__ExposurePriority *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ExposurePriority(struct soap*, const enum tt__ExposurePriority *, const char*, const char*);

#ifndef soap_write_tt__ExposurePriority
#define soap_write_tt__ExposurePriority(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__ExposurePriority(soap, data),0) || soap_put_tt__ExposurePriority(soap, data, "tt:ExposurePriority", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__ExposurePriority * SOAP_FMAC4 soap_get_tt__ExposurePriority(struct soap*, enum tt__ExposurePriority *, const char*, const char*);

#ifndef soap_read_tt__ExposurePriority
#define soap_read_tt__ExposurePriority(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ExposurePriority(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__BacklightCompensationMode
#define SOAP_TYPE_tt__BacklightCompensationMode (874)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__BacklightCompensationMode(struct soap*, enum tt__BacklightCompensationMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__BacklightCompensationMode(struct soap*, const char*, int, const enum tt__BacklightCompensationMode *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__BacklightCompensationMode2s(struct soap*, enum tt__BacklightCompensationMode);
SOAP_FMAC3 enum tt__BacklightCompensationMode * SOAP_FMAC4 soap_in_tt__BacklightCompensationMode(struct soap*, const char*, enum tt__BacklightCompensationMode *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__BacklightCompensationMode(struct soap*, const char*, enum tt__BacklightCompensationMode *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__BacklightCompensationMode(struct soap*, const enum tt__BacklightCompensationMode *, const char*, const char*);

#ifndef soap_write_tt__BacklightCompensationMode
#define soap_write_tt__BacklightCompensationMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__BacklightCompensationMode(soap, data),0) || soap_put_tt__BacklightCompensationMode(soap, data, "tt:BacklightCompensationMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__BacklightCompensationMode * SOAP_FMAC4 soap_get_tt__BacklightCompensationMode(struct soap*, enum tt__BacklightCompensationMode *, const char*, const char*);

#ifndef soap_read_tt__BacklightCompensationMode
#define soap_read_tt__BacklightCompensationMode(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__BacklightCompensationMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__WideDynamicMode
#define SOAP_TYPE_tt__WideDynamicMode (873)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__WideDynamicMode(struct soap*, enum tt__WideDynamicMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__WideDynamicMode(struct soap*, const char*, int, const enum tt__WideDynamicMode *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__WideDynamicMode2s(struct soap*, enum tt__WideDynamicMode);
SOAP_FMAC3 enum tt__WideDynamicMode * SOAP_FMAC4 soap_in_tt__WideDynamicMode(struct soap*, const char*, enum tt__WideDynamicMode *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__WideDynamicMode(struct soap*, const char*, enum tt__WideDynamicMode *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__WideDynamicMode(struct soap*, const enum tt__WideDynamicMode *, const char*, const char*);

#ifndef soap_write_tt__WideDynamicMode
#define soap_write_tt__WideDynamicMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__WideDynamicMode(soap, data),0) || soap_put_tt__WideDynamicMode(soap, data, "tt:WideDynamicMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__WideDynamicMode * SOAP_FMAC4 soap_get_tt__WideDynamicMode(struct soap*, enum tt__WideDynamicMode *, const char*, const char*);

#ifndef soap_read_tt__WideDynamicMode
#define soap_read_tt__WideDynamicMode(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__WideDynamicMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AutoFocusMode
#define SOAP_TYPE_tt__AutoFocusMode (872)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__AutoFocusMode(struct soap*, enum tt__AutoFocusMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AutoFocusMode(struct soap*, const char*, int, const enum tt__AutoFocusMode *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__AutoFocusMode2s(struct soap*, enum tt__AutoFocusMode);
SOAP_FMAC3 enum tt__AutoFocusMode * SOAP_FMAC4 soap_in_tt__AutoFocusMode(struct soap*, const char*, enum tt__AutoFocusMode *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__AutoFocusMode(struct soap*, const char*, enum tt__AutoFocusMode *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__AutoFocusMode(struct soap*, const enum tt__AutoFocusMode *, const char*, const char*);

#ifndef soap_write_tt__AutoFocusMode
#define soap_write_tt__AutoFocusMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__AutoFocusMode(soap, data),0) || soap_put_tt__AutoFocusMode(soap, data, "tt:AutoFocusMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__AutoFocusMode * SOAP_FMAC4 soap_get_tt__AutoFocusMode(struct soap*, enum tt__AutoFocusMode *, const char*, const char*);

#ifndef soap_read_tt__AutoFocusMode
#define soap_read_tt__AutoFocusMode(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AutoFocusMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZPresetTourOperation
#define SOAP_TYPE_tt__PTZPresetTourOperation (871)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__PTZPresetTourOperation(struct soap*, enum tt__PTZPresetTourOperation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourOperation(struct soap*, const char*, int, const enum tt__PTZPresetTourOperation *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__PTZPresetTourOperation2s(struct soap*, enum tt__PTZPresetTourOperation);
SOAP_FMAC3 enum tt__PTZPresetTourOperation * SOAP_FMAC4 soap_in_tt__PTZPresetTourOperation(struct soap*, const char*, enum tt__PTZPresetTourOperation *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__PTZPresetTourOperation(struct soap*, const char*, enum tt__PTZPresetTourOperation *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__PTZPresetTourOperation(struct soap*, const enum tt__PTZPresetTourOperation *, const char*, const char*);

#ifndef soap_write_tt__PTZPresetTourOperation
#define soap_write_tt__PTZPresetTourOperation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__PTZPresetTourOperation(soap, data),0) || soap_put_tt__PTZPresetTourOperation(soap, data, "tt:PTZPresetTourOperation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__PTZPresetTourOperation * SOAP_FMAC4 soap_get_tt__PTZPresetTourOperation(struct soap*, enum tt__PTZPresetTourOperation *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourOperation
#define soap_read_tt__PTZPresetTourOperation(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourOperation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZPresetTourDirection
#define SOAP_TYPE_tt__PTZPresetTourDirection (870)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__PTZPresetTourDirection(struct soap*, enum tt__PTZPresetTourDirection *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourDirection(struct soap*, const char*, int, const enum tt__PTZPresetTourDirection *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__PTZPresetTourDirection2s(struct soap*, enum tt__PTZPresetTourDirection);
SOAP_FMAC3 enum tt__PTZPresetTourDirection * SOAP_FMAC4 soap_in_tt__PTZPresetTourDirection(struct soap*, const char*, enum tt__PTZPresetTourDirection *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__PTZPresetTourDirection(struct soap*, const char*, enum tt__PTZPresetTourDirection *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__PTZPresetTourDirection(struct soap*, const enum tt__PTZPresetTourDirection *, const char*, const char*);

#ifndef soap_write_tt__PTZPresetTourDirection
#define soap_write_tt__PTZPresetTourDirection(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__PTZPresetTourDirection(soap, data),0) || soap_put_tt__PTZPresetTourDirection(soap, data, "tt:PTZPresetTourDirection", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__PTZPresetTourDirection * SOAP_FMAC4 soap_get_tt__PTZPresetTourDirection(struct soap*, enum tt__PTZPresetTourDirection *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourDirection
#define soap_read_tt__PTZPresetTourDirection(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourDirection(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZPresetTourState
#define SOAP_TYPE_tt__PTZPresetTourState (869)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__PTZPresetTourState(struct soap*, enum tt__PTZPresetTourState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourState(struct soap*, const char*, int, const enum tt__PTZPresetTourState *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__PTZPresetTourState2s(struct soap*, enum tt__PTZPresetTourState);
SOAP_FMAC3 enum tt__PTZPresetTourState * SOAP_FMAC4 soap_in_tt__PTZPresetTourState(struct soap*, const char*, enum tt__PTZPresetTourState *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__PTZPresetTourState(struct soap*, const char*, enum tt__PTZPresetTourState *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__PTZPresetTourState(struct soap*, const enum tt__PTZPresetTourState *, const char*, const char*);

#ifndef soap_write_tt__PTZPresetTourState
#define soap_write_tt__PTZPresetTourState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__PTZPresetTourState(soap, data),0) || soap_put_tt__PTZPresetTourState(soap, data, "tt:PTZPresetTourState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__PTZPresetTourState * SOAP_FMAC4 soap_get_tt__PTZPresetTourState(struct soap*, enum tt__PTZPresetTourState *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourState
#define soap_read_tt__PTZPresetTourState(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourState(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__MoveStatus
#define SOAP_TYPE_tt__MoveStatus (868)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__MoveStatus(struct soap*, enum tt__MoveStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MoveStatus(struct soap*, const char*, int, const enum tt__MoveStatus *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__MoveStatus2s(struct soap*, enum tt__MoveStatus);
SOAP_FMAC3 enum tt__MoveStatus * SOAP_FMAC4 soap_in_tt__MoveStatus(struct soap*, const char*, enum tt__MoveStatus *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__MoveStatus(struct soap*, const char*, enum tt__MoveStatus *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__MoveStatus(struct soap*, const enum tt__MoveStatus *, const char*, const char*);

#ifndef soap_write_tt__MoveStatus
#define soap_write_tt__MoveStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__MoveStatus(soap, data),0) || soap_put_tt__MoveStatus(soap, data, "tt:MoveStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__MoveStatus * SOAP_FMAC4 soap_get_tt__MoveStatus(struct soap*, enum tt__MoveStatus *, const char*, const char*);

#ifndef soap_read_tt__MoveStatus
#define soap_read_tt__MoveStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__MoveStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ReverseMode
#define SOAP_TYPE_tt__ReverseMode (866)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__ReverseMode(struct soap*, enum tt__ReverseMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ReverseMode(struct soap*, const char*, int, const enum tt__ReverseMode *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__ReverseMode2s(struct soap*, enum tt__ReverseMode);
SOAP_FMAC3 enum tt__ReverseMode * SOAP_FMAC4 soap_in_tt__ReverseMode(struct soap*, const char*, enum tt__ReverseMode *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__ReverseMode(struct soap*, const char*, enum tt__ReverseMode *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ReverseMode(struct soap*, const enum tt__ReverseMode *, const char*, const char*);

#ifndef soap_write_tt__ReverseMode
#define soap_write_tt__ReverseMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__ReverseMode(soap, data),0) || soap_put_tt__ReverseMode(soap, data, "tt:ReverseMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__ReverseMode * SOAP_FMAC4 soap_get_tt__ReverseMode(struct soap*, enum tt__ReverseMode *, const char*, const char*);

#ifndef soap_read_tt__ReverseMode
#define soap_read_tt__ReverseMode(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ReverseMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__EFlipMode
#define SOAP_TYPE_tt__EFlipMode (865)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__EFlipMode(struct soap*, enum tt__EFlipMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__EFlipMode(struct soap*, const char*, int, const enum tt__EFlipMode *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__EFlipMode2s(struct soap*, enum tt__EFlipMode);
SOAP_FMAC3 enum tt__EFlipMode * SOAP_FMAC4 soap_in_tt__EFlipMode(struct soap*, const char*, enum tt__EFlipMode *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__EFlipMode(struct soap*, const char*, enum tt__EFlipMode *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__EFlipMode(struct soap*, const enum tt__EFlipMode *, const char*, const char*);

#ifndef soap_write_tt__EFlipMode
#define soap_write_tt__EFlipMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__EFlipMode(soap, data),0) || soap_put_tt__EFlipMode(soap, data, "tt:EFlipMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__EFlipMode * SOAP_FMAC4 soap_get_tt__EFlipMode(struct soap*, enum tt__EFlipMode *, const char*, const char*);

#ifndef soap_read_tt__EFlipMode
#define soap_read_tt__EFlipMode(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__EFlipMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RelayMode
#define SOAP_TYPE_tt__RelayMode (864)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__RelayMode(struct soap*, enum tt__RelayMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RelayMode(struct soap*, const char*, int, const enum tt__RelayMode *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__RelayMode2s(struct soap*, enum tt__RelayMode);
SOAP_FMAC3 enum tt__RelayMode * SOAP_FMAC4 soap_in_tt__RelayMode(struct soap*, const char*, enum tt__RelayMode *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__RelayMode(struct soap*, const char*, enum tt__RelayMode *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__RelayMode(struct soap*, const enum tt__RelayMode *, const char*, const char*);

#ifndef soap_write_tt__RelayMode
#define soap_write_tt__RelayMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__RelayMode(soap, data),0) || soap_put_tt__RelayMode(soap, data, "tt:RelayMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__RelayMode * SOAP_FMAC4 soap_get_tt__RelayMode(struct soap*, enum tt__RelayMode *, const char*, const char*);

#ifndef soap_read_tt__RelayMode
#define soap_read_tt__RelayMode(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RelayMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RelayIdleState
#define SOAP_TYPE_tt__RelayIdleState (863)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__RelayIdleState(struct soap*, enum tt__RelayIdleState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RelayIdleState(struct soap*, const char*, int, const enum tt__RelayIdleState *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__RelayIdleState2s(struct soap*, enum tt__RelayIdleState);
SOAP_FMAC3 enum tt__RelayIdleState * SOAP_FMAC4 soap_in_tt__RelayIdleState(struct soap*, const char*, enum tt__RelayIdleState *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__RelayIdleState(struct soap*, const char*, enum tt__RelayIdleState *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__RelayIdleState(struct soap*, const enum tt__RelayIdleState *, const char*, const char*);

#ifndef soap_write_tt__RelayIdleState
#define soap_write_tt__RelayIdleState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__RelayIdleState(soap, data),0) || soap_put_tt__RelayIdleState(soap, data, "tt:RelayIdleState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__RelayIdleState * SOAP_FMAC4 soap_get_tt__RelayIdleState(struct soap*, enum tt__RelayIdleState *, const char*, const char*);

#ifndef soap_read_tt__RelayIdleState
#define soap_read_tt__RelayIdleState(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RelayIdleState(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RelayLogicalState
#define SOAP_TYPE_tt__RelayLogicalState (862)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__RelayLogicalState(struct soap*, enum tt__RelayLogicalState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RelayLogicalState(struct soap*, const char*, int, const enum tt__RelayLogicalState *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__RelayLogicalState2s(struct soap*, enum tt__RelayLogicalState);
SOAP_FMAC3 enum tt__RelayLogicalState * SOAP_FMAC4 soap_in_tt__RelayLogicalState(struct soap*, const char*, enum tt__RelayLogicalState *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__RelayLogicalState(struct soap*, const char*, enum tt__RelayLogicalState *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__RelayLogicalState(struct soap*, const enum tt__RelayLogicalState *, const char*, const char*);

#ifndef soap_write_tt__RelayLogicalState
#define soap_write_tt__RelayLogicalState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__RelayLogicalState(soap, data),0) || soap_put_tt__RelayLogicalState(soap, data, "tt:RelayLogicalState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__RelayLogicalState * SOAP_FMAC4 soap_get_tt__RelayLogicalState(struct soap*, enum tt__RelayLogicalState *, const char*, const char*);

#ifndef soap_read_tt__RelayLogicalState
#define soap_read_tt__RelayLogicalState(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RelayLogicalState(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__UserLevel
#define SOAP_TYPE_tt__UserLevel (861)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__UserLevel(struct soap*, enum tt__UserLevel *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__UserLevel(struct soap*, const char*, int, const enum tt__UserLevel *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__UserLevel2s(struct soap*, enum tt__UserLevel);
SOAP_FMAC3 enum tt__UserLevel * SOAP_FMAC4 soap_in_tt__UserLevel(struct soap*, const char*, enum tt__UserLevel *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__UserLevel(struct soap*, const char*, enum tt__UserLevel *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__UserLevel(struct soap*, const enum tt__UserLevel *, const char*, const char*);

#ifndef soap_write_tt__UserLevel
#define soap_write_tt__UserLevel(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__UserLevel(soap, data),0) || soap_put_tt__UserLevel(soap, data, "tt:UserLevel", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__UserLevel * SOAP_FMAC4 soap_get_tt__UserLevel(struct soap*, enum tt__UserLevel *, const char*, const char*);

#ifndef soap_read_tt__UserLevel
#define soap_read_tt__UserLevel(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__UserLevel(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SetDateTimeType
#define SOAP_TYPE_tt__SetDateTimeType (860)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__SetDateTimeType(struct soap*, enum tt__SetDateTimeType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SetDateTimeType(struct soap*, const char*, int, const enum tt__SetDateTimeType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__SetDateTimeType2s(struct soap*, enum tt__SetDateTimeType);
SOAP_FMAC3 enum tt__SetDateTimeType * SOAP_FMAC4 soap_in_tt__SetDateTimeType(struct soap*, const char*, enum tt__SetDateTimeType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__SetDateTimeType(struct soap*, const char*, enum tt__SetDateTimeType *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__SetDateTimeType(struct soap*, const enum tt__SetDateTimeType *, const char*, const char*);

#ifndef soap_write_tt__SetDateTimeType
#define soap_write_tt__SetDateTimeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__SetDateTimeType(soap, data),0) || soap_put_tt__SetDateTimeType(soap, data, "tt:SetDateTimeType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__SetDateTimeType * SOAP_FMAC4 soap_get_tt__SetDateTimeType(struct soap*, enum tt__SetDateTimeType *, const char*, const char*);

#ifndef soap_read_tt__SetDateTimeType
#define soap_read_tt__SetDateTimeType(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__SetDateTimeType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__FactoryDefaultType
#define SOAP_TYPE_tt__FactoryDefaultType (859)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__FactoryDefaultType(struct soap*, enum tt__FactoryDefaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FactoryDefaultType(struct soap*, const char*, int, const enum tt__FactoryDefaultType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__FactoryDefaultType2s(struct soap*, enum tt__FactoryDefaultType);
SOAP_FMAC3 enum tt__FactoryDefaultType * SOAP_FMAC4 soap_in_tt__FactoryDefaultType(struct soap*, const char*, enum tt__FactoryDefaultType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__FactoryDefaultType(struct soap*, const char*, enum tt__FactoryDefaultType *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__FactoryDefaultType(struct soap*, const enum tt__FactoryDefaultType *, const char*, const char*);

#ifndef soap_write_tt__FactoryDefaultType
#define soap_write_tt__FactoryDefaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__FactoryDefaultType(soap, data),0) || soap_put_tt__FactoryDefaultType(soap, data, "tt:FactoryDefaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__FactoryDefaultType * SOAP_FMAC4 soap_get_tt__FactoryDefaultType(struct soap*, enum tt__FactoryDefaultType *, const char*, const char*);

#ifndef soap_read_tt__FactoryDefaultType
#define soap_read_tt__FactoryDefaultType(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__FactoryDefaultType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SystemLogType
#define SOAP_TYPE_tt__SystemLogType (858)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__SystemLogType(struct soap*, enum tt__SystemLogType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SystemLogType(struct soap*, const char*, int, const enum tt__SystemLogType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__SystemLogType2s(struct soap*, enum tt__SystemLogType);
SOAP_FMAC3 enum tt__SystemLogType * SOAP_FMAC4 soap_in_tt__SystemLogType(struct soap*, const char*, enum tt__SystemLogType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__SystemLogType(struct soap*, const char*, enum tt__SystemLogType *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__SystemLogType(struct soap*, const enum tt__SystemLogType *, const char*, const char*);

#ifndef soap_write_tt__SystemLogType
#define soap_write_tt__SystemLogType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__SystemLogType(soap, data),0) || soap_put_tt__SystemLogType(soap, data, "tt:SystemLogType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__SystemLogType * SOAP_FMAC4 soap_get_tt__SystemLogType(struct soap*, enum tt__SystemLogType *, const char*, const char*);

#ifndef soap_read_tt__SystemLogType
#define soap_read_tt__SystemLogType(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__SystemLogType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__CapabilityCategory
#define SOAP_TYPE_tt__CapabilityCategory (857)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__CapabilityCategory(struct soap*, enum tt__CapabilityCategory *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__CapabilityCategory(struct soap*, const char*, int, const enum tt__CapabilityCategory *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__CapabilityCategory2s(struct soap*, enum tt__CapabilityCategory);
SOAP_FMAC3 enum tt__CapabilityCategory * SOAP_FMAC4 soap_in_tt__CapabilityCategory(struct soap*, const char*, enum tt__CapabilityCategory *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__CapabilityCategory(struct soap*, const char*, enum tt__CapabilityCategory *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__CapabilityCategory(struct soap*, const enum tt__CapabilityCategory *, const char*, const char*);

#ifndef soap_write_tt__CapabilityCategory
#define soap_write_tt__CapabilityCategory(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__CapabilityCategory(soap, data),0) || soap_put_tt__CapabilityCategory(soap, data, "tt:CapabilityCategory", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__CapabilityCategory * SOAP_FMAC4 soap_get_tt__CapabilityCategory(struct soap*, enum tt__CapabilityCategory *, const char*, const char*);

#ifndef soap_read_tt__CapabilityCategory
#define soap_read_tt__CapabilityCategory(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__CapabilityCategory(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Dot11AuthAndMangementSuite
#define SOAP_TYPE_tt__Dot11AuthAndMangementSuite (856)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Dot11AuthAndMangementSuite(struct soap*, enum tt__Dot11AuthAndMangementSuite *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11AuthAndMangementSuite(struct soap*, const char*, int, const enum tt__Dot11AuthAndMangementSuite *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__Dot11AuthAndMangementSuite2s(struct soap*, enum tt__Dot11AuthAndMangementSuite);
SOAP_FMAC3 enum tt__Dot11AuthAndMangementSuite * SOAP_FMAC4 soap_in_tt__Dot11AuthAndMangementSuite(struct soap*, const char*, enum tt__Dot11AuthAndMangementSuite *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__Dot11AuthAndMangementSuite(struct soap*, const char*, enum tt__Dot11AuthAndMangementSuite *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Dot11AuthAndMangementSuite(struct soap*, const enum tt__Dot11AuthAndMangementSuite *, const char*, const char*);

#ifndef soap_write_tt__Dot11AuthAndMangementSuite
#define soap_write_tt__Dot11AuthAndMangementSuite(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__Dot11AuthAndMangementSuite(soap, data),0) || soap_put_tt__Dot11AuthAndMangementSuite(soap, data, "tt:Dot11AuthAndMangementSuite", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__Dot11AuthAndMangementSuite * SOAP_FMAC4 soap_get_tt__Dot11AuthAndMangementSuite(struct soap*, enum tt__Dot11AuthAndMangementSuite *, const char*, const char*);

#ifndef soap_read_tt__Dot11AuthAndMangementSuite
#define soap_read_tt__Dot11AuthAndMangementSuite(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Dot11AuthAndMangementSuite(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Dot11SignalStrength
#define SOAP_TYPE_tt__Dot11SignalStrength (855)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Dot11SignalStrength(struct soap*, enum tt__Dot11SignalStrength *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11SignalStrength(struct soap*, const char*, int, const enum tt__Dot11SignalStrength *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__Dot11SignalStrength2s(struct soap*, enum tt__Dot11SignalStrength);
SOAP_FMAC3 enum tt__Dot11SignalStrength * SOAP_FMAC4 soap_in_tt__Dot11SignalStrength(struct soap*, const char*, enum tt__Dot11SignalStrength *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__Dot11SignalStrength(struct soap*, const char*, enum tt__Dot11SignalStrength *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Dot11SignalStrength(struct soap*, const enum tt__Dot11SignalStrength *, const char*, const char*);

#ifndef soap_write_tt__Dot11SignalStrength
#define soap_write_tt__Dot11SignalStrength(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__Dot11SignalStrength(soap, data),0) || soap_put_tt__Dot11SignalStrength(soap, data, "tt:Dot11SignalStrength", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__Dot11SignalStrength * SOAP_FMAC4 soap_get_tt__Dot11SignalStrength(struct soap*, enum tt__Dot11SignalStrength *, const char*, const char*);

#ifndef soap_read_tt__Dot11SignalStrength
#define soap_read_tt__Dot11SignalStrength(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Dot11SignalStrength(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Dot11Cipher
#define SOAP_TYPE_tt__Dot11Cipher (852)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Dot11Cipher(struct soap*, enum tt__Dot11Cipher *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11Cipher(struct soap*, const char*, int, const enum tt__Dot11Cipher *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__Dot11Cipher2s(struct soap*, enum tt__Dot11Cipher);
SOAP_FMAC3 enum tt__Dot11Cipher * SOAP_FMAC4 soap_in_tt__Dot11Cipher(struct soap*, const char*, enum tt__Dot11Cipher *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__Dot11Cipher(struct soap*, const char*, enum tt__Dot11Cipher *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Dot11Cipher(struct soap*, const enum tt__Dot11Cipher *, const char*, const char*);

#ifndef soap_write_tt__Dot11Cipher
#define soap_write_tt__Dot11Cipher(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__Dot11Cipher(soap, data),0) || soap_put_tt__Dot11Cipher(soap, data, "tt:Dot11Cipher", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__Dot11Cipher * SOAP_FMAC4 soap_get_tt__Dot11Cipher(struct soap*, enum tt__Dot11Cipher *, const char*, const char*);

#ifndef soap_read_tt__Dot11Cipher
#define soap_read_tt__Dot11Cipher(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Dot11Cipher(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Dot11SecurityMode
#define SOAP_TYPE_tt__Dot11SecurityMode (851)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Dot11SecurityMode(struct soap*, enum tt__Dot11SecurityMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11SecurityMode(struct soap*, const char*, int, const enum tt__Dot11SecurityMode *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__Dot11SecurityMode2s(struct soap*, enum tt__Dot11SecurityMode);
SOAP_FMAC3 enum tt__Dot11SecurityMode * SOAP_FMAC4 soap_in_tt__Dot11SecurityMode(struct soap*, const char*, enum tt__Dot11SecurityMode *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__Dot11SecurityMode(struct soap*, const char*, enum tt__Dot11SecurityMode *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Dot11SecurityMode(struct soap*, const enum tt__Dot11SecurityMode *, const char*, const char*);

#ifndef soap_write_tt__Dot11SecurityMode
#define soap_write_tt__Dot11SecurityMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__Dot11SecurityMode(soap, data),0) || soap_put_tt__Dot11SecurityMode(soap, data, "tt:Dot11SecurityMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__Dot11SecurityMode * SOAP_FMAC4 soap_get_tt__Dot11SecurityMode(struct soap*, enum tt__Dot11SecurityMode *, const char*, const char*);

#ifndef soap_read_tt__Dot11SecurityMode
#define soap_read_tt__Dot11SecurityMode(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Dot11SecurityMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Dot11StationMode
#define SOAP_TYPE_tt__Dot11StationMode (850)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Dot11StationMode(struct soap*, enum tt__Dot11StationMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11StationMode(struct soap*, const char*, int, const enum tt__Dot11StationMode *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__Dot11StationMode2s(struct soap*, enum tt__Dot11StationMode);
SOAP_FMAC3 enum tt__Dot11StationMode * SOAP_FMAC4 soap_in_tt__Dot11StationMode(struct soap*, const char*, enum tt__Dot11StationMode *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__Dot11StationMode(struct soap*, const char*, enum tt__Dot11StationMode *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Dot11StationMode(struct soap*, const enum tt__Dot11StationMode *, const char*, const char*);

#ifndef soap_write_tt__Dot11StationMode
#define soap_write_tt__Dot11StationMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__Dot11StationMode(soap, data),0) || soap_put_tt__Dot11StationMode(soap, data, "tt:Dot11StationMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__Dot11StationMode * SOAP_FMAC4 soap_get_tt__Dot11StationMode(struct soap*, enum tt__Dot11StationMode *, const char*, const char*);

#ifndef soap_read_tt__Dot11StationMode
#define soap_read_tt__Dot11StationMode(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Dot11StationMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__DynamicDNSType
#define SOAP_TYPE_tt__DynamicDNSType (848)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__DynamicDNSType(struct soap*, enum tt__DynamicDNSType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DynamicDNSType(struct soap*, const char*, int, const enum tt__DynamicDNSType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__DynamicDNSType2s(struct soap*, enum tt__DynamicDNSType);
SOAP_FMAC3 enum tt__DynamicDNSType * SOAP_FMAC4 soap_in_tt__DynamicDNSType(struct soap*, const char*, enum tt__DynamicDNSType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__DynamicDNSType(struct soap*, const char*, enum tt__DynamicDNSType *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__DynamicDNSType(struct soap*, const enum tt__DynamicDNSType *, const char*, const char*);

#ifndef soap_write_tt__DynamicDNSType
#define soap_write_tt__DynamicDNSType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__DynamicDNSType(soap, data),0) || soap_put_tt__DynamicDNSType(soap, data, "tt:DynamicDNSType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__DynamicDNSType * SOAP_FMAC4 soap_get_tt__DynamicDNSType(struct soap*, enum tt__DynamicDNSType *, const char*, const char*);

#ifndef soap_read_tt__DynamicDNSType
#define soap_read_tt__DynamicDNSType(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__DynamicDNSType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IPAddressFilterType
#define SOAP_TYPE_tt__IPAddressFilterType (847)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__IPAddressFilterType(struct soap*, enum tt__IPAddressFilterType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPAddressFilterType(struct soap*, const char*, int, const enum tt__IPAddressFilterType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__IPAddressFilterType2s(struct soap*, enum tt__IPAddressFilterType);
SOAP_FMAC3 enum tt__IPAddressFilterType * SOAP_FMAC4 soap_in_tt__IPAddressFilterType(struct soap*, const char*, enum tt__IPAddressFilterType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__IPAddressFilterType(struct soap*, const char*, enum tt__IPAddressFilterType *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__IPAddressFilterType(struct soap*, const enum tt__IPAddressFilterType *, const char*, const char*);

#ifndef soap_write_tt__IPAddressFilterType
#define soap_write_tt__IPAddressFilterType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__IPAddressFilterType(soap, data),0) || soap_put_tt__IPAddressFilterType(soap, data, "tt:IPAddressFilterType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__IPAddressFilterType * SOAP_FMAC4 soap_get_tt__IPAddressFilterType(struct soap*, enum tt__IPAddressFilterType *, const char*, const char*);

#ifndef soap_read_tt__IPAddressFilterType
#define soap_read_tt__IPAddressFilterType(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IPAddressFilterType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IPType
#define SOAP_TYPE_tt__IPType (844)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__IPType(struct soap*, enum tt__IPType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPType(struct soap*, const char*, int, const enum tt__IPType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__IPType2s(struct soap*, enum tt__IPType);
SOAP_FMAC3 enum tt__IPType * SOAP_FMAC4 soap_in_tt__IPType(struct soap*, const char*, enum tt__IPType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__IPType(struct soap*, const char*, enum tt__IPType *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__IPType(struct soap*, const enum tt__IPType *, const char*, const char*);

#ifndef soap_write_tt__IPType
#define soap_write_tt__IPType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__IPType(soap, data),0) || soap_put_tt__IPType(soap, data, "tt:IPType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__IPType * SOAP_FMAC4 soap_get_tt__IPType(struct soap*, enum tt__IPType *, const char*, const char*);

#ifndef soap_read_tt__IPType
#define soap_read_tt__IPType(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IPType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NetworkHostType
#define SOAP_TYPE_tt__NetworkHostType (840)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__NetworkHostType(struct soap*, enum tt__NetworkHostType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkHostType(struct soap*, const char*, int, const enum tt__NetworkHostType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__NetworkHostType2s(struct soap*, enum tt__NetworkHostType);
SOAP_FMAC3 enum tt__NetworkHostType * SOAP_FMAC4 soap_in_tt__NetworkHostType(struct soap*, const char*, enum tt__NetworkHostType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__NetworkHostType(struct soap*, const char*, enum tt__NetworkHostType *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__NetworkHostType(struct soap*, const enum tt__NetworkHostType *, const char*, const char*);

#ifndef soap_write_tt__NetworkHostType
#define soap_write_tt__NetworkHostType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__NetworkHostType(soap, data),0) || soap_put_tt__NetworkHostType(soap, data, "tt:NetworkHostType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__NetworkHostType * SOAP_FMAC4 soap_get_tt__NetworkHostType(struct soap*, enum tt__NetworkHostType *, const char*, const char*);

#ifndef soap_read_tt__NetworkHostType
#define soap_read_tt__NetworkHostType(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__NetworkHostType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NetworkProtocolType
#define SOAP_TYPE_tt__NetworkProtocolType (839)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__NetworkProtocolType(struct soap*, enum tt__NetworkProtocolType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkProtocolType(struct soap*, const char*, int, const enum tt__NetworkProtocolType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__NetworkProtocolType2s(struct soap*, enum tt__NetworkProtocolType);
SOAP_FMAC3 enum tt__NetworkProtocolType * SOAP_FMAC4 soap_in_tt__NetworkProtocolType(struct soap*, const char*, enum tt__NetworkProtocolType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__NetworkProtocolType(struct soap*, const char*, enum tt__NetworkProtocolType *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__NetworkProtocolType(struct soap*, const enum tt__NetworkProtocolType *, const char*, const char*);

#ifndef soap_write_tt__NetworkProtocolType
#define soap_write_tt__NetworkProtocolType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__NetworkProtocolType(soap, data),0) || soap_put_tt__NetworkProtocolType(soap, data, "tt:NetworkProtocolType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__NetworkProtocolType * SOAP_FMAC4 soap_get_tt__NetworkProtocolType(struct soap*, enum tt__NetworkProtocolType *, const char*, const char*);

#ifndef soap_read_tt__NetworkProtocolType
#define soap_read_tt__NetworkProtocolType(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__NetworkProtocolType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IPv6DHCPConfiguration
#define SOAP_TYPE_tt__IPv6DHCPConfiguration (838)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__IPv6DHCPConfiguration(struct soap*, enum tt__IPv6DHCPConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPv6DHCPConfiguration(struct soap*, const char*, int, const enum tt__IPv6DHCPConfiguration *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__IPv6DHCPConfiguration2s(struct soap*, enum tt__IPv6DHCPConfiguration);
SOAP_FMAC3 enum tt__IPv6DHCPConfiguration * SOAP_FMAC4 soap_in_tt__IPv6DHCPConfiguration(struct soap*, const char*, enum tt__IPv6DHCPConfiguration *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__IPv6DHCPConfiguration(struct soap*, const char*, enum tt__IPv6DHCPConfiguration *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__IPv6DHCPConfiguration(struct soap*, const enum tt__IPv6DHCPConfiguration *, const char*, const char*);

#ifndef soap_write_tt__IPv6DHCPConfiguration
#define soap_write_tt__IPv6DHCPConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__IPv6DHCPConfiguration(soap, data),0) || soap_put_tt__IPv6DHCPConfiguration(soap, data, "tt:IPv6DHCPConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__IPv6DHCPConfiguration * SOAP_FMAC4 soap_get_tt__IPv6DHCPConfiguration(struct soap*, enum tt__IPv6DHCPConfiguration *, const char*, const char*);

#ifndef soap_read_tt__IPv6DHCPConfiguration
#define soap_read_tt__IPv6DHCPConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IPv6DHCPConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Duplex
#define SOAP_TYPE_tt__Duplex (836)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Duplex(struct soap*, enum tt__Duplex *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Duplex(struct soap*, const char*, int, const enum tt__Duplex *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__Duplex2s(struct soap*, enum tt__Duplex);
SOAP_FMAC3 enum tt__Duplex * SOAP_FMAC4 soap_in_tt__Duplex(struct soap*, const char*, enum tt__Duplex *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__Duplex(struct soap*, const char*, enum tt__Duplex *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Duplex(struct soap*, const enum tt__Duplex *, const char*, const char*);

#ifndef soap_write_tt__Duplex
#define soap_write_tt__Duplex(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__Duplex(soap, data),0) || soap_put_tt__Duplex(soap, data, "tt:Duplex", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__Duplex * SOAP_FMAC4 soap_get_tt__Duplex(struct soap*, enum tt__Duplex *, const char*, const char*);

#ifndef soap_read_tt__Duplex
#define soap_read_tt__Duplex(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Duplex(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__DiscoveryMode
#define SOAP_TYPE_tt__DiscoveryMode (834)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__DiscoveryMode(struct soap*, enum tt__DiscoveryMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DiscoveryMode(struct soap*, const char*, int, const enum tt__DiscoveryMode *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__DiscoveryMode2s(struct soap*, enum tt__DiscoveryMode);
SOAP_FMAC3 enum tt__DiscoveryMode * SOAP_FMAC4 soap_in_tt__DiscoveryMode(struct soap*, const char*, enum tt__DiscoveryMode *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__DiscoveryMode(struct soap*, const char*, enum tt__DiscoveryMode *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__DiscoveryMode(struct soap*, const enum tt__DiscoveryMode *, const char*, const char*);

#ifndef soap_write_tt__DiscoveryMode
#define soap_write_tt__DiscoveryMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__DiscoveryMode(soap, data),0) || soap_put_tt__DiscoveryMode(soap, data, "tt:DiscoveryMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__DiscoveryMode * SOAP_FMAC4 soap_get_tt__DiscoveryMode(struct soap*, enum tt__DiscoveryMode *, const char*, const char*);

#ifndef soap_read_tt__DiscoveryMode
#define soap_read_tt__DiscoveryMode(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__DiscoveryMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ScopeDefinition
#define SOAP_TYPE_tt__ScopeDefinition (833)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__ScopeDefinition(struct soap*, enum tt__ScopeDefinition *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ScopeDefinition(struct soap*, const char*, int, const enum tt__ScopeDefinition *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__ScopeDefinition2s(struct soap*, enum tt__ScopeDefinition);
SOAP_FMAC3 enum tt__ScopeDefinition * SOAP_FMAC4 soap_in_tt__ScopeDefinition(struct soap*, const char*, enum tt__ScopeDefinition *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__ScopeDefinition(struct soap*, const char*, enum tt__ScopeDefinition *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ScopeDefinition(struct soap*, const enum tt__ScopeDefinition *, const char*, const char*);

#ifndef soap_write_tt__ScopeDefinition
#define soap_write_tt__ScopeDefinition(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__ScopeDefinition(soap, data),0) || soap_put_tt__ScopeDefinition(soap, data, "tt:ScopeDefinition", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__ScopeDefinition * SOAP_FMAC4 soap_get_tt__ScopeDefinition(struct soap*, enum tt__ScopeDefinition *, const char*, const char*);

#ifndef soap_read_tt__ScopeDefinition
#define soap_read_tt__ScopeDefinition(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ScopeDefinition(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__TransportProtocol
#define SOAP_TYPE_tt__TransportProtocol (832)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__TransportProtocol(struct soap*, enum tt__TransportProtocol *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__TransportProtocol(struct soap*, const char*, int, const enum tt__TransportProtocol *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__TransportProtocol2s(struct soap*, enum tt__TransportProtocol);
SOAP_FMAC3 enum tt__TransportProtocol * SOAP_FMAC4 soap_in_tt__TransportProtocol(struct soap*, const char*, enum tt__TransportProtocol *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__TransportProtocol(struct soap*, const char*, enum tt__TransportProtocol *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__TransportProtocol(struct soap*, const enum tt__TransportProtocol *, const char*, const char*);

#ifndef soap_write_tt__TransportProtocol
#define soap_write_tt__TransportProtocol(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__TransportProtocol(soap, data),0) || soap_put_tt__TransportProtocol(soap, data, "tt:TransportProtocol", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__TransportProtocol * SOAP_FMAC4 soap_get_tt__TransportProtocol(struct soap*, enum tt__TransportProtocol *, const char*, const char*);

#ifndef soap_read_tt__TransportProtocol
#define soap_read_tt__TransportProtocol(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__TransportProtocol(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__StreamType
#define SOAP_TYPE_tt__StreamType (831)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__StreamType(struct soap*, enum tt__StreamType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__StreamType(struct soap*, const char*, int, const enum tt__StreamType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__StreamType2s(struct soap*, enum tt__StreamType);
SOAP_FMAC3 enum tt__StreamType * SOAP_FMAC4 soap_in_tt__StreamType(struct soap*, const char*, enum tt__StreamType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__StreamType(struct soap*, const char*, enum tt__StreamType *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__StreamType(struct soap*, const enum tt__StreamType *, const char*, const char*);

#ifndef soap_write_tt__StreamType
#define soap_write_tt__StreamType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__StreamType(soap, data),0) || soap_put_tt__StreamType(soap, data, "tt:StreamType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__StreamType * SOAP_FMAC4 soap_get_tt__StreamType(struct soap*, enum tt__StreamType *, const char*, const char*);

#ifndef soap_read_tt__StreamType
#define soap_read_tt__StreamType(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__StreamType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AudioEncoding
#define SOAP_TYPE_tt__AudioEncoding (830)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__AudioEncoding(struct soap*, enum tt__AudioEncoding *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioEncoding(struct soap*, const char*, int, const enum tt__AudioEncoding *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__AudioEncoding2s(struct soap*, enum tt__AudioEncoding);
SOAP_FMAC3 enum tt__AudioEncoding * SOAP_FMAC4 soap_in_tt__AudioEncoding(struct soap*, const char*, enum tt__AudioEncoding *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__AudioEncoding(struct soap*, const char*, enum tt__AudioEncoding *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__AudioEncoding(struct soap*, const enum tt__AudioEncoding *, const char*, const char*);

#ifndef soap_write_tt__AudioEncoding
#define soap_write_tt__AudioEncoding(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__AudioEncoding(soap, data),0) || soap_put_tt__AudioEncoding(soap, data, "tt:AudioEncoding", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__AudioEncoding * SOAP_FMAC4 soap_get_tt__AudioEncoding(struct soap*, enum tt__AudioEncoding *, const char*, const char*);

#ifndef soap_read_tt__AudioEncoding
#define soap_read_tt__AudioEncoding(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AudioEncoding(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__H264Profile
#define SOAP_TYPE_tt__H264Profile (829)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__H264Profile(struct soap*, enum tt__H264Profile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__H264Profile(struct soap*, const char*, int, const enum tt__H264Profile *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__H264Profile2s(struct soap*, enum tt__H264Profile);
SOAP_FMAC3 enum tt__H264Profile * SOAP_FMAC4 soap_in_tt__H264Profile(struct soap*, const char*, enum tt__H264Profile *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__H264Profile(struct soap*, const char*, enum tt__H264Profile *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__H264Profile(struct soap*, const enum tt__H264Profile *, const char*, const char*);

#ifndef soap_write_tt__H264Profile
#define soap_write_tt__H264Profile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__H264Profile(soap, data),0) || soap_put_tt__H264Profile(soap, data, "tt:H264Profile", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__H264Profile * SOAP_FMAC4 soap_get_tt__H264Profile(struct soap*, enum tt__H264Profile *, const char*, const char*);

#ifndef soap_read_tt__H264Profile
#define soap_read_tt__H264Profile(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__H264Profile(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Mpeg4Profile
#define SOAP_TYPE_tt__Mpeg4Profile (828)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Mpeg4Profile(struct soap*, enum tt__Mpeg4Profile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Mpeg4Profile(struct soap*, const char*, int, const enum tt__Mpeg4Profile *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__Mpeg4Profile2s(struct soap*, enum tt__Mpeg4Profile);
SOAP_FMAC3 enum tt__Mpeg4Profile * SOAP_FMAC4 soap_in_tt__Mpeg4Profile(struct soap*, const char*, enum tt__Mpeg4Profile *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__Mpeg4Profile(struct soap*, const char*, enum tt__Mpeg4Profile *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Mpeg4Profile(struct soap*, const enum tt__Mpeg4Profile *, const char*, const char*);

#ifndef soap_write_tt__Mpeg4Profile
#define soap_write_tt__Mpeg4Profile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__Mpeg4Profile(soap, data),0) || soap_put_tt__Mpeg4Profile(soap, data, "tt:Mpeg4Profile", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__Mpeg4Profile * SOAP_FMAC4 soap_get_tt__Mpeg4Profile(struct soap*, enum tt__Mpeg4Profile *, const char*, const char*);

#ifndef soap_read_tt__Mpeg4Profile
#define soap_read_tt__Mpeg4Profile(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Mpeg4Profile(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoEncoding
#define SOAP_TYPE_tt__VideoEncoding (827)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__VideoEncoding(struct soap*, enum tt__VideoEncoding *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoEncoding(struct soap*, const char*, int, const enum tt__VideoEncoding *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__VideoEncoding2s(struct soap*, enum tt__VideoEncoding);
SOAP_FMAC3 enum tt__VideoEncoding * SOAP_FMAC4 soap_in_tt__VideoEncoding(struct soap*, const char*, enum tt__VideoEncoding *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__VideoEncoding(struct soap*, const char*, enum tt__VideoEncoding *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__VideoEncoding(struct soap*, const enum tt__VideoEncoding *, const char*, const char*);

#ifndef soap_write_tt__VideoEncoding
#define soap_write_tt__VideoEncoding(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__VideoEncoding(soap, data),0) || soap_put_tt__VideoEncoding(soap, data, "tt:VideoEncoding", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__VideoEncoding * SOAP_FMAC4 soap_get_tt__VideoEncoding(struct soap*, enum tt__VideoEncoding *, const char*, const char*);

#ifndef soap_read_tt__VideoEncoding
#define soap_read_tt__VideoEncoding(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoEncoding(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RotateMode
#define SOAP_TYPE_tt__RotateMode (826)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__RotateMode(struct soap*, enum tt__RotateMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RotateMode(struct soap*, const char*, int, const enum tt__RotateMode *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__RotateMode2s(struct soap*, enum tt__RotateMode);
SOAP_FMAC3 enum tt__RotateMode * SOAP_FMAC4 soap_in_tt__RotateMode(struct soap*, const char*, enum tt__RotateMode *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__RotateMode(struct soap*, const char*, enum tt__RotateMode *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__RotateMode(struct soap*, const enum tt__RotateMode *, const char*, const char*);

#ifndef soap_write_tt__RotateMode
#define soap_write_tt__RotateMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__RotateMode(soap, data),0) || soap_put_tt__RotateMode(soap, data, "tt:RotateMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__RotateMode * SOAP_FMAC4 soap_get_tt__RotateMode(struct soap*, enum tt__RotateMode *, const char*, const char*);

#ifndef soap_read_tt__RotateMode
#define soap_read_tt__RotateMode(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RotateMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsa5__IsReferenceParameter
#define SOAP_TYPE__wsa5__IsReferenceParameter (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsa5__IsReferenceParameter(struct soap*, enum _wsa5__IsReferenceParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsa5__IsReferenceParameter(struct soap*, const char*, int, const enum _wsa5__IsReferenceParameter *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap__wsa5__IsReferenceParameter2s(struct soap*, enum _wsa5__IsReferenceParameter);
SOAP_FMAC3 enum _wsa5__IsReferenceParameter * SOAP_FMAC4 soap_in__wsa5__IsReferenceParameter(struct soap*, const char*, enum _wsa5__IsReferenceParameter *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2_wsa5__IsReferenceParameter(struct soap*, const char*, enum _wsa5__IsReferenceParameter *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__IsReferenceParameter(struct soap*, const enum _wsa5__IsReferenceParameter *, const char*, const char*);

#ifndef soap_write__wsa5__IsReferenceParameter
#define soap_write__wsa5__IsReferenceParameter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa5__IsReferenceParameter(soap, data),0) || soap_put__wsa5__IsReferenceParameter(soap, data, "wsa5:IsReferenceParameter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum _wsa5__IsReferenceParameter * SOAP_FMAC4 soap_get__wsa5__IsReferenceParameter(struct soap*, enum _wsa5__IsReferenceParameter *, const char*, const char*);

#ifndef soap_read__wsa5__IsReferenceParameter
#define soap_read__wsa5__IsReferenceParameter(soap, data) ( soap_begin_recv(soap) || !soap_get__wsa5__IsReferenceParameter(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsa5__FaultCodesType
#define SOAP_TYPE_wsa5__FaultCodesType (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__FaultCodesType(struct soap*, enum wsa5__FaultCodesType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__FaultCodesType(struct soap*, const char*, int, const enum wsa5__FaultCodesType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsa5__FaultCodesType2s(struct soap*, enum wsa5__FaultCodesType);
SOAP_FMAC3 enum wsa5__FaultCodesType * SOAP_FMAC4 soap_in_wsa5__FaultCodesType(struct soap*, const char*, enum wsa5__FaultCodesType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsa5__FaultCodesType(struct soap*, const char*, enum wsa5__FaultCodesType *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__FaultCodesType(struct soap*, const enum wsa5__FaultCodesType *, const char*, const char*);

#ifndef soap_write_wsa5__FaultCodesType
#define soap_write_wsa5__FaultCodesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__FaultCodesType(soap, data),0) || soap_put_wsa5__FaultCodesType(soap, data, "wsa5:FaultCodesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum wsa5__FaultCodesType * SOAP_FMAC4 soap_get_wsa5__FaultCodesType(struct soap*, enum wsa5__FaultCodesType *, const char*, const char*);

#ifndef soap_read_wsa5__FaultCodesType
#define soap_read_wsa5__FaultCodesType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__FaultCodesType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsa5__RelationshipType
#define SOAP_TYPE_wsa5__RelationshipType (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__RelationshipType(struct soap*, enum wsa5__RelationshipType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__RelationshipType(struct soap*, const char*, int, const enum wsa5__RelationshipType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsa5__RelationshipType2s(struct soap*, enum wsa5__RelationshipType);
SOAP_FMAC3 enum wsa5__RelationshipType * SOAP_FMAC4 soap_in_wsa5__RelationshipType(struct soap*, const char*, enum wsa5__RelationshipType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsa5__RelationshipType(struct soap*, const char*, enum wsa5__RelationshipType *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__RelationshipType(struct soap*, const enum wsa5__RelationshipType *, const char*, const char*);

#ifndef soap_write_wsa5__RelationshipType
#define soap_write_wsa5__RelationshipType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__RelationshipType(soap, data),0) || soap_put_wsa5__RelationshipType(soap, data, "wsa5:RelationshipType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum wsa5__RelationshipType * SOAP_FMAC4 soap_get_wsa5__RelationshipType(struct soap*, enum wsa5__RelationshipType *, const char*, const char*);

#ifndef soap_read_wsa5__RelationshipType
#define soap_read_wsa5__RelationshipType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__RelationshipType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wstop__TopicNamespaceType_Topic
#define SOAP_TYPE__wstop__TopicNamespaceType_Topic (1509)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wstop__TopicNamespaceType_Topic(struct soap*, const char*, int, const _wstop__TopicNamespaceType_Topic *, const char*);
SOAP_FMAC3 _wstop__TopicNamespaceType_Topic * SOAP_FMAC4 soap_in__wstop__TopicNamespaceType_Topic(struct soap*, const char*, _wstop__TopicNamespaceType_Topic *, const char*);

#ifndef soap_write__wstop__TopicNamespaceType_Topic
#define soap_write__wstop__TopicNamespaceType_Topic(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wstop:TopicNamespaceType-Topic", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wstop__TopicNamespaceType_Topic * SOAP_FMAC4 soap_get__wstop__TopicNamespaceType_Topic(struct soap*, _wstop__TopicNamespaceType_Topic *, const char*, const char*);

#ifndef soap_read__wstop__TopicNamespaceType_Topic
#define soap_read__wstop__TopicNamespaceType_Topic(soap, data) ( soap_begin_recv(soap) || !soap_get__wstop__TopicNamespaceType_Topic(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wstop__TopicNamespaceType_Topic * SOAP_FMAC2 soap_instantiate__wstop__TopicNamespaceType_Topic(struct soap*, int, const char*, const char*, size_t*);

inline _wstop__TopicNamespaceType_Topic * soap_new__wstop__TopicNamespaceType_Topic(struct soap *soap, int n = -1) { return soap_instantiate__wstop__TopicNamespaceType_Topic(soap, n, NULL, NULL, NULL); }

inline _wstop__TopicNamespaceType_Topic * soap_new_req__wstop__TopicNamespaceType_Topic(struct soap *soap, std::string& name) { _wstop__TopicNamespaceType_Topic *_p = soap_instantiate__wstop__TopicNamespaceType_Topic(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_wstop__TopicNamespaceType_Topic::name = name; } return _p; }

inline _wstop__TopicNamespaceType_Topic * soap_new_set__wstop__TopicNamespaceType_Topic(struct soap *soap, wstop__Documentation *documentation, wstop__QueryExpressionType *MessagePattern, std::vector<wstop__TopicType * >& Topic, std::string& name, std::string *messageTypes, bool final, std::string *parent) { _wstop__TopicNamespaceType_Topic *_p = soap_instantiate__wstop__TopicNamespaceType_Topic(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_wstop__TopicNamespaceType_Topic::documentation = documentation; _p->_wstop__TopicNamespaceType_Topic::MessagePattern = MessagePattern; _p->_wstop__TopicNamespaceType_Topic::Topic = Topic; _p->_wstop__TopicNamespaceType_Topic::name = name; _p->_wstop__TopicNamespaceType_Topic::messageTypes = messageTypes; _p->_wstop__TopicNamespaceType_Topic::final = final; _p->_wstop__TopicNamespaceType_Topic::parent = parent; } return _p; }

inline void soap_delete__wstop__TopicNamespaceType_Topic(struct soap *soap, _wstop__TopicNamespaceType_Topic *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wstop__TopicNamespaceType_Topic(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__SetConfigurationResponse_sequence
#define SOAP_TYPE___tptz__SetConfigurationResponse_sequence (1465)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__SetConfigurationResponse_sequence(struct soap*, const char*, int, const __tptz__SetConfigurationResponse_sequence *, const char*);
SOAP_FMAC3 __tptz__SetConfigurationResponse_sequence * SOAP_FMAC4 soap_in___tptz__SetConfigurationResponse_sequence(struct soap*, const char*, __tptz__SetConfigurationResponse_sequence *, const char*);

#ifndef soap_write___tptz__SetConfigurationResponse_sequence
#define soap_write___tptz__SetConfigurationResponse_sequence(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "-tptz:SetConfigurationResponse-sequence", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 __tptz__SetConfigurationResponse_sequence * SOAP_FMAC4 soap_get___tptz__SetConfigurationResponse_sequence(struct soap*, __tptz__SetConfigurationResponse_sequence *, const char*, const char*);

#ifndef soap_read___tptz__SetConfigurationResponse_sequence
#define soap_read___tptz__SetConfigurationResponse_sequence(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__SetConfigurationResponse_sequence(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 __tptz__SetConfigurationResponse_sequence * SOAP_FMAC2 soap_instantiate___tptz__SetConfigurationResponse_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __tptz__SetConfigurationResponse_sequence * soap_new___tptz__SetConfigurationResponse_sequence(struct soap *soap, int n = -1) { return soap_instantiate___tptz__SetConfigurationResponse_sequence(soap, n, NULL, NULL, NULL); }

inline __tptz__SetConfigurationResponse_sequence * soap_new_req___tptz__SetConfigurationResponse_sequence(struct soap *soap) { __tptz__SetConfigurationResponse_sequence *_p = soap_instantiate___tptz__SetConfigurationResponse_sequence(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline __tptz__SetConfigurationResponse_sequence * soap_new_set___tptz__SetConfigurationResponse_sequence(struct soap *soap) { __tptz__SetConfigurationResponse_sequence *_p = soap_instantiate___tptz__SetConfigurationResponse_sequence(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete___tptz__SetConfigurationResponse_sequence(struct soap *soap, __tptz__SetConfigurationResponse_sequence *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__SetConfigurationResponse_sequence(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsrfbf__BaseFaultType_FaultCause
#define SOAP_TYPE__wsrfbf__BaseFaultType_FaultCause (1458)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsrfbf__BaseFaultType_FaultCause(struct soap*, const char*, int, const _wsrfbf__BaseFaultType_FaultCause *, const char*);
SOAP_FMAC3 _wsrfbf__BaseFaultType_FaultCause * SOAP_FMAC4 soap_in__wsrfbf__BaseFaultType_FaultCause(struct soap*, const char*, _wsrfbf__BaseFaultType_FaultCause *, const char*);

#ifndef soap_write__wsrfbf__BaseFaultType_FaultCause
#define soap_write__wsrfbf__BaseFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsrfbf:BaseFaultType-FaultCause", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsrfbf__BaseFaultType_FaultCause * SOAP_FMAC4 soap_get__wsrfbf__BaseFaultType_FaultCause(struct soap*, _wsrfbf__BaseFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsrfbf__BaseFaultType_FaultCause
#define soap_read__wsrfbf__BaseFaultType_FaultCause(soap, data) ( soap_begin_recv(soap) || !soap_get__wsrfbf__BaseFaultType_FaultCause(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsrfbf__BaseFaultType_FaultCause * SOAP_FMAC2 soap_instantiate__wsrfbf__BaseFaultType_FaultCause(struct soap*, int, const char*, const char*, size_t*);

inline _wsrfbf__BaseFaultType_FaultCause * soap_new__wsrfbf__BaseFaultType_FaultCause(struct soap *soap, int n = -1) { return soap_instantiate__wsrfbf__BaseFaultType_FaultCause(soap, n, NULL, NULL, NULL); }

inline _wsrfbf__BaseFaultType_FaultCause * soap_new_req__wsrfbf__BaseFaultType_FaultCause(struct soap *soap) { _wsrfbf__BaseFaultType_FaultCause *_p = soap_instantiate__wsrfbf__BaseFaultType_FaultCause(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _wsrfbf__BaseFaultType_FaultCause * soap_new_set__wsrfbf__BaseFaultType_FaultCause(struct soap *soap) { _wsrfbf__BaseFaultType_FaultCause *_p = soap_instantiate__wsrfbf__BaseFaultType_FaultCause(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__wsrfbf__BaseFaultType_FaultCause(struct soap *soap, _wsrfbf__BaseFaultType_FaultCause *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsrfbf__BaseFaultType_FaultCause(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsrfbf__BaseFaultType_Description
#define SOAP_TYPE__wsrfbf__BaseFaultType_Description (1454)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsrfbf__BaseFaultType_Description(struct soap*, const char*, int, const _wsrfbf__BaseFaultType_Description *, const char*);
SOAP_FMAC3 _wsrfbf__BaseFaultType_Description * SOAP_FMAC4 soap_in__wsrfbf__BaseFaultType_Description(struct soap*, const char*, _wsrfbf__BaseFaultType_Description *, const char*);

#ifndef soap_write__wsrfbf__BaseFaultType_Description
#define soap_write__wsrfbf__BaseFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsrfbf:BaseFaultType-Description", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsrfbf__BaseFaultType_Description * SOAP_FMAC4 soap_get__wsrfbf__BaseFaultType_Description(struct soap*, _wsrfbf__BaseFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsrfbf__BaseFaultType_Description
#define soap_read__wsrfbf__BaseFaultType_Description(soap, data) ( soap_begin_recv(soap) || !soap_get__wsrfbf__BaseFaultType_Description(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsrfbf__BaseFaultType_Description * SOAP_FMAC2 soap_instantiate__wsrfbf__BaseFaultType_Description(struct soap*, int, const char*, const char*, size_t*);

inline _wsrfbf__BaseFaultType_Description * soap_new__wsrfbf__BaseFaultType_Description(struct soap *soap, int n = -1) { return soap_instantiate__wsrfbf__BaseFaultType_Description(soap, n, NULL, NULL, NULL); }

inline _wsrfbf__BaseFaultType_Description * soap_new_req__wsrfbf__BaseFaultType_Description(struct soap *soap, std::string& __item) { _wsrfbf__BaseFaultType_Description *_p = soap_instantiate__wsrfbf__BaseFaultType_Description(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_wsrfbf__BaseFaultType_Description::__item = __item; } return _p; }

inline _wsrfbf__BaseFaultType_Description * soap_new_set__wsrfbf__BaseFaultType_Description(struct soap *soap, std::string& __item, std::string *xml__lang) { _wsrfbf__BaseFaultType_Description *_p = soap_instantiate__wsrfbf__BaseFaultType_Description(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_wsrfbf__BaseFaultType_Description::__item = __item; _p->_wsrfbf__BaseFaultType_Description::xml__lang = xml__lang; } return _p; }

inline void soap_delete__wsrfbf__BaseFaultType_Description(struct soap *soap, _wsrfbf__BaseFaultType_Description *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsrfbf__BaseFaultType_Description(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsrfbf__BaseFaultType_ErrorCode
#define SOAP_TYPE__wsrfbf__BaseFaultType_ErrorCode (1452)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsrfbf__BaseFaultType_ErrorCode(struct soap*, const char*, int, const _wsrfbf__BaseFaultType_ErrorCode *, const char*);
SOAP_FMAC3 _wsrfbf__BaseFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsrfbf__BaseFaultType_ErrorCode(struct soap*, const char*, _wsrfbf__BaseFaultType_ErrorCode *, const char*);

#ifndef soap_write__wsrfbf__BaseFaultType_ErrorCode
#define soap_write__wsrfbf__BaseFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsrfbf:BaseFaultType-ErrorCode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsrfbf__BaseFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsrfbf__BaseFaultType_ErrorCode(struct soap*, _wsrfbf__BaseFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsrfbf__BaseFaultType_ErrorCode
#define soap_read__wsrfbf__BaseFaultType_ErrorCode(soap, data) ( soap_begin_recv(soap) || !soap_get__wsrfbf__BaseFaultType_ErrorCode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsrfbf__BaseFaultType_ErrorCode * SOAP_FMAC2 soap_instantiate__wsrfbf__BaseFaultType_ErrorCode(struct soap*, int, const char*, const char*, size_t*);

inline _wsrfbf__BaseFaultType_ErrorCode * soap_new__wsrfbf__BaseFaultType_ErrorCode(struct soap *soap, int n = -1) { return soap_instantiate__wsrfbf__BaseFaultType_ErrorCode(soap, n, NULL, NULL, NULL); }

inline _wsrfbf__BaseFaultType_ErrorCode * soap_new_req__wsrfbf__BaseFaultType_ErrorCode(struct soap *soap, std::string& dialect) { _wsrfbf__BaseFaultType_ErrorCode *_p = soap_instantiate__wsrfbf__BaseFaultType_ErrorCode(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_wsrfbf__BaseFaultType_ErrorCode::dialect = dialect; } return _p; }

inline _wsrfbf__BaseFaultType_ErrorCode * soap_new_set__wsrfbf__BaseFaultType_ErrorCode(struct soap *soap, std::string& dialect) { _wsrfbf__BaseFaultType_ErrorCode *_p = soap_instantiate__wsrfbf__BaseFaultType_ErrorCode(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_wsrfbf__BaseFaultType_ErrorCode::dialect = dialect; } return _p; }

inline void soap_delete__wsrfbf__BaseFaultType_ErrorCode(struct soap *soap, _wsrfbf__BaseFaultType_ErrorCode *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsrfbf__BaseFaultType_ErrorCode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsnt__Subscribe_SubscriptionPolicy
#define SOAP_TYPE__wsnt__Subscribe_SubscriptionPolicy (1449)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__Subscribe_SubscriptionPolicy(struct soap*, const char*, int, const _wsnt__Subscribe_SubscriptionPolicy *, const char*);
SOAP_FMAC3 _wsnt__Subscribe_SubscriptionPolicy * SOAP_FMAC4 soap_in__wsnt__Subscribe_SubscriptionPolicy(struct soap*, const char*, _wsnt__Subscribe_SubscriptionPolicy *, const char*);

#ifndef soap_write__wsnt__Subscribe_SubscriptionPolicy
#define soap_write__wsnt__Subscribe_SubscriptionPolicy(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:Subscribe-SubscriptionPolicy", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__Subscribe_SubscriptionPolicy * SOAP_FMAC4 soap_get__wsnt__Subscribe_SubscriptionPolicy(struct soap*, _wsnt__Subscribe_SubscriptionPolicy *, const char*, const char*);

#ifndef soap_read__wsnt__Subscribe_SubscriptionPolicy
#define soap_read__wsnt__Subscribe_SubscriptionPolicy(soap, data) ( soap_begin_recv(soap) || !soap_get__wsnt__Subscribe_SubscriptionPolicy(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsnt__Subscribe_SubscriptionPolicy * SOAP_FMAC2 soap_instantiate__wsnt__Subscribe_SubscriptionPolicy(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__Subscribe_SubscriptionPolicy * soap_new__wsnt__Subscribe_SubscriptionPolicy(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__Subscribe_SubscriptionPolicy(soap, n, NULL, NULL, NULL); }

inline _wsnt__Subscribe_SubscriptionPolicy * soap_new_req__wsnt__Subscribe_SubscriptionPolicy(struct soap *soap) { _wsnt__Subscribe_SubscriptionPolicy *_p = soap_instantiate__wsnt__Subscribe_SubscriptionPolicy(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _wsnt__Subscribe_SubscriptionPolicy * soap_new_set__wsnt__Subscribe_SubscriptionPolicy(struct soap *soap) { _wsnt__Subscribe_SubscriptionPolicy *_p = soap_instantiate__wsnt__Subscribe_SubscriptionPolicy(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__wsnt__Subscribe_SubscriptionPolicy(struct soap *soap, _wsnt__Subscribe_SubscriptionPolicy *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsnt__Subscribe_SubscriptionPolicy(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsnt__NotificationMessageHolderType_Message
#define SOAP_TYPE__wsnt__NotificationMessageHolderType_Message (1443)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__NotificationMessageHolderType_Message(struct soap*, const char*, int, const _wsnt__NotificationMessageHolderType_Message *, const char*);
SOAP_FMAC3 _wsnt__NotificationMessageHolderType_Message * SOAP_FMAC4 soap_in__wsnt__NotificationMessageHolderType_Message(struct soap*, const char*, _wsnt__NotificationMessageHolderType_Message *, const char*);

#ifndef soap_write__wsnt__NotificationMessageHolderType_Message
#define soap_write__wsnt__NotificationMessageHolderType_Message(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:NotificationMessageHolderType-Message", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__NotificationMessageHolderType_Message * SOAP_FMAC4 soap_get__wsnt__NotificationMessageHolderType_Message(struct soap*, _wsnt__NotificationMessageHolderType_Message *, const char*, const char*);

#ifndef soap_read__wsnt__NotificationMessageHolderType_Message
#define soap_read__wsnt__NotificationMessageHolderType_Message(soap, data) ( soap_begin_recv(soap) || !soap_get__wsnt__NotificationMessageHolderType_Message(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsnt__NotificationMessageHolderType_Message * SOAP_FMAC2 soap_instantiate__wsnt__NotificationMessageHolderType_Message(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__NotificationMessageHolderType_Message * soap_new__wsnt__NotificationMessageHolderType_Message(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__NotificationMessageHolderType_Message(soap, n, NULL, NULL, NULL); }

inline _wsnt__NotificationMessageHolderType_Message * soap_new_req__wsnt__NotificationMessageHolderType_Message(struct soap *soap) { _wsnt__NotificationMessageHolderType_Message *_p = soap_instantiate__wsnt__NotificationMessageHolderType_Message(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _wsnt__NotificationMessageHolderType_Message * soap_new_set__wsnt__NotificationMessageHolderType_Message(struct soap *soap) { _wsnt__NotificationMessageHolderType_Message *_p = soap_instantiate__wsnt__NotificationMessageHolderType_Message(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__wsnt__NotificationMessageHolderType_Message(struct soap *soap, _wsnt__NotificationMessageHolderType_Message *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsnt__NotificationMessageHolderType_Message(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tt__union_EventStream
#define SOAP_TYPE___tt__union_EventStream (1347)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out___tt__union_EventStream(struct soap*, const char*, int, const __tt__union_EventStream *, const char*);
SOAP_FMAC3 __tt__union_EventStream * SOAP_FMAC4 soap_in___tt__union_EventStream(struct soap*, const char*, __tt__union_EventStream *, const char*);

#ifndef soap_write___tt__union_EventStream
#define soap_write___tt__union_EventStream(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "-tt:union-EventStream", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 __tt__union_EventStream * SOAP_FMAC4 soap_get___tt__union_EventStream(struct soap*, __tt__union_EventStream *, const char*, const char*);

#ifndef soap_read___tt__union_EventStream
#define soap_read___tt__union_EventStream(soap, data) ( soap_begin_recv(soap) || !soap_get___tt__union_EventStream(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 __tt__union_EventStream * SOAP_FMAC2 soap_instantiate___tt__union_EventStream(struct soap*, int, const char*, const char*, size_t*);

inline __tt__union_EventStream * soap_new___tt__union_EventStream(struct soap *soap, int n = -1) { return soap_instantiate___tt__union_EventStream(soap, n, NULL, NULL, NULL); }

inline __tt__union_EventStream * soap_new_req___tt__union_EventStream(struct soap *soap, union _tt__union_EventStream& union_EventStream) { __tt__union_EventStream *_p = soap_instantiate___tt__union_EventStream(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->__tt__union_EventStream::union_EventStream = union_EventStream; } return _p; }

inline __tt__union_EventStream * soap_new_set___tt__union_EventStream(struct soap *soap, int __union_EventStream, union _tt__union_EventStream& union_EventStream) { __tt__union_EventStream *_p = soap_instantiate___tt__union_EventStream(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->__tt__union_EventStream::__union_EventStream = __union_EventStream; _p->__tt__union_EventStream::union_EventStream = union_EventStream; } return _p; }

inline void soap_delete___tt__union_EventStream(struct soap *soap, __tt__union_EventStream *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tt__union_EventStream(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tt__union_PTZStream
#define SOAP_TYPE___tt__union_PTZStream (1343)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out___tt__union_PTZStream(struct soap*, const char*, int, const __tt__union_PTZStream *, const char*);
SOAP_FMAC3 __tt__union_PTZStream * SOAP_FMAC4 soap_in___tt__union_PTZStream(struct soap*, const char*, __tt__union_PTZStream *, const char*);

#ifndef soap_write___tt__union_PTZStream
#define soap_write___tt__union_PTZStream(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "-tt:union-PTZStream", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 __tt__union_PTZStream * SOAP_FMAC4 soap_get___tt__union_PTZStream(struct soap*, __tt__union_PTZStream *, const char*, const char*);

#ifndef soap_read___tt__union_PTZStream
#define soap_read___tt__union_PTZStream(soap, data) ( soap_begin_recv(soap) || !soap_get___tt__union_PTZStream(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 __tt__union_PTZStream * SOAP_FMAC2 soap_instantiate___tt__union_PTZStream(struct soap*, int, const char*, const char*, size_t*);

inline __tt__union_PTZStream * soap_new___tt__union_PTZStream(struct soap *soap, int n = -1) { return soap_instantiate___tt__union_PTZStream(soap, n, NULL, NULL, NULL); }

inline __tt__union_PTZStream * soap_new_req___tt__union_PTZStream(struct soap *soap, union _tt__union_PTZStream& union_PTZStream) { __tt__union_PTZStream *_p = soap_instantiate___tt__union_PTZStream(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->__tt__union_PTZStream::union_PTZStream = union_PTZStream; } return _p; }

inline __tt__union_PTZStream * soap_new_set___tt__union_PTZStream(struct soap *soap, int __union_PTZStream, union _tt__union_PTZStream& union_PTZStream) { __tt__union_PTZStream *_p = soap_instantiate___tt__union_PTZStream(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->__tt__union_PTZStream::__union_PTZStream = __union_PTZStream; _p->__tt__union_PTZStream::union_PTZStream = union_PTZStream; } return _p; }

inline void soap_delete___tt__union_PTZStream(struct soap *soap, __tt__union_PTZStream *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tt__union_PTZStream(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tt__union_VideoAnalyticsStream
#define SOAP_TYPE___tt__union_VideoAnalyticsStream (1338)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out___tt__union_VideoAnalyticsStream(struct soap*, const char*, int, const __tt__union_VideoAnalyticsStream *, const char*);
SOAP_FMAC3 __tt__union_VideoAnalyticsStream * SOAP_FMAC4 soap_in___tt__union_VideoAnalyticsStream(struct soap*, const char*, __tt__union_VideoAnalyticsStream *, const char*);

#ifndef soap_write___tt__union_VideoAnalyticsStream
#define soap_write___tt__union_VideoAnalyticsStream(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "-tt:union-VideoAnalyticsStream", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 __tt__union_VideoAnalyticsStream * SOAP_FMAC4 soap_get___tt__union_VideoAnalyticsStream(struct soap*, __tt__union_VideoAnalyticsStream *, const char*, const char*);

#ifndef soap_read___tt__union_VideoAnalyticsStream
#define soap_read___tt__union_VideoAnalyticsStream(soap, data) ( soap_begin_recv(soap) || !soap_get___tt__union_VideoAnalyticsStream(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 __tt__union_VideoAnalyticsStream * SOAP_FMAC2 soap_instantiate___tt__union_VideoAnalyticsStream(struct soap*, int, const char*, const char*, size_t*);

inline __tt__union_VideoAnalyticsStream * soap_new___tt__union_VideoAnalyticsStream(struct soap *soap, int n = -1) { return soap_instantiate___tt__union_VideoAnalyticsStream(soap, n, NULL, NULL, NULL); }

inline __tt__union_VideoAnalyticsStream * soap_new_req___tt__union_VideoAnalyticsStream(struct soap *soap, union _tt__union_VideoAnalyticsStream& union_VideoAnalyticsStream) { __tt__union_VideoAnalyticsStream *_p = soap_instantiate___tt__union_VideoAnalyticsStream(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->__tt__union_VideoAnalyticsStream::union_VideoAnalyticsStream = union_VideoAnalyticsStream; } return _p; }

inline __tt__union_VideoAnalyticsStream * soap_new_set___tt__union_VideoAnalyticsStream(struct soap *soap, int __union_VideoAnalyticsStream, union _tt__union_VideoAnalyticsStream& union_VideoAnalyticsStream) { __tt__union_VideoAnalyticsStream *_p = soap_instantiate___tt__union_VideoAnalyticsStream(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->__tt__union_VideoAnalyticsStream::__union_VideoAnalyticsStream = __union_VideoAnalyticsStream; _p->__tt__union_VideoAnalyticsStream::union_VideoAnalyticsStream = union_VideoAnalyticsStream; } return _p; }

inline void soap_delete___tt__union_VideoAnalyticsStream(struct soap *soap, __tt__union_VideoAnalyticsStream *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tt__union_VideoAnalyticsStream(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tt__union_MetadataStream
#define SOAP_TYPE___tt__union_MetadataStream (1326)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out___tt__union_MetadataStream(struct soap*, const char*, int, const __tt__union_MetadataStream *, const char*);
SOAP_FMAC3 __tt__union_MetadataStream * SOAP_FMAC4 soap_in___tt__union_MetadataStream(struct soap*, const char*, __tt__union_MetadataStream *, const char*);

#ifndef soap_write___tt__union_MetadataStream
#define soap_write___tt__union_MetadataStream(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "-tt:union-MetadataStream", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 __tt__union_MetadataStream * SOAP_FMAC4 soap_get___tt__union_MetadataStream(struct soap*, __tt__union_MetadataStream *, const char*, const char*);

#ifndef soap_read___tt__union_MetadataStream
#define soap_read___tt__union_MetadataStream(soap, data) ( soap_begin_recv(soap) || !soap_get___tt__union_MetadataStream(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 __tt__union_MetadataStream * SOAP_FMAC2 soap_instantiate___tt__union_MetadataStream(struct soap*, int, const char*, const char*, size_t*);

inline __tt__union_MetadataStream * soap_new___tt__union_MetadataStream(struct soap *soap, int n = -1) { return soap_instantiate___tt__union_MetadataStream(soap, n, NULL, NULL, NULL); }

inline __tt__union_MetadataStream * soap_new_req___tt__union_MetadataStream(struct soap *soap, union _tt__union_MetadataStream& union_MetadataStream) { __tt__union_MetadataStream *_p = soap_instantiate___tt__union_MetadataStream(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->__tt__union_MetadataStream::union_MetadataStream = union_MetadataStream; } return _p; }

inline __tt__union_MetadataStream * soap_new_set___tt__union_MetadataStream(struct soap *soap, int __union_MetadataStream, union _tt__union_MetadataStream& union_MetadataStream) { __tt__union_MetadataStream *_p = soap_instantiate___tt__union_MetadataStream(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->__tt__union_MetadataStream::__union_MetadataStream = __union_MetadataStream; _p->__tt__union_MetadataStream::union_MetadataStream = union_MetadataStream; } return _p; }

inline void soap_delete___tt__union_MetadataStream(struct soap *soap, __tt__union_MetadataStream *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tt__union_MetadataStream(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tt__ConfigDescription_Messages
#define SOAP_TYPE__tt__ConfigDescription_Messages (1313)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__ConfigDescription_Messages(struct soap*, const char*, int, const _tt__ConfigDescription_Messages *, const char*);
SOAP_FMAC3 _tt__ConfigDescription_Messages * SOAP_FMAC4 soap_in__tt__ConfigDescription_Messages(struct soap*, const char*, _tt__ConfigDescription_Messages *, const char*);

#ifndef soap_write__tt__ConfigDescription_Messages
#define soap_write__tt__ConfigDescription_Messages(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ConfigDescription-Messages", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tt__ConfigDescription_Messages * SOAP_FMAC4 soap_get__tt__ConfigDescription_Messages(struct soap*, _tt__ConfigDescription_Messages *, const char*, const char*);

#ifndef soap_read__tt__ConfigDescription_Messages
#define soap_read__tt__ConfigDescription_Messages(soap, data) ( soap_begin_recv(soap) || !soap_get__tt__ConfigDescription_Messages(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tt__ConfigDescription_Messages * SOAP_FMAC2 soap_instantiate__tt__ConfigDescription_Messages(struct soap*, int, const char*, const char*, size_t*);

inline _tt__ConfigDescription_Messages * soap_new__tt__ConfigDescription_Messages(struct soap *soap, int n = -1) { return soap_instantiate__tt__ConfigDescription_Messages(soap, n, NULL, NULL, NULL); }

inline _tt__ConfigDescription_Messages * soap_new_req__tt__ConfigDescription_Messages(struct soap *soap, std::string& ParentTopic) { _tt__ConfigDescription_Messages *_p = soap_instantiate__tt__ConfigDescription_Messages(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tt__ConfigDescription_Messages::ParentTopic = ParentTopic; } return _p; }

inline _tt__ConfigDescription_Messages * soap_new_set__tt__ConfigDescription_Messages(struct soap *soap, tt__ItemListDescription *Source, tt__ItemListDescription *Key, tt__ItemListDescription *Data, tt__MessageDescriptionExtension *Extension, bool *IsProperty, std::string& ParentTopic) { _tt__ConfigDescription_Messages *_p = soap_instantiate__tt__ConfigDescription_Messages(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tt__ConfigDescription_Messages::Source = Source; _p->_tt__ConfigDescription_Messages::Key = Key; _p->_tt__ConfigDescription_Messages::Data = Data; _p->_tt__ConfigDescription_Messages::Extension = Extension; _p->_tt__ConfigDescription_Messages::IsProperty = IsProperty; _p->_tt__ConfigDescription_Messages::ParentTopic = ParentTopic; } return _p; }

inline void soap_delete__tt__ConfigDescription_Messages(struct soap *soap, _tt__ConfigDescription_Messages *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tt__ConfigDescription_Messages(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tt__Behaviour_Idle
#define SOAP_TYPE__tt__Behaviour_Idle (1298)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__Behaviour_Idle(struct soap*, const char*, int, const _tt__Behaviour_Idle *, const char*);
SOAP_FMAC3 _tt__Behaviour_Idle * SOAP_FMAC4 soap_in__tt__Behaviour_Idle(struct soap*, const char*, _tt__Behaviour_Idle *, const char*);

#ifndef soap_write__tt__Behaviour_Idle
#define soap_write__tt__Behaviour_Idle(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Behaviour-Idle", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tt__Behaviour_Idle * SOAP_FMAC4 soap_get__tt__Behaviour_Idle(struct soap*, _tt__Behaviour_Idle *, const char*, const char*);

#ifndef soap_read__tt__Behaviour_Idle
#define soap_read__tt__Behaviour_Idle(soap, data) ( soap_begin_recv(soap) || !soap_get__tt__Behaviour_Idle(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tt__Behaviour_Idle * SOAP_FMAC2 soap_instantiate__tt__Behaviour_Idle(struct soap*, int, const char*, const char*, size_t*);

inline _tt__Behaviour_Idle * soap_new__tt__Behaviour_Idle(struct soap *soap, int n = -1) { return soap_instantiate__tt__Behaviour_Idle(soap, n, NULL, NULL, NULL); }

inline _tt__Behaviour_Idle * soap_new_req__tt__Behaviour_Idle(struct soap *soap) { _tt__Behaviour_Idle *_p = soap_instantiate__tt__Behaviour_Idle(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tt__Behaviour_Idle * soap_new_set__tt__Behaviour_Idle(struct soap *soap) { _tt__Behaviour_Idle *_p = soap_instantiate__tt__Behaviour_Idle(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tt__Behaviour_Idle(struct soap *soap, _tt__Behaviour_Idle *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tt__Behaviour_Idle(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tt__Behaviour_Removed
#define SOAP_TYPE__tt__Behaviour_Removed (1296)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__Behaviour_Removed(struct soap*, const char*, int, const _tt__Behaviour_Removed *, const char*);
SOAP_FMAC3 _tt__Behaviour_Removed * SOAP_FMAC4 soap_in__tt__Behaviour_Removed(struct soap*, const char*, _tt__Behaviour_Removed *, const char*);

#ifndef soap_write__tt__Behaviour_Removed
#define soap_write__tt__Behaviour_Removed(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Behaviour-Removed", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tt__Behaviour_Removed * SOAP_FMAC4 soap_get__tt__Behaviour_Removed(struct soap*, _tt__Behaviour_Removed *, const char*, const char*);

#ifndef soap_read__tt__Behaviour_Removed
#define soap_read__tt__Behaviour_Removed(soap, data) ( soap_begin_recv(soap) || !soap_get__tt__Behaviour_Removed(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tt__Behaviour_Removed * SOAP_FMAC2 soap_instantiate__tt__Behaviour_Removed(struct soap*, int, const char*, const char*, size_t*);

inline _tt__Behaviour_Removed * soap_new__tt__Behaviour_Removed(struct soap *soap, int n = -1) { return soap_instantiate__tt__Behaviour_Removed(soap, n, NULL, NULL, NULL); }

inline _tt__Behaviour_Removed * soap_new_req__tt__Behaviour_Removed(struct soap *soap) { _tt__Behaviour_Removed *_p = soap_instantiate__tt__Behaviour_Removed(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tt__Behaviour_Removed * soap_new_set__tt__Behaviour_Removed(struct soap *soap) { _tt__Behaviour_Removed *_p = soap_instantiate__tt__Behaviour_Removed(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tt__Behaviour_Removed(struct soap *soap, _tt__Behaviour_Removed *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tt__Behaviour_Removed(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tt__ClassDescriptor_ClassCandidate
#define SOAP_TYPE__tt__ClassDescriptor_ClassCandidate (1278)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__ClassDescriptor_ClassCandidate(struct soap*, const char*, int, const _tt__ClassDescriptor_ClassCandidate *, const char*);
SOAP_FMAC3 _tt__ClassDescriptor_ClassCandidate * SOAP_FMAC4 soap_in__tt__ClassDescriptor_ClassCandidate(struct soap*, const char*, _tt__ClassDescriptor_ClassCandidate *, const char*);

#ifndef soap_write__tt__ClassDescriptor_ClassCandidate
#define soap_write__tt__ClassDescriptor_ClassCandidate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ClassDescriptor-ClassCandidate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tt__ClassDescriptor_ClassCandidate * SOAP_FMAC4 soap_get__tt__ClassDescriptor_ClassCandidate(struct soap*, _tt__ClassDescriptor_ClassCandidate *, const char*, const char*);

#ifndef soap_read__tt__ClassDescriptor_ClassCandidate
#define soap_read__tt__ClassDescriptor_ClassCandidate(soap, data) ( soap_begin_recv(soap) || !soap_get__tt__ClassDescriptor_ClassCandidate(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tt__ClassDescriptor_ClassCandidate * SOAP_FMAC2 soap_instantiate__tt__ClassDescriptor_ClassCandidate(struct soap*, int, const char*, const char*, size_t*);

inline _tt__ClassDescriptor_ClassCandidate * soap_new__tt__ClassDescriptor_ClassCandidate(struct soap *soap, int n = -1) { return soap_instantiate__tt__ClassDescriptor_ClassCandidate(soap, n, NULL, NULL, NULL); }

inline _tt__ClassDescriptor_ClassCandidate * soap_new_req__tt__ClassDescriptor_ClassCandidate(struct soap *soap, enum tt__ClassType Type, float Likelihood) { _tt__ClassDescriptor_ClassCandidate *_p = soap_instantiate__tt__ClassDescriptor_ClassCandidate(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tt__ClassDescriptor_ClassCandidate::Type = Type; _p->_tt__ClassDescriptor_ClassCandidate::Likelihood = Likelihood; } return _p; }

inline _tt__ClassDescriptor_ClassCandidate * soap_new_set__tt__ClassDescriptor_ClassCandidate(struct soap *soap, enum tt__ClassType Type, float Likelihood) { _tt__ClassDescriptor_ClassCandidate *_p = soap_instantiate__tt__ClassDescriptor_ClassCandidate(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tt__ClassDescriptor_ClassCandidate::Type = Type; _p->_tt__ClassDescriptor_ClassCandidate::Likelihood = Likelihood; } return _p; }

inline void soap_delete__tt__ClassDescriptor_ClassCandidate(struct soap *soap, _tt__ClassDescriptor_ClassCandidate *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tt__ClassDescriptor_ClassCandidate(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tt__ColorDescriptor_ColorCluster
#define SOAP_TYPE__tt__ColorDescriptor_ColorCluster (1272)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__ColorDescriptor_ColorCluster(struct soap*, const char*, int, const _tt__ColorDescriptor_ColorCluster *, const char*);
SOAP_FMAC3 _tt__ColorDescriptor_ColorCluster * SOAP_FMAC4 soap_in__tt__ColorDescriptor_ColorCluster(struct soap*, const char*, _tt__ColorDescriptor_ColorCluster *, const char*);

#ifndef soap_write__tt__ColorDescriptor_ColorCluster
#define soap_write__tt__ColorDescriptor_ColorCluster(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ColorDescriptor-ColorCluster", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tt__ColorDescriptor_ColorCluster * SOAP_FMAC4 soap_get__tt__ColorDescriptor_ColorCluster(struct soap*, _tt__ColorDescriptor_ColorCluster *, const char*, const char*);

#ifndef soap_read__tt__ColorDescriptor_ColorCluster
#define soap_read__tt__ColorDescriptor_ColorCluster(soap, data) ( soap_begin_recv(soap) || !soap_get__tt__ColorDescriptor_ColorCluster(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tt__ColorDescriptor_ColorCluster * SOAP_FMAC2 soap_instantiate__tt__ColorDescriptor_ColorCluster(struct soap*, int, const char*, const char*, size_t*);

inline _tt__ColorDescriptor_ColorCluster * soap_new__tt__ColorDescriptor_ColorCluster(struct soap *soap, int n = -1) { return soap_instantiate__tt__ColorDescriptor_ColorCluster(soap, n, NULL, NULL, NULL); }

inline _tt__ColorDescriptor_ColorCluster * soap_new_req__tt__ColorDescriptor_ColorCluster(struct soap *soap, tt__Color *Color) { _tt__ColorDescriptor_ColorCluster *_p = soap_instantiate__tt__ColorDescriptor_ColorCluster(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tt__ColorDescriptor_ColorCluster::Color = Color; } return _p; }

inline _tt__ColorDescriptor_ColorCluster * soap_new_set__tt__ColorDescriptor_ColorCluster(struct soap *soap, tt__Color *Color, float *Weight, tt__ColorCovariance *Covariance) { _tt__ColorDescriptor_ColorCluster *_p = soap_instantiate__tt__ColorDescriptor_ColorCluster(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tt__ColorDescriptor_ColorCluster::Color = Color; _p->_tt__ColorDescriptor_ColorCluster::Weight = Weight; _p->_tt__ColorDescriptor_ColorCluster::Covariance = Covariance; } return _p; }

inline void soap_delete__tt__ColorDescriptor_ColorCluster(struct soap *soap, _tt__ColorDescriptor_ColorCluster *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tt__ColorDescriptor_ColorCluster(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tt__ItemListDescription_ElementItemDescription
#define SOAP_TYPE__tt__ItemListDescription_ElementItemDescription (1258)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__ItemListDescription_ElementItemDescription(struct soap*, const char*, int, const _tt__ItemListDescription_ElementItemDescription *, const char*);
SOAP_FMAC3 _tt__ItemListDescription_ElementItemDescription * SOAP_FMAC4 soap_in__tt__ItemListDescription_ElementItemDescription(struct soap*, const char*, _tt__ItemListDescription_ElementItemDescription *, const char*);

#ifndef soap_write__tt__ItemListDescription_ElementItemDescription
#define soap_write__tt__ItemListDescription_ElementItemDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ItemListDescription-ElementItemDescription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tt__ItemListDescription_ElementItemDescription * SOAP_FMAC4 soap_get__tt__ItemListDescription_ElementItemDescription(struct soap*, _tt__ItemListDescription_ElementItemDescription *, const char*, const char*);

#ifndef soap_read__tt__ItemListDescription_ElementItemDescription
#define soap_read__tt__ItemListDescription_ElementItemDescription(soap, data) ( soap_begin_recv(soap) || !soap_get__tt__ItemListDescription_ElementItemDescription(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tt__ItemListDescription_ElementItemDescription * SOAP_FMAC2 soap_instantiate__tt__ItemListDescription_ElementItemDescription(struct soap*, int, const char*, const char*, size_t*);

inline _tt__ItemListDescription_ElementItemDescription * soap_new__tt__ItemListDescription_ElementItemDescription(struct soap *soap, int n = -1) { return soap_instantiate__tt__ItemListDescription_ElementItemDescription(soap, n, NULL, NULL, NULL); }

inline _tt__ItemListDescription_ElementItemDescription * soap_new_req__tt__ItemListDescription_ElementItemDescription(struct soap *soap, std::string& Name, std::string& Type) { _tt__ItemListDescription_ElementItemDescription *_p = soap_instantiate__tt__ItemListDescription_ElementItemDescription(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tt__ItemListDescription_ElementItemDescription::Name = Name; _p->_tt__ItemListDescription_ElementItemDescription::Type = Type; } return _p; }

inline _tt__ItemListDescription_ElementItemDescription * soap_new_set__tt__ItemListDescription_ElementItemDescription(struct soap *soap, std::string& Name, std::string& Type) { _tt__ItemListDescription_ElementItemDescription *_p = soap_instantiate__tt__ItemListDescription_ElementItemDescription(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tt__ItemListDescription_ElementItemDescription::Name = Name; _p->_tt__ItemListDescription_ElementItemDescription::Type = Type; } return _p; }

inline void soap_delete__tt__ItemListDescription_ElementItemDescription(struct soap *soap, _tt__ItemListDescription_ElementItemDescription *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tt__ItemListDescription_ElementItemDescription(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tt__ItemListDescription_SimpleItemDescription
#define SOAP_TYPE__tt__ItemListDescription_SimpleItemDescription (1255)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__ItemListDescription_SimpleItemDescription(struct soap*, const char*, int, const _tt__ItemListDescription_SimpleItemDescription *, const char*);
SOAP_FMAC3 _tt__ItemListDescription_SimpleItemDescription * SOAP_FMAC4 soap_in__tt__ItemListDescription_SimpleItemDescription(struct soap*, const char*, _tt__ItemListDescription_SimpleItemDescription *, const char*);

#ifndef soap_write__tt__ItemListDescription_SimpleItemDescription
#define soap_write__tt__ItemListDescription_SimpleItemDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ItemListDescription-SimpleItemDescription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tt__ItemListDescription_SimpleItemDescription * SOAP_FMAC4 soap_get__tt__ItemListDescription_SimpleItemDescription(struct soap*, _tt__ItemListDescription_SimpleItemDescription *, const char*, const char*);

#ifndef soap_read__tt__ItemListDescription_SimpleItemDescription
#define soap_read__tt__ItemListDescription_SimpleItemDescription(soap, data) ( soap_begin_recv(soap) || !soap_get__tt__ItemListDescription_SimpleItemDescription(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tt__ItemListDescription_SimpleItemDescription * SOAP_FMAC2 soap_instantiate__tt__ItemListDescription_SimpleItemDescription(struct soap*, int, const char*, const char*, size_t*);

inline _tt__ItemListDescription_SimpleItemDescription * soap_new__tt__ItemListDescription_SimpleItemDescription(struct soap *soap, int n = -1) { return soap_instantiate__tt__ItemListDescription_SimpleItemDescription(soap, n, NULL, NULL, NULL); }

inline _tt__ItemListDescription_SimpleItemDescription * soap_new_req__tt__ItemListDescription_SimpleItemDescription(struct soap *soap, std::string& Name, std::string& Type) { _tt__ItemListDescription_SimpleItemDescription *_p = soap_instantiate__tt__ItemListDescription_SimpleItemDescription(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tt__ItemListDescription_SimpleItemDescription::Name = Name; _p->_tt__ItemListDescription_SimpleItemDescription::Type = Type; } return _p; }

inline _tt__ItemListDescription_SimpleItemDescription * soap_new_set__tt__ItemListDescription_SimpleItemDescription(struct soap *soap, std::string& Name, std::string& Type) { _tt__ItemListDescription_SimpleItemDescription *_p = soap_instantiate__tt__ItemListDescription_SimpleItemDescription(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tt__ItemListDescription_SimpleItemDescription::Name = Name; _p->_tt__ItemListDescription_SimpleItemDescription::Type = Type; } return _p; }

inline void soap_delete__tt__ItemListDescription_SimpleItemDescription(struct soap *soap, _tt__ItemListDescription_SimpleItemDescription *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tt__ItemListDescription_SimpleItemDescription(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tt__ItemList_ElementItem
#define SOAP_TYPE__tt__ItemList_ElementItem (1249)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__ItemList_ElementItem(struct soap*, const char*, int, const _tt__ItemList_ElementItem *, const char*);
SOAP_FMAC3 _tt__ItemList_ElementItem * SOAP_FMAC4 soap_in__tt__ItemList_ElementItem(struct soap*, const char*, _tt__ItemList_ElementItem *, const char*);

#ifndef soap_write__tt__ItemList_ElementItem
#define soap_write__tt__ItemList_ElementItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ItemList-ElementItem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tt__ItemList_ElementItem * SOAP_FMAC4 soap_get__tt__ItemList_ElementItem(struct soap*, _tt__ItemList_ElementItem *, const char*, const char*);

#ifndef soap_read__tt__ItemList_ElementItem
#define soap_read__tt__ItemList_ElementItem(soap, data) ( soap_begin_recv(soap) || !soap_get__tt__ItemList_ElementItem(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tt__ItemList_ElementItem * SOAP_FMAC2 soap_instantiate__tt__ItemList_ElementItem(struct soap*, int, const char*, const char*, size_t*);

inline _tt__ItemList_ElementItem * soap_new__tt__ItemList_ElementItem(struct soap *soap, int n = -1) { return soap_instantiate__tt__ItemList_ElementItem(soap, n, NULL, NULL, NULL); }

inline _tt__ItemList_ElementItem * soap_new_req__tt__ItemList_ElementItem(struct soap *soap, std::string& Name) { _tt__ItemList_ElementItem *_p = soap_instantiate__tt__ItemList_ElementItem(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tt__ItemList_ElementItem::Name = Name; } return _p; }

inline _tt__ItemList_ElementItem * soap_new_set__tt__ItemList_ElementItem(struct soap *soap, std::string& Name) { _tt__ItemList_ElementItem *_p = soap_instantiate__tt__ItemList_ElementItem(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tt__ItemList_ElementItem::Name = Name; } return _p; }

inline void soap_delete__tt__ItemList_ElementItem(struct soap *soap, _tt__ItemList_ElementItem *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tt__ItemList_ElementItem(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tt__ItemList_SimpleItem
#define SOAP_TYPE__tt__ItemList_SimpleItem (1246)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__ItemList_SimpleItem(struct soap*, const char*, int, const _tt__ItemList_SimpleItem *, const char*);
SOAP_FMAC3 _tt__ItemList_SimpleItem * SOAP_FMAC4 soap_in__tt__ItemList_SimpleItem(struct soap*, const char*, _tt__ItemList_SimpleItem *, const char*);

#ifndef soap_write__tt__ItemList_SimpleItem
#define soap_write__tt__ItemList_SimpleItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ItemList-SimpleItem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tt__ItemList_SimpleItem * SOAP_FMAC4 soap_get__tt__ItemList_SimpleItem(struct soap*, _tt__ItemList_SimpleItem *, const char*, const char*);

#ifndef soap_read__tt__ItemList_SimpleItem
#define soap_read__tt__ItemList_SimpleItem(soap, data) ( soap_begin_recv(soap) || !soap_get__tt__ItemList_SimpleItem(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tt__ItemList_SimpleItem * SOAP_FMAC2 soap_instantiate__tt__ItemList_SimpleItem(struct soap*, int, const char*, const char*, size_t*);

inline _tt__ItemList_SimpleItem * soap_new__tt__ItemList_SimpleItem(struct soap *soap, int n = -1) { return soap_instantiate__tt__ItemList_SimpleItem(soap, n, NULL, NULL, NULL); }

inline _tt__ItemList_SimpleItem * soap_new_req__tt__ItemList_SimpleItem(struct soap *soap, std::string& Name, std::string& Value) { _tt__ItemList_SimpleItem *_p = soap_instantiate__tt__ItemList_SimpleItem(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tt__ItemList_SimpleItem::Name = Name; _p->_tt__ItemList_SimpleItem::Value = Value; } return _p; }

inline _tt__ItemList_SimpleItem * soap_new_set__tt__ItemList_SimpleItem(struct soap *soap, std::string& Name, std::string& Value) { _tt__ItemList_SimpleItem *_p = soap_instantiate__tt__ItemList_SimpleItem(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tt__ItemList_SimpleItem::Name = Name; _p->_tt__ItemList_SimpleItem::Value = Value; } return _p; }

inline void soap_delete__tt__ItemList_SimpleItem(struct soap *soap, _tt__ItemList_SimpleItem *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tt__ItemList_SimpleItem(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tt__EventSubscription_SubscriptionPolicy
#define SOAP_TYPE__tt__EventSubscription_SubscriptionPolicy (1028)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__EventSubscription_SubscriptionPolicy(struct soap*, const char*, int, const _tt__EventSubscription_SubscriptionPolicy *, const char*);
SOAP_FMAC3 _tt__EventSubscription_SubscriptionPolicy * SOAP_FMAC4 soap_in__tt__EventSubscription_SubscriptionPolicy(struct soap*, const char*, _tt__EventSubscription_SubscriptionPolicy *, const char*);

#ifndef soap_write__tt__EventSubscription_SubscriptionPolicy
#define soap_write__tt__EventSubscription_SubscriptionPolicy(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:EventSubscription-SubscriptionPolicy", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tt__EventSubscription_SubscriptionPolicy * SOAP_FMAC4 soap_get__tt__EventSubscription_SubscriptionPolicy(struct soap*, _tt__EventSubscription_SubscriptionPolicy *, const char*, const char*);

#ifndef soap_read__tt__EventSubscription_SubscriptionPolicy
#define soap_read__tt__EventSubscription_SubscriptionPolicy(soap, data) ( soap_begin_recv(soap) || !soap_get__tt__EventSubscription_SubscriptionPolicy(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tt__EventSubscription_SubscriptionPolicy * SOAP_FMAC2 soap_instantiate__tt__EventSubscription_SubscriptionPolicy(struct soap*, int, const char*, const char*, size_t*);

inline _tt__EventSubscription_SubscriptionPolicy * soap_new__tt__EventSubscription_SubscriptionPolicy(struct soap *soap, int n = -1) { return soap_instantiate__tt__EventSubscription_SubscriptionPolicy(soap, n, NULL, NULL, NULL); }

inline _tt__EventSubscription_SubscriptionPolicy * soap_new_req__tt__EventSubscription_SubscriptionPolicy(struct soap *soap) { _tt__EventSubscription_SubscriptionPolicy *_p = soap_instantiate__tt__EventSubscription_SubscriptionPolicy(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tt__EventSubscription_SubscriptionPolicy * soap_new_set__tt__EventSubscription_SubscriptionPolicy(struct soap *soap) { _tt__EventSubscription_SubscriptionPolicy *_p = soap_instantiate__tt__EventSubscription_SubscriptionPolicy(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tt__EventSubscription_SubscriptionPolicy(struct soap *soap, _tt__EventSubscription_SubscriptionPolicy *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tt__EventSubscription_SubscriptionPolicy(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetSystemUrisResponse_Extension
#define SOAP_TYPE__tds__GetSystemUrisResponse_Extension (983)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetSystemUrisResponse_Extension(struct soap*, const char*, int, const _tds__GetSystemUrisResponse_Extension *, const char*);
SOAP_FMAC3 _tds__GetSystemUrisResponse_Extension * SOAP_FMAC4 soap_in__tds__GetSystemUrisResponse_Extension(struct soap*, const char*, _tds__GetSystemUrisResponse_Extension *, const char*);

#ifndef soap_write__tds__GetSystemUrisResponse_Extension
#define soap_write__tds__GetSystemUrisResponse_Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetSystemUrisResponse-Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemUrisResponse_Extension * SOAP_FMAC4 soap_get__tds__GetSystemUrisResponse_Extension(struct soap*, _tds__GetSystemUrisResponse_Extension *, const char*, const char*);

#ifndef soap_read__tds__GetSystemUrisResponse_Extension
#define soap_read__tds__GetSystemUrisResponse_Extension(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetSystemUrisResponse_Extension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetSystemUrisResponse_Extension * SOAP_FMAC2 soap_instantiate__tds__GetSystemUrisResponse_Extension(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetSystemUrisResponse_Extension * soap_new__tds__GetSystemUrisResponse_Extension(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetSystemUrisResponse_Extension(soap, n, NULL, NULL, NULL); }

inline _tds__GetSystemUrisResponse_Extension * soap_new_req__tds__GetSystemUrisResponse_Extension(struct soap *soap) { _tds__GetSystemUrisResponse_Extension *_p = soap_instantiate__tds__GetSystemUrisResponse_Extension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetSystemUrisResponse_Extension * soap_new_set__tds__GetSystemUrisResponse_Extension(struct soap *soap) { _tds__GetSystemUrisResponse_Extension *_p = soap_instantiate__tds__GetSystemUrisResponse_Extension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetSystemUrisResponse_Extension(struct soap *soap, _tds__GetSystemUrisResponse_Extension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetSystemUrisResponse_Extension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__Service_Capabilities
#define SOAP_TYPE__tds__Service_Capabilities (906)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__Service_Capabilities(struct soap*, const char*, int, const _tds__Service_Capabilities *, const char*);
SOAP_FMAC3 _tds__Service_Capabilities * SOAP_FMAC4 soap_in__tds__Service_Capabilities(struct soap*, const char*, _tds__Service_Capabilities *, const char*);

#ifndef soap_write__tds__Service_Capabilities
#define soap_write__tds__Service_Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:Service-Capabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__Service_Capabilities * SOAP_FMAC4 soap_get__tds__Service_Capabilities(struct soap*, _tds__Service_Capabilities *, const char*, const char*);

#ifndef soap_read__tds__Service_Capabilities
#define soap_read__tds__Service_Capabilities(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__Service_Capabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__Service_Capabilities * SOAP_FMAC2 soap_instantiate__tds__Service_Capabilities(struct soap*, int, const char*, const char*, size_t*);

inline _tds__Service_Capabilities * soap_new__tds__Service_Capabilities(struct soap *soap, int n = -1) { return soap_instantiate__tds__Service_Capabilities(soap, n, NULL, NULL, NULL); }

inline _tds__Service_Capabilities * soap_new_req__tds__Service_Capabilities(struct soap *soap) { _tds__Service_Capabilities *_p = soap_instantiate__tds__Service_Capabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__Service_Capabilities * soap_new_set__tds__Service_Capabilities(struct soap *soap) { _tds__Service_Capabilities *_p = soap_instantiate__tds__Service_Capabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__Service_Capabilities(struct soap *soap, _tds__Service_Capabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__Service_Capabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RecordingJobReference
#define SOAP_TYPE_tt__RecordingJobReference (905)
#endif

#define soap_default_tt__RecordingJobReference(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__RecordingJobReference(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingJobReference(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__RecordingJobReference(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__RecordingJobReference(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__RecordingJobReference
#define soap_write_tt__RecordingJobReference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__RecordingJobReference(soap, data),0) || soap_put_tt__RecordingJobReference(soap, data, "tt:RecordingJobReference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__RecordingJobReference(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__RecordingJobReference
#define soap_read_tt__RecordingJobReference(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RecordingJobReference(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tt__RecordingJobReference soap_instantiate_std__string


#define soap_copy_tt__RecordingJobReference soap_copy_std__string

#ifndef SOAP_TYPE_tt__JobToken
#define SOAP_TYPE_tt__JobToken (904)
#endif

#define soap_default_tt__JobToken(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__JobToken(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__JobToken(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__JobToken(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__JobToken(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__JobToken
#define soap_write_tt__JobToken(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__JobToken(soap, data),0) || soap_put_tt__JobToken(soap, data, "tt:JobToken", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__JobToken(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__JobToken
#define soap_read_tt__JobToken(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__JobToken(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tt__JobToken soap_instantiate_std__string


#define soap_copy_tt__JobToken soap_copy_std__string

#ifndef SOAP_TYPE_tt__TrackReference
#define SOAP_TYPE_tt__TrackReference (903)
#endif

#define soap_default_tt__TrackReference(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__TrackReference(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__TrackReference(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__TrackReference(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__TrackReference(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__TrackReference
#define soap_write_tt__TrackReference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__TrackReference(soap, data),0) || soap_put_tt__TrackReference(soap, data, "tt:TrackReference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__TrackReference(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__TrackReference
#define soap_read_tt__TrackReference(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__TrackReference(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tt__TrackReference soap_instantiate_std__string


#define soap_copy_tt__TrackReference soap_copy_std__string

#ifndef SOAP_TYPE_tt__RecordingReference
#define SOAP_TYPE_tt__RecordingReference (902)
#endif

#define soap_default_tt__RecordingReference(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__RecordingReference(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingReference(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__RecordingReference(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__RecordingReference(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__RecordingReference
#define soap_write_tt__RecordingReference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__RecordingReference(soap, data),0) || soap_put_tt__RecordingReference(soap, data, "tt:RecordingReference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__RecordingReference(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__RecordingReference
#define soap_read_tt__RecordingReference(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RecordingReference(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tt__RecordingReference soap_instantiate_std__string


#define soap_copy_tt__RecordingReference soap_copy_std__string

#ifndef SOAP_TYPE_tt__ReceiverReference
#define SOAP_TYPE_tt__ReceiverReference (901)
#endif

#define soap_default_tt__ReceiverReference(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__ReceiverReference(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ReceiverReference(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__ReceiverReference(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ReceiverReference(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__ReceiverReference
#define soap_write_tt__ReceiverReference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__ReceiverReference(soap, data),0) || soap_put_tt__ReceiverReference(soap, data, "tt:ReceiverReference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__ReceiverReference(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__ReceiverReference
#define soap_read_tt__ReceiverReference(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ReceiverReference(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tt__ReceiverReference soap_instantiate_std__string


#define soap_copy_tt__ReceiverReference soap_copy_std__string

#ifndef SOAP_TYPE_wstop__SimpleTopicExpression
#define SOAP_TYPE_wstop__SimpleTopicExpression (900)
#endif

#define soap_default_wstop__SimpleTopicExpression(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wstop__SimpleTopicExpression(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__SimpleTopicExpression(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_wstop__SimpleTopicExpression(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wstop__SimpleTopicExpression(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_wstop__SimpleTopicExpression
#define soap_write_wstop__SimpleTopicExpression(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wstop__SimpleTopicExpression(soap, data),0) || soap_put_wstop__SimpleTopicExpression(soap, data, "wstop:SimpleTopicExpression", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_wstop__SimpleTopicExpression(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_wstop__SimpleTopicExpression
#define soap_read_wstop__SimpleTopicExpression(soap, data) ( soap_begin_recv(soap) || !soap_get_wstop__SimpleTopicExpression(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_wstop__SimpleTopicExpression soap_instantiate_std__string


#define soap_copy_wstop__SimpleTopicExpression soap_copy_std__string

#ifndef SOAP_TYPE_wstop__ConcreteTopicExpression
#define SOAP_TYPE_wstop__ConcreteTopicExpression (899)
#endif

#define soap_default_wstop__ConcreteTopicExpression(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wstop__ConcreteTopicExpression(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__ConcreteTopicExpression(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_wstop__ConcreteTopicExpression(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wstop__ConcreteTopicExpression(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_wstop__ConcreteTopicExpression
#define soap_write_wstop__ConcreteTopicExpression(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wstop__ConcreteTopicExpression(soap, data),0) || soap_put_wstop__ConcreteTopicExpression(soap, data, "wstop:ConcreteTopicExpression", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_wstop__ConcreteTopicExpression(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_wstop__ConcreteTopicExpression
#define soap_read_wstop__ConcreteTopicExpression(soap, data) ( soap_begin_recv(soap) || !soap_get_wstop__ConcreteTopicExpression(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_wstop__ConcreteTopicExpression soap_instantiate_std__string


#define soap_copy_wstop__ConcreteTopicExpression soap_copy_std__string

#ifndef SOAP_TYPE_wstop__FullTopicExpression
#define SOAP_TYPE_wstop__FullTopicExpression (898)
#endif

#define soap_default_wstop__FullTopicExpression(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wstop__FullTopicExpression(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__FullTopicExpression(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_wstop__FullTopicExpression(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wstop__FullTopicExpression(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_wstop__FullTopicExpression
#define soap_write_wstop__FullTopicExpression(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wstop__FullTopicExpression(soap, data),0) || soap_put_wstop__FullTopicExpression(soap, data, "wstop:FullTopicExpression", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_wstop__FullTopicExpression(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_wstop__FullTopicExpression
#define soap_read_wstop__FullTopicExpression(soap, data) ( soap_begin_recv(soap) || !soap_get_wstop__FullTopicExpression(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_wstop__FullTopicExpression soap_instantiate_std__string


#define soap_copy_wstop__FullTopicExpression soap_copy_std__string

#ifndef SOAP_TYPE_tt__AudioClassType
#define SOAP_TYPE_tt__AudioClassType (896)
#endif

#define soap_default_tt__AudioClassType(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__AudioClassType(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioClassType(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__AudioClassType(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__AudioClassType(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__AudioClassType
#define soap_write_tt__AudioClassType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__AudioClassType(soap, data),0) || soap_put_tt__AudioClassType(soap, data, "tt:AudioClassType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__AudioClassType(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__AudioClassType
#define soap_read_tt__AudioClassType(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AudioClassType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tt__AudioClassType soap_instantiate_std__string


#define soap_copy_tt__AudioClassType soap_copy_std__string

#ifndef SOAP_TYPE_tt__RecordingJobState
#define SOAP_TYPE_tt__RecordingJobState (894)
#endif

#define soap_default_tt__RecordingJobState(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__RecordingJobState(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingJobState(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__RecordingJobState(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__RecordingJobState(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__RecordingJobState
#define soap_write_tt__RecordingJobState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__RecordingJobState(soap, data),0) || soap_put_tt__RecordingJobState(soap, data, "tt:RecordingJobState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__RecordingJobState(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__RecordingJobState
#define soap_read_tt__RecordingJobState(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RecordingJobState(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tt__RecordingJobState soap_instantiate_std__string


#define soap_copy_tt__RecordingJobState soap_copy_std__string

#ifndef SOAP_TYPE_tt__RecordingJobMode
#define SOAP_TYPE_tt__RecordingJobMode (893)
#endif

#define soap_default_tt__RecordingJobMode(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__RecordingJobMode(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingJobMode(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__RecordingJobMode(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__RecordingJobMode(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__RecordingJobMode
#define soap_write_tt__RecordingJobMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__RecordingJobMode(soap, data),0) || soap_put_tt__RecordingJobMode(soap, data, "tt:RecordingJobMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__RecordingJobMode(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__RecordingJobMode
#define soap_read_tt__RecordingJobMode(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RecordingJobMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tt__RecordingJobMode soap_instantiate_std__string


#define soap_copy_tt__RecordingJobMode soap_copy_std__string

#ifndef SOAP_TYPE_tt__XPathExpression
#define SOAP_TYPE_tt__XPathExpression (889)
#endif

#define soap_default_tt__XPathExpression(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__XPathExpression(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__XPathExpression(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__XPathExpression(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__XPathExpression(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__XPathExpression
#define soap_write_tt__XPathExpression(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__XPathExpression(soap, data),0) || soap_put_tt__XPathExpression(soap, data, "tt:XPathExpression", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__XPathExpression(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__XPathExpression
#define soap_read_tt__XPathExpression(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__XPathExpression(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tt__XPathExpression soap_instantiate_std__string


#define soap_copy_tt__XPathExpression soap_copy_std__string

#ifndef SOAP_TYPE_tt__Description
#define SOAP_TYPE_tt__Description (888)
#endif

#define soap_default_tt__Description(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__Description(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Description(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__Description(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Description(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__Description
#define soap_write_tt__Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__Description(soap, data),0) || soap_put_tt__Description(soap, data, "tt:Description", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__Description(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__Description
#define soap_read_tt__Description(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Description(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tt__Description soap_instantiate_std__string


#define soap_copy_tt__Description soap_copy_std__string

#ifndef SOAP_TYPE_tt__TopicNamespaceLocation
#define SOAP_TYPE_tt__TopicNamespaceLocation (882)
#endif

#define soap_default_tt__TopicNamespaceLocation(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__TopicNamespaceLocation(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__TopicNamespaceLocation(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__TopicNamespaceLocation(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__TopicNamespaceLocation(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__TopicNamespaceLocation
#define soap_write_tt__TopicNamespaceLocation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__TopicNamespaceLocation(soap, data),0) || soap_put_tt__TopicNamespaceLocation(soap, data, "tt:TopicNamespaceLocation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__TopicNamespaceLocation(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__TopicNamespaceLocation
#define soap_read_tt__TopicNamespaceLocation(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__TopicNamespaceLocation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tt__TopicNamespaceLocation soap_instantiate_std__string


#define soap_copy_tt__TopicNamespaceLocation soap_copy_std__string

#ifndef SOAP_TYPE_tt__AuxiliaryData
#define SOAP_TYPE_tt__AuxiliaryData (867)
#endif

#define soap_default_tt__AuxiliaryData(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__AuxiliaryData(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AuxiliaryData(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__AuxiliaryData(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__AuxiliaryData(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__AuxiliaryData
#define soap_write_tt__AuxiliaryData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__AuxiliaryData(soap, data),0) || soap_put_tt__AuxiliaryData(soap, data, "tt:AuxiliaryData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__AuxiliaryData(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__AuxiliaryData
#define soap_read_tt__AuxiliaryData(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AuxiliaryData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tt__AuxiliaryData soap_instantiate_std__string


#define soap_copy_tt__AuxiliaryData soap_copy_std__string

#ifndef SOAP_TYPE_tt__Dot11PSKPassphrase
#define SOAP_TYPE_tt__Dot11PSKPassphrase (854)
#endif

#define soap_default_tt__Dot11PSKPassphrase(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__Dot11PSKPassphrase(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11PSKPassphrase(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__Dot11PSKPassphrase(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Dot11PSKPassphrase(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__Dot11PSKPassphrase
#define soap_write_tt__Dot11PSKPassphrase(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__Dot11PSKPassphrase(soap, data),0) || soap_put_tt__Dot11PSKPassphrase(soap, data, "tt:Dot11PSKPassphrase", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__Dot11PSKPassphrase(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__Dot11PSKPassphrase
#define soap_read_tt__Dot11PSKPassphrase(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Dot11PSKPassphrase(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tt__Dot11PSKPassphrase soap_instantiate_std__string


#define soap_copy_tt__Dot11PSKPassphrase soap_copy_std__string

#ifndef SOAP_TYPE_tt__Dot11PSK
#define SOAP_TYPE_tt__Dot11PSK (853)
#endif

#define soap_default_tt__Dot11PSK(soap, a) (a)->xsd__hexBinary::soap_default(soap)


#define soap_serialize_tt__Dot11PSK(soap, a) (a)->soap_serialize(soap)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11PSK(struct soap*, const char*, int, const xsd__hexBinary *, const char*);
SOAP_FMAC3 xsd__hexBinary * SOAP_FMAC4 soap_in_tt__Dot11PSK(struct soap*, const char*, xsd__hexBinary *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Dot11PSK(struct soap*, const xsd__hexBinary *, const char*, const char*);

#ifndef soap_write_tt__Dot11PSK
#define soap_write_tt__Dot11PSK(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Dot11PSK", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__hexBinary * SOAP_FMAC4 soap_get_tt__Dot11PSK(struct soap*, xsd__hexBinary *, const char*, const char*);

#ifndef soap_read_tt__Dot11PSK
#define soap_read_tt__Dot11PSK(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Dot11PSK(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tt__Dot11PSK soap_instantiate_xsd__hexBinary


#define soap_copy_tt__Dot11PSK soap_copy_xsd__hexBinary

#ifndef SOAP_TYPE_tt__Dot11SSIDType
#define SOAP_TYPE_tt__Dot11SSIDType (849)
#endif

#define soap_default_tt__Dot11SSIDType(soap, a) (a)->xsd__hexBinary::soap_default(soap)


#define soap_serialize_tt__Dot11SSIDType(soap, a) (a)->soap_serialize(soap)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11SSIDType(struct soap*, const char*, int, const xsd__hexBinary *, const char*);
SOAP_FMAC3 xsd__hexBinary * SOAP_FMAC4 soap_in_tt__Dot11SSIDType(struct soap*, const char*, xsd__hexBinary *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Dot11SSIDType(struct soap*, const xsd__hexBinary *, const char*, const char*);

#ifndef soap_write_tt__Dot11SSIDType
#define soap_write_tt__Dot11SSIDType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Dot11SSIDType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__hexBinary * SOAP_FMAC4 soap_get_tt__Dot11SSIDType(struct soap*, xsd__hexBinary *, const char*, const char*);

#ifndef soap_read_tt__Dot11SSIDType
#define soap_read_tt__Dot11SSIDType(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Dot11SSIDType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tt__Dot11SSIDType soap_instantiate_xsd__hexBinary


#define soap_copy_tt__Dot11SSIDType soap_copy_xsd__hexBinary

#ifndef SOAP_TYPE_tt__Domain
#define SOAP_TYPE_tt__Domain (846)
#endif

#define soap_default_tt__Domain(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__Domain(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Domain(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__Domain(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Domain(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__Domain
#define soap_write_tt__Domain(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__Domain(soap, data),0) || soap_put_tt__Domain(soap, data, "tt:Domain", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__Domain(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__Domain
#define soap_read_tt__Domain(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Domain(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tt__Domain soap_instantiate_std__string


#define soap_copy_tt__Domain soap_copy_std__string

#ifndef SOAP_TYPE_tt__DNSName
#define SOAP_TYPE_tt__DNSName (845)
#endif

#define soap_default_tt__DNSName(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__DNSName(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DNSName(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__DNSName(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__DNSName(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__DNSName
#define soap_write_tt__DNSName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__DNSName(soap, data),0) || soap_put_tt__DNSName(soap, data, "tt:DNSName", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__DNSName(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__DNSName
#define soap_read_tt__DNSName(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__DNSName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tt__DNSName soap_instantiate_std__string


#define soap_copy_tt__DNSName soap_copy_std__string

#ifndef SOAP_TYPE_tt__HwAddress
#define SOAP_TYPE_tt__HwAddress (843)
#endif

#define soap_default_tt__HwAddress(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__HwAddress(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__HwAddress(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__HwAddress(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__HwAddress(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__HwAddress
#define soap_write_tt__HwAddress(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__HwAddress(soap, data),0) || soap_put_tt__HwAddress(soap, data, "tt:HwAddress", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__HwAddress(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__HwAddress
#define soap_read_tt__HwAddress(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__HwAddress(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tt__HwAddress soap_instantiate_std__string


#define soap_copy_tt__HwAddress soap_copy_std__string

#ifndef SOAP_TYPE_tt__IPv6Address
#define SOAP_TYPE_tt__IPv6Address (842)
#endif

#define soap_default_tt__IPv6Address(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__IPv6Address(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPv6Address(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__IPv6Address(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__IPv6Address(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__IPv6Address
#define soap_write_tt__IPv6Address(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__IPv6Address(soap, data),0) || soap_put_tt__IPv6Address(soap, data, "tt:IPv6Address", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__IPv6Address(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__IPv6Address
#define soap_read_tt__IPv6Address(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IPv6Address(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tt__IPv6Address soap_instantiate_std__string


#define soap_copy_tt__IPv6Address soap_copy_std__string

#ifndef SOAP_TYPE_tt__IPv4Address
#define SOAP_TYPE_tt__IPv4Address (841)
#endif

#define soap_default_tt__IPv4Address(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__IPv4Address(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPv4Address(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__IPv4Address(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__IPv4Address(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__IPv4Address
#define soap_write_tt__IPv4Address(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__IPv4Address(soap, data),0) || soap_put_tt__IPv4Address(soap, data, "tt:IPv4Address", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__IPv4Address(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__IPv4Address
#define soap_read_tt__IPv4Address(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IPv4Address(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tt__IPv4Address soap_instantiate_std__string


#define soap_copy_tt__IPv4Address soap_copy_std__string

#ifndef SOAP_TYPE_tt__NetworkInterfaceConfigPriority
#define SOAP_TYPE_tt__NetworkInterfaceConfigPriority (835)
#endif

#define soap_default_tt__NetworkInterfaceConfigPriority(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__NetworkInterfaceConfigPriority(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkInterfaceConfigPriority(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__NetworkInterfaceConfigPriority(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__NetworkInterfaceConfigPriority(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__NetworkInterfaceConfigPriority
#define soap_write_tt__NetworkInterfaceConfigPriority(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__NetworkInterfaceConfigPriority(soap, data),0) || soap_put_tt__NetworkInterfaceConfigPriority(soap, data, "tt:NetworkInterfaceConfigPriority", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__NetworkInterfaceConfigPriority(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__NetworkInterfaceConfigPriority
#define soap_read_tt__NetworkInterfaceConfigPriority(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__NetworkInterfaceConfigPriority(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tt__NetworkInterfaceConfigPriority soap_instantiate_std__string


#define soap_copy_tt__NetworkInterfaceConfigPriority soap_copy_std__string

#ifndef SOAP_TYPE_tt__Name
#define SOAP_TYPE_tt__Name (825)
#endif

#define soap_default_tt__Name(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__Name(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Name(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__Name(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Name(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__Name
#define soap_write_tt__Name(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__Name(soap, data),0) || soap_put_tt__Name(soap, data, "tt:Name", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__Name(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__Name
#define soap_read_tt__Name(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Name(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tt__Name soap_instantiate_std__string


#define soap_copy_tt__Name soap_copy_std__string

#ifndef SOAP_TYPE_tt__ReferenceToken
#define SOAP_TYPE_tt__ReferenceToken (824)
#endif

#define soap_default_tt__ReferenceToken(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__ReferenceToken(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ReferenceToken(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__ReferenceToken(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ReferenceToken(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__ReferenceToken
#define soap_write_tt__ReferenceToken(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__ReferenceToken(soap, data),0) || soap_put_tt__ReferenceToken(soap, data, "tt:ReferenceToken", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__ReferenceToken(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__ReferenceToken
#define soap_read_tt__ReferenceToken(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ReferenceToken(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tt__ReferenceToken soap_instantiate_std__string


#define soap_copy_tt__ReferenceToken soap_copy_std__string

#ifndef SOAP_TYPE_wsnt__AbsoluteOrRelativeTimeType
#define SOAP_TYPE_wsnt__AbsoluteOrRelativeTimeType (823)
#endif

#define soap_default_wsnt__AbsoluteOrRelativeTimeType(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__AbsoluteOrRelativeTimeType(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__AbsoluteOrRelativeTimeType(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_wsnt__AbsoluteOrRelativeTimeType(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__AbsoluteOrRelativeTimeType(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_wsnt__AbsoluteOrRelativeTimeType
#define soap_write_wsnt__AbsoluteOrRelativeTimeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__AbsoluteOrRelativeTimeType(soap, data),0) || soap_put_wsnt__AbsoluteOrRelativeTimeType(soap, data, "wsnt:AbsoluteOrRelativeTimeType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_wsnt__AbsoluteOrRelativeTimeType(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_wsnt__AbsoluteOrRelativeTimeType
#define soap_read_wsnt__AbsoluteOrRelativeTimeType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__AbsoluteOrRelativeTimeType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_wsnt__AbsoluteOrRelativeTimeType soap_instantiate_std__string


#define soap_copy_wsnt__AbsoluteOrRelativeTimeType soap_copy_std__string

#ifndef SOAP_TYPE_tt__StringAttrList
#define SOAP_TYPE_tt__StringAttrList (822)
#endif

#define soap_default_tt__StringAttrList(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__StringAttrList(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__StringAttrList(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__StringAttrList(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__StringAttrList(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__StringAttrList
#define soap_write_tt__StringAttrList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__StringAttrList(soap, data),0) || soap_put_tt__StringAttrList(soap, data, "tt:StringAttrList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__StringAttrList(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__StringAttrList
#define soap_read_tt__StringAttrList(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__StringAttrList(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tt__StringAttrList soap_instantiate_std__string


#define soap_copy_tt__StringAttrList soap_copy_std__string

#ifndef SOAP_TYPE_tt__FloatAttrList
#define SOAP_TYPE_tt__FloatAttrList (821)
#endif

#define soap_default_tt__FloatAttrList(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__FloatAttrList(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FloatAttrList(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__FloatAttrList(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__FloatAttrList(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__FloatAttrList
#define soap_write_tt__FloatAttrList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__FloatAttrList(soap, data),0) || soap_put_tt__FloatAttrList(soap, data, "tt:FloatAttrList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__FloatAttrList(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__FloatAttrList
#define soap_read_tt__FloatAttrList(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__FloatAttrList(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tt__FloatAttrList soap_instantiate_std__string


#define soap_copy_tt__FloatAttrList soap_copy_std__string

#ifndef SOAP_TYPE_tt__IntAttrList
#define SOAP_TYPE_tt__IntAttrList (820)
#endif

#define soap_default_tt__IntAttrList(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__IntAttrList(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IntAttrList(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__IntAttrList(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__IntAttrList(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__IntAttrList
#define soap_write_tt__IntAttrList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__IntAttrList(soap, data),0) || soap_put_tt__IntAttrList(soap, data, "tt:IntAttrList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__IntAttrList(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__IntAttrList
#define soap_read_tt__IntAttrList(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IntAttrList(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tt__IntAttrList soap_instantiate_std__string


#define soap_copy_tt__IntAttrList soap_copy_std__string

#ifndef SOAP_TYPE_tds__EAPMethodTypes
#define SOAP_TYPE_tds__EAPMethodTypes (819)
#endif

#define soap_default_tds__EAPMethodTypes(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tds__EAPMethodTypes(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tds__EAPMethodTypes(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tds__EAPMethodTypes(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tds__EAPMethodTypes(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tds__EAPMethodTypes
#define soap_write_tds__EAPMethodTypes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tds__EAPMethodTypes(soap, data),0) || soap_put_tds__EAPMethodTypes(soap, data, "tds:EAPMethodTypes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tds__EAPMethodTypes(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tds__EAPMethodTypes
#define soap_read_tds__EAPMethodTypes(soap, data) ( soap_begin_recv(soap) || !soap_get_tds__EAPMethodTypes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_tds__EAPMethodTypes soap_instantiate_std__string


#define soap_copy_tds__EAPMethodTypes soap_copy_std__string

#ifndef SOAP_TYPE__tptz__GetCompatibleConfigurationsResponse
#define SOAP_TYPE__tptz__GetCompatibleConfigurationsResponse (818)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GetCompatibleConfigurationsResponse(struct soap*, const char*, int, const _tptz__GetCompatibleConfigurationsResponse *, const char*);
SOAP_FMAC3 _tptz__GetCompatibleConfigurationsResponse * SOAP_FMAC4 soap_in__tptz__GetCompatibleConfigurationsResponse(struct soap*, const char*, _tptz__GetCompatibleConfigurationsResponse *, const char*);

#ifndef soap_write__tptz__GetCompatibleConfigurationsResponse
#define soap_write__tptz__GetCompatibleConfigurationsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GetCompatibleConfigurationsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetCompatibleConfigurationsResponse * SOAP_FMAC4 soap_get__tptz__GetCompatibleConfigurationsResponse(struct soap*, _tptz__GetCompatibleConfigurationsResponse *, const char*, const char*);

#ifndef soap_read__tptz__GetCompatibleConfigurationsResponse
#define soap_read__tptz__GetCompatibleConfigurationsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GetCompatibleConfigurationsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GetCompatibleConfigurationsResponse * SOAP_FMAC2 soap_instantiate__tptz__GetCompatibleConfigurationsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GetCompatibleConfigurationsResponse * soap_new__tptz__GetCompatibleConfigurationsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GetCompatibleConfigurationsResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__GetCompatibleConfigurationsResponse * soap_new_req__tptz__GetCompatibleConfigurationsResponse(struct soap *soap) { _tptz__GetCompatibleConfigurationsResponse *_p = soap_instantiate__tptz__GetCompatibleConfigurationsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tptz__GetCompatibleConfigurationsResponse * soap_new_set__tptz__GetCompatibleConfigurationsResponse(struct soap *soap, std::vector<tt__PTZConfiguration * >& PTZConfiguration) { _tptz__GetCompatibleConfigurationsResponse *_p = soap_instantiate__tptz__GetCompatibleConfigurationsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetCompatibleConfigurationsResponse::PTZConfiguration = PTZConfiguration; } return _p; }

inline void soap_delete__tptz__GetCompatibleConfigurationsResponse(struct soap *soap, _tptz__GetCompatibleConfigurationsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GetCompatibleConfigurationsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GetCompatibleConfigurations
#define SOAP_TYPE__tptz__GetCompatibleConfigurations (817)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GetCompatibleConfigurations(struct soap*, const char*, int, const _tptz__GetCompatibleConfigurations *, const char*);
SOAP_FMAC3 _tptz__GetCompatibleConfigurations * SOAP_FMAC4 soap_in__tptz__GetCompatibleConfigurations(struct soap*, const char*, _tptz__GetCompatibleConfigurations *, const char*);

#ifndef soap_write__tptz__GetCompatibleConfigurations
#define soap_write__tptz__GetCompatibleConfigurations(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GetCompatibleConfigurations", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetCompatibleConfigurations * SOAP_FMAC4 soap_get__tptz__GetCompatibleConfigurations(struct soap*, _tptz__GetCompatibleConfigurations *, const char*, const char*);

#ifndef soap_read__tptz__GetCompatibleConfigurations
#define soap_read__tptz__GetCompatibleConfigurations(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GetCompatibleConfigurations(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GetCompatibleConfigurations * SOAP_FMAC2 soap_instantiate__tptz__GetCompatibleConfigurations(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GetCompatibleConfigurations * soap_new__tptz__GetCompatibleConfigurations(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GetCompatibleConfigurations(soap, n, NULL, NULL, NULL); }

inline _tptz__GetCompatibleConfigurations * soap_new_req__tptz__GetCompatibleConfigurations(struct soap *soap, std::string& ProfileToken) { _tptz__GetCompatibleConfigurations *_p = soap_instantiate__tptz__GetCompatibleConfigurations(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetCompatibleConfigurations::ProfileToken = ProfileToken; } return _p; }

inline _tptz__GetCompatibleConfigurations * soap_new_set__tptz__GetCompatibleConfigurations(struct soap *soap, std::string& ProfileToken) { _tptz__GetCompatibleConfigurations *_p = soap_instantiate__tptz__GetCompatibleConfigurations(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetCompatibleConfigurations::ProfileToken = ProfileToken; } return _p; }

inline void soap_delete__tptz__GetCompatibleConfigurations(struct soap *soap, _tptz__GetCompatibleConfigurations *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GetCompatibleConfigurations(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__RemovePresetTourResponse
#define SOAP_TYPE__tptz__RemovePresetTourResponse (816)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__RemovePresetTourResponse(struct soap*, const char*, int, const _tptz__RemovePresetTourResponse *, const char*);
SOAP_FMAC3 _tptz__RemovePresetTourResponse * SOAP_FMAC4 soap_in__tptz__RemovePresetTourResponse(struct soap*, const char*, _tptz__RemovePresetTourResponse *, const char*);

#ifndef soap_write__tptz__RemovePresetTourResponse
#define soap_write__tptz__RemovePresetTourResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:RemovePresetTourResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__RemovePresetTourResponse * SOAP_FMAC4 soap_get__tptz__RemovePresetTourResponse(struct soap*, _tptz__RemovePresetTourResponse *, const char*, const char*);

#ifndef soap_read__tptz__RemovePresetTourResponse
#define soap_read__tptz__RemovePresetTourResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__RemovePresetTourResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__RemovePresetTourResponse * SOAP_FMAC2 soap_instantiate__tptz__RemovePresetTourResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__RemovePresetTourResponse * soap_new__tptz__RemovePresetTourResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__RemovePresetTourResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__RemovePresetTourResponse * soap_new_req__tptz__RemovePresetTourResponse(struct soap *soap) { _tptz__RemovePresetTourResponse *_p = soap_instantiate__tptz__RemovePresetTourResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tptz__RemovePresetTourResponse * soap_new_set__tptz__RemovePresetTourResponse(struct soap *soap) { _tptz__RemovePresetTourResponse *_p = soap_instantiate__tptz__RemovePresetTourResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tptz__RemovePresetTourResponse(struct soap *soap, _tptz__RemovePresetTourResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__RemovePresetTourResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__RemovePresetTour
#define SOAP_TYPE__tptz__RemovePresetTour (815)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__RemovePresetTour(struct soap*, const char*, int, const _tptz__RemovePresetTour *, const char*);
SOAP_FMAC3 _tptz__RemovePresetTour * SOAP_FMAC4 soap_in__tptz__RemovePresetTour(struct soap*, const char*, _tptz__RemovePresetTour *, const char*);

#ifndef soap_write__tptz__RemovePresetTour
#define soap_write__tptz__RemovePresetTour(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:RemovePresetTour", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__RemovePresetTour * SOAP_FMAC4 soap_get__tptz__RemovePresetTour(struct soap*, _tptz__RemovePresetTour *, const char*, const char*);

#ifndef soap_read__tptz__RemovePresetTour
#define soap_read__tptz__RemovePresetTour(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__RemovePresetTour(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__RemovePresetTour * SOAP_FMAC2 soap_instantiate__tptz__RemovePresetTour(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__RemovePresetTour * soap_new__tptz__RemovePresetTour(struct soap *soap, int n = -1) { return soap_instantiate__tptz__RemovePresetTour(soap, n, NULL, NULL, NULL); }

inline _tptz__RemovePresetTour * soap_new_req__tptz__RemovePresetTour(struct soap *soap, std::string& ProfileToken, std::string& PresetTourToken) { _tptz__RemovePresetTour *_p = soap_instantiate__tptz__RemovePresetTour(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__RemovePresetTour::ProfileToken = ProfileToken; _p->_tptz__RemovePresetTour::PresetTourToken = PresetTourToken; } return _p; }

inline _tptz__RemovePresetTour * soap_new_set__tptz__RemovePresetTour(struct soap *soap, std::string& ProfileToken, std::string& PresetTourToken) { _tptz__RemovePresetTour *_p = soap_instantiate__tptz__RemovePresetTour(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__RemovePresetTour::ProfileToken = ProfileToken; _p->_tptz__RemovePresetTour::PresetTourToken = PresetTourToken; } return _p; }

inline void soap_delete__tptz__RemovePresetTour(struct soap *soap, _tptz__RemovePresetTour *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__RemovePresetTour(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__OperatePresetTourResponse
#define SOAP_TYPE__tptz__OperatePresetTourResponse (814)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__OperatePresetTourResponse(struct soap*, const char*, int, const _tptz__OperatePresetTourResponse *, const char*);
SOAP_FMAC3 _tptz__OperatePresetTourResponse * SOAP_FMAC4 soap_in__tptz__OperatePresetTourResponse(struct soap*, const char*, _tptz__OperatePresetTourResponse *, const char*);

#ifndef soap_write__tptz__OperatePresetTourResponse
#define soap_write__tptz__OperatePresetTourResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:OperatePresetTourResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__OperatePresetTourResponse * SOAP_FMAC4 soap_get__tptz__OperatePresetTourResponse(struct soap*, _tptz__OperatePresetTourResponse *, const char*, const char*);

#ifndef soap_read__tptz__OperatePresetTourResponse
#define soap_read__tptz__OperatePresetTourResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__OperatePresetTourResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__OperatePresetTourResponse * SOAP_FMAC2 soap_instantiate__tptz__OperatePresetTourResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__OperatePresetTourResponse * soap_new__tptz__OperatePresetTourResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__OperatePresetTourResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__OperatePresetTourResponse * soap_new_req__tptz__OperatePresetTourResponse(struct soap *soap) { _tptz__OperatePresetTourResponse *_p = soap_instantiate__tptz__OperatePresetTourResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tptz__OperatePresetTourResponse * soap_new_set__tptz__OperatePresetTourResponse(struct soap *soap) { _tptz__OperatePresetTourResponse *_p = soap_instantiate__tptz__OperatePresetTourResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tptz__OperatePresetTourResponse(struct soap *soap, _tptz__OperatePresetTourResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__OperatePresetTourResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__OperatePresetTour
#define SOAP_TYPE__tptz__OperatePresetTour (813)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__OperatePresetTour(struct soap*, const char*, int, const _tptz__OperatePresetTour *, const char*);
SOAP_FMAC3 _tptz__OperatePresetTour * SOAP_FMAC4 soap_in__tptz__OperatePresetTour(struct soap*, const char*, _tptz__OperatePresetTour *, const char*);

#ifndef soap_write__tptz__OperatePresetTour
#define soap_write__tptz__OperatePresetTour(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:OperatePresetTour", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__OperatePresetTour * SOAP_FMAC4 soap_get__tptz__OperatePresetTour(struct soap*, _tptz__OperatePresetTour *, const char*, const char*);

#ifndef soap_read__tptz__OperatePresetTour
#define soap_read__tptz__OperatePresetTour(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__OperatePresetTour(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__OperatePresetTour * SOAP_FMAC2 soap_instantiate__tptz__OperatePresetTour(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__OperatePresetTour * soap_new__tptz__OperatePresetTour(struct soap *soap, int n = -1) { return soap_instantiate__tptz__OperatePresetTour(soap, n, NULL, NULL, NULL); }

inline _tptz__OperatePresetTour * soap_new_req__tptz__OperatePresetTour(struct soap *soap, std::string& ProfileToken, std::string& PresetTourToken, enum tt__PTZPresetTourOperation Operation) { _tptz__OperatePresetTour *_p = soap_instantiate__tptz__OperatePresetTour(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__OperatePresetTour::ProfileToken = ProfileToken; _p->_tptz__OperatePresetTour::PresetTourToken = PresetTourToken; _p->_tptz__OperatePresetTour::Operation = Operation; } return _p; }

inline _tptz__OperatePresetTour * soap_new_set__tptz__OperatePresetTour(struct soap *soap, std::string& ProfileToken, std::string& PresetTourToken, enum tt__PTZPresetTourOperation Operation) { _tptz__OperatePresetTour *_p = soap_instantiate__tptz__OperatePresetTour(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__OperatePresetTour::ProfileToken = ProfileToken; _p->_tptz__OperatePresetTour::PresetTourToken = PresetTourToken; _p->_tptz__OperatePresetTour::Operation = Operation; } return _p; }

inline void soap_delete__tptz__OperatePresetTour(struct soap *soap, _tptz__OperatePresetTour *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__OperatePresetTour(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__ModifyPresetTourResponse
#define SOAP_TYPE__tptz__ModifyPresetTourResponse (812)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__ModifyPresetTourResponse(struct soap*, const char*, int, const _tptz__ModifyPresetTourResponse *, const char*);
SOAP_FMAC3 _tptz__ModifyPresetTourResponse * SOAP_FMAC4 soap_in__tptz__ModifyPresetTourResponse(struct soap*, const char*, _tptz__ModifyPresetTourResponse *, const char*);

#ifndef soap_write__tptz__ModifyPresetTourResponse
#define soap_write__tptz__ModifyPresetTourResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:ModifyPresetTourResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__ModifyPresetTourResponse * SOAP_FMAC4 soap_get__tptz__ModifyPresetTourResponse(struct soap*, _tptz__ModifyPresetTourResponse *, const char*, const char*);

#ifndef soap_read__tptz__ModifyPresetTourResponse
#define soap_read__tptz__ModifyPresetTourResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__ModifyPresetTourResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__ModifyPresetTourResponse * SOAP_FMAC2 soap_instantiate__tptz__ModifyPresetTourResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__ModifyPresetTourResponse * soap_new__tptz__ModifyPresetTourResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__ModifyPresetTourResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__ModifyPresetTourResponse * soap_new_req__tptz__ModifyPresetTourResponse(struct soap *soap) { _tptz__ModifyPresetTourResponse *_p = soap_instantiate__tptz__ModifyPresetTourResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tptz__ModifyPresetTourResponse * soap_new_set__tptz__ModifyPresetTourResponse(struct soap *soap) { _tptz__ModifyPresetTourResponse *_p = soap_instantiate__tptz__ModifyPresetTourResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tptz__ModifyPresetTourResponse(struct soap *soap, _tptz__ModifyPresetTourResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__ModifyPresetTourResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__ModifyPresetTour
#define SOAP_TYPE__tptz__ModifyPresetTour (811)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__ModifyPresetTour(struct soap*, const char*, int, const _tptz__ModifyPresetTour *, const char*);
SOAP_FMAC3 _tptz__ModifyPresetTour * SOAP_FMAC4 soap_in__tptz__ModifyPresetTour(struct soap*, const char*, _tptz__ModifyPresetTour *, const char*);

#ifndef soap_write__tptz__ModifyPresetTour
#define soap_write__tptz__ModifyPresetTour(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:ModifyPresetTour", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__ModifyPresetTour * SOAP_FMAC4 soap_get__tptz__ModifyPresetTour(struct soap*, _tptz__ModifyPresetTour *, const char*, const char*);

#ifndef soap_read__tptz__ModifyPresetTour
#define soap_read__tptz__ModifyPresetTour(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__ModifyPresetTour(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__ModifyPresetTour * SOAP_FMAC2 soap_instantiate__tptz__ModifyPresetTour(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__ModifyPresetTour * soap_new__tptz__ModifyPresetTour(struct soap *soap, int n = -1) { return soap_instantiate__tptz__ModifyPresetTour(soap, n, NULL, NULL, NULL); }

inline _tptz__ModifyPresetTour * soap_new_req__tptz__ModifyPresetTour(struct soap *soap, std::string& ProfileToken, tt__PresetTour *PresetTour) { _tptz__ModifyPresetTour *_p = soap_instantiate__tptz__ModifyPresetTour(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__ModifyPresetTour::ProfileToken = ProfileToken; _p->_tptz__ModifyPresetTour::PresetTour = PresetTour; } return _p; }

inline _tptz__ModifyPresetTour * soap_new_set__tptz__ModifyPresetTour(struct soap *soap, std::string& ProfileToken, tt__PresetTour *PresetTour) { _tptz__ModifyPresetTour *_p = soap_instantiate__tptz__ModifyPresetTour(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__ModifyPresetTour::ProfileToken = ProfileToken; _p->_tptz__ModifyPresetTour::PresetTour = PresetTour; } return _p; }

inline void soap_delete__tptz__ModifyPresetTour(struct soap *soap, _tptz__ModifyPresetTour *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__ModifyPresetTour(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__CreatePresetTourResponse
#define SOAP_TYPE__tptz__CreatePresetTourResponse (810)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__CreatePresetTourResponse(struct soap*, const char*, int, const _tptz__CreatePresetTourResponse *, const char*);
SOAP_FMAC3 _tptz__CreatePresetTourResponse * SOAP_FMAC4 soap_in__tptz__CreatePresetTourResponse(struct soap*, const char*, _tptz__CreatePresetTourResponse *, const char*);

#ifndef soap_write__tptz__CreatePresetTourResponse
#define soap_write__tptz__CreatePresetTourResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:CreatePresetTourResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__CreatePresetTourResponse * SOAP_FMAC4 soap_get__tptz__CreatePresetTourResponse(struct soap*, _tptz__CreatePresetTourResponse *, const char*, const char*);

#ifndef soap_read__tptz__CreatePresetTourResponse
#define soap_read__tptz__CreatePresetTourResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__CreatePresetTourResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__CreatePresetTourResponse * SOAP_FMAC2 soap_instantiate__tptz__CreatePresetTourResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__CreatePresetTourResponse * soap_new__tptz__CreatePresetTourResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__CreatePresetTourResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__CreatePresetTourResponse * soap_new_req__tptz__CreatePresetTourResponse(struct soap *soap, std::string& PresetTourToken) { _tptz__CreatePresetTourResponse *_p = soap_instantiate__tptz__CreatePresetTourResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__CreatePresetTourResponse::PresetTourToken = PresetTourToken; } return _p; }

inline _tptz__CreatePresetTourResponse * soap_new_set__tptz__CreatePresetTourResponse(struct soap *soap, std::string& PresetTourToken) { _tptz__CreatePresetTourResponse *_p = soap_instantiate__tptz__CreatePresetTourResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__CreatePresetTourResponse::PresetTourToken = PresetTourToken; } return _p; }

inline void soap_delete__tptz__CreatePresetTourResponse(struct soap *soap, _tptz__CreatePresetTourResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__CreatePresetTourResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__CreatePresetTour
#define SOAP_TYPE__tptz__CreatePresetTour (809)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__CreatePresetTour(struct soap*, const char*, int, const _tptz__CreatePresetTour *, const char*);
SOAP_FMAC3 _tptz__CreatePresetTour * SOAP_FMAC4 soap_in__tptz__CreatePresetTour(struct soap*, const char*, _tptz__CreatePresetTour *, const char*);

#ifndef soap_write__tptz__CreatePresetTour
#define soap_write__tptz__CreatePresetTour(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:CreatePresetTour", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__CreatePresetTour * SOAP_FMAC4 soap_get__tptz__CreatePresetTour(struct soap*, _tptz__CreatePresetTour *, const char*, const char*);

#ifndef soap_read__tptz__CreatePresetTour
#define soap_read__tptz__CreatePresetTour(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__CreatePresetTour(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__CreatePresetTour * SOAP_FMAC2 soap_instantiate__tptz__CreatePresetTour(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__CreatePresetTour * soap_new__tptz__CreatePresetTour(struct soap *soap, int n = -1) { return soap_instantiate__tptz__CreatePresetTour(soap, n, NULL, NULL, NULL); }

inline _tptz__CreatePresetTour * soap_new_req__tptz__CreatePresetTour(struct soap *soap, std::string& ProfileToken) { _tptz__CreatePresetTour *_p = soap_instantiate__tptz__CreatePresetTour(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__CreatePresetTour::ProfileToken = ProfileToken; } return _p; }

inline _tptz__CreatePresetTour * soap_new_set__tptz__CreatePresetTour(struct soap *soap, std::string& ProfileToken) { _tptz__CreatePresetTour *_p = soap_instantiate__tptz__CreatePresetTour(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__CreatePresetTour::ProfileToken = ProfileToken; } return _p; }

inline void soap_delete__tptz__CreatePresetTour(struct soap *soap, _tptz__CreatePresetTour *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__CreatePresetTour(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GetPresetTourOptionsResponse
#define SOAP_TYPE__tptz__GetPresetTourOptionsResponse (808)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GetPresetTourOptionsResponse(struct soap*, const char*, int, const _tptz__GetPresetTourOptionsResponse *, const char*);
SOAP_FMAC3 _tptz__GetPresetTourOptionsResponse * SOAP_FMAC4 soap_in__tptz__GetPresetTourOptionsResponse(struct soap*, const char*, _tptz__GetPresetTourOptionsResponse *, const char*);

#ifndef soap_write__tptz__GetPresetTourOptionsResponse
#define soap_write__tptz__GetPresetTourOptionsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GetPresetTourOptionsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetPresetTourOptionsResponse * SOAP_FMAC4 soap_get__tptz__GetPresetTourOptionsResponse(struct soap*, _tptz__GetPresetTourOptionsResponse *, const char*, const char*);

#ifndef soap_read__tptz__GetPresetTourOptionsResponse
#define soap_read__tptz__GetPresetTourOptionsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GetPresetTourOptionsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GetPresetTourOptionsResponse * SOAP_FMAC2 soap_instantiate__tptz__GetPresetTourOptionsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GetPresetTourOptionsResponse * soap_new__tptz__GetPresetTourOptionsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GetPresetTourOptionsResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__GetPresetTourOptionsResponse * soap_new_req__tptz__GetPresetTourOptionsResponse(struct soap *soap, tt__PTZPresetTourOptions *Options) { _tptz__GetPresetTourOptionsResponse *_p = soap_instantiate__tptz__GetPresetTourOptionsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetPresetTourOptionsResponse::Options = Options; } return _p; }

inline _tptz__GetPresetTourOptionsResponse * soap_new_set__tptz__GetPresetTourOptionsResponse(struct soap *soap, tt__PTZPresetTourOptions *Options) { _tptz__GetPresetTourOptionsResponse *_p = soap_instantiate__tptz__GetPresetTourOptionsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetPresetTourOptionsResponse::Options = Options; } return _p; }

inline void soap_delete__tptz__GetPresetTourOptionsResponse(struct soap *soap, _tptz__GetPresetTourOptionsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GetPresetTourOptionsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GetPresetTourOptions
#define SOAP_TYPE__tptz__GetPresetTourOptions (807)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GetPresetTourOptions(struct soap*, const char*, int, const _tptz__GetPresetTourOptions *, const char*);
SOAP_FMAC3 _tptz__GetPresetTourOptions * SOAP_FMAC4 soap_in__tptz__GetPresetTourOptions(struct soap*, const char*, _tptz__GetPresetTourOptions *, const char*);

#ifndef soap_write__tptz__GetPresetTourOptions
#define soap_write__tptz__GetPresetTourOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GetPresetTourOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetPresetTourOptions * SOAP_FMAC4 soap_get__tptz__GetPresetTourOptions(struct soap*, _tptz__GetPresetTourOptions *, const char*, const char*);

#ifndef soap_read__tptz__GetPresetTourOptions
#define soap_read__tptz__GetPresetTourOptions(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GetPresetTourOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GetPresetTourOptions * SOAP_FMAC2 soap_instantiate__tptz__GetPresetTourOptions(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GetPresetTourOptions * soap_new__tptz__GetPresetTourOptions(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GetPresetTourOptions(soap, n, NULL, NULL, NULL); }

inline _tptz__GetPresetTourOptions * soap_new_req__tptz__GetPresetTourOptions(struct soap *soap, std::string& ProfileToken) { _tptz__GetPresetTourOptions *_p = soap_instantiate__tptz__GetPresetTourOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetPresetTourOptions::ProfileToken = ProfileToken; } return _p; }

inline _tptz__GetPresetTourOptions * soap_new_set__tptz__GetPresetTourOptions(struct soap *soap, std::string& ProfileToken, std::string *PresetTourToken) { _tptz__GetPresetTourOptions *_p = soap_instantiate__tptz__GetPresetTourOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetPresetTourOptions::ProfileToken = ProfileToken; _p->_tptz__GetPresetTourOptions::PresetTourToken = PresetTourToken; } return _p; }

inline void soap_delete__tptz__GetPresetTourOptions(struct soap *soap, _tptz__GetPresetTourOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GetPresetTourOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GetPresetTourResponse
#define SOAP_TYPE__tptz__GetPresetTourResponse (806)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GetPresetTourResponse(struct soap*, const char*, int, const _tptz__GetPresetTourResponse *, const char*);
SOAP_FMAC3 _tptz__GetPresetTourResponse * SOAP_FMAC4 soap_in__tptz__GetPresetTourResponse(struct soap*, const char*, _tptz__GetPresetTourResponse *, const char*);

#ifndef soap_write__tptz__GetPresetTourResponse
#define soap_write__tptz__GetPresetTourResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GetPresetTourResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetPresetTourResponse * SOAP_FMAC4 soap_get__tptz__GetPresetTourResponse(struct soap*, _tptz__GetPresetTourResponse *, const char*, const char*);

#ifndef soap_read__tptz__GetPresetTourResponse
#define soap_read__tptz__GetPresetTourResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GetPresetTourResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GetPresetTourResponse * SOAP_FMAC2 soap_instantiate__tptz__GetPresetTourResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GetPresetTourResponse * soap_new__tptz__GetPresetTourResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GetPresetTourResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__GetPresetTourResponse * soap_new_req__tptz__GetPresetTourResponse(struct soap *soap, tt__PresetTour *PresetTour) { _tptz__GetPresetTourResponse *_p = soap_instantiate__tptz__GetPresetTourResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetPresetTourResponse::PresetTour = PresetTour; } return _p; }

inline _tptz__GetPresetTourResponse * soap_new_set__tptz__GetPresetTourResponse(struct soap *soap, tt__PresetTour *PresetTour) { _tptz__GetPresetTourResponse *_p = soap_instantiate__tptz__GetPresetTourResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetPresetTourResponse::PresetTour = PresetTour; } return _p; }

inline void soap_delete__tptz__GetPresetTourResponse(struct soap *soap, _tptz__GetPresetTourResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GetPresetTourResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GetPresetTour
#define SOAP_TYPE__tptz__GetPresetTour (805)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GetPresetTour(struct soap*, const char*, int, const _tptz__GetPresetTour *, const char*);
SOAP_FMAC3 _tptz__GetPresetTour * SOAP_FMAC4 soap_in__tptz__GetPresetTour(struct soap*, const char*, _tptz__GetPresetTour *, const char*);

#ifndef soap_write__tptz__GetPresetTour
#define soap_write__tptz__GetPresetTour(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GetPresetTour", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetPresetTour * SOAP_FMAC4 soap_get__tptz__GetPresetTour(struct soap*, _tptz__GetPresetTour *, const char*, const char*);

#ifndef soap_read__tptz__GetPresetTour
#define soap_read__tptz__GetPresetTour(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GetPresetTour(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GetPresetTour * SOAP_FMAC2 soap_instantiate__tptz__GetPresetTour(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GetPresetTour * soap_new__tptz__GetPresetTour(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GetPresetTour(soap, n, NULL, NULL, NULL); }

inline _tptz__GetPresetTour * soap_new_req__tptz__GetPresetTour(struct soap *soap, std::string& ProfileToken, std::string& PresetTourToken) { _tptz__GetPresetTour *_p = soap_instantiate__tptz__GetPresetTour(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetPresetTour::ProfileToken = ProfileToken; _p->_tptz__GetPresetTour::PresetTourToken = PresetTourToken; } return _p; }

inline _tptz__GetPresetTour * soap_new_set__tptz__GetPresetTour(struct soap *soap, std::string& ProfileToken, std::string& PresetTourToken) { _tptz__GetPresetTour *_p = soap_instantiate__tptz__GetPresetTour(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetPresetTour::ProfileToken = ProfileToken; _p->_tptz__GetPresetTour::PresetTourToken = PresetTourToken; } return _p; }

inline void soap_delete__tptz__GetPresetTour(struct soap *soap, _tptz__GetPresetTour *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GetPresetTour(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GetPresetToursResponse
#define SOAP_TYPE__tptz__GetPresetToursResponse (804)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GetPresetToursResponse(struct soap*, const char*, int, const _tptz__GetPresetToursResponse *, const char*);
SOAP_FMAC3 _tptz__GetPresetToursResponse * SOAP_FMAC4 soap_in__tptz__GetPresetToursResponse(struct soap*, const char*, _tptz__GetPresetToursResponse *, const char*);

#ifndef soap_write__tptz__GetPresetToursResponse
#define soap_write__tptz__GetPresetToursResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GetPresetToursResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetPresetToursResponse * SOAP_FMAC4 soap_get__tptz__GetPresetToursResponse(struct soap*, _tptz__GetPresetToursResponse *, const char*, const char*);

#ifndef soap_read__tptz__GetPresetToursResponse
#define soap_read__tptz__GetPresetToursResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GetPresetToursResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GetPresetToursResponse * SOAP_FMAC2 soap_instantiate__tptz__GetPresetToursResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GetPresetToursResponse * soap_new__tptz__GetPresetToursResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GetPresetToursResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__GetPresetToursResponse * soap_new_req__tptz__GetPresetToursResponse(struct soap *soap) { _tptz__GetPresetToursResponse *_p = soap_instantiate__tptz__GetPresetToursResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tptz__GetPresetToursResponse * soap_new_set__tptz__GetPresetToursResponse(struct soap *soap, std::vector<tt__PresetTour * >& PresetTour) { _tptz__GetPresetToursResponse *_p = soap_instantiate__tptz__GetPresetToursResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetPresetToursResponse::PresetTour = PresetTour; } return _p; }

inline void soap_delete__tptz__GetPresetToursResponse(struct soap *soap, _tptz__GetPresetToursResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GetPresetToursResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GetPresetTours
#define SOAP_TYPE__tptz__GetPresetTours (803)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GetPresetTours(struct soap*, const char*, int, const _tptz__GetPresetTours *, const char*);
SOAP_FMAC3 _tptz__GetPresetTours * SOAP_FMAC4 soap_in__tptz__GetPresetTours(struct soap*, const char*, _tptz__GetPresetTours *, const char*);

#ifndef soap_write__tptz__GetPresetTours
#define soap_write__tptz__GetPresetTours(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GetPresetTours", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetPresetTours * SOAP_FMAC4 soap_get__tptz__GetPresetTours(struct soap*, _tptz__GetPresetTours *, const char*, const char*);

#ifndef soap_read__tptz__GetPresetTours
#define soap_read__tptz__GetPresetTours(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GetPresetTours(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GetPresetTours * SOAP_FMAC2 soap_instantiate__tptz__GetPresetTours(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GetPresetTours * soap_new__tptz__GetPresetTours(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GetPresetTours(soap, n, NULL, NULL, NULL); }

inline _tptz__GetPresetTours * soap_new_req__tptz__GetPresetTours(struct soap *soap, std::string& ProfileToken) { _tptz__GetPresetTours *_p = soap_instantiate__tptz__GetPresetTours(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetPresetTours::ProfileToken = ProfileToken; } return _p; }

inline _tptz__GetPresetTours * soap_new_set__tptz__GetPresetTours(struct soap *soap, std::string& ProfileToken) { _tptz__GetPresetTours *_p = soap_instantiate__tptz__GetPresetTours(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetPresetTours::ProfileToken = ProfileToken; } return _p; }

inline void soap_delete__tptz__GetPresetTours(struct soap *soap, _tptz__GetPresetTours *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GetPresetTours(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__StopResponse
#define SOAP_TYPE__tptz__StopResponse (802)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__StopResponse(struct soap*, const char*, int, const _tptz__StopResponse *, const char*);
SOAP_FMAC3 _tptz__StopResponse * SOAP_FMAC4 soap_in__tptz__StopResponse(struct soap*, const char*, _tptz__StopResponse *, const char*);

#ifndef soap_write__tptz__StopResponse
#define soap_write__tptz__StopResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:StopResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__StopResponse * SOAP_FMAC4 soap_get__tptz__StopResponse(struct soap*, _tptz__StopResponse *, const char*, const char*);

#ifndef soap_read__tptz__StopResponse
#define soap_read__tptz__StopResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__StopResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__StopResponse * SOAP_FMAC2 soap_instantiate__tptz__StopResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__StopResponse * soap_new__tptz__StopResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__StopResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__StopResponse * soap_new_req__tptz__StopResponse(struct soap *soap) { _tptz__StopResponse *_p = soap_instantiate__tptz__StopResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tptz__StopResponse * soap_new_set__tptz__StopResponse(struct soap *soap) { _tptz__StopResponse *_p = soap_instantiate__tptz__StopResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tptz__StopResponse(struct soap *soap, _tptz__StopResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__StopResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__Stop
#define SOAP_TYPE__tptz__Stop (801)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__Stop(struct soap*, const char*, int, const _tptz__Stop *, const char*);
SOAP_FMAC3 _tptz__Stop * SOAP_FMAC4 soap_in__tptz__Stop(struct soap*, const char*, _tptz__Stop *, const char*);

#ifndef soap_write__tptz__Stop
#define soap_write__tptz__Stop(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:Stop", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__Stop * SOAP_FMAC4 soap_get__tptz__Stop(struct soap*, _tptz__Stop *, const char*, const char*);

#ifndef soap_read__tptz__Stop
#define soap_read__tptz__Stop(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__Stop(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__Stop * SOAP_FMAC2 soap_instantiate__tptz__Stop(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__Stop * soap_new__tptz__Stop(struct soap *soap, int n = -1) { return soap_instantiate__tptz__Stop(soap, n, NULL, NULL, NULL); }

inline _tptz__Stop * soap_new_req__tptz__Stop(struct soap *soap, std::string& ProfileToken) { _tptz__Stop *_p = soap_instantiate__tptz__Stop(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__Stop::ProfileToken = ProfileToken; } return _p; }

inline _tptz__Stop * soap_new_set__tptz__Stop(struct soap *soap, std::string& ProfileToken, bool *PanTilt, bool *Zoom) { _tptz__Stop *_p = soap_instantiate__tptz__Stop(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__Stop::ProfileToken = ProfileToken; _p->_tptz__Stop::PanTilt = PanTilt; _p->_tptz__Stop::Zoom = Zoom; } return _p; }

inline void soap_delete__tptz__Stop(struct soap *soap, _tptz__Stop *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__Stop(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__AbsoluteMoveResponse
#define SOAP_TYPE__tptz__AbsoluteMoveResponse (800)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__AbsoluteMoveResponse(struct soap*, const char*, int, const _tptz__AbsoluteMoveResponse *, const char*);
SOAP_FMAC3 _tptz__AbsoluteMoveResponse * SOAP_FMAC4 soap_in__tptz__AbsoluteMoveResponse(struct soap*, const char*, _tptz__AbsoluteMoveResponse *, const char*);

#ifndef soap_write__tptz__AbsoluteMoveResponse
#define soap_write__tptz__AbsoluteMoveResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:AbsoluteMoveResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__AbsoluteMoveResponse * SOAP_FMAC4 soap_get__tptz__AbsoluteMoveResponse(struct soap*, _tptz__AbsoluteMoveResponse *, const char*, const char*);

#ifndef soap_read__tptz__AbsoluteMoveResponse
#define soap_read__tptz__AbsoluteMoveResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__AbsoluteMoveResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__AbsoluteMoveResponse * SOAP_FMAC2 soap_instantiate__tptz__AbsoluteMoveResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__AbsoluteMoveResponse * soap_new__tptz__AbsoluteMoveResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__AbsoluteMoveResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__AbsoluteMoveResponse * soap_new_req__tptz__AbsoluteMoveResponse(struct soap *soap) { _tptz__AbsoluteMoveResponse *_p = soap_instantiate__tptz__AbsoluteMoveResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tptz__AbsoluteMoveResponse * soap_new_set__tptz__AbsoluteMoveResponse(struct soap *soap) { _tptz__AbsoluteMoveResponse *_p = soap_instantiate__tptz__AbsoluteMoveResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tptz__AbsoluteMoveResponse(struct soap *soap, _tptz__AbsoluteMoveResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__AbsoluteMoveResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__AbsoluteMove
#define SOAP_TYPE__tptz__AbsoluteMove (799)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__AbsoluteMove(struct soap*, const char*, int, const _tptz__AbsoluteMove *, const char*);
SOAP_FMAC3 _tptz__AbsoluteMove * SOAP_FMAC4 soap_in__tptz__AbsoluteMove(struct soap*, const char*, _tptz__AbsoluteMove *, const char*);

#ifndef soap_write__tptz__AbsoluteMove
#define soap_write__tptz__AbsoluteMove(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:AbsoluteMove", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__AbsoluteMove * SOAP_FMAC4 soap_get__tptz__AbsoluteMove(struct soap*, _tptz__AbsoluteMove *, const char*, const char*);

#ifndef soap_read__tptz__AbsoluteMove
#define soap_read__tptz__AbsoluteMove(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__AbsoluteMove(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__AbsoluteMove * SOAP_FMAC2 soap_instantiate__tptz__AbsoluteMove(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__AbsoluteMove * soap_new__tptz__AbsoluteMove(struct soap *soap, int n = -1) { return soap_instantiate__tptz__AbsoluteMove(soap, n, NULL, NULL, NULL); }

inline _tptz__AbsoluteMove * soap_new_req__tptz__AbsoluteMove(struct soap *soap, std::string& ProfileToken, tt__PTZVector *Position) { _tptz__AbsoluteMove *_p = soap_instantiate__tptz__AbsoluteMove(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__AbsoluteMove::ProfileToken = ProfileToken; _p->_tptz__AbsoluteMove::Position = Position; } return _p; }

inline _tptz__AbsoluteMove * soap_new_set__tptz__AbsoluteMove(struct soap *soap, std::string& ProfileToken, tt__PTZVector *Position, tt__PTZSpeed *Speed) { _tptz__AbsoluteMove *_p = soap_instantiate__tptz__AbsoluteMove(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__AbsoluteMove::ProfileToken = ProfileToken; _p->_tptz__AbsoluteMove::Position = Position; _p->_tptz__AbsoluteMove::Speed = Speed; } return _p; }

inline void soap_delete__tptz__AbsoluteMove(struct soap *soap, _tptz__AbsoluteMove *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__AbsoluteMove(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__RelativeMoveResponse
#define SOAP_TYPE__tptz__RelativeMoveResponse (798)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__RelativeMoveResponse(struct soap*, const char*, int, const _tptz__RelativeMoveResponse *, const char*);
SOAP_FMAC3 _tptz__RelativeMoveResponse * SOAP_FMAC4 soap_in__tptz__RelativeMoveResponse(struct soap*, const char*, _tptz__RelativeMoveResponse *, const char*);

#ifndef soap_write__tptz__RelativeMoveResponse
#define soap_write__tptz__RelativeMoveResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:RelativeMoveResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__RelativeMoveResponse * SOAP_FMAC4 soap_get__tptz__RelativeMoveResponse(struct soap*, _tptz__RelativeMoveResponse *, const char*, const char*);

#ifndef soap_read__tptz__RelativeMoveResponse
#define soap_read__tptz__RelativeMoveResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__RelativeMoveResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__RelativeMoveResponse * SOAP_FMAC2 soap_instantiate__tptz__RelativeMoveResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__RelativeMoveResponse * soap_new__tptz__RelativeMoveResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__RelativeMoveResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__RelativeMoveResponse * soap_new_req__tptz__RelativeMoveResponse(struct soap *soap) { _tptz__RelativeMoveResponse *_p = soap_instantiate__tptz__RelativeMoveResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tptz__RelativeMoveResponse * soap_new_set__tptz__RelativeMoveResponse(struct soap *soap) { _tptz__RelativeMoveResponse *_p = soap_instantiate__tptz__RelativeMoveResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tptz__RelativeMoveResponse(struct soap *soap, _tptz__RelativeMoveResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__RelativeMoveResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__RelativeMove
#define SOAP_TYPE__tptz__RelativeMove (797)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__RelativeMove(struct soap*, const char*, int, const _tptz__RelativeMove *, const char*);
SOAP_FMAC3 _tptz__RelativeMove * SOAP_FMAC4 soap_in__tptz__RelativeMove(struct soap*, const char*, _tptz__RelativeMove *, const char*);

#ifndef soap_write__tptz__RelativeMove
#define soap_write__tptz__RelativeMove(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:RelativeMove", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__RelativeMove * SOAP_FMAC4 soap_get__tptz__RelativeMove(struct soap*, _tptz__RelativeMove *, const char*, const char*);

#ifndef soap_read__tptz__RelativeMove
#define soap_read__tptz__RelativeMove(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__RelativeMove(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__RelativeMove * SOAP_FMAC2 soap_instantiate__tptz__RelativeMove(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__RelativeMove * soap_new__tptz__RelativeMove(struct soap *soap, int n = -1) { return soap_instantiate__tptz__RelativeMove(soap, n, NULL, NULL, NULL); }

inline _tptz__RelativeMove * soap_new_req__tptz__RelativeMove(struct soap *soap, std::string& ProfileToken, tt__PTZVector *Translation) { _tptz__RelativeMove *_p = soap_instantiate__tptz__RelativeMove(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__RelativeMove::ProfileToken = ProfileToken; _p->_tptz__RelativeMove::Translation = Translation; } return _p; }

inline _tptz__RelativeMove * soap_new_set__tptz__RelativeMove(struct soap *soap, std::string& ProfileToken, tt__PTZVector *Translation, tt__PTZSpeed *Speed) { _tptz__RelativeMove *_p = soap_instantiate__tptz__RelativeMove(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__RelativeMove::ProfileToken = ProfileToken; _p->_tptz__RelativeMove::Translation = Translation; _p->_tptz__RelativeMove::Speed = Speed; } return _p; }

inline void soap_delete__tptz__RelativeMove(struct soap *soap, _tptz__RelativeMove *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__RelativeMove(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__ContinuousMoveResponse
#define SOAP_TYPE__tptz__ContinuousMoveResponse (796)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__ContinuousMoveResponse(struct soap*, const char*, int, const _tptz__ContinuousMoveResponse *, const char*);
SOAP_FMAC3 _tptz__ContinuousMoveResponse * SOAP_FMAC4 soap_in__tptz__ContinuousMoveResponse(struct soap*, const char*, _tptz__ContinuousMoveResponse *, const char*);

#ifndef soap_write__tptz__ContinuousMoveResponse
#define soap_write__tptz__ContinuousMoveResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:ContinuousMoveResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__ContinuousMoveResponse * SOAP_FMAC4 soap_get__tptz__ContinuousMoveResponse(struct soap*, _tptz__ContinuousMoveResponse *, const char*, const char*);

#ifndef soap_read__tptz__ContinuousMoveResponse
#define soap_read__tptz__ContinuousMoveResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__ContinuousMoveResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__ContinuousMoveResponse * SOAP_FMAC2 soap_instantiate__tptz__ContinuousMoveResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__ContinuousMoveResponse * soap_new__tptz__ContinuousMoveResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__ContinuousMoveResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__ContinuousMoveResponse * soap_new_req__tptz__ContinuousMoveResponse(struct soap *soap) { _tptz__ContinuousMoveResponse *_p = soap_instantiate__tptz__ContinuousMoveResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tptz__ContinuousMoveResponse * soap_new_set__tptz__ContinuousMoveResponse(struct soap *soap) { _tptz__ContinuousMoveResponse *_p = soap_instantiate__tptz__ContinuousMoveResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tptz__ContinuousMoveResponse(struct soap *soap, _tptz__ContinuousMoveResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__ContinuousMoveResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__ContinuousMove
#define SOAP_TYPE__tptz__ContinuousMove (795)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__ContinuousMove(struct soap*, const char*, int, const _tptz__ContinuousMove *, const char*);
SOAP_FMAC3 _tptz__ContinuousMove * SOAP_FMAC4 soap_in__tptz__ContinuousMove(struct soap*, const char*, _tptz__ContinuousMove *, const char*);

#ifndef soap_write__tptz__ContinuousMove
#define soap_write__tptz__ContinuousMove(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:ContinuousMove", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__ContinuousMove * SOAP_FMAC4 soap_get__tptz__ContinuousMove(struct soap*, _tptz__ContinuousMove *, const char*, const char*);

#ifndef soap_read__tptz__ContinuousMove
#define soap_read__tptz__ContinuousMove(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__ContinuousMove(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__ContinuousMove * SOAP_FMAC2 soap_instantiate__tptz__ContinuousMove(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__ContinuousMove * soap_new__tptz__ContinuousMove(struct soap *soap, int n = -1) { return soap_instantiate__tptz__ContinuousMove(soap, n, NULL, NULL, NULL); }

inline _tptz__ContinuousMove * soap_new_req__tptz__ContinuousMove(struct soap *soap, std::string& ProfileToken, tt__PTZSpeed *Velocity) { _tptz__ContinuousMove *_p = soap_instantiate__tptz__ContinuousMove(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__ContinuousMove::ProfileToken = ProfileToken; _p->_tptz__ContinuousMove::Velocity = Velocity; } return _p; }

inline _tptz__ContinuousMove * soap_new_set__tptz__ContinuousMove(struct soap *soap, std::string& ProfileToken, tt__PTZSpeed *Velocity, LONG64 *Timeout) { _tptz__ContinuousMove *_p = soap_instantiate__tptz__ContinuousMove(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__ContinuousMove::ProfileToken = ProfileToken; _p->_tptz__ContinuousMove::Velocity = Velocity; _p->_tptz__ContinuousMove::Timeout = Timeout; } return _p; }

inline void soap_delete__tptz__ContinuousMove(struct soap *soap, _tptz__ContinuousMove *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__ContinuousMove(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__SetHomePositionResponse
#define SOAP_TYPE__tptz__SetHomePositionResponse (794)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__SetHomePositionResponse(struct soap*, const char*, int, const _tptz__SetHomePositionResponse *, const char*);
SOAP_FMAC3 _tptz__SetHomePositionResponse * SOAP_FMAC4 soap_in__tptz__SetHomePositionResponse(struct soap*, const char*, _tptz__SetHomePositionResponse *, const char*);

#ifndef soap_write__tptz__SetHomePositionResponse
#define soap_write__tptz__SetHomePositionResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:SetHomePositionResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__SetHomePositionResponse * SOAP_FMAC4 soap_get__tptz__SetHomePositionResponse(struct soap*, _tptz__SetHomePositionResponse *, const char*, const char*);

#ifndef soap_read__tptz__SetHomePositionResponse
#define soap_read__tptz__SetHomePositionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__SetHomePositionResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__SetHomePositionResponse * SOAP_FMAC2 soap_instantiate__tptz__SetHomePositionResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__SetHomePositionResponse * soap_new__tptz__SetHomePositionResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__SetHomePositionResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__SetHomePositionResponse * soap_new_req__tptz__SetHomePositionResponse(struct soap *soap) { _tptz__SetHomePositionResponse *_p = soap_instantiate__tptz__SetHomePositionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tptz__SetHomePositionResponse * soap_new_set__tptz__SetHomePositionResponse(struct soap *soap) { _tptz__SetHomePositionResponse *_p = soap_instantiate__tptz__SetHomePositionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tptz__SetHomePositionResponse(struct soap *soap, _tptz__SetHomePositionResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__SetHomePositionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__SetHomePosition
#define SOAP_TYPE__tptz__SetHomePosition (793)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__SetHomePosition(struct soap*, const char*, int, const _tptz__SetHomePosition *, const char*);
SOAP_FMAC3 _tptz__SetHomePosition * SOAP_FMAC4 soap_in__tptz__SetHomePosition(struct soap*, const char*, _tptz__SetHomePosition *, const char*);

#ifndef soap_write__tptz__SetHomePosition
#define soap_write__tptz__SetHomePosition(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:SetHomePosition", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__SetHomePosition * SOAP_FMAC4 soap_get__tptz__SetHomePosition(struct soap*, _tptz__SetHomePosition *, const char*, const char*);

#ifndef soap_read__tptz__SetHomePosition
#define soap_read__tptz__SetHomePosition(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__SetHomePosition(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__SetHomePosition * SOAP_FMAC2 soap_instantiate__tptz__SetHomePosition(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__SetHomePosition * soap_new__tptz__SetHomePosition(struct soap *soap, int n = -1) { return soap_instantiate__tptz__SetHomePosition(soap, n, NULL, NULL, NULL); }

inline _tptz__SetHomePosition * soap_new_req__tptz__SetHomePosition(struct soap *soap, std::string& ProfileToken) { _tptz__SetHomePosition *_p = soap_instantiate__tptz__SetHomePosition(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__SetHomePosition::ProfileToken = ProfileToken; } return _p; }

inline _tptz__SetHomePosition * soap_new_set__tptz__SetHomePosition(struct soap *soap, std::string& ProfileToken) { _tptz__SetHomePosition *_p = soap_instantiate__tptz__SetHomePosition(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__SetHomePosition::ProfileToken = ProfileToken; } return _p; }

inline void soap_delete__tptz__SetHomePosition(struct soap *soap, _tptz__SetHomePosition *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__SetHomePosition(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GotoHomePositionResponse
#define SOAP_TYPE__tptz__GotoHomePositionResponse (792)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GotoHomePositionResponse(struct soap*, const char*, int, const _tptz__GotoHomePositionResponse *, const char*);
SOAP_FMAC3 _tptz__GotoHomePositionResponse * SOAP_FMAC4 soap_in__tptz__GotoHomePositionResponse(struct soap*, const char*, _tptz__GotoHomePositionResponse *, const char*);

#ifndef soap_write__tptz__GotoHomePositionResponse
#define soap_write__tptz__GotoHomePositionResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GotoHomePositionResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GotoHomePositionResponse * SOAP_FMAC4 soap_get__tptz__GotoHomePositionResponse(struct soap*, _tptz__GotoHomePositionResponse *, const char*, const char*);

#ifndef soap_read__tptz__GotoHomePositionResponse
#define soap_read__tptz__GotoHomePositionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GotoHomePositionResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GotoHomePositionResponse * SOAP_FMAC2 soap_instantiate__tptz__GotoHomePositionResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GotoHomePositionResponse * soap_new__tptz__GotoHomePositionResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GotoHomePositionResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__GotoHomePositionResponse * soap_new_req__tptz__GotoHomePositionResponse(struct soap *soap) { _tptz__GotoHomePositionResponse *_p = soap_instantiate__tptz__GotoHomePositionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tptz__GotoHomePositionResponse * soap_new_set__tptz__GotoHomePositionResponse(struct soap *soap) { _tptz__GotoHomePositionResponse *_p = soap_instantiate__tptz__GotoHomePositionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tptz__GotoHomePositionResponse(struct soap *soap, _tptz__GotoHomePositionResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GotoHomePositionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GotoHomePosition
#define SOAP_TYPE__tptz__GotoHomePosition (791)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GotoHomePosition(struct soap*, const char*, int, const _tptz__GotoHomePosition *, const char*);
SOAP_FMAC3 _tptz__GotoHomePosition * SOAP_FMAC4 soap_in__tptz__GotoHomePosition(struct soap*, const char*, _tptz__GotoHomePosition *, const char*);

#ifndef soap_write__tptz__GotoHomePosition
#define soap_write__tptz__GotoHomePosition(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GotoHomePosition", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GotoHomePosition * SOAP_FMAC4 soap_get__tptz__GotoHomePosition(struct soap*, _tptz__GotoHomePosition *, const char*, const char*);

#ifndef soap_read__tptz__GotoHomePosition
#define soap_read__tptz__GotoHomePosition(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GotoHomePosition(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GotoHomePosition * SOAP_FMAC2 soap_instantiate__tptz__GotoHomePosition(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GotoHomePosition * soap_new__tptz__GotoHomePosition(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GotoHomePosition(soap, n, NULL, NULL, NULL); }

inline _tptz__GotoHomePosition * soap_new_req__tptz__GotoHomePosition(struct soap *soap, std::string& ProfileToken) { _tptz__GotoHomePosition *_p = soap_instantiate__tptz__GotoHomePosition(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GotoHomePosition::ProfileToken = ProfileToken; } return _p; }

inline _tptz__GotoHomePosition * soap_new_set__tptz__GotoHomePosition(struct soap *soap, std::string& ProfileToken, tt__PTZSpeed *Speed) { _tptz__GotoHomePosition *_p = soap_instantiate__tptz__GotoHomePosition(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GotoHomePosition::ProfileToken = ProfileToken; _p->_tptz__GotoHomePosition::Speed = Speed; } return _p; }

inline void soap_delete__tptz__GotoHomePosition(struct soap *soap, _tptz__GotoHomePosition *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GotoHomePosition(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GetStatusResponse
#define SOAP_TYPE__tptz__GetStatusResponse (790)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GetStatusResponse(struct soap*, const char*, int, const _tptz__GetStatusResponse *, const char*);
SOAP_FMAC3 _tptz__GetStatusResponse * SOAP_FMAC4 soap_in__tptz__GetStatusResponse(struct soap*, const char*, _tptz__GetStatusResponse *, const char*);

#ifndef soap_write__tptz__GetStatusResponse
#define soap_write__tptz__GetStatusResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GetStatusResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetStatusResponse * SOAP_FMAC4 soap_get__tptz__GetStatusResponse(struct soap*, _tptz__GetStatusResponse *, const char*, const char*);

#ifndef soap_read__tptz__GetStatusResponse
#define soap_read__tptz__GetStatusResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GetStatusResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GetStatusResponse * SOAP_FMAC2 soap_instantiate__tptz__GetStatusResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GetStatusResponse * soap_new__tptz__GetStatusResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GetStatusResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__GetStatusResponse * soap_new_req__tptz__GetStatusResponse(struct soap *soap, tt__PTZStatus *PTZStatus) { _tptz__GetStatusResponse *_p = soap_instantiate__tptz__GetStatusResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetStatusResponse::PTZStatus = PTZStatus; } return _p; }

inline _tptz__GetStatusResponse * soap_new_set__tptz__GetStatusResponse(struct soap *soap, tt__PTZStatus *PTZStatus) { _tptz__GetStatusResponse *_p = soap_instantiate__tptz__GetStatusResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetStatusResponse::PTZStatus = PTZStatus; } return _p; }

inline void soap_delete__tptz__GetStatusResponse(struct soap *soap, _tptz__GetStatusResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GetStatusResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GetStatus
#define SOAP_TYPE__tptz__GetStatus (789)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GetStatus(struct soap*, const char*, int, const _tptz__GetStatus *, const char*);
SOAP_FMAC3 _tptz__GetStatus * SOAP_FMAC4 soap_in__tptz__GetStatus(struct soap*, const char*, _tptz__GetStatus *, const char*);

#ifndef soap_write__tptz__GetStatus
#define soap_write__tptz__GetStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GetStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetStatus * SOAP_FMAC4 soap_get__tptz__GetStatus(struct soap*, _tptz__GetStatus *, const char*, const char*);

#ifndef soap_read__tptz__GetStatus
#define soap_read__tptz__GetStatus(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GetStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GetStatus * SOAP_FMAC2 soap_instantiate__tptz__GetStatus(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GetStatus * soap_new__tptz__GetStatus(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GetStatus(soap, n, NULL, NULL, NULL); }

inline _tptz__GetStatus * soap_new_req__tptz__GetStatus(struct soap *soap, std::string& ProfileToken) { _tptz__GetStatus *_p = soap_instantiate__tptz__GetStatus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetStatus::ProfileToken = ProfileToken; } return _p; }

inline _tptz__GetStatus * soap_new_set__tptz__GetStatus(struct soap *soap, std::string& ProfileToken) { _tptz__GetStatus *_p = soap_instantiate__tptz__GetStatus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetStatus::ProfileToken = ProfileToken; } return _p; }

inline void soap_delete__tptz__GetStatus(struct soap *soap, _tptz__GetStatus *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GetStatus(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GotoPresetResponse
#define SOAP_TYPE__tptz__GotoPresetResponse (788)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GotoPresetResponse(struct soap*, const char*, int, const _tptz__GotoPresetResponse *, const char*);
SOAP_FMAC3 _tptz__GotoPresetResponse * SOAP_FMAC4 soap_in__tptz__GotoPresetResponse(struct soap*, const char*, _tptz__GotoPresetResponse *, const char*);

#ifndef soap_write__tptz__GotoPresetResponse
#define soap_write__tptz__GotoPresetResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GotoPresetResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GotoPresetResponse * SOAP_FMAC4 soap_get__tptz__GotoPresetResponse(struct soap*, _tptz__GotoPresetResponse *, const char*, const char*);

#ifndef soap_read__tptz__GotoPresetResponse
#define soap_read__tptz__GotoPresetResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GotoPresetResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GotoPresetResponse * SOAP_FMAC2 soap_instantiate__tptz__GotoPresetResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GotoPresetResponse * soap_new__tptz__GotoPresetResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GotoPresetResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__GotoPresetResponse * soap_new_req__tptz__GotoPresetResponse(struct soap *soap) { _tptz__GotoPresetResponse *_p = soap_instantiate__tptz__GotoPresetResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tptz__GotoPresetResponse * soap_new_set__tptz__GotoPresetResponse(struct soap *soap) { _tptz__GotoPresetResponse *_p = soap_instantiate__tptz__GotoPresetResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tptz__GotoPresetResponse(struct soap *soap, _tptz__GotoPresetResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GotoPresetResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GotoPreset
#define SOAP_TYPE__tptz__GotoPreset (787)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GotoPreset(struct soap*, const char*, int, const _tptz__GotoPreset *, const char*);
SOAP_FMAC3 _tptz__GotoPreset * SOAP_FMAC4 soap_in__tptz__GotoPreset(struct soap*, const char*, _tptz__GotoPreset *, const char*);

#ifndef soap_write__tptz__GotoPreset
#define soap_write__tptz__GotoPreset(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GotoPreset", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GotoPreset * SOAP_FMAC4 soap_get__tptz__GotoPreset(struct soap*, _tptz__GotoPreset *, const char*, const char*);

#ifndef soap_read__tptz__GotoPreset
#define soap_read__tptz__GotoPreset(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GotoPreset(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GotoPreset * SOAP_FMAC2 soap_instantiate__tptz__GotoPreset(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GotoPreset * soap_new__tptz__GotoPreset(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GotoPreset(soap, n, NULL, NULL, NULL); }

inline _tptz__GotoPreset * soap_new_req__tptz__GotoPreset(struct soap *soap, std::string& ProfileToken, std::string& PresetToken) { _tptz__GotoPreset *_p = soap_instantiate__tptz__GotoPreset(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GotoPreset::ProfileToken = ProfileToken; _p->_tptz__GotoPreset::PresetToken = PresetToken; } return _p; }

inline _tptz__GotoPreset * soap_new_set__tptz__GotoPreset(struct soap *soap, std::string& ProfileToken, std::string& PresetToken, tt__PTZSpeed *Speed) { _tptz__GotoPreset *_p = soap_instantiate__tptz__GotoPreset(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GotoPreset::ProfileToken = ProfileToken; _p->_tptz__GotoPreset::PresetToken = PresetToken; _p->_tptz__GotoPreset::Speed = Speed; } return _p; }

inline void soap_delete__tptz__GotoPreset(struct soap *soap, _tptz__GotoPreset *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GotoPreset(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__RemovePresetResponse
#define SOAP_TYPE__tptz__RemovePresetResponse (786)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__RemovePresetResponse(struct soap*, const char*, int, const _tptz__RemovePresetResponse *, const char*);
SOAP_FMAC3 _tptz__RemovePresetResponse * SOAP_FMAC4 soap_in__tptz__RemovePresetResponse(struct soap*, const char*, _tptz__RemovePresetResponse *, const char*);

#ifndef soap_write__tptz__RemovePresetResponse
#define soap_write__tptz__RemovePresetResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:RemovePresetResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__RemovePresetResponse * SOAP_FMAC4 soap_get__tptz__RemovePresetResponse(struct soap*, _tptz__RemovePresetResponse *, const char*, const char*);

#ifndef soap_read__tptz__RemovePresetResponse
#define soap_read__tptz__RemovePresetResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__RemovePresetResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__RemovePresetResponse * SOAP_FMAC2 soap_instantiate__tptz__RemovePresetResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__RemovePresetResponse * soap_new__tptz__RemovePresetResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__RemovePresetResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__RemovePresetResponse * soap_new_req__tptz__RemovePresetResponse(struct soap *soap) { _tptz__RemovePresetResponse *_p = soap_instantiate__tptz__RemovePresetResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tptz__RemovePresetResponse * soap_new_set__tptz__RemovePresetResponse(struct soap *soap) { _tptz__RemovePresetResponse *_p = soap_instantiate__tptz__RemovePresetResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tptz__RemovePresetResponse(struct soap *soap, _tptz__RemovePresetResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__RemovePresetResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__RemovePreset
#define SOAP_TYPE__tptz__RemovePreset (785)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__RemovePreset(struct soap*, const char*, int, const _tptz__RemovePreset *, const char*);
SOAP_FMAC3 _tptz__RemovePreset * SOAP_FMAC4 soap_in__tptz__RemovePreset(struct soap*, const char*, _tptz__RemovePreset *, const char*);

#ifndef soap_write__tptz__RemovePreset
#define soap_write__tptz__RemovePreset(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:RemovePreset", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__RemovePreset * SOAP_FMAC4 soap_get__tptz__RemovePreset(struct soap*, _tptz__RemovePreset *, const char*, const char*);

#ifndef soap_read__tptz__RemovePreset
#define soap_read__tptz__RemovePreset(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__RemovePreset(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__RemovePreset * SOAP_FMAC2 soap_instantiate__tptz__RemovePreset(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__RemovePreset * soap_new__tptz__RemovePreset(struct soap *soap, int n = -1) { return soap_instantiate__tptz__RemovePreset(soap, n, NULL, NULL, NULL); }

inline _tptz__RemovePreset * soap_new_req__tptz__RemovePreset(struct soap *soap, std::string& ProfileToken, std::string& PresetToken) { _tptz__RemovePreset *_p = soap_instantiate__tptz__RemovePreset(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__RemovePreset::ProfileToken = ProfileToken; _p->_tptz__RemovePreset::PresetToken = PresetToken; } return _p; }

inline _tptz__RemovePreset * soap_new_set__tptz__RemovePreset(struct soap *soap, std::string& ProfileToken, std::string& PresetToken) { _tptz__RemovePreset *_p = soap_instantiate__tptz__RemovePreset(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__RemovePreset::ProfileToken = ProfileToken; _p->_tptz__RemovePreset::PresetToken = PresetToken; } return _p; }

inline void soap_delete__tptz__RemovePreset(struct soap *soap, _tptz__RemovePreset *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__RemovePreset(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__SetPresetResponse
#define SOAP_TYPE__tptz__SetPresetResponse (784)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__SetPresetResponse(struct soap*, const char*, int, const _tptz__SetPresetResponse *, const char*);
SOAP_FMAC3 _tptz__SetPresetResponse * SOAP_FMAC4 soap_in__tptz__SetPresetResponse(struct soap*, const char*, _tptz__SetPresetResponse *, const char*);

#ifndef soap_write__tptz__SetPresetResponse
#define soap_write__tptz__SetPresetResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:SetPresetResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__SetPresetResponse * SOAP_FMAC4 soap_get__tptz__SetPresetResponse(struct soap*, _tptz__SetPresetResponse *, const char*, const char*);

#ifndef soap_read__tptz__SetPresetResponse
#define soap_read__tptz__SetPresetResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__SetPresetResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__SetPresetResponse * SOAP_FMAC2 soap_instantiate__tptz__SetPresetResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__SetPresetResponse * soap_new__tptz__SetPresetResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__SetPresetResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__SetPresetResponse * soap_new_req__tptz__SetPresetResponse(struct soap *soap, std::string& PresetToken) { _tptz__SetPresetResponse *_p = soap_instantiate__tptz__SetPresetResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__SetPresetResponse::PresetToken = PresetToken; } return _p; }

inline _tptz__SetPresetResponse * soap_new_set__tptz__SetPresetResponse(struct soap *soap, std::string& PresetToken) { _tptz__SetPresetResponse *_p = soap_instantiate__tptz__SetPresetResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__SetPresetResponse::PresetToken = PresetToken; } return _p; }

inline void soap_delete__tptz__SetPresetResponse(struct soap *soap, _tptz__SetPresetResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__SetPresetResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__SetPreset
#define SOAP_TYPE__tptz__SetPreset (783)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__SetPreset(struct soap*, const char*, int, const _tptz__SetPreset *, const char*);
SOAP_FMAC3 _tptz__SetPreset * SOAP_FMAC4 soap_in__tptz__SetPreset(struct soap*, const char*, _tptz__SetPreset *, const char*);

#ifndef soap_write__tptz__SetPreset
#define soap_write__tptz__SetPreset(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:SetPreset", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__SetPreset * SOAP_FMAC4 soap_get__tptz__SetPreset(struct soap*, _tptz__SetPreset *, const char*, const char*);

#ifndef soap_read__tptz__SetPreset
#define soap_read__tptz__SetPreset(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__SetPreset(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__SetPreset * SOAP_FMAC2 soap_instantiate__tptz__SetPreset(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__SetPreset * soap_new__tptz__SetPreset(struct soap *soap, int n = -1) { return soap_instantiate__tptz__SetPreset(soap, n, NULL, NULL, NULL); }

inline _tptz__SetPreset * soap_new_req__tptz__SetPreset(struct soap *soap, std::string& ProfileToken) { _tptz__SetPreset *_p = soap_instantiate__tptz__SetPreset(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__SetPreset::ProfileToken = ProfileToken; } return _p; }

inline _tptz__SetPreset * soap_new_set__tptz__SetPreset(struct soap *soap, std::string& ProfileToken, std::string *PresetName, std::string *PresetToken) { _tptz__SetPreset *_p = soap_instantiate__tptz__SetPreset(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__SetPreset::ProfileToken = ProfileToken; _p->_tptz__SetPreset::PresetName = PresetName; _p->_tptz__SetPreset::PresetToken = PresetToken; } return _p; }

inline void soap_delete__tptz__SetPreset(struct soap *soap, _tptz__SetPreset *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__SetPreset(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GetPresetsResponse
#define SOAP_TYPE__tptz__GetPresetsResponse (782)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GetPresetsResponse(struct soap*, const char*, int, const _tptz__GetPresetsResponse *, const char*);
SOAP_FMAC3 _tptz__GetPresetsResponse * SOAP_FMAC4 soap_in__tptz__GetPresetsResponse(struct soap*, const char*, _tptz__GetPresetsResponse *, const char*);

#ifndef soap_write__tptz__GetPresetsResponse
#define soap_write__tptz__GetPresetsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GetPresetsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetPresetsResponse * SOAP_FMAC4 soap_get__tptz__GetPresetsResponse(struct soap*, _tptz__GetPresetsResponse *, const char*, const char*);

#ifndef soap_read__tptz__GetPresetsResponse
#define soap_read__tptz__GetPresetsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GetPresetsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GetPresetsResponse * SOAP_FMAC2 soap_instantiate__tptz__GetPresetsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GetPresetsResponse * soap_new__tptz__GetPresetsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GetPresetsResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__GetPresetsResponse * soap_new_req__tptz__GetPresetsResponse(struct soap *soap) { _tptz__GetPresetsResponse *_p = soap_instantiate__tptz__GetPresetsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tptz__GetPresetsResponse * soap_new_set__tptz__GetPresetsResponse(struct soap *soap, std::vector<tt__PTZPreset * >& Preset) { _tptz__GetPresetsResponse *_p = soap_instantiate__tptz__GetPresetsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetPresetsResponse::Preset = Preset; } return _p; }

inline void soap_delete__tptz__GetPresetsResponse(struct soap *soap, _tptz__GetPresetsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GetPresetsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GetPresets
#define SOAP_TYPE__tptz__GetPresets (781)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GetPresets(struct soap*, const char*, int, const _tptz__GetPresets *, const char*);
SOAP_FMAC3 _tptz__GetPresets * SOAP_FMAC4 soap_in__tptz__GetPresets(struct soap*, const char*, _tptz__GetPresets *, const char*);

#ifndef soap_write__tptz__GetPresets
#define soap_write__tptz__GetPresets(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GetPresets", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetPresets * SOAP_FMAC4 soap_get__tptz__GetPresets(struct soap*, _tptz__GetPresets *, const char*, const char*);

#ifndef soap_read__tptz__GetPresets
#define soap_read__tptz__GetPresets(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GetPresets(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GetPresets * SOAP_FMAC2 soap_instantiate__tptz__GetPresets(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GetPresets * soap_new__tptz__GetPresets(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GetPresets(soap, n, NULL, NULL, NULL); }

inline _tptz__GetPresets * soap_new_req__tptz__GetPresets(struct soap *soap, std::string& ProfileToken) { _tptz__GetPresets *_p = soap_instantiate__tptz__GetPresets(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetPresets::ProfileToken = ProfileToken; } return _p; }

inline _tptz__GetPresets * soap_new_set__tptz__GetPresets(struct soap *soap, std::string& ProfileToken) { _tptz__GetPresets *_p = soap_instantiate__tptz__GetPresets(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetPresets::ProfileToken = ProfileToken; } return _p; }

inline void soap_delete__tptz__GetPresets(struct soap *soap, _tptz__GetPresets *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GetPresets(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__SendAuxiliaryCommandResponse
#define SOAP_TYPE__tptz__SendAuxiliaryCommandResponse (780)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__SendAuxiliaryCommandResponse(struct soap*, const char*, int, const _tptz__SendAuxiliaryCommandResponse *, const char*);
SOAP_FMAC3 _tptz__SendAuxiliaryCommandResponse * SOAP_FMAC4 soap_in__tptz__SendAuxiliaryCommandResponse(struct soap*, const char*, _tptz__SendAuxiliaryCommandResponse *, const char*);

#ifndef soap_write__tptz__SendAuxiliaryCommandResponse
#define soap_write__tptz__SendAuxiliaryCommandResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:SendAuxiliaryCommandResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__SendAuxiliaryCommandResponse * SOAP_FMAC4 soap_get__tptz__SendAuxiliaryCommandResponse(struct soap*, _tptz__SendAuxiliaryCommandResponse *, const char*, const char*);

#ifndef soap_read__tptz__SendAuxiliaryCommandResponse
#define soap_read__tptz__SendAuxiliaryCommandResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__SendAuxiliaryCommandResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__SendAuxiliaryCommandResponse * SOAP_FMAC2 soap_instantiate__tptz__SendAuxiliaryCommandResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__SendAuxiliaryCommandResponse * soap_new__tptz__SendAuxiliaryCommandResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__SendAuxiliaryCommandResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__SendAuxiliaryCommandResponse * soap_new_req__tptz__SendAuxiliaryCommandResponse(struct soap *soap, std::string& AuxiliaryResponse) { _tptz__SendAuxiliaryCommandResponse *_p = soap_instantiate__tptz__SendAuxiliaryCommandResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__SendAuxiliaryCommandResponse::AuxiliaryResponse = AuxiliaryResponse; } return _p; }

inline _tptz__SendAuxiliaryCommandResponse * soap_new_set__tptz__SendAuxiliaryCommandResponse(struct soap *soap, std::string& AuxiliaryResponse) { _tptz__SendAuxiliaryCommandResponse *_p = soap_instantiate__tptz__SendAuxiliaryCommandResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__SendAuxiliaryCommandResponse::AuxiliaryResponse = AuxiliaryResponse; } return _p; }

inline void soap_delete__tptz__SendAuxiliaryCommandResponse(struct soap *soap, _tptz__SendAuxiliaryCommandResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__SendAuxiliaryCommandResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__SendAuxiliaryCommand
#define SOAP_TYPE__tptz__SendAuxiliaryCommand (779)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__SendAuxiliaryCommand(struct soap*, const char*, int, const _tptz__SendAuxiliaryCommand *, const char*);
SOAP_FMAC3 _tptz__SendAuxiliaryCommand * SOAP_FMAC4 soap_in__tptz__SendAuxiliaryCommand(struct soap*, const char*, _tptz__SendAuxiliaryCommand *, const char*);

#ifndef soap_write__tptz__SendAuxiliaryCommand
#define soap_write__tptz__SendAuxiliaryCommand(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:SendAuxiliaryCommand", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__SendAuxiliaryCommand * SOAP_FMAC4 soap_get__tptz__SendAuxiliaryCommand(struct soap*, _tptz__SendAuxiliaryCommand *, const char*, const char*);

#ifndef soap_read__tptz__SendAuxiliaryCommand
#define soap_read__tptz__SendAuxiliaryCommand(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__SendAuxiliaryCommand(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__SendAuxiliaryCommand * SOAP_FMAC2 soap_instantiate__tptz__SendAuxiliaryCommand(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__SendAuxiliaryCommand * soap_new__tptz__SendAuxiliaryCommand(struct soap *soap, int n = -1) { return soap_instantiate__tptz__SendAuxiliaryCommand(soap, n, NULL, NULL, NULL); }

inline _tptz__SendAuxiliaryCommand * soap_new_req__tptz__SendAuxiliaryCommand(struct soap *soap, std::string& ProfileToken, std::string& AuxiliaryData) { _tptz__SendAuxiliaryCommand *_p = soap_instantiate__tptz__SendAuxiliaryCommand(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__SendAuxiliaryCommand::ProfileToken = ProfileToken; _p->_tptz__SendAuxiliaryCommand::AuxiliaryData = AuxiliaryData; } return _p; }

inline _tptz__SendAuxiliaryCommand * soap_new_set__tptz__SendAuxiliaryCommand(struct soap *soap, std::string& ProfileToken, std::string& AuxiliaryData) { _tptz__SendAuxiliaryCommand *_p = soap_instantiate__tptz__SendAuxiliaryCommand(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__SendAuxiliaryCommand::ProfileToken = ProfileToken; _p->_tptz__SendAuxiliaryCommand::AuxiliaryData = AuxiliaryData; } return _p; }

inline void soap_delete__tptz__SendAuxiliaryCommand(struct soap *soap, _tptz__SendAuxiliaryCommand *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__SendAuxiliaryCommand(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GetConfigurationOptionsResponse
#define SOAP_TYPE__tptz__GetConfigurationOptionsResponse (778)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GetConfigurationOptionsResponse(struct soap*, const char*, int, const _tptz__GetConfigurationOptionsResponse *, const char*);
SOAP_FMAC3 _tptz__GetConfigurationOptionsResponse * SOAP_FMAC4 soap_in__tptz__GetConfigurationOptionsResponse(struct soap*, const char*, _tptz__GetConfigurationOptionsResponse *, const char*);

#ifndef soap_write__tptz__GetConfigurationOptionsResponse
#define soap_write__tptz__GetConfigurationOptionsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GetConfigurationOptionsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetConfigurationOptionsResponse * SOAP_FMAC4 soap_get__tptz__GetConfigurationOptionsResponse(struct soap*, _tptz__GetConfigurationOptionsResponse *, const char*, const char*);

#ifndef soap_read__tptz__GetConfigurationOptionsResponse
#define soap_read__tptz__GetConfigurationOptionsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GetConfigurationOptionsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GetConfigurationOptionsResponse * SOAP_FMAC2 soap_instantiate__tptz__GetConfigurationOptionsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GetConfigurationOptionsResponse * soap_new__tptz__GetConfigurationOptionsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GetConfigurationOptionsResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__GetConfigurationOptionsResponse * soap_new_req__tptz__GetConfigurationOptionsResponse(struct soap *soap, tt__PTZConfigurationOptions *PTZConfigurationOptions) { _tptz__GetConfigurationOptionsResponse *_p = soap_instantiate__tptz__GetConfigurationOptionsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetConfigurationOptionsResponse::PTZConfigurationOptions = PTZConfigurationOptions; } return _p; }

inline _tptz__GetConfigurationOptionsResponse * soap_new_set__tptz__GetConfigurationOptionsResponse(struct soap *soap, tt__PTZConfigurationOptions *PTZConfigurationOptions) { _tptz__GetConfigurationOptionsResponse *_p = soap_instantiate__tptz__GetConfigurationOptionsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetConfigurationOptionsResponse::PTZConfigurationOptions = PTZConfigurationOptions; } return _p; }

inline void soap_delete__tptz__GetConfigurationOptionsResponse(struct soap *soap, _tptz__GetConfigurationOptionsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GetConfigurationOptionsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GetConfigurationOptions
#define SOAP_TYPE__tptz__GetConfigurationOptions (777)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GetConfigurationOptions(struct soap*, const char*, int, const _tptz__GetConfigurationOptions *, const char*);
SOAP_FMAC3 _tptz__GetConfigurationOptions * SOAP_FMAC4 soap_in__tptz__GetConfigurationOptions(struct soap*, const char*, _tptz__GetConfigurationOptions *, const char*);

#ifndef soap_write__tptz__GetConfigurationOptions
#define soap_write__tptz__GetConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GetConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetConfigurationOptions * SOAP_FMAC4 soap_get__tptz__GetConfigurationOptions(struct soap*, _tptz__GetConfigurationOptions *, const char*, const char*);

#ifndef soap_read__tptz__GetConfigurationOptions
#define soap_read__tptz__GetConfigurationOptions(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GetConfigurationOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GetConfigurationOptions * SOAP_FMAC2 soap_instantiate__tptz__GetConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GetConfigurationOptions * soap_new__tptz__GetConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GetConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline _tptz__GetConfigurationOptions * soap_new_req__tptz__GetConfigurationOptions(struct soap *soap, std::string& ConfigurationToken) { _tptz__GetConfigurationOptions *_p = soap_instantiate__tptz__GetConfigurationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetConfigurationOptions::ConfigurationToken = ConfigurationToken; } return _p; }

inline _tptz__GetConfigurationOptions * soap_new_set__tptz__GetConfigurationOptions(struct soap *soap, std::string& ConfigurationToken) { _tptz__GetConfigurationOptions *_p = soap_instantiate__tptz__GetConfigurationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetConfigurationOptions::ConfigurationToken = ConfigurationToken; } return _p; }

inline void soap_delete__tptz__GetConfigurationOptions(struct soap *soap, _tptz__GetConfigurationOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GetConfigurationOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__SetConfigurationResponse
#define SOAP_TYPE__tptz__SetConfigurationResponse (776)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__SetConfigurationResponse(struct soap*, const char*, int, const _tptz__SetConfigurationResponse *, const char*);
SOAP_FMAC3 _tptz__SetConfigurationResponse * SOAP_FMAC4 soap_in__tptz__SetConfigurationResponse(struct soap*, const char*, _tptz__SetConfigurationResponse *, const char*);

#ifndef soap_write__tptz__SetConfigurationResponse
#define soap_write__tptz__SetConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:SetConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__SetConfigurationResponse * SOAP_FMAC4 soap_get__tptz__SetConfigurationResponse(struct soap*, _tptz__SetConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tptz__SetConfigurationResponse
#define soap_read__tptz__SetConfigurationResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__SetConfigurationResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__SetConfigurationResponse * SOAP_FMAC2 soap_instantiate__tptz__SetConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__SetConfigurationResponse * soap_new__tptz__SetConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__SetConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__SetConfigurationResponse * soap_new_req__tptz__SetConfigurationResponse(struct soap *soap) { _tptz__SetConfigurationResponse *_p = soap_instantiate__tptz__SetConfigurationResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tptz__SetConfigurationResponse * soap_new_set__tptz__SetConfigurationResponse(struct soap *soap, __tptz__SetConfigurationResponse_sequence *__SetConfigurationResponse_sequence) { _tptz__SetConfigurationResponse *_p = soap_instantiate__tptz__SetConfigurationResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__SetConfigurationResponse::__SetConfigurationResponse_sequence = __SetConfigurationResponse_sequence; } return _p; }

inline void soap_delete__tptz__SetConfigurationResponse(struct soap *soap, _tptz__SetConfigurationResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__SetConfigurationResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__SetConfiguration
#define SOAP_TYPE__tptz__SetConfiguration (775)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__SetConfiguration(struct soap*, const char*, int, const _tptz__SetConfiguration *, const char*);
SOAP_FMAC3 _tptz__SetConfiguration * SOAP_FMAC4 soap_in__tptz__SetConfiguration(struct soap*, const char*, _tptz__SetConfiguration *, const char*);

#ifndef soap_write__tptz__SetConfiguration
#define soap_write__tptz__SetConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:SetConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__SetConfiguration * SOAP_FMAC4 soap_get__tptz__SetConfiguration(struct soap*, _tptz__SetConfiguration *, const char*, const char*);

#ifndef soap_read__tptz__SetConfiguration
#define soap_read__tptz__SetConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__SetConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__SetConfiguration * SOAP_FMAC2 soap_instantiate__tptz__SetConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__SetConfiguration * soap_new__tptz__SetConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tptz__SetConfiguration(soap, n, NULL, NULL, NULL); }

inline _tptz__SetConfiguration * soap_new_req__tptz__SetConfiguration(struct soap *soap, tt__PTZConfiguration *PTZConfiguration, bool ForcePersistence) { _tptz__SetConfiguration *_p = soap_instantiate__tptz__SetConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__SetConfiguration::PTZConfiguration = PTZConfiguration; _p->_tptz__SetConfiguration::ForcePersistence = ForcePersistence; } return _p; }

inline _tptz__SetConfiguration * soap_new_set__tptz__SetConfiguration(struct soap *soap, tt__PTZConfiguration *PTZConfiguration, bool ForcePersistence) { _tptz__SetConfiguration *_p = soap_instantiate__tptz__SetConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__SetConfiguration::PTZConfiguration = PTZConfiguration; _p->_tptz__SetConfiguration::ForcePersistence = ForcePersistence; } return _p; }

inline void soap_delete__tptz__SetConfiguration(struct soap *soap, _tptz__SetConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__SetConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GetConfigurationResponse
#define SOAP_TYPE__tptz__GetConfigurationResponse (774)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GetConfigurationResponse(struct soap*, const char*, int, const _tptz__GetConfigurationResponse *, const char*);
SOAP_FMAC3 _tptz__GetConfigurationResponse * SOAP_FMAC4 soap_in__tptz__GetConfigurationResponse(struct soap*, const char*, _tptz__GetConfigurationResponse *, const char*);

#ifndef soap_write__tptz__GetConfigurationResponse
#define soap_write__tptz__GetConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GetConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetConfigurationResponse * SOAP_FMAC4 soap_get__tptz__GetConfigurationResponse(struct soap*, _tptz__GetConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tptz__GetConfigurationResponse
#define soap_read__tptz__GetConfigurationResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GetConfigurationResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GetConfigurationResponse * SOAP_FMAC2 soap_instantiate__tptz__GetConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GetConfigurationResponse * soap_new__tptz__GetConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GetConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__GetConfigurationResponse * soap_new_req__tptz__GetConfigurationResponse(struct soap *soap, tt__PTZConfiguration *PTZConfiguration) { _tptz__GetConfigurationResponse *_p = soap_instantiate__tptz__GetConfigurationResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetConfigurationResponse::PTZConfiguration = PTZConfiguration; } return _p; }

inline _tptz__GetConfigurationResponse * soap_new_set__tptz__GetConfigurationResponse(struct soap *soap, tt__PTZConfiguration *PTZConfiguration) { _tptz__GetConfigurationResponse *_p = soap_instantiate__tptz__GetConfigurationResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetConfigurationResponse::PTZConfiguration = PTZConfiguration; } return _p; }

inline void soap_delete__tptz__GetConfigurationResponse(struct soap *soap, _tptz__GetConfigurationResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GetConfigurationResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GetConfiguration
#define SOAP_TYPE__tptz__GetConfiguration (773)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GetConfiguration(struct soap*, const char*, int, const _tptz__GetConfiguration *, const char*);
SOAP_FMAC3 _tptz__GetConfiguration * SOAP_FMAC4 soap_in__tptz__GetConfiguration(struct soap*, const char*, _tptz__GetConfiguration *, const char*);

#ifndef soap_write__tptz__GetConfiguration
#define soap_write__tptz__GetConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GetConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetConfiguration * SOAP_FMAC4 soap_get__tptz__GetConfiguration(struct soap*, _tptz__GetConfiguration *, const char*, const char*);

#ifndef soap_read__tptz__GetConfiguration
#define soap_read__tptz__GetConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GetConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GetConfiguration * SOAP_FMAC2 soap_instantiate__tptz__GetConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GetConfiguration * soap_new__tptz__GetConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GetConfiguration(soap, n, NULL, NULL, NULL); }

inline _tptz__GetConfiguration * soap_new_req__tptz__GetConfiguration(struct soap *soap, std::string& PTZConfigurationToken) { _tptz__GetConfiguration *_p = soap_instantiate__tptz__GetConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetConfiguration::PTZConfigurationToken = PTZConfigurationToken; } return _p; }

inline _tptz__GetConfiguration * soap_new_set__tptz__GetConfiguration(struct soap *soap, std::string& PTZConfigurationToken) { _tptz__GetConfiguration *_p = soap_instantiate__tptz__GetConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetConfiguration::PTZConfigurationToken = PTZConfigurationToken; } return _p; }

inline void soap_delete__tptz__GetConfiguration(struct soap *soap, _tptz__GetConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GetConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GetConfigurationsResponse
#define SOAP_TYPE__tptz__GetConfigurationsResponse (772)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GetConfigurationsResponse(struct soap*, const char*, int, const _tptz__GetConfigurationsResponse *, const char*);
SOAP_FMAC3 _tptz__GetConfigurationsResponse * SOAP_FMAC4 soap_in__tptz__GetConfigurationsResponse(struct soap*, const char*, _tptz__GetConfigurationsResponse *, const char*);

#ifndef soap_write__tptz__GetConfigurationsResponse
#define soap_write__tptz__GetConfigurationsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GetConfigurationsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetConfigurationsResponse * SOAP_FMAC4 soap_get__tptz__GetConfigurationsResponse(struct soap*, _tptz__GetConfigurationsResponse *, const char*, const char*);

#ifndef soap_read__tptz__GetConfigurationsResponse
#define soap_read__tptz__GetConfigurationsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GetConfigurationsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GetConfigurationsResponse * SOAP_FMAC2 soap_instantiate__tptz__GetConfigurationsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GetConfigurationsResponse * soap_new__tptz__GetConfigurationsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GetConfigurationsResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__GetConfigurationsResponse * soap_new_req__tptz__GetConfigurationsResponse(struct soap *soap) { _tptz__GetConfigurationsResponse *_p = soap_instantiate__tptz__GetConfigurationsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tptz__GetConfigurationsResponse * soap_new_set__tptz__GetConfigurationsResponse(struct soap *soap, std::vector<tt__PTZConfiguration * >& PTZConfiguration) { _tptz__GetConfigurationsResponse *_p = soap_instantiate__tptz__GetConfigurationsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetConfigurationsResponse::PTZConfiguration = PTZConfiguration; } return _p; }

inline void soap_delete__tptz__GetConfigurationsResponse(struct soap *soap, _tptz__GetConfigurationsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GetConfigurationsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GetConfigurations
#define SOAP_TYPE__tptz__GetConfigurations (771)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GetConfigurations(struct soap*, const char*, int, const _tptz__GetConfigurations *, const char*);
SOAP_FMAC3 _tptz__GetConfigurations * SOAP_FMAC4 soap_in__tptz__GetConfigurations(struct soap*, const char*, _tptz__GetConfigurations *, const char*);

#ifndef soap_write__tptz__GetConfigurations
#define soap_write__tptz__GetConfigurations(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GetConfigurations", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetConfigurations * SOAP_FMAC4 soap_get__tptz__GetConfigurations(struct soap*, _tptz__GetConfigurations *, const char*, const char*);

#ifndef soap_read__tptz__GetConfigurations
#define soap_read__tptz__GetConfigurations(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GetConfigurations(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GetConfigurations * SOAP_FMAC2 soap_instantiate__tptz__GetConfigurations(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GetConfigurations * soap_new__tptz__GetConfigurations(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GetConfigurations(soap, n, NULL, NULL, NULL); }

inline _tptz__GetConfigurations * soap_new_req__tptz__GetConfigurations(struct soap *soap) { _tptz__GetConfigurations *_p = soap_instantiate__tptz__GetConfigurations(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tptz__GetConfigurations * soap_new_set__tptz__GetConfigurations(struct soap *soap) { _tptz__GetConfigurations *_p = soap_instantiate__tptz__GetConfigurations(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tptz__GetConfigurations(struct soap *soap, _tptz__GetConfigurations *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GetConfigurations(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GetNodeResponse
#define SOAP_TYPE__tptz__GetNodeResponse (770)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GetNodeResponse(struct soap*, const char*, int, const _tptz__GetNodeResponse *, const char*);
SOAP_FMAC3 _tptz__GetNodeResponse * SOAP_FMAC4 soap_in__tptz__GetNodeResponse(struct soap*, const char*, _tptz__GetNodeResponse *, const char*);

#ifndef soap_write__tptz__GetNodeResponse
#define soap_write__tptz__GetNodeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GetNodeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetNodeResponse * SOAP_FMAC4 soap_get__tptz__GetNodeResponse(struct soap*, _tptz__GetNodeResponse *, const char*, const char*);

#ifndef soap_read__tptz__GetNodeResponse
#define soap_read__tptz__GetNodeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GetNodeResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GetNodeResponse * SOAP_FMAC2 soap_instantiate__tptz__GetNodeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GetNodeResponse * soap_new__tptz__GetNodeResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GetNodeResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__GetNodeResponse * soap_new_req__tptz__GetNodeResponse(struct soap *soap, tt__PTZNode *PTZNode) { _tptz__GetNodeResponse *_p = soap_instantiate__tptz__GetNodeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetNodeResponse::PTZNode = PTZNode; } return _p; }

inline _tptz__GetNodeResponse * soap_new_set__tptz__GetNodeResponse(struct soap *soap, tt__PTZNode *PTZNode) { _tptz__GetNodeResponse *_p = soap_instantiate__tptz__GetNodeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetNodeResponse::PTZNode = PTZNode; } return _p; }

inline void soap_delete__tptz__GetNodeResponse(struct soap *soap, _tptz__GetNodeResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GetNodeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GetNode
#define SOAP_TYPE__tptz__GetNode (769)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GetNode(struct soap*, const char*, int, const _tptz__GetNode *, const char*);
SOAP_FMAC3 _tptz__GetNode * SOAP_FMAC4 soap_in__tptz__GetNode(struct soap*, const char*, _tptz__GetNode *, const char*);

#ifndef soap_write__tptz__GetNode
#define soap_write__tptz__GetNode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GetNode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetNode * SOAP_FMAC4 soap_get__tptz__GetNode(struct soap*, _tptz__GetNode *, const char*, const char*);

#ifndef soap_read__tptz__GetNode
#define soap_read__tptz__GetNode(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GetNode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GetNode * SOAP_FMAC2 soap_instantiate__tptz__GetNode(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GetNode * soap_new__tptz__GetNode(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GetNode(soap, n, NULL, NULL, NULL); }

inline _tptz__GetNode * soap_new_req__tptz__GetNode(struct soap *soap, std::string& NodeToken) { _tptz__GetNode *_p = soap_instantiate__tptz__GetNode(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetNode::NodeToken = NodeToken; } return _p; }

inline _tptz__GetNode * soap_new_set__tptz__GetNode(struct soap *soap, std::string& NodeToken) { _tptz__GetNode *_p = soap_instantiate__tptz__GetNode(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetNode::NodeToken = NodeToken; } return _p; }

inline void soap_delete__tptz__GetNode(struct soap *soap, _tptz__GetNode *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GetNode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GetNodesResponse
#define SOAP_TYPE__tptz__GetNodesResponse (768)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GetNodesResponse(struct soap*, const char*, int, const _tptz__GetNodesResponse *, const char*);
SOAP_FMAC3 _tptz__GetNodesResponse * SOAP_FMAC4 soap_in__tptz__GetNodesResponse(struct soap*, const char*, _tptz__GetNodesResponse *, const char*);

#ifndef soap_write__tptz__GetNodesResponse
#define soap_write__tptz__GetNodesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GetNodesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetNodesResponse * SOAP_FMAC4 soap_get__tptz__GetNodesResponse(struct soap*, _tptz__GetNodesResponse *, const char*, const char*);

#ifndef soap_read__tptz__GetNodesResponse
#define soap_read__tptz__GetNodesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GetNodesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GetNodesResponse * SOAP_FMAC2 soap_instantiate__tptz__GetNodesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GetNodesResponse * soap_new__tptz__GetNodesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GetNodesResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__GetNodesResponse * soap_new_req__tptz__GetNodesResponse(struct soap *soap) { _tptz__GetNodesResponse *_p = soap_instantiate__tptz__GetNodesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tptz__GetNodesResponse * soap_new_set__tptz__GetNodesResponse(struct soap *soap, std::vector<tt__PTZNode * >& PTZNode) { _tptz__GetNodesResponse *_p = soap_instantiate__tptz__GetNodesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetNodesResponse::PTZNode = PTZNode; } return _p; }

inline void soap_delete__tptz__GetNodesResponse(struct soap *soap, _tptz__GetNodesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GetNodesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GetNodes
#define SOAP_TYPE__tptz__GetNodes (767)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GetNodes(struct soap*, const char*, int, const _tptz__GetNodes *, const char*);
SOAP_FMAC3 _tptz__GetNodes * SOAP_FMAC4 soap_in__tptz__GetNodes(struct soap*, const char*, _tptz__GetNodes *, const char*);

#ifndef soap_write__tptz__GetNodes
#define soap_write__tptz__GetNodes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GetNodes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetNodes * SOAP_FMAC4 soap_get__tptz__GetNodes(struct soap*, _tptz__GetNodes *, const char*, const char*);

#ifndef soap_read__tptz__GetNodes
#define soap_read__tptz__GetNodes(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GetNodes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GetNodes * SOAP_FMAC2 soap_instantiate__tptz__GetNodes(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GetNodes * soap_new__tptz__GetNodes(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GetNodes(soap, n, NULL, NULL, NULL); }

inline _tptz__GetNodes * soap_new_req__tptz__GetNodes(struct soap *soap) { _tptz__GetNodes *_p = soap_instantiate__tptz__GetNodes(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tptz__GetNodes * soap_new_set__tptz__GetNodes(struct soap *soap) { _tptz__GetNodes *_p = soap_instantiate__tptz__GetNodes(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tptz__GetNodes(struct soap *soap, _tptz__GetNodes *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GetNodes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GetServiceCapabilitiesResponse
#define SOAP_TYPE__tptz__GetServiceCapabilitiesResponse (766)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GetServiceCapabilitiesResponse(struct soap*, const char*, int, const _tptz__GetServiceCapabilitiesResponse *, const char*);
SOAP_FMAC3 _tptz__GetServiceCapabilitiesResponse * SOAP_FMAC4 soap_in__tptz__GetServiceCapabilitiesResponse(struct soap*, const char*, _tptz__GetServiceCapabilitiesResponse *, const char*);

#ifndef soap_write__tptz__GetServiceCapabilitiesResponse
#define soap_write__tptz__GetServiceCapabilitiesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GetServiceCapabilitiesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetServiceCapabilitiesResponse * SOAP_FMAC4 soap_get__tptz__GetServiceCapabilitiesResponse(struct soap*, _tptz__GetServiceCapabilitiesResponse *, const char*, const char*);

#ifndef soap_read__tptz__GetServiceCapabilitiesResponse
#define soap_read__tptz__GetServiceCapabilitiesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GetServiceCapabilitiesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GetServiceCapabilitiesResponse * SOAP_FMAC2 soap_instantiate__tptz__GetServiceCapabilitiesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GetServiceCapabilitiesResponse * soap_new__tptz__GetServiceCapabilitiesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GetServiceCapabilitiesResponse(soap, n, NULL, NULL, NULL); }

inline _tptz__GetServiceCapabilitiesResponse * soap_new_req__tptz__GetServiceCapabilitiesResponse(struct soap *soap, tptz__Capabilities *Capabilities) { _tptz__GetServiceCapabilitiesResponse *_p = soap_instantiate__tptz__GetServiceCapabilitiesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetServiceCapabilitiesResponse::Capabilities = Capabilities; } return _p; }

inline _tptz__GetServiceCapabilitiesResponse * soap_new_set__tptz__GetServiceCapabilitiesResponse(struct soap *soap, tptz__Capabilities *Capabilities) { _tptz__GetServiceCapabilitiesResponse *_p = soap_instantiate__tptz__GetServiceCapabilitiesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tptz__GetServiceCapabilitiesResponse::Capabilities = Capabilities; } return _p; }

inline void soap_delete__tptz__GetServiceCapabilitiesResponse(struct soap *soap, _tptz__GetServiceCapabilitiesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GetServiceCapabilitiesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tptz__GetServiceCapabilities
#define SOAP_TYPE__tptz__GetServiceCapabilities (765)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tptz__GetServiceCapabilities(struct soap*, const char*, int, const _tptz__GetServiceCapabilities *, const char*);
SOAP_FMAC3 _tptz__GetServiceCapabilities * SOAP_FMAC4 soap_in__tptz__GetServiceCapabilities(struct soap*, const char*, _tptz__GetServiceCapabilities *, const char*);

#ifndef soap_write__tptz__GetServiceCapabilities
#define soap_write__tptz__GetServiceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:GetServiceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetServiceCapabilities * SOAP_FMAC4 soap_get__tptz__GetServiceCapabilities(struct soap*, _tptz__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_read__tptz__GetServiceCapabilities
#define soap_read__tptz__GetServiceCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get__tptz__GetServiceCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tptz__GetServiceCapabilities * SOAP_FMAC2 soap_instantiate__tptz__GetServiceCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline _tptz__GetServiceCapabilities * soap_new__tptz__GetServiceCapabilities(struct soap *soap, int n = -1) { return soap_instantiate__tptz__GetServiceCapabilities(soap, n, NULL, NULL, NULL); }

inline _tptz__GetServiceCapabilities * soap_new_req__tptz__GetServiceCapabilities(struct soap *soap) { _tptz__GetServiceCapabilities *_p = soap_instantiate__tptz__GetServiceCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tptz__GetServiceCapabilities * soap_new_set__tptz__GetServiceCapabilities(struct soap *soap) { _tptz__GetServiceCapabilities *_p = soap_instantiate__tptz__GetServiceCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tptz__GetServiceCapabilities(struct soap *soap, _tptz__GetServiceCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tptz__GetServiceCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tptz__Capabilities
#define SOAP_TYPE_tptz__Capabilities (764)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tptz__Capabilities(struct soap*, const char*, int, const tptz__Capabilities *, const char*);
SOAP_FMAC3 tptz__Capabilities * SOAP_FMAC4 soap_in_tptz__Capabilities(struct soap*, const char*, tptz__Capabilities *, const char*);

#ifndef soap_write_tptz__Capabilities
#define soap_write_tptz__Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tptz:Capabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tptz__Capabilities * SOAP_FMAC4 soap_get_tptz__Capabilities(struct soap*, tptz__Capabilities *, const char*, const char*);

#ifndef soap_read_tptz__Capabilities
#define soap_read_tptz__Capabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tptz__Capabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tptz__Capabilities * SOAP_FMAC2 soap_instantiate_tptz__Capabilities(struct soap*, int, const char*, const char*, size_t*);

inline tptz__Capabilities * soap_new_tptz__Capabilities(struct soap *soap, int n = -1) { return soap_instantiate_tptz__Capabilities(soap, n, NULL, NULL, NULL); }

inline tptz__Capabilities * soap_new_req_tptz__Capabilities(struct soap *soap) { tptz__Capabilities *_p = soap_instantiate_tptz__Capabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tptz__Capabilities * soap_new_set_tptz__Capabilities(struct soap *soap, bool *EFlip, bool *Reverse, bool *GetCompatibleConfigurations) { tptz__Capabilities *_p = soap_instantiate_tptz__Capabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tptz__Capabilities::EFlip = EFlip; _p->tptz__Capabilities::Reverse = Reverse; _p->tptz__Capabilities::GetCompatibleConfigurations = GetCompatibleConfigurations; } return _p; }

inline void soap_delete_tptz__Capabilities(struct soap *soap, tptz__Capabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tptz__Capabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wstop__TopicSetType
#define SOAP_TYPE_wstop__TopicSetType (763)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__TopicSetType(struct soap*, const char*, int, const wstop__TopicSetType *, const char*);
SOAP_FMAC3 wstop__TopicSetType * SOAP_FMAC4 soap_in_wstop__TopicSetType(struct soap*, const char*, wstop__TopicSetType *, const char*);

#ifndef soap_write_wstop__TopicSetType
#define soap_write_wstop__TopicSetType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wstop:TopicSetType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wstop__TopicSetType * SOAP_FMAC4 soap_get_wstop__TopicSetType(struct soap*, wstop__TopicSetType *, const char*, const char*);

#ifndef soap_read_wstop__TopicSetType
#define soap_read_wstop__TopicSetType(soap, data) ( soap_begin_recv(soap) || !soap_get_wstop__TopicSetType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wstop__TopicSetType * SOAP_FMAC2 soap_instantiate_wstop__TopicSetType(struct soap*, int, const char*, const char*, size_t*);

inline wstop__TopicSetType * soap_new_wstop__TopicSetType(struct soap *soap, int n = -1) { return soap_instantiate_wstop__TopicSetType(soap, n, NULL, NULL, NULL); }

inline wstop__TopicSetType * soap_new_req_wstop__TopicSetType(struct soap *soap) { wstop__TopicSetType *_p = soap_instantiate_wstop__TopicSetType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline wstop__TopicSetType * soap_new_set_wstop__TopicSetType(struct soap *soap, wstop__Documentation *documentation1) { wstop__TopicSetType *_p = soap_instantiate_wstop__TopicSetType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wstop__ExtensibleDocumented::documentation = documentation1; } return _p; }

inline void soap_delete_wstop__TopicSetType(struct soap *soap, wstop__TopicSetType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wstop__TopicSetType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wstop__TopicType
#define SOAP_TYPE_wstop__TopicType (762)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__TopicType(struct soap*, const char*, int, const wstop__TopicType *, const char*);
SOAP_FMAC3 wstop__TopicType * SOAP_FMAC4 soap_in_wstop__TopicType(struct soap*, const char*, wstop__TopicType *, const char*);

#ifndef soap_write_wstop__TopicType
#define soap_write_wstop__TopicType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wstop:TopicType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wstop__TopicType * SOAP_FMAC4 soap_get_wstop__TopicType(struct soap*, wstop__TopicType *, const char*, const char*);

#ifndef soap_read_wstop__TopicType
#define soap_read_wstop__TopicType(soap, data) ( soap_begin_recv(soap) || !soap_get_wstop__TopicType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wstop__TopicType * SOAP_FMAC2 soap_instantiate_wstop__TopicType(struct soap*, int, const char*, const char*, size_t*);

inline wstop__TopicType * soap_new_wstop__TopicType(struct soap *soap, int n = -1) { return soap_instantiate_wstop__TopicType(soap, n, NULL, NULL, NULL); }

inline wstop__TopicType * soap_new_req_wstop__TopicType(struct soap *soap, std::string& name) { wstop__TopicType *_p = soap_instantiate_wstop__TopicType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wstop__TopicType::name = name; } return _p; }

inline wstop__TopicType * soap_new_set_wstop__TopicType(struct soap *soap, wstop__QueryExpressionType *MessagePattern, std::vector<wstop__TopicType * >& Topic, std::string& name, std::string *messageTypes, bool final, wstop__Documentation *documentation1) { wstop__TopicType *_p = soap_instantiate_wstop__TopicType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wstop__TopicType::MessagePattern = MessagePattern; _p->wstop__TopicType::Topic = Topic; _p->wstop__TopicType::name = name; _p->wstop__TopicType::messageTypes = messageTypes; _p->wstop__TopicType::final = final; _p->wstop__ExtensibleDocumented::documentation = documentation1; } return _p; }

inline void soap_delete_wstop__TopicType(struct soap *soap, wstop__TopicType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wstop__TopicType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wstop__TopicNamespaceType
#define SOAP_TYPE_wstop__TopicNamespaceType (761)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__TopicNamespaceType(struct soap*, const char*, int, const wstop__TopicNamespaceType *, const char*);
SOAP_FMAC3 wstop__TopicNamespaceType * SOAP_FMAC4 soap_in_wstop__TopicNamespaceType(struct soap*, const char*, wstop__TopicNamespaceType *, const char*);

#ifndef soap_write_wstop__TopicNamespaceType
#define soap_write_wstop__TopicNamespaceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wstop:TopicNamespaceType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wstop__TopicNamespaceType * SOAP_FMAC4 soap_get_wstop__TopicNamespaceType(struct soap*, wstop__TopicNamespaceType *, const char*, const char*);

#ifndef soap_read_wstop__TopicNamespaceType
#define soap_read_wstop__TopicNamespaceType(soap, data) ( soap_begin_recv(soap) || !soap_get_wstop__TopicNamespaceType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wstop__TopicNamespaceType * SOAP_FMAC2 soap_instantiate_wstop__TopicNamespaceType(struct soap*, int, const char*, const char*, size_t*);

inline wstop__TopicNamespaceType * soap_new_wstop__TopicNamespaceType(struct soap *soap, int n = -1) { return soap_instantiate_wstop__TopicNamespaceType(soap, n, NULL, NULL, NULL); }

inline wstop__TopicNamespaceType * soap_new_req_wstop__TopicNamespaceType(struct soap *soap, std::string& targetNamespace) { wstop__TopicNamespaceType *_p = soap_instantiate_wstop__TopicNamespaceType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wstop__TopicNamespaceType::targetNamespace = targetNamespace; } return _p; }

inline wstop__TopicNamespaceType * soap_new_set_wstop__TopicNamespaceType(struct soap *soap, std::vector<_wstop__TopicNamespaceType_Topic >*Topic, std::string *name, std::string& targetNamespace, bool final, wstop__Documentation *documentation1) { wstop__TopicNamespaceType *_p = soap_instantiate_wstop__TopicNamespaceType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wstop__TopicNamespaceType::Topic = Topic; _p->wstop__TopicNamespaceType::name = name; _p->wstop__TopicNamespaceType::targetNamespace = targetNamespace; _p->wstop__TopicNamespaceType::final = final; _p->wstop__ExtensibleDocumented::documentation = documentation1; } return _p; }

inline void soap_delete_wstop__TopicNamespaceType(struct soap *soap, wstop__TopicNamespaceType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wstop__TopicNamespaceType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wstop__QueryExpressionType
#define SOAP_TYPE_wstop__QueryExpressionType (760)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__QueryExpressionType(struct soap*, const char*, int, const wstop__QueryExpressionType *, const char*);
SOAP_FMAC3 wstop__QueryExpressionType * SOAP_FMAC4 soap_in_wstop__QueryExpressionType(struct soap*, const char*, wstop__QueryExpressionType *, const char*);

#ifndef soap_write_wstop__QueryExpressionType
#define soap_write_wstop__QueryExpressionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wstop:QueryExpressionType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wstop__QueryExpressionType * SOAP_FMAC4 soap_get_wstop__QueryExpressionType(struct soap*, wstop__QueryExpressionType *, const char*, const char*);

#ifndef soap_read_wstop__QueryExpressionType
#define soap_read_wstop__QueryExpressionType(soap, data) ( soap_begin_recv(soap) || !soap_get_wstop__QueryExpressionType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wstop__QueryExpressionType * SOAP_FMAC2 soap_instantiate_wstop__QueryExpressionType(struct soap*, int, const char*, const char*, size_t*);

inline wstop__QueryExpressionType * soap_new_wstop__QueryExpressionType(struct soap *soap, int n = -1) { return soap_instantiate_wstop__QueryExpressionType(soap, n, NULL, NULL, NULL); }

inline wstop__QueryExpressionType * soap_new_req_wstop__QueryExpressionType(struct soap *soap, std::string& Dialect) { wstop__QueryExpressionType *_p = soap_instantiate_wstop__QueryExpressionType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wstop__QueryExpressionType::Dialect = Dialect; } return _p; }

inline wstop__QueryExpressionType * soap_new_set_wstop__QueryExpressionType(struct soap *soap, std::string& Dialect, char *__mixed) { wstop__QueryExpressionType *_p = soap_instantiate_wstop__QueryExpressionType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wstop__QueryExpressionType::Dialect = Dialect; _p->wstop__QueryExpressionType::__mixed = __mixed; } return _p; }

inline void soap_delete_wstop__QueryExpressionType(struct soap *soap, wstop__QueryExpressionType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wstop__QueryExpressionType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wstop__ExtensibleDocumented
#define SOAP_TYPE_wstop__ExtensibleDocumented (759)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__ExtensibleDocumented(struct soap*, const char*, int, const wstop__ExtensibleDocumented *, const char*);
SOAP_FMAC3 wstop__ExtensibleDocumented * SOAP_FMAC4 soap_in_wstop__ExtensibleDocumented(struct soap*, const char*, wstop__ExtensibleDocumented *, const char*);

#ifndef soap_write_wstop__ExtensibleDocumented
#define soap_write_wstop__ExtensibleDocumented(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wstop:ExtensibleDocumented", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wstop__ExtensibleDocumented * SOAP_FMAC4 soap_get_wstop__ExtensibleDocumented(struct soap*, wstop__ExtensibleDocumented *, const char*, const char*);

#ifndef soap_read_wstop__ExtensibleDocumented
#define soap_read_wstop__ExtensibleDocumented(soap, data) ( soap_begin_recv(soap) || !soap_get_wstop__ExtensibleDocumented(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wstop__ExtensibleDocumented * SOAP_FMAC2 soap_instantiate_wstop__ExtensibleDocumented(struct soap*, int, const char*, const char*, size_t*);

inline wstop__ExtensibleDocumented * soap_new_wstop__ExtensibleDocumented(struct soap *soap, int n = -1) { return soap_instantiate_wstop__ExtensibleDocumented(soap, n, NULL, NULL, NULL); }

inline wstop__ExtensibleDocumented * soap_new_req_wstop__ExtensibleDocumented(struct soap *soap) { wstop__ExtensibleDocumented *_p = soap_instantiate_wstop__ExtensibleDocumented(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline wstop__ExtensibleDocumented * soap_new_set_wstop__ExtensibleDocumented(struct soap *soap, wstop__Documentation *documentation) { wstop__ExtensibleDocumented *_p = soap_instantiate_wstop__ExtensibleDocumented(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wstop__ExtensibleDocumented::documentation = documentation; } return _p; }

inline void soap_delete_wstop__ExtensibleDocumented(struct soap *soap, wstop__ExtensibleDocumented *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wstop__ExtensibleDocumented(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wstop__Documentation
#define SOAP_TYPE_wstop__Documentation (758)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__Documentation(struct soap*, const char*, int, const wstop__Documentation *, const char*);
SOAP_FMAC3 wstop__Documentation * SOAP_FMAC4 soap_in_wstop__Documentation(struct soap*, const char*, wstop__Documentation *, const char*);

#ifndef soap_write_wstop__Documentation
#define soap_write_wstop__Documentation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wstop:Documentation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wstop__Documentation * SOAP_FMAC4 soap_get_wstop__Documentation(struct soap*, wstop__Documentation *, const char*, const char*);

#ifndef soap_read_wstop__Documentation
#define soap_read_wstop__Documentation(soap, data) ( soap_begin_recv(soap) || !soap_get_wstop__Documentation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wstop__Documentation * SOAP_FMAC2 soap_instantiate_wstop__Documentation(struct soap*, int, const char*, const char*, size_t*);

inline wstop__Documentation * soap_new_wstop__Documentation(struct soap *soap, int n = -1) { return soap_instantiate_wstop__Documentation(soap, n, NULL, NULL, NULL); }

inline wstop__Documentation * soap_new_req_wstop__Documentation(struct soap *soap) { wstop__Documentation *_p = soap_instantiate_wstop__Documentation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline wstop__Documentation * soap_new_set_wstop__Documentation(struct soap *soap, char *__mixed) { wstop__Documentation *_p = soap_instantiate_wstop__Documentation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wstop__Documentation::__mixed = __mixed; } return _p; }

inline void soap_delete_wstop__Documentation(struct soap *soap, wstop__Documentation *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wstop__Documentation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsrfbf__BaseFaultType
#define SOAP_TYPE_wsrfbf__BaseFaultType (757)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsrfbf__BaseFaultType(struct soap*, const char*, int, const wsrfbf__BaseFaultType *, const char*);
SOAP_FMAC3 wsrfbf__BaseFaultType * SOAP_FMAC4 soap_in_wsrfbf__BaseFaultType(struct soap*, const char*, wsrfbf__BaseFaultType *, const char*);

#ifndef soap_write_wsrfbf__BaseFaultType
#define soap_write_wsrfbf__BaseFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsrfbf:BaseFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsrfbf__BaseFaultType * SOAP_FMAC4 soap_get_wsrfbf__BaseFaultType(struct soap*, wsrfbf__BaseFaultType *, const char*, const char*);

#ifndef soap_read_wsrfbf__BaseFaultType
#define soap_read_wsrfbf__BaseFaultType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsrfbf__BaseFaultType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wsrfbf__BaseFaultType * SOAP_FMAC2 soap_instantiate_wsrfbf__BaseFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsrfbf__BaseFaultType * soap_new_wsrfbf__BaseFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsrfbf__BaseFaultType(soap, n, NULL, NULL, NULL); }

inline wsrfbf__BaseFaultType * soap_new_req_wsrfbf__BaseFaultType(struct soap *soap, time_t Timestamp) { wsrfbf__BaseFaultType *_p = soap_instantiate_wsrfbf__BaseFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp; } return _p; }

inline wsrfbf__BaseFaultType * soap_new_set_wsrfbf__BaseFaultType(struct soap *soap, time_t Timestamp, struct wsa5__EndpointReferenceType *Originator, _wsrfbf__BaseFaultType_ErrorCode *ErrorCode, std::vector<_wsrfbf__BaseFaultType_Description >*Description, _wsrfbf__BaseFaultType_FaultCause *FaultCause) { wsrfbf__BaseFaultType *_p = soap_instantiate_wsrfbf__BaseFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp; _p->wsrfbf__BaseFaultType::Originator = Originator; _p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode; _p->wsrfbf__BaseFaultType::Description = Description; _p->wsrfbf__BaseFaultType::FaultCause = FaultCause; } return _p; }

inline void soap_delete_wsrfbf__BaseFaultType(struct soap *soap, wsrfbf__BaseFaultType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsrfbf__BaseFaultType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsnt__ResumeSubscriptionResponse
#define SOAP_TYPE__wsnt__ResumeSubscriptionResponse (756)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__ResumeSubscriptionResponse(struct soap*, const char*, int, const _wsnt__ResumeSubscriptionResponse *, const char*);
SOAP_FMAC3 _wsnt__ResumeSubscriptionResponse * SOAP_FMAC4 soap_in__wsnt__ResumeSubscriptionResponse(struct soap*, const char*, _wsnt__ResumeSubscriptionResponse *, const char*);

#ifndef soap_write__wsnt__ResumeSubscriptionResponse
#define soap_write__wsnt__ResumeSubscriptionResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:ResumeSubscriptionResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__ResumeSubscriptionResponse * SOAP_FMAC4 soap_get__wsnt__ResumeSubscriptionResponse(struct soap*, _wsnt__ResumeSubscriptionResponse *, const char*, const char*);

#ifndef soap_read__wsnt__ResumeSubscriptionResponse
#define soap_read__wsnt__ResumeSubscriptionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__wsnt__ResumeSubscriptionResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsnt__ResumeSubscriptionResponse * SOAP_FMAC2 soap_instantiate__wsnt__ResumeSubscriptionResponse(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__ResumeSubscriptionResponse * soap_new__wsnt__ResumeSubscriptionResponse(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__ResumeSubscriptionResponse(soap, n, NULL, NULL, NULL); }

inline _wsnt__ResumeSubscriptionResponse * soap_new_req__wsnt__ResumeSubscriptionResponse(struct soap *soap) { _wsnt__ResumeSubscriptionResponse *_p = soap_instantiate__wsnt__ResumeSubscriptionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _wsnt__ResumeSubscriptionResponse * soap_new_set__wsnt__ResumeSubscriptionResponse(struct soap *soap) { _wsnt__ResumeSubscriptionResponse *_p = soap_instantiate__wsnt__ResumeSubscriptionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__wsnt__ResumeSubscriptionResponse(struct soap *soap, _wsnt__ResumeSubscriptionResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsnt__ResumeSubscriptionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsnt__ResumeSubscription
#define SOAP_TYPE__wsnt__ResumeSubscription (755)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__ResumeSubscription(struct soap*, const char*, int, const _wsnt__ResumeSubscription *, const char*);
SOAP_FMAC3 _wsnt__ResumeSubscription * SOAP_FMAC4 soap_in__wsnt__ResumeSubscription(struct soap*, const char*, _wsnt__ResumeSubscription *, const char*);

#ifndef soap_write__wsnt__ResumeSubscription
#define soap_write__wsnt__ResumeSubscription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:ResumeSubscription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__ResumeSubscription * SOAP_FMAC4 soap_get__wsnt__ResumeSubscription(struct soap*, _wsnt__ResumeSubscription *, const char*, const char*);

#ifndef soap_read__wsnt__ResumeSubscription
#define soap_read__wsnt__ResumeSubscription(soap, data) ( soap_begin_recv(soap) || !soap_get__wsnt__ResumeSubscription(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsnt__ResumeSubscription * SOAP_FMAC2 soap_instantiate__wsnt__ResumeSubscription(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__ResumeSubscription * soap_new__wsnt__ResumeSubscription(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__ResumeSubscription(soap, n, NULL, NULL, NULL); }

inline _wsnt__ResumeSubscription * soap_new_req__wsnt__ResumeSubscription(struct soap *soap) { _wsnt__ResumeSubscription *_p = soap_instantiate__wsnt__ResumeSubscription(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _wsnt__ResumeSubscription * soap_new_set__wsnt__ResumeSubscription(struct soap *soap) { _wsnt__ResumeSubscription *_p = soap_instantiate__wsnt__ResumeSubscription(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__wsnt__ResumeSubscription(struct soap *soap, _wsnt__ResumeSubscription *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsnt__ResumeSubscription(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsnt__PauseSubscriptionResponse
#define SOAP_TYPE__wsnt__PauseSubscriptionResponse (754)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__PauseSubscriptionResponse(struct soap*, const char*, int, const _wsnt__PauseSubscriptionResponse *, const char*);
SOAP_FMAC3 _wsnt__PauseSubscriptionResponse * SOAP_FMAC4 soap_in__wsnt__PauseSubscriptionResponse(struct soap*, const char*, _wsnt__PauseSubscriptionResponse *, const char*);

#ifndef soap_write__wsnt__PauseSubscriptionResponse
#define soap_write__wsnt__PauseSubscriptionResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:PauseSubscriptionResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__PauseSubscriptionResponse * SOAP_FMAC4 soap_get__wsnt__PauseSubscriptionResponse(struct soap*, _wsnt__PauseSubscriptionResponse *, const char*, const char*);

#ifndef soap_read__wsnt__PauseSubscriptionResponse
#define soap_read__wsnt__PauseSubscriptionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__wsnt__PauseSubscriptionResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsnt__PauseSubscriptionResponse * SOAP_FMAC2 soap_instantiate__wsnt__PauseSubscriptionResponse(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__PauseSubscriptionResponse * soap_new__wsnt__PauseSubscriptionResponse(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__PauseSubscriptionResponse(soap, n, NULL, NULL, NULL); }

inline _wsnt__PauseSubscriptionResponse * soap_new_req__wsnt__PauseSubscriptionResponse(struct soap *soap) { _wsnt__PauseSubscriptionResponse *_p = soap_instantiate__wsnt__PauseSubscriptionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _wsnt__PauseSubscriptionResponse * soap_new_set__wsnt__PauseSubscriptionResponse(struct soap *soap) { _wsnt__PauseSubscriptionResponse *_p = soap_instantiate__wsnt__PauseSubscriptionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__wsnt__PauseSubscriptionResponse(struct soap *soap, _wsnt__PauseSubscriptionResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsnt__PauseSubscriptionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsnt__PauseSubscription
#define SOAP_TYPE__wsnt__PauseSubscription (753)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__PauseSubscription(struct soap*, const char*, int, const _wsnt__PauseSubscription *, const char*);
SOAP_FMAC3 _wsnt__PauseSubscription * SOAP_FMAC4 soap_in__wsnt__PauseSubscription(struct soap*, const char*, _wsnt__PauseSubscription *, const char*);

#ifndef soap_write__wsnt__PauseSubscription
#define soap_write__wsnt__PauseSubscription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:PauseSubscription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__PauseSubscription * SOAP_FMAC4 soap_get__wsnt__PauseSubscription(struct soap*, _wsnt__PauseSubscription *, const char*, const char*);

#ifndef soap_read__wsnt__PauseSubscription
#define soap_read__wsnt__PauseSubscription(soap, data) ( soap_begin_recv(soap) || !soap_get__wsnt__PauseSubscription(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsnt__PauseSubscription * SOAP_FMAC2 soap_instantiate__wsnt__PauseSubscription(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__PauseSubscription * soap_new__wsnt__PauseSubscription(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__PauseSubscription(soap, n, NULL, NULL, NULL); }

inline _wsnt__PauseSubscription * soap_new_req__wsnt__PauseSubscription(struct soap *soap) { _wsnt__PauseSubscription *_p = soap_instantiate__wsnt__PauseSubscription(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _wsnt__PauseSubscription * soap_new_set__wsnt__PauseSubscription(struct soap *soap) { _wsnt__PauseSubscription *_p = soap_instantiate__wsnt__PauseSubscription(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__wsnt__PauseSubscription(struct soap *soap, _wsnt__PauseSubscription *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsnt__PauseSubscription(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsnt__UnsubscribeResponse
#define SOAP_TYPE__wsnt__UnsubscribeResponse (752)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnsubscribeResponse(struct soap*, const char*, int, const _wsnt__UnsubscribeResponse *, const char*);
SOAP_FMAC3 _wsnt__UnsubscribeResponse * SOAP_FMAC4 soap_in__wsnt__UnsubscribeResponse(struct soap*, const char*, _wsnt__UnsubscribeResponse *, const char*);

#ifndef soap_write__wsnt__UnsubscribeResponse
#define soap_write__wsnt__UnsubscribeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:UnsubscribeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__UnsubscribeResponse * SOAP_FMAC4 soap_get__wsnt__UnsubscribeResponse(struct soap*, _wsnt__UnsubscribeResponse *, const char*, const char*);

#ifndef soap_read__wsnt__UnsubscribeResponse
#define soap_read__wsnt__UnsubscribeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__wsnt__UnsubscribeResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsnt__UnsubscribeResponse * SOAP_FMAC2 soap_instantiate__wsnt__UnsubscribeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__UnsubscribeResponse * soap_new__wsnt__UnsubscribeResponse(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__UnsubscribeResponse(soap, n, NULL, NULL, NULL); }

inline _wsnt__UnsubscribeResponse * soap_new_req__wsnt__UnsubscribeResponse(struct soap *soap) { _wsnt__UnsubscribeResponse *_p = soap_instantiate__wsnt__UnsubscribeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _wsnt__UnsubscribeResponse * soap_new_set__wsnt__UnsubscribeResponse(struct soap *soap) { _wsnt__UnsubscribeResponse *_p = soap_instantiate__wsnt__UnsubscribeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__wsnt__UnsubscribeResponse(struct soap *soap, _wsnt__UnsubscribeResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsnt__UnsubscribeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsnt__Unsubscribe
#define SOAP_TYPE__wsnt__Unsubscribe (751)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__Unsubscribe(struct soap*, const char*, int, const _wsnt__Unsubscribe *, const char*);
SOAP_FMAC3 _wsnt__Unsubscribe * SOAP_FMAC4 soap_in__wsnt__Unsubscribe(struct soap*, const char*, _wsnt__Unsubscribe *, const char*);

#ifndef soap_write__wsnt__Unsubscribe
#define soap_write__wsnt__Unsubscribe(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:Unsubscribe", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__Unsubscribe * SOAP_FMAC4 soap_get__wsnt__Unsubscribe(struct soap*, _wsnt__Unsubscribe *, const char*, const char*);

#ifndef soap_read__wsnt__Unsubscribe
#define soap_read__wsnt__Unsubscribe(soap, data) ( soap_begin_recv(soap) || !soap_get__wsnt__Unsubscribe(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsnt__Unsubscribe * SOAP_FMAC2 soap_instantiate__wsnt__Unsubscribe(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__Unsubscribe * soap_new__wsnt__Unsubscribe(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__Unsubscribe(soap, n, NULL, NULL, NULL); }

inline _wsnt__Unsubscribe * soap_new_req__wsnt__Unsubscribe(struct soap *soap) { _wsnt__Unsubscribe *_p = soap_instantiate__wsnt__Unsubscribe(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _wsnt__Unsubscribe * soap_new_set__wsnt__Unsubscribe(struct soap *soap) { _wsnt__Unsubscribe *_p = soap_instantiate__wsnt__Unsubscribe(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__wsnt__Unsubscribe(struct soap *soap, _wsnt__Unsubscribe *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsnt__Unsubscribe(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsnt__RenewResponse
#define SOAP_TYPE__wsnt__RenewResponse (750)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__RenewResponse(struct soap*, const char*, int, const _wsnt__RenewResponse *, const char*);
SOAP_FMAC3 _wsnt__RenewResponse * SOAP_FMAC4 soap_in__wsnt__RenewResponse(struct soap*, const char*, _wsnt__RenewResponse *, const char*);

#ifndef soap_write__wsnt__RenewResponse
#define soap_write__wsnt__RenewResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:RenewResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__RenewResponse * SOAP_FMAC4 soap_get__wsnt__RenewResponse(struct soap*, _wsnt__RenewResponse *, const char*, const char*);

#ifndef soap_read__wsnt__RenewResponse
#define soap_read__wsnt__RenewResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__wsnt__RenewResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsnt__RenewResponse * SOAP_FMAC2 soap_instantiate__wsnt__RenewResponse(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__RenewResponse * soap_new__wsnt__RenewResponse(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__RenewResponse(soap, n, NULL, NULL, NULL); }

inline _wsnt__RenewResponse * soap_new_req__wsnt__RenewResponse(struct soap *soap, time_t TerminationTime) { _wsnt__RenewResponse *_p = soap_instantiate__wsnt__RenewResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_wsnt__RenewResponse::TerminationTime = TerminationTime; } return _p; }

inline _wsnt__RenewResponse * soap_new_set__wsnt__RenewResponse(struct soap *soap, time_t TerminationTime, time_t *CurrentTime) { _wsnt__RenewResponse *_p = soap_instantiate__wsnt__RenewResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_wsnt__RenewResponse::TerminationTime = TerminationTime; _p->_wsnt__RenewResponse::CurrentTime = CurrentTime; } return _p; }

inline void soap_delete__wsnt__RenewResponse(struct soap *soap, _wsnt__RenewResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsnt__RenewResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsnt__Renew
#define SOAP_TYPE__wsnt__Renew (749)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__Renew(struct soap*, const char*, int, const _wsnt__Renew *, const char*);
SOAP_FMAC3 _wsnt__Renew * SOAP_FMAC4 soap_in__wsnt__Renew(struct soap*, const char*, _wsnt__Renew *, const char*);

#ifndef soap_write__wsnt__Renew
#define soap_write__wsnt__Renew(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:Renew", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__Renew * SOAP_FMAC4 soap_get__wsnt__Renew(struct soap*, _wsnt__Renew *, const char*, const char*);

#ifndef soap_read__wsnt__Renew
#define soap_read__wsnt__Renew(soap, data) ( soap_begin_recv(soap) || !soap_get__wsnt__Renew(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsnt__Renew * SOAP_FMAC2 soap_instantiate__wsnt__Renew(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__Renew * soap_new__wsnt__Renew(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__Renew(soap, n, NULL, NULL, NULL); }

inline _wsnt__Renew * soap_new_req__wsnt__Renew(struct soap *soap, std::string *TerminationTime) { _wsnt__Renew *_p = soap_instantiate__wsnt__Renew(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_wsnt__Renew::TerminationTime = TerminationTime; } return _p; }

inline _wsnt__Renew * soap_new_set__wsnt__Renew(struct soap *soap, std::string *TerminationTime) { _wsnt__Renew *_p = soap_instantiate__wsnt__Renew(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_wsnt__Renew::TerminationTime = TerminationTime; } return _p; }

inline void soap_delete__wsnt__Renew(struct soap *soap, _wsnt__Renew *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsnt__Renew(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsnt__CreatePullPointResponse
#define SOAP_TYPE__wsnt__CreatePullPointResponse (748)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__CreatePullPointResponse(struct soap*, const char*, int, const _wsnt__CreatePullPointResponse *, const char*);
SOAP_FMAC3 _wsnt__CreatePullPointResponse * SOAP_FMAC4 soap_in__wsnt__CreatePullPointResponse(struct soap*, const char*, _wsnt__CreatePullPointResponse *, const char*);

#ifndef soap_write__wsnt__CreatePullPointResponse
#define soap_write__wsnt__CreatePullPointResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:CreatePullPointResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__CreatePullPointResponse * SOAP_FMAC4 soap_get__wsnt__CreatePullPointResponse(struct soap*, _wsnt__CreatePullPointResponse *, const char*, const char*);

#ifndef soap_read__wsnt__CreatePullPointResponse
#define soap_read__wsnt__CreatePullPointResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__wsnt__CreatePullPointResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsnt__CreatePullPointResponse * SOAP_FMAC2 soap_instantiate__wsnt__CreatePullPointResponse(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__CreatePullPointResponse * soap_new__wsnt__CreatePullPointResponse(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__CreatePullPointResponse(soap, n, NULL, NULL, NULL); }

inline _wsnt__CreatePullPointResponse * soap_new_req__wsnt__CreatePullPointResponse(struct soap *soap, struct wsa5__EndpointReferenceType& PullPoint) { _wsnt__CreatePullPointResponse *_p = soap_instantiate__wsnt__CreatePullPointResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_wsnt__CreatePullPointResponse::PullPoint = PullPoint; } return _p; }

inline _wsnt__CreatePullPointResponse * soap_new_set__wsnt__CreatePullPointResponse(struct soap *soap, struct wsa5__EndpointReferenceType& PullPoint) { _wsnt__CreatePullPointResponse *_p = soap_instantiate__wsnt__CreatePullPointResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_wsnt__CreatePullPointResponse::PullPoint = PullPoint; } return _p; }

inline void soap_delete__wsnt__CreatePullPointResponse(struct soap *soap, _wsnt__CreatePullPointResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsnt__CreatePullPointResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsnt__CreatePullPoint
#define SOAP_TYPE__wsnt__CreatePullPoint (747)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__CreatePullPoint(struct soap*, const char*, int, const _wsnt__CreatePullPoint *, const char*);
SOAP_FMAC3 _wsnt__CreatePullPoint * SOAP_FMAC4 soap_in__wsnt__CreatePullPoint(struct soap*, const char*, _wsnt__CreatePullPoint *, const char*);

#ifndef soap_write__wsnt__CreatePullPoint
#define soap_write__wsnt__CreatePullPoint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:CreatePullPoint", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__CreatePullPoint * SOAP_FMAC4 soap_get__wsnt__CreatePullPoint(struct soap*, _wsnt__CreatePullPoint *, const char*, const char*);

#ifndef soap_read__wsnt__CreatePullPoint
#define soap_read__wsnt__CreatePullPoint(soap, data) ( soap_begin_recv(soap) || !soap_get__wsnt__CreatePullPoint(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsnt__CreatePullPoint * SOAP_FMAC2 soap_instantiate__wsnt__CreatePullPoint(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__CreatePullPoint * soap_new__wsnt__CreatePullPoint(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__CreatePullPoint(soap, n, NULL, NULL, NULL); }

inline _wsnt__CreatePullPoint * soap_new_req__wsnt__CreatePullPoint(struct soap *soap) { _wsnt__CreatePullPoint *_p = soap_instantiate__wsnt__CreatePullPoint(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _wsnt__CreatePullPoint * soap_new_set__wsnt__CreatePullPoint(struct soap *soap) { _wsnt__CreatePullPoint *_p = soap_instantiate__wsnt__CreatePullPoint(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__wsnt__CreatePullPoint(struct soap *soap, _wsnt__CreatePullPoint *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsnt__CreatePullPoint(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsnt__DestroyPullPointResponse
#define SOAP_TYPE__wsnt__DestroyPullPointResponse (746)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__DestroyPullPointResponse(struct soap*, const char*, int, const _wsnt__DestroyPullPointResponse *, const char*);
SOAP_FMAC3 _wsnt__DestroyPullPointResponse * SOAP_FMAC4 soap_in__wsnt__DestroyPullPointResponse(struct soap*, const char*, _wsnt__DestroyPullPointResponse *, const char*);

#ifndef soap_write__wsnt__DestroyPullPointResponse
#define soap_write__wsnt__DestroyPullPointResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:DestroyPullPointResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__DestroyPullPointResponse * SOAP_FMAC4 soap_get__wsnt__DestroyPullPointResponse(struct soap*, _wsnt__DestroyPullPointResponse *, const char*, const char*);

#ifndef soap_read__wsnt__DestroyPullPointResponse
#define soap_read__wsnt__DestroyPullPointResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__wsnt__DestroyPullPointResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsnt__DestroyPullPointResponse * SOAP_FMAC2 soap_instantiate__wsnt__DestroyPullPointResponse(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__DestroyPullPointResponse * soap_new__wsnt__DestroyPullPointResponse(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__DestroyPullPointResponse(soap, n, NULL, NULL, NULL); }

inline _wsnt__DestroyPullPointResponse * soap_new_req__wsnt__DestroyPullPointResponse(struct soap *soap) { _wsnt__DestroyPullPointResponse *_p = soap_instantiate__wsnt__DestroyPullPointResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _wsnt__DestroyPullPointResponse * soap_new_set__wsnt__DestroyPullPointResponse(struct soap *soap) { _wsnt__DestroyPullPointResponse *_p = soap_instantiate__wsnt__DestroyPullPointResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__wsnt__DestroyPullPointResponse(struct soap *soap, _wsnt__DestroyPullPointResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsnt__DestroyPullPointResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsnt__DestroyPullPoint
#define SOAP_TYPE__wsnt__DestroyPullPoint (745)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__DestroyPullPoint(struct soap*, const char*, int, const _wsnt__DestroyPullPoint *, const char*);
SOAP_FMAC3 _wsnt__DestroyPullPoint * SOAP_FMAC4 soap_in__wsnt__DestroyPullPoint(struct soap*, const char*, _wsnt__DestroyPullPoint *, const char*);

#ifndef soap_write__wsnt__DestroyPullPoint
#define soap_write__wsnt__DestroyPullPoint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:DestroyPullPoint", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__DestroyPullPoint * SOAP_FMAC4 soap_get__wsnt__DestroyPullPoint(struct soap*, _wsnt__DestroyPullPoint *, const char*, const char*);

#ifndef soap_read__wsnt__DestroyPullPoint
#define soap_read__wsnt__DestroyPullPoint(soap, data) ( soap_begin_recv(soap) || !soap_get__wsnt__DestroyPullPoint(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsnt__DestroyPullPoint * SOAP_FMAC2 soap_instantiate__wsnt__DestroyPullPoint(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__DestroyPullPoint * soap_new__wsnt__DestroyPullPoint(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__DestroyPullPoint(soap, n, NULL, NULL, NULL); }

inline _wsnt__DestroyPullPoint * soap_new_req__wsnt__DestroyPullPoint(struct soap *soap) { _wsnt__DestroyPullPoint *_p = soap_instantiate__wsnt__DestroyPullPoint(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _wsnt__DestroyPullPoint * soap_new_set__wsnt__DestroyPullPoint(struct soap *soap) { _wsnt__DestroyPullPoint *_p = soap_instantiate__wsnt__DestroyPullPoint(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__wsnt__DestroyPullPoint(struct soap *soap, _wsnt__DestroyPullPoint *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsnt__DestroyPullPoint(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsnt__GetMessagesResponse
#define SOAP_TYPE__wsnt__GetMessagesResponse (744)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__GetMessagesResponse(struct soap*, const char*, int, const _wsnt__GetMessagesResponse *, const char*);
SOAP_FMAC3 _wsnt__GetMessagesResponse * SOAP_FMAC4 soap_in__wsnt__GetMessagesResponse(struct soap*, const char*, _wsnt__GetMessagesResponse *, const char*);

#ifndef soap_write__wsnt__GetMessagesResponse
#define soap_write__wsnt__GetMessagesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:GetMessagesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__GetMessagesResponse * SOAP_FMAC4 soap_get__wsnt__GetMessagesResponse(struct soap*, _wsnt__GetMessagesResponse *, const char*, const char*);

#ifndef soap_read__wsnt__GetMessagesResponse
#define soap_read__wsnt__GetMessagesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__wsnt__GetMessagesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsnt__GetMessagesResponse * SOAP_FMAC2 soap_instantiate__wsnt__GetMessagesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__GetMessagesResponse * soap_new__wsnt__GetMessagesResponse(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__GetMessagesResponse(soap, n, NULL, NULL, NULL); }

inline _wsnt__GetMessagesResponse * soap_new_req__wsnt__GetMessagesResponse(struct soap *soap) { _wsnt__GetMessagesResponse *_p = soap_instantiate__wsnt__GetMessagesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _wsnt__GetMessagesResponse * soap_new_set__wsnt__GetMessagesResponse(struct soap *soap, std::vector<wsnt__NotificationMessageHolderType * >& NotificationMessage) { _wsnt__GetMessagesResponse *_p = soap_instantiate__wsnt__GetMessagesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_wsnt__GetMessagesResponse::NotificationMessage = NotificationMessage; } return _p; }

inline void soap_delete__wsnt__GetMessagesResponse(struct soap *soap, _wsnt__GetMessagesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsnt__GetMessagesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsnt__GetMessages
#define SOAP_TYPE__wsnt__GetMessages (743)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__GetMessages(struct soap*, const char*, int, const _wsnt__GetMessages *, const char*);
SOAP_FMAC3 _wsnt__GetMessages * SOAP_FMAC4 soap_in__wsnt__GetMessages(struct soap*, const char*, _wsnt__GetMessages *, const char*);

#ifndef soap_write__wsnt__GetMessages
#define soap_write__wsnt__GetMessages(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:GetMessages", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__GetMessages * SOAP_FMAC4 soap_get__wsnt__GetMessages(struct soap*, _wsnt__GetMessages *, const char*, const char*);

#ifndef soap_read__wsnt__GetMessages
#define soap_read__wsnt__GetMessages(soap, data) ( soap_begin_recv(soap) || !soap_get__wsnt__GetMessages(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsnt__GetMessages * SOAP_FMAC2 soap_instantiate__wsnt__GetMessages(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__GetMessages * soap_new__wsnt__GetMessages(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__GetMessages(soap, n, NULL, NULL, NULL); }

inline _wsnt__GetMessages * soap_new_req__wsnt__GetMessages(struct soap *soap) { _wsnt__GetMessages *_p = soap_instantiate__wsnt__GetMessages(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _wsnt__GetMessages * soap_new_set__wsnt__GetMessages(struct soap *soap, std::string *MaximumNumber) { _wsnt__GetMessages *_p = soap_instantiate__wsnt__GetMessages(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_wsnt__GetMessages::MaximumNumber = MaximumNumber; } return _p; }

inline void soap_delete__wsnt__GetMessages(struct soap *soap, _wsnt__GetMessages *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsnt__GetMessages(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsnt__GetCurrentMessageResponse
#define SOAP_TYPE__wsnt__GetCurrentMessageResponse (742)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__GetCurrentMessageResponse(struct soap*, const char*, int, const _wsnt__GetCurrentMessageResponse *, const char*);
SOAP_FMAC3 _wsnt__GetCurrentMessageResponse * SOAP_FMAC4 soap_in__wsnt__GetCurrentMessageResponse(struct soap*, const char*, _wsnt__GetCurrentMessageResponse *, const char*);

#ifndef soap_write__wsnt__GetCurrentMessageResponse
#define soap_write__wsnt__GetCurrentMessageResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:GetCurrentMessageResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__GetCurrentMessageResponse * SOAP_FMAC4 soap_get__wsnt__GetCurrentMessageResponse(struct soap*, _wsnt__GetCurrentMessageResponse *, const char*, const char*);

#ifndef soap_read__wsnt__GetCurrentMessageResponse
#define soap_read__wsnt__GetCurrentMessageResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__wsnt__GetCurrentMessageResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsnt__GetCurrentMessageResponse * SOAP_FMAC2 soap_instantiate__wsnt__GetCurrentMessageResponse(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__GetCurrentMessageResponse * soap_new__wsnt__GetCurrentMessageResponse(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__GetCurrentMessageResponse(soap, n, NULL, NULL, NULL); }

inline _wsnt__GetCurrentMessageResponse * soap_new_req__wsnt__GetCurrentMessageResponse(struct soap *soap) { _wsnt__GetCurrentMessageResponse *_p = soap_instantiate__wsnt__GetCurrentMessageResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _wsnt__GetCurrentMessageResponse * soap_new_set__wsnt__GetCurrentMessageResponse(struct soap *soap) { _wsnt__GetCurrentMessageResponse *_p = soap_instantiate__wsnt__GetCurrentMessageResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__wsnt__GetCurrentMessageResponse(struct soap *soap, _wsnt__GetCurrentMessageResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsnt__GetCurrentMessageResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsnt__GetCurrentMessage
#define SOAP_TYPE__wsnt__GetCurrentMessage (741)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__GetCurrentMessage(struct soap*, const char*, int, const _wsnt__GetCurrentMessage *, const char*);
SOAP_FMAC3 _wsnt__GetCurrentMessage * SOAP_FMAC4 soap_in__wsnt__GetCurrentMessage(struct soap*, const char*, _wsnt__GetCurrentMessage *, const char*);

#ifndef soap_write__wsnt__GetCurrentMessage
#define soap_write__wsnt__GetCurrentMessage(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:GetCurrentMessage", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__GetCurrentMessage * SOAP_FMAC4 soap_get__wsnt__GetCurrentMessage(struct soap*, _wsnt__GetCurrentMessage *, const char*, const char*);

#ifndef soap_read__wsnt__GetCurrentMessage
#define soap_read__wsnt__GetCurrentMessage(soap, data) ( soap_begin_recv(soap) || !soap_get__wsnt__GetCurrentMessage(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsnt__GetCurrentMessage * SOAP_FMAC2 soap_instantiate__wsnt__GetCurrentMessage(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__GetCurrentMessage * soap_new__wsnt__GetCurrentMessage(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__GetCurrentMessage(soap, n, NULL, NULL, NULL); }

inline _wsnt__GetCurrentMessage * soap_new_req__wsnt__GetCurrentMessage(struct soap *soap, wsnt__TopicExpressionType *Topic) { _wsnt__GetCurrentMessage *_p = soap_instantiate__wsnt__GetCurrentMessage(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_wsnt__GetCurrentMessage::Topic = Topic; } return _p; }

inline _wsnt__GetCurrentMessage * soap_new_set__wsnt__GetCurrentMessage(struct soap *soap, wsnt__TopicExpressionType *Topic) { _wsnt__GetCurrentMessage *_p = soap_instantiate__wsnt__GetCurrentMessage(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_wsnt__GetCurrentMessage::Topic = Topic; } return _p; }

inline void soap_delete__wsnt__GetCurrentMessage(struct soap *soap, _wsnt__GetCurrentMessage *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsnt__GetCurrentMessage(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsnt__SubscribeResponse
#define SOAP_TYPE__wsnt__SubscribeResponse (740)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__SubscribeResponse(struct soap*, const char*, int, const _wsnt__SubscribeResponse *, const char*);
SOAP_FMAC3 _wsnt__SubscribeResponse * SOAP_FMAC4 soap_in__wsnt__SubscribeResponse(struct soap*, const char*, _wsnt__SubscribeResponse *, const char*);

#ifndef soap_write__wsnt__SubscribeResponse
#define soap_write__wsnt__SubscribeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:SubscribeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__SubscribeResponse * SOAP_FMAC4 soap_get__wsnt__SubscribeResponse(struct soap*, _wsnt__SubscribeResponse *, const char*, const char*);

#ifndef soap_read__wsnt__SubscribeResponse
#define soap_read__wsnt__SubscribeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__wsnt__SubscribeResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsnt__SubscribeResponse * SOAP_FMAC2 soap_instantiate__wsnt__SubscribeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__SubscribeResponse * soap_new__wsnt__SubscribeResponse(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__SubscribeResponse(soap, n, NULL, NULL, NULL); }

inline _wsnt__SubscribeResponse * soap_new_req__wsnt__SubscribeResponse(struct soap *soap, struct wsa5__EndpointReferenceType& SubscriptionReference) { _wsnt__SubscribeResponse *_p = soap_instantiate__wsnt__SubscribeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_wsnt__SubscribeResponse::SubscriptionReference = SubscriptionReference; } return _p; }

inline _wsnt__SubscribeResponse * soap_new_set__wsnt__SubscribeResponse(struct soap *soap, struct wsa5__EndpointReferenceType& SubscriptionReference, time_t *CurrentTime, time_t *TerminationTime) { _wsnt__SubscribeResponse *_p = soap_instantiate__wsnt__SubscribeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_wsnt__SubscribeResponse::SubscriptionReference = SubscriptionReference; _p->_wsnt__SubscribeResponse::CurrentTime = CurrentTime; _p->_wsnt__SubscribeResponse::TerminationTime = TerminationTime; } return _p; }

inline void soap_delete__wsnt__SubscribeResponse(struct soap *soap, _wsnt__SubscribeResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsnt__SubscribeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsnt__Subscribe
#define SOAP_TYPE__wsnt__Subscribe (739)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__Subscribe(struct soap*, const char*, int, const _wsnt__Subscribe *, const char*);
SOAP_FMAC3 _wsnt__Subscribe * SOAP_FMAC4 soap_in__wsnt__Subscribe(struct soap*, const char*, _wsnt__Subscribe *, const char*);

#ifndef soap_write__wsnt__Subscribe
#define soap_write__wsnt__Subscribe(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:Subscribe", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__Subscribe * SOAP_FMAC4 soap_get__wsnt__Subscribe(struct soap*, _wsnt__Subscribe *, const char*, const char*);

#ifndef soap_read__wsnt__Subscribe
#define soap_read__wsnt__Subscribe(soap, data) ( soap_begin_recv(soap) || !soap_get__wsnt__Subscribe(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsnt__Subscribe * SOAP_FMAC2 soap_instantiate__wsnt__Subscribe(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__Subscribe * soap_new__wsnt__Subscribe(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__Subscribe(soap, n, NULL, NULL, NULL); }

inline _wsnt__Subscribe * soap_new_req__wsnt__Subscribe(struct soap *soap, struct wsa5__EndpointReferenceType& ConsumerReference) { _wsnt__Subscribe *_p = soap_instantiate__wsnt__Subscribe(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_wsnt__Subscribe::ConsumerReference = ConsumerReference; } return _p; }

inline _wsnt__Subscribe * soap_new_set__wsnt__Subscribe(struct soap *soap, struct wsa5__EndpointReferenceType& ConsumerReference, wsnt__FilterType *Filter, std::string *InitialTerminationTime, _wsnt__Subscribe_SubscriptionPolicy *SubscriptionPolicy) { _wsnt__Subscribe *_p = soap_instantiate__wsnt__Subscribe(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_wsnt__Subscribe::ConsumerReference = ConsumerReference; _p->_wsnt__Subscribe::Filter = Filter; _p->_wsnt__Subscribe::InitialTerminationTime = InitialTerminationTime; _p->_wsnt__Subscribe::SubscriptionPolicy = SubscriptionPolicy; } return _p; }

inline void soap_delete__wsnt__Subscribe(struct soap *soap, _wsnt__Subscribe *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsnt__Subscribe(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsnt__UseRaw
#define SOAP_TYPE__wsnt__UseRaw (738)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UseRaw(struct soap*, const char*, int, const _wsnt__UseRaw *, const char*);
SOAP_FMAC3 _wsnt__UseRaw * SOAP_FMAC4 soap_in__wsnt__UseRaw(struct soap*, const char*, _wsnt__UseRaw *, const char*);

#ifndef soap_write__wsnt__UseRaw
#define soap_write__wsnt__UseRaw(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:UseRaw", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__UseRaw * SOAP_FMAC4 soap_get__wsnt__UseRaw(struct soap*, _wsnt__UseRaw *, const char*, const char*);

#ifndef soap_read__wsnt__UseRaw
#define soap_read__wsnt__UseRaw(soap, data) ( soap_begin_recv(soap) || !soap_get__wsnt__UseRaw(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsnt__UseRaw * SOAP_FMAC2 soap_instantiate__wsnt__UseRaw(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__UseRaw * soap_new__wsnt__UseRaw(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__UseRaw(soap, n, NULL, NULL, NULL); }

inline _wsnt__UseRaw * soap_new_req__wsnt__UseRaw(struct soap *soap) { _wsnt__UseRaw *_p = soap_instantiate__wsnt__UseRaw(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _wsnt__UseRaw * soap_new_set__wsnt__UseRaw(struct soap *soap) { _wsnt__UseRaw *_p = soap_instantiate__wsnt__UseRaw(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__wsnt__UseRaw(struct soap *soap, _wsnt__UseRaw *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsnt__UseRaw(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsnt__Notify
#define SOAP_TYPE__wsnt__Notify (737)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__Notify(struct soap*, const char*, int, const _wsnt__Notify *, const char*);
SOAP_FMAC3 _wsnt__Notify * SOAP_FMAC4 soap_in__wsnt__Notify(struct soap*, const char*, _wsnt__Notify *, const char*);

#ifndef soap_write__wsnt__Notify
#define soap_write__wsnt__Notify(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:Notify", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__Notify * SOAP_FMAC4 soap_get__wsnt__Notify(struct soap*, _wsnt__Notify *, const char*, const char*);

#ifndef soap_read__wsnt__Notify
#define soap_read__wsnt__Notify(soap, data) ( soap_begin_recv(soap) || !soap_get__wsnt__Notify(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsnt__Notify * SOAP_FMAC2 soap_instantiate__wsnt__Notify(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__Notify * soap_new__wsnt__Notify(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__Notify(soap, n, NULL, NULL, NULL); }

inline _wsnt__Notify * soap_new_req__wsnt__Notify(struct soap *soap, std::vector<wsnt__NotificationMessageHolderType * >& NotificationMessage) { _wsnt__Notify *_p = soap_instantiate__wsnt__Notify(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_wsnt__Notify::NotificationMessage = NotificationMessage; } return _p; }

inline _wsnt__Notify * soap_new_set__wsnt__Notify(struct soap *soap, std::vector<wsnt__NotificationMessageHolderType * >& NotificationMessage) { _wsnt__Notify *_p = soap_instantiate__wsnt__Notify(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_wsnt__Notify::NotificationMessage = NotificationMessage; } return _p; }

inline void soap_delete__wsnt__Notify(struct soap *soap, _wsnt__Notify *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsnt__Notify(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsnt__SubscriptionManagerRP
#define SOAP_TYPE__wsnt__SubscriptionManagerRP (736)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__SubscriptionManagerRP(struct soap*, const char*, int, const _wsnt__SubscriptionManagerRP *, const char*);
SOAP_FMAC3 _wsnt__SubscriptionManagerRP * SOAP_FMAC4 soap_in__wsnt__SubscriptionManagerRP(struct soap*, const char*, _wsnt__SubscriptionManagerRP *, const char*);

#ifndef soap_write__wsnt__SubscriptionManagerRP
#define soap_write__wsnt__SubscriptionManagerRP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:SubscriptionManagerRP", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__SubscriptionManagerRP * SOAP_FMAC4 soap_get__wsnt__SubscriptionManagerRP(struct soap*, _wsnt__SubscriptionManagerRP *, const char*, const char*);

#ifndef soap_read__wsnt__SubscriptionManagerRP
#define soap_read__wsnt__SubscriptionManagerRP(soap, data) ( soap_begin_recv(soap) || !soap_get__wsnt__SubscriptionManagerRP(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsnt__SubscriptionManagerRP * SOAP_FMAC2 soap_instantiate__wsnt__SubscriptionManagerRP(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__SubscriptionManagerRP * soap_new__wsnt__SubscriptionManagerRP(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__SubscriptionManagerRP(soap, n, NULL, NULL, NULL); }

inline _wsnt__SubscriptionManagerRP * soap_new_req__wsnt__SubscriptionManagerRP(struct soap *soap, struct wsa5__EndpointReferenceType& ConsumerReference) { _wsnt__SubscriptionManagerRP *_p = soap_instantiate__wsnt__SubscriptionManagerRP(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_wsnt__SubscriptionManagerRP::ConsumerReference = ConsumerReference; } return _p; }

inline _wsnt__SubscriptionManagerRP * soap_new_set__wsnt__SubscriptionManagerRP(struct soap *soap, struct wsa5__EndpointReferenceType& ConsumerReference, wsnt__FilterType *Filter, wsnt__SubscriptionPolicyType *SubscriptionPolicy, time_t *CreationTime) { _wsnt__SubscriptionManagerRP *_p = soap_instantiate__wsnt__SubscriptionManagerRP(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_wsnt__SubscriptionManagerRP::ConsumerReference = ConsumerReference; _p->_wsnt__SubscriptionManagerRP::Filter = Filter; _p->_wsnt__SubscriptionManagerRP::SubscriptionPolicy = SubscriptionPolicy; _p->_wsnt__SubscriptionManagerRP::CreationTime = CreationTime; } return _p; }

inline void soap_delete__wsnt__SubscriptionManagerRP(struct soap *soap, _wsnt__SubscriptionManagerRP *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsnt__SubscriptionManagerRP(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__wsnt__NotificationProducerRP
#define SOAP_TYPE__wsnt__NotificationProducerRP (735)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__NotificationProducerRP(struct soap*, const char*, int, const _wsnt__NotificationProducerRP *, const char*);
SOAP_FMAC3 _wsnt__NotificationProducerRP * SOAP_FMAC4 soap_in__wsnt__NotificationProducerRP(struct soap*, const char*, _wsnt__NotificationProducerRP *, const char*);

#ifndef soap_write__wsnt__NotificationProducerRP
#define soap_write__wsnt__NotificationProducerRP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:NotificationProducerRP", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__NotificationProducerRP * SOAP_FMAC4 soap_get__wsnt__NotificationProducerRP(struct soap*, _wsnt__NotificationProducerRP *, const char*, const char*);

#ifndef soap_read__wsnt__NotificationProducerRP
#define soap_read__wsnt__NotificationProducerRP(soap, data) ( soap_begin_recv(soap) || !soap_get__wsnt__NotificationProducerRP(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _wsnt__NotificationProducerRP * SOAP_FMAC2 soap_instantiate__wsnt__NotificationProducerRP(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__NotificationProducerRP * soap_new__wsnt__NotificationProducerRP(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__NotificationProducerRP(soap, n, NULL, NULL, NULL); }

inline _wsnt__NotificationProducerRP * soap_new_req__wsnt__NotificationProducerRP(struct soap *soap) { _wsnt__NotificationProducerRP *_p = soap_instantiate__wsnt__NotificationProducerRP(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _wsnt__NotificationProducerRP * soap_new_set__wsnt__NotificationProducerRP(struct soap *soap, std::vector<wsnt__TopicExpressionType * >& TopicExpression, bool *FixedTopicSet, std::vector<std::string >& TopicExpressionDialect, wstop__TopicSetType *wstop__TopicSet) { _wsnt__NotificationProducerRP *_p = soap_instantiate__wsnt__NotificationProducerRP(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_wsnt__NotificationProducerRP::TopicExpression = TopicExpression; _p->_wsnt__NotificationProducerRP::FixedTopicSet = FixedTopicSet; _p->_wsnt__NotificationProducerRP::TopicExpressionDialect = TopicExpressionDialect; _p->_wsnt__NotificationProducerRP::wstop__TopicSet = wstop__TopicSet; } return _p; }

inline void soap_delete__wsnt__NotificationProducerRP(struct soap *soap, _wsnt__NotificationProducerRP *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__wsnt__NotificationProducerRP(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsnt__ResumeFailedFaultType
#define SOAP_TYPE_wsnt__ResumeFailedFaultType (734)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__ResumeFailedFaultType(struct soap*, const char*, int, const wsnt__ResumeFailedFaultType *, const char*);
SOAP_FMAC3 wsnt__ResumeFailedFaultType * SOAP_FMAC4 soap_in_wsnt__ResumeFailedFaultType(struct soap*, const char*, wsnt__ResumeFailedFaultType *, const char*);

#ifndef soap_write_wsnt__ResumeFailedFaultType
#define soap_write_wsnt__ResumeFailedFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:ResumeFailedFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__ResumeFailedFaultType * SOAP_FMAC4 soap_get_wsnt__ResumeFailedFaultType(struct soap*, wsnt__ResumeFailedFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__ResumeFailedFaultType
#define soap_read_wsnt__ResumeFailedFaultType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__ResumeFailedFaultType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wsnt__ResumeFailedFaultType * SOAP_FMAC2 soap_instantiate_wsnt__ResumeFailedFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__ResumeFailedFaultType * soap_new_wsnt__ResumeFailedFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__ResumeFailedFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__ResumeFailedFaultType * soap_new_req_wsnt__ResumeFailedFaultType(struct soap *soap, time_t Timestamp1) { wsnt__ResumeFailedFaultType *_p = soap_instantiate_wsnt__ResumeFailedFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; } return _p; }

inline wsnt__ResumeFailedFaultType * soap_new_set_wsnt__ResumeFailedFaultType(struct soap *soap, time_t Timestamp1, struct wsa5__EndpointReferenceType *Originator1, _wsrfbf__BaseFaultType_ErrorCode *ErrorCode1, std::vector<_wsrfbf__BaseFaultType_Description >*Description1, _wsrfbf__BaseFaultType_FaultCause *FaultCause1) { wsnt__ResumeFailedFaultType *_p = soap_instantiate_wsnt__ResumeFailedFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; _p->wsrfbf__BaseFaultType::Originator = Originator1; _p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1; _p->wsrfbf__BaseFaultType::Description = Description1; _p->wsrfbf__BaseFaultType::FaultCause = FaultCause1; } return _p; }

inline void soap_delete_wsnt__ResumeFailedFaultType(struct soap *soap, wsnt__ResumeFailedFaultType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsnt__ResumeFailedFaultType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsnt__PauseFailedFaultType
#define SOAP_TYPE_wsnt__PauseFailedFaultType (733)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__PauseFailedFaultType(struct soap*, const char*, int, const wsnt__PauseFailedFaultType *, const char*);
SOAP_FMAC3 wsnt__PauseFailedFaultType * SOAP_FMAC4 soap_in_wsnt__PauseFailedFaultType(struct soap*, const char*, wsnt__PauseFailedFaultType *, const char*);

#ifndef soap_write_wsnt__PauseFailedFaultType
#define soap_write_wsnt__PauseFailedFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:PauseFailedFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__PauseFailedFaultType * SOAP_FMAC4 soap_get_wsnt__PauseFailedFaultType(struct soap*, wsnt__PauseFailedFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__PauseFailedFaultType
#define soap_read_wsnt__PauseFailedFaultType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__PauseFailedFaultType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wsnt__PauseFailedFaultType * SOAP_FMAC2 soap_instantiate_wsnt__PauseFailedFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__PauseFailedFaultType * soap_new_wsnt__PauseFailedFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__PauseFailedFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__PauseFailedFaultType * soap_new_req_wsnt__PauseFailedFaultType(struct soap *soap, time_t Timestamp1) { wsnt__PauseFailedFaultType *_p = soap_instantiate_wsnt__PauseFailedFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; } return _p; }

inline wsnt__PauseFailedFaultType * soap_new_set_wsnt__PauseFailedFaultType(struct soap *soap, time_t Timestamp1, struct wsa5__EndpointReferenceType *Originator1, _wsrfbf__BaseFaultType_ErrorCode *ErrorCode1, std::vector<_wsrfbf__BaseFaultType_Description >*Description1, _wsrfbf__BaseFaultType_FaultCause *FaultCause1) { wsnt__PauseFailedFaultType *_p = soap_instantiate_wsnt__PauseFailedFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; _p->wsrfbf__BaseFaultType::Originator = Originator1; _p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1; _p->wsrfbf__BaseFaultType::Description = Description1; _p->wsrfbf__BaseFaultType::FaultCause = FaultCause1; } return _p; }

inline void soap_delete_wsnt__PauseFailedFaultType(struct soap *soap, wsnt__PauseFailedFaultType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsnt__PauseFailedFaultType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsnt__UnableToDestroySubscriptionFaultType
#define SOAP_TYPE_wsnt__UnableToDestroySubscriptionFaultType (732)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, const char*, int, const wsnt__UnableToDestroySubscriptionFaultType *, const char*);
SOAP_FMAC3 wsnt__UnableToDestroySubscriptionFaultType * SOAP_FMAC4 soap_in_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, const char*, wsnt__UnableToDestroySubscriptionFaultType *, const char*);

#ifndef soap_write_wsnt__UnableToDestroySubscriptionFaultType
#define soap_write_wsnt__UnableToDestroySubscriptionFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:UnableToDestroySubscriptionFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__UnableToDestroySubscriptionFaultType * SOAP_FMAC4 soap_get_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, wsnt__UnableToDestroySubscriptionFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnableToDestroySubscriptionFaultType
#define soap_read_wsnt__UnableToDestroySubscriptionFaultType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__UnableToDestroySubscriptionFaultType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wsnt__UnableToDestroySubscriptionFaultType * SOAP_FMAC2 soap_instantiate_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__UnableToDestroySubscriptionFaultType * soap_new_wsnt__UnableToDestroySubscriptionFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__UnableToDestroySubscriptionFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__UnableToDestroySubscriptionFaultType * soap_new_req_wsnt__UnableToDestroySubscriptionFaultType(struct soap *soap, time_t Timestamp1) { wsnt__UnableToDestroySubscriptionFaultType *_p = soap_instantiate_wsnt__UnableToDestroySubscriptionFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; } return _p; }

inline wsnt__UnableToDestroySubscriptionFaultType * soap_new_set_wsnt__UnableToDestroySubscriptionFaultType(struct soap *soap, time_t Timestamp1, struct wsa5__EndpointReferenceType *Originator1, _wsrfbf__BaseFaultType_ErrorCode *ErrorCode1, std::vector<_wsrfbf__BaseFaultType_Description >*Description1, _wsrfbf__BaseFaultType_FaultCause *FaultCause1) { wsnt__UnableToDestroySubscriptionFaultType *_p = soap_instantiate_wsnt__UnableToDestroySubscriptionFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; _p->wsrfbf__BaseFaultType::Originator = Originator1; _p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1; _p->wsrfbf__BaseFaultType::Description = Description1; _p->wsrfbf__BaseFaultType::FaultCause = FaultCause1; } return _p; }

inline void soap_delete_wsnt__UnableToDestroySubscriptionFaultType(struct soap *soap, wsnt__UnableToDestroySubscriptionFaultType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsnt__UnacceptableTerminationTimeFaultType
#define SOAP_TYPE_wsnt__UnacceptableTerminationTimeFaultType (731)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, const char*, int, const wsnt__UnacceptableTerminationTimeFaultType *, const char*);
SOAP_FMAC3 wsnt__UnacceptableTerminationTimeFaultType * SOAP_FMAC4 soap_in_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, const char*, wsnt__UnacceptableTerminationTimeFaultType *, const char*);

#ifndef soap_write_wsnt__UnacceptableTerminationTimeFaultType
#define soap_write_wsnt__UnacceptableTerminationTimeFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:UnacceptableTerminationTimeFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__UnacceptableTerminationTimeFaultType * SOAP_FMAC4 soap_get_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, wsnt__UnacceptableTerminationTimeFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnacceptableTerminationTimeFaultType
#define soap_read_wsnt__UnacceptableTerminationTimeFaultType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__UnacceptableTerminationTimeFaultType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wsnt__UnacceptableTerminationTimeFaultType * SOAP_FMAC2 soap_instantiate_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__UnacceptableTerminationTimeFaultType * soap_new_wsnt__UnacceptableTerminationTimeFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__UnacceptableTerminationTimeFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__UnacceptableTerminationTimeFaultType * soap_new_req_wsnt__UnacceptableTerminationTimeFaultType(struct soap *soap, time_t MinimumTime, time_t Timestamp1) { wsnt__UnacceptableTerminationTimeFaultType *_p = soap_instantiate_wsnt__UnacceptableTerminationTimeFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsnt__UnacceptableTerminationTimeFaultType::MinimumTime = MinimumTime; _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; } return _p; }

inline wsnt__UnacceptableTerminationTimeFaultType * soap_new_set_wsnt__UnacceptableTerminationTimeFaultType(struct soap *soap, time_t MinimumTime, time_t *MaximumTime, time_t Timestamp1, struct wsa5__EndpointReferenceType *Originator1, _wsrfbf__BaseFaultType_ErrorCode *ErrorCode1, std::vector<_wsrfbf__BaseFaultType_Description >*Description1, _wsrfbf__BaseFaultType_FaultCause *FaultCause1) { wsnt__UnacceptableTerminationTimeFaultType *_p = soap_instantiate_wsnt__UnacceptableTerminationTimeFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsnt__UnacceptableTerminationTimeFaultType::MinimumTime = MinimumTime; _p->wsnt__UnacceptableTerminationTimeFaultType::MaximumTime = MaximumTime; _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; _p->wsrfbf__BaseFaultType::Originator = Originator1; _p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1; _p->wsrfbf__BaseFaultType::Description = Description1; _p->wsrfbf__BaseFaultType::FaultCause = FaultCause1; } return _p; }

inline void soap_delete_wsnt__UnacceptableTerminationTimeFaultType(struct soap *soap, wsnt__UnacceptableTerminationTimeFaultType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsnt__UnableToCreatePullPointFaultType
#define SOAP_TYPE_wsnt__UnableToCreatePullPointFaultType (730)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnableToCreatePullPointFaultType(struct soap*, const char*, int, const wsnt__UnableToCreatePullPointFaultType *, const char*);
SOAP_FMAC3 wsnt__UnableToCreatePullPointFaultType * SOAP_FMAC4 soap_in_wsnt__UnableToCreatePullPointFaultType(struct soap*, const char*, wsnt__UnableToCreatePullPointFaultType *, const char*);

#ifndef soap_write_wsnt__UnableToCreatePullPointFaultType
#define soap_write_wsnt__UnableToCreatePullPointFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:UnableToCreatePullPointFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__UnableToCreatePullPointFaultType * SOAP_FMAC4 soap_get_wsnt__UnableToCreatePullPointFaultType(struct soap*, wsnt__UnableToCreatePullPointFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnableToCreatePullPointFaultType
#define soap_read_wsnt__UnableToCreatePullPointFaultType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__UnableToCreatePullPointFaultType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wsnt__UnableToCreatePullPointFaultType * SOAP_FMAC2 soap_instantiate_wsnt__UnableToCreatePullPointFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__UnableToCreatePullPointFaultType * soap_new_wsnt__UnableToCreatePullPointFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__UnableToCreatePullPointFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__UnableToCreatePullPointFaultType * soap_new_req_wsnt__UnableToCreatePullPointFaultType(struct soap *soap, time_t Timestamp1) { wsnt__UnableToCreatePullPointFaultType *_p = soap_instantiate_wsnt__UnableToCreatePullPointFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; } return _p; }

inline wsnt__UnableToCreatePullPointFaultType * soap_new_set_wsnt__UnableToCreatePullPointFaultType(struct soap *soap, time_t Timestamp1, struct wsa5__EndpointReferenceType *Originator1, _wsrfbf__BaseFaultType_ErrorCode *ErrorCode1, std::vector<_wsrfbf__BaseFaultType_Description >*Description1, _wsrfbf__BaseFaultType_FaultCause *FaultCause1) { wsnt__UnableToCreatePullPointFaultType *_p = soap_instantiate_wsnt__UnableToCreatePullPointFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; _p->wsrfbf__BaseFaultType::Originator = Originator1; _p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1; _p->wsrfbf__BaseFaultType::Description = Description1; _p->wsrfbf__BaseFaultType::FaultCause = FaultCause1; } return _p; }

inline void soap_delete_wsnt__UnableToCreatePullPointFaultType(struct soap *soap, wsnt__UnableToCreatePullPointFaultType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsnt__UnableToCreatePullPointFaultType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsnt__UnableToDestroyPullPointFaultType
#define SOAP_TYPE_wsnt__UnableToDestroyPullPointFaultType (729)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnableToDestroyPullPointFaultType(struct soap*, const char*, int, const wsnt__UnableToDestroyPullPointFaultType *, const char*);
SOAP_FMAC3 wsnt__UnableToDestroyPullPointFaultType * SOAP_FMAC4 soap_in_wsnt__UnableToDestroyPullPointFaultType(struct soap*, const char*, wsnt__UnableToDestroyPullPointFaultType *, const char*);

#ifndef soap_write_wsnt__UnableToDestroyPullPointFaultType
#define soap_write_wsnt__UnableToDestroyPullPointFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:UnableToDestroyPullPointFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__UnableToDestroyPullPointFaultType * SOAP_FMAC4 soap_get_wsnt__UnableToDestroyPullPointFaultType(struct soap*, wsnt__UnableToDestroyPullPointFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnableToDestroyPullPointFaultType
#define soap_read_wsnt__UnableToDestroyPullPointFaultType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__UnableToDestroyPullPointFaultType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wsnt__UnableToDestroyPullPointFaultType * SOAP_FMAC2 soap_instantiate_wsnt__UnableToDestroyPullPointFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__UnableToDestroyPullPointFaultType * soap_new_wsnt__UnableToDestroyPullPointFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__UnableToDestroyPullPointFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__UnableToDestroyPullPointFaultType * soap_new_req_wsnt__UnableToDestroyPullPointFaultType(struct soap *soap, time_t Timestamp1) { wsnt__UnableToDestroyPullPointFaultType *_p = soap_instantiate_wsnt__UnableToDestroyPullPointFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; } return _p; }

inline wsnt__UnableToDestroyPullPointFaultType * soap_new_set_wsnt__UnableToDestroyPullPointFaultType(struct soap *soap, time_t Timestamp1, struct wsa5__EndpointReferenceType *Originator1, _wsrfbf__BaseFaultType_ErrorCode *ErrorCode1, std::vector<_wsrfbf__BaseFaultType_Description >*Description1, _wsrfbf__BaseFaultType_FaultCause *FaultCause1) { wsnt__UnableToDestroyPullPointFaultType *_p = soap_instantiate_wsnt__UnableToDestroyPullPointFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; _p->wsrfbf__BaseFaultType::Originator = Originator1; _p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1; _p->wsrfbf__BaseFaultType::Description = Description1; _p->wsrfbf__BaseFaultType::FaultCause = FaultCause1; } return _p; }

inline void soap_delete_wsnt__UnableToDestroyPullPointFaultType(struct soap *soap, wsnt__UnableToDestroyPullPointFaultType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsnt__UnableToDestroyPullPointFaultType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsnt__UnableToGetMessagesFaultType
#define SOAP_TYPE_wsnt__UnableToGetMessagesFaultType (728)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnableToGetMessagesFaultType(struct soap*, const char*, int, const wsnt__UnableToGetMessagesFaultType *, const char*);
SOAP_FMAC3 wsnt__UnableToGetMessagesFaultType * SOAP_FMAC4 soap_in_wsnt__UnableToGetMessagesFaultType(struct soap*, const char*, wsnt__UnableToGetMessagesFaultType *, const char*);

#ifndef soap_write_wsnt__UnableToGetMessagesFaultType
#define soap_write_wsnt__UnableToGetMessagesFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:UnableToGetMessagesFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__UnableToGetMessagesFaultType * SOAP_FMAC4 soap_get_wsnt__UnableToGetMessagesFaultType(struct soap*, wsnt__UnableToGetMessagesFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnableToGetMessagesFaultType
#define soap_read_wsnt__UnableToGetMessagesFaultType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__UnableToGetMessagesFaultType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wsnt__UnableToGetMessagesFaultType * SOAP_FMAC2 soap_instantiate_wsnt__UnableToGetMessagesFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__UnableToGetMessagesFaultType * soap_new_wsnt__UnableToGetMessagesFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__UnableToGetMessagesFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__UnableToGetMessagesFaultType * soap_new_req_wsnt__UnableToGetMessagesFaultType(struct soap *soap, time_t Timestamp1) { wsnt__UnableToGetMessagesFaultType *_p = soap_instantiate_wsnt__UnableToGetMessagesFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; } return _p; }

inline wsnt__UnableToGetMessagesFaultType * soap_new_set_wsnt__UnableToGetMessagesFaultType(struct soap *soap, time_t Timestamp1, struct wsa5__EndpointReferenceType *Originator1, _wsrfbf__BaseFaultType_ErrorCode *ErrorCode1, std::vector<_wsrfbf__BaseFaultType_Description >*Description1, _wsrfbf__BaseFaultType_FaultCause *FaultCause1) { wsnt__UnableToGetMessagesFaultType *_p = soap_instantiate_wsnt__UnableToGetMessagesFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; _p->wsrfbf__BaseFaultType::Originator = Originator1; _p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1; _p->wsrfbf__BaseFaultType::Description = Description1; _p->wsrfbf__BaseFaultType::FaultCause = FaultCause1; } return _p; }

inline void soap_delete_wsnt__UnableToGetMessagesFaultType(struct soap *soap, wsnt__UnableToGetMessagesFaultType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsnt__UnableToGetMessagesFaultType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsnt__NoCurrentMessageOnTopicFaultType
#define SOAP_TYPE_wsnt__NoCurrentMessageOnTopicFaultType (727)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, const char*, int, const wsnt__NoCurrentMessageOnTopicFaultType *, const char*);
SOAP_FMAC3 wsnt__NoCurrentMessageOnTopicFaultType * SOAP_FMAC4 soap_in_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, const char*, wsnt__NoCurrentMessageOnTopicFaultType *, const char*);

#ifndef soap_write_wsnt__NoCurrentMessageOnTopicFaultType
#define soap_write_wsnt__NoCurrentMessageOnTopicFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:NoCurrentMessageOnTopicFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__NoCurrentMessageOnTopicFaultType * SOAP_FMAC4 soap_get_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, wsnt__NoCurrentMessageOnTopicFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__NoCurrentMessageOnTopicFaultType
#define soap_read_wsnt__NoCurrentMessageOnTopicFaultType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__NoCurrentMessageOnTopicFaultType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wsnt__NoCurrentMessageOnTopicFaultType * SOAP_FMAC2 soap_instantiate_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__NoCurrentMessageOnTopicFaultType * soap_new_wsnt__NoCurrentMessageOnTopicFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__NoCurrentMessageOnTopicFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__NoCurrentMessageOnTopicFaultType * soap_new_req_wsnt__NoCurrentMessageOnTopicFaultType(struct soap *soap, time_t Timestamp1) { wsnt__NoCurrentMessageOnTopicFaultType *_p = soap_instantiate_wsnt__NoCurrentMessageOnTopicFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; } return _p; }

inline wsnt__NoCurrentMessageOnTopicFaultType * soap_new_set_wsnt__NoCurrentMessageOnTopicFaultType(struct soap *soap, time_t Timestamp1, struct wsa5__EndpointReferenceType *Originator1, _wsrfbf__BaseFaultType_ErrorCode *ErrorCode1, std::vector<_wsrfbf__BaseFaultType_Description >*Description1, _wsrfbf__BaseFaultType_FaultCause *FaultCause1) { wsnt__NoCurrentMessageOnTopicFaultType *_p = soap_instantiate_wsnt__NoCurrentMessageOnTopicFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; _p->wsrfbf__BaseFaultType::Originator = Originator1; _p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1; _p->wsrfbf__BaseFaultType::Description = Description1; _p->wsrfbf__BaseFaultType::FaultCause = FaultCause1; } return _p; }

inline void soap_delete_wsnt__NoCurrentMessageOnTopicFaultType(struct soap *soap, wsnt__NoCurrentMessageOnTopicFaultType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsnt__UnacceptableInitialTerminationTimeFaultType
#define SOAP_TYPE_wsnt__UnacceptableInitialTerminationTimeFaultType (726)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, const char*, int, const wsnt__UnacceptableInitialTerminationTimeFaultType *, const char*);
SOAP_FMAC3 wsnt__UnacceptableInitialTerminationTimeFaultType * SOAP_FMAC4 soap_in_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, const char*, wsnt__UnacceptableInitialTerminationTimeFaultType *, const char*);

#ifndef soap_write_wsnt__UnacceptableInitialTerminationTimeFaultType
#define soap_write_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:UnacceptableInitialTerminationTimeFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__UnacceptableInitialTerminationTimeFaultType * SOAP_FMAC4 soap_get_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, wsnt__UnacceptableInitialTerminationTimeFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnacceptableInitialTerminationTimeFaultType
#define soap_read_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wsnt__UnacceptableInitialTerminationTimeFaultType * SOAP_FMAC2 soap_instantiate_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__UnacceptableInitialTerminationTimeFaultType * soap_new_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__UnacceptableInitialTerminationTimeFaultType * soap_new_req_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap *soap, time_t MinimumTime, time_t Timestamp1) { wsnt__UnacceptableInitialTerminationTimeFaultType *_p = soap_instantiate_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsnt__UnacceptableInitialTerminationTimeFaultType::MinimumTime = MinimumTime; _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; } return _p; }

inline wsnt__UnacceptableInitialTerminationTimeFaultType * soap_new_set_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap *soap, time_t MinimumTime, time_t *MaximumTime, time_t Timestamp1, struct wsa5__EndpointReferenceType *Originator1, _wsrfbf__BaseFaultType_ErrorCode *ErrorCode1, std::vector<_wsrfbf__BaseFaultType_Description >*Description1, _wsrfbf__BaseFaultType_FaultCause *FaultCause1) { wsnt__UnacceptableInitialTerminationTimeFaultType *_p = soap_instantiate_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsnt__UnacceptableInitialTerminationTimeFaultType::MinimumTime = MinimumTime; _p->wsnt__UnacceptableInitialTerminationTimeFaultType::MaximumTime = MaximumTime; _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; _p->wsrfbf__BaseFaultType::Originator = Originator1; _p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1; _p->wsrfbf__BaseFaultType::Description = Description1; _p->wsrfbf__BaseFaultType::FaultCause = FaultCause1; } return _p; }

inline void soap_delete_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap *soap, wsnt__UnacceptableInitialTerminationTimeFaultType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsnt__NotifyMessageNotSupportedFaultType
#define SOAP_TYPE_wsnt__NotifyMessageNotSupportedFaultType (725)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, const char*, int, const wsnt__NotifyMessageNotSupportedFaultType *, const char*);
SOAP_FMAC3 wsnt__NotifyMessageNotSupportedFaultType * SOAP_FMAC4 soap_in_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, const char*, wsnt__NotifyMessageNotSupportedFaultType *, const char*);

#ifndef soap_write_wsnt__NotifyMessageNotSupportedFaultType
#define soap_write_wsnt__NotifyMessageNotSupportedFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:NotifyMessageNotSupportedFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__NotifyMessageNotSupportedFaultType * SOAP_FMAC4 soap_get_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, wsnt__NotifyMessageNotSupportedFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__NotifyMessageNotSupportedFaultType
#define soap_read_wsnt__NotifyMessageNotSupportedFaultType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__NotifyMessageNotSupportedFaultType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wsnt__NotifyMessageNotSupportedFaultType * SOAP_FMAC2 soap_instantiate_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__NotifyMessageNotSupportedFaultType * soap_new_wsnt__NotifyMessageNotSupportedFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__NotifyMessageNotSupportedFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__NotifyMessageNotSupportedFaultType * soap_new_req_wsnt__NotifyMessageNotSupportedFaultType(struct soap *soap, time_t Timestamp1) { wsnt__NotifyMessageNotSupportedFaultType *_p = soap_instantiate_wsnt__NotifyMessageNotSupportedFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; } return _p; }

inline wsnt__NotifyMessageNotSupportedFaultType * soap_new_set_wsnt__NotifyMessageNotSupportedFaultType(struct soap *soap, time_t Timestamp1, struct wsa5__EndpointReferenceType *Originator1, _wsrfbf__BaseFaultType_ErrorCode *ErrorCode1, std::vector<_wsrfbf__BaseFaultType_Description >*Description1, _wsrfbf__BaseFaultType_FaultCause *FaultCause1) { wsnt__NotifyMessageNotSupportedFaultType *_p = soap_instantiate_wsnt__NotifyMessageNotSupportedFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; _p->wsrfbf__BaseFaultType::Originator = Originator1; _p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1; _p->wsrfbf__BaseFaultType::Description = Description1; _p->wsrfbf__BaseFaultType::FaultCause = FaultCause1; } return _p; }

inline void soap_delete_wsnt__NotifyMessageNotSupportedFaultType(struct soap *soap, wsnt__NotifyMessageNotSupportedFaultType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsnt__UnsupportedPolicyRequestFaultType
#define SOAP_TYPE_wsnt__UnsupportedPolicyRequestFaultType (724)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, const char*, int, const wsnt__UnsupportedPolicyRequestFaultType *, const char*);
SOAP_FMAC3 wsnt__UnsupportedPolicyRequestFaultType * SOAP_FMAC4 soap_in_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, const char*, wsnt__UnsupportedPolicyRequestFaultType *, const char*);

#ifndef soap_write_wsnt__UnsupportedPolicyRequestFaultType
#define soap_write_wsnt__UnsupportedPolicyRequestFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:UnsupportedPolicyRequestFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__UnsupportedPolicyRequestFaultType * SOAP_FMAC4 soap_get_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, wsnt__UnsupportedPolicyRequestFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnsupportedPolicyRequestFaultType
#define soap_read_wsnt__UnsupportedPolicyRequestFaultType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__UnsupportedPolicyRequestFaultType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wsnt__UnsupportedPolicyRequestFaultType * SOAP_FMAC2 soap_instantiate_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__UnsupportedPolicyRequestFaultType * soap_new_wsnt__UnsupportedPolicyRequestFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__UnsupportedPolicyRequestFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__UnsupportedPolicyRequestFaultType * soap_new_req_wsnt__UnsupportedPolicyRequestFaultType(struct soap *soap, time_t Timestamp1) { wsnt__UnsupportedPolicyRequestFaultType *_p = soap_instantiate_wsnt__UnsupportedPolicyRequestFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; } return _p; }

inline wsnt__UnsupportedPolicyRequestFaultType * soap_new_set_wsnt__UnsupportedPolicyRequestFaultType(struct soap *soap, std::vector<std::string >& UnsupportedPolicy, time_t Timestamp1, struct wsa5__EndpointReferenceType *Originator1, _wsrfbf__BaseFaultType_ErrorCode *ErrorCode1, std::vector<_wsrfbf__BaseFaultType_Description >*Description1, _wsrfbf__BaseFaultType_FaultCause *FaultCause1) { wsnt__UnsupportedPolicyRequestFaultType *_p = soap_instantiate_wsnt__UnsupportedPolicyRequestFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsnt__UnsupportedPolicyRequestFaultType::UnsupportedPolicy = UnsupportedPolicy; _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; _p->wsrfbf__BaseFaultType::Originator = Originator1; _p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1; _p->wsrfbf__BaseFaultType::Description = Description1; _p->wsrfbf__BaseFaultType::FaultCause = FaultCause1; } return _p; }

inline void soap_delete_wsnt__UnsupportedPolicyRequestFaultType(struct soap *soap, wsnt__UnsupportedPolicyRequestFaultType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsnt__UnrecognizedPolicyRequestFaultType
#define SOAP_TYPE_wsnt__UnrecognizedPolicyRequestFaultType (723)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, const char*, int, const wsnt__UnrecognizedPolicyRequestFaultType *, const char*);
SOAP_FMAC3 wsnt__UnrecognizedPolicyRequestFaultType * SOAP_FMAC4 soap_in_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, const char*, wsnt__UnrecognizedPolicyRequestFaultType *, const char*);

#ifndef soap_write_wsnt__UnrecognizedPolicyRequestFaultType
#define soap_write_wsnt__UnrecognizedPolicyRequestFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:UnrecognizedPolicyRequestFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__UnrecognizedPolicyRequestFaultType * SOAP_FMAC4 soap_get_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, wsnt__UnrecognizedPolicyRequestFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnrecognizedPolicyRequestFaultType
#define soap_read_wsnt__UnrecognizedPolicyRequestFaultType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__UnrecognizedPolicyRequestFaultType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wsnt__UnrecognizedPolicyRequestFaultType * SOAP_FMAC2 soap_instantiate_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__UnrecognizedPolicyRequestFaultType * soap_new_wsnt__UnrecognizedPolicyRequestFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__UnrecognizedPolicyRequestFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__UnrecognizedPolicyRequestFaultType * soap_new_req_wsnt__UnrecognizedPolicyRequestFaultType(struct soap *soap, time_t Timestamp1) { wsnt__UnrecognizedPolicyRequestFaultType *_p = soap_instantiate_wsnt__UnrecognizedPolicyRequestFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; } return _p; }

inline wsnt__UnrecognizedPolicyRequestFaultType * soap_new_set_wsnt__UnrecognizedPolicyRequestFaultType(struct soap *soap, std::vector<std::string >& UnrecognizedPolicy, time_t Timestamp1, struct wsa5__EndpointReferenceType *Originator1, _wsrfbf__BaseFaultType_ErrorCode *ErrorCode1, std::vector<_wsrfbf__BaseFaultType_Description >*Description1, _wsrfbf__BaseFaultType_FaultCause *FaultCause1) { wsnt__UnrecognizedPolicyRequestFaultType *_p = soap_instantiate_wsnt__UnrecognizedPolicyRequestFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsnt__UnrecognizedPolicyRequestFaultType::UnrecognizedPolicy = UnrecognizedPolicy; _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; _p->wsrfbf__BaseFaultType::Originator = Originator1; _p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1; _p->wsrfbf__BaseFaultType::Description = Description1; _p->wsrfbf__BaseFaultType::FaultCause = FaultCause1; } return _p; }

inline void soap_delete_wsnt__UnrecognizedPolicyRequestFaultType(struct soap *soap, wsnt__UnrecognizedPolicyRequestFaultType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsnt__InvalidMessageContentExpressionFaultType
#define SOAP_TYPE_wsnt__InvalidMessageContentExpressionFaultType (722)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, const char*, int, const wsnt__InvalidMessageContentExpressionFaultType *, const char*);
SOAP_FMAC3 wsnt__InvalidMessageContentExpressionFaultType * SOAP_FMAC4 soap_in_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, const char*, wsnt__InvalidMessageContentExpressionFaultType *, const char*);

#ifndef soap_write_wsnt__InvalidMessageContentExpressionFaultType
#define soap_write_wsnt__InvalidMessageContentExpressionFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:InvalidMessageContentExpressionFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__InvalidMessageContentExpressionFaultType * SOAP_FMAC4 soap_get_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, wsnt__InvalidMessageContentExpressionFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__InvalidMessageContentExpressionFaultType
#define soap_read_wsnt__InvalidMessageContentExpressionFaultType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__InvalidMessageContentExpressionFaultType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wsnt__InvalidMessageContentExpressionFaultType * SOAP_FMAC2 soap_instantiate_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__InvalidMessageContentExpressionFaultType * soap_new_wsnt__InvalidMessageContentExpressionFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__InvalidMessageContentExpressionFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__InvalidMessageContentExpressionFaultType * soap_new_req_wsnt__InvalidMessageContentExpressionFaultType(struct soap *soap, time_t Timestamp1) { wsnt__InvalidMessageContentExpressionFaultType *_p = soap_instantiate_wsnt__InvalidMessageContentExpressionFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; } return _p; }

inline wsnt__InvalidMessageContentExpressionFaultType * soap_new_set_wsnt__InvalidMessageContentExpressionFaultType(struct soap *soap, time_t Timestamp1, struct wsa5__EndpointReferenceType *Originator1, _wsrfbf__BaseFaultType_ErrorCode *ErrorCode1, std::vector<_wsrfbf__BaseFaultType_Description >*Description1, _wsrfbf__BaseFaultType_FaultCause *FaultCause1) { wsnt__InvalidMessageContentExpressionFaultType *_p = soap_instantiate_wsnt__InvalidMessageContentExpressionFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; _p->wsrfbf__BaseFaultType::Originator = Originator1; _p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1; _p->wsrfbf__BaseFaultType::Description = Description1; _p->wsrfbf__BaseFaultType::FaultCause = FaultCause1; } return _p; }

inline void soap_delete_wsnt__InvalidMessageContentExpressionFaultType(struct soap *soap, wsnt__InvalidMessageContentExpressionFaultType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsnt__InvalidProducerPropertiesExpressionFaultType
#define SOAP_TYPE_wsnt__InvalidProducerPropertiesExpressionFaultType (721)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, const char*, int, const wsnt__InvalidProducerPropertiesExpressionFaultType *, const char*);
SOAP_FMAC3 wsnt__InvalidProducerPropertiesExpressionFaultType * SOAP_FMAC4 soap_in_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, const char*, wsnt__InvalidProducerPropertiesExpressionFaultType *, const char*);

#ifndef soap_write_wsnt__InvalidProducerPropertiesExpressionFaultType
#define soap_write_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:InvalidProducerPropertiesExpressionFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__InvalidProducerPropertiesExpressionFaultType * SOAP_FMAC4 soap_get_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, wsnt__InvalidProducerPropertiesExpressionFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__InvalidProducerPropertiesExpressionFaultType
#define soap_read_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wsnt__InvalidProducerPropertiesExpressionFaultType * SOAP_FMAC2 soap_instantiate_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__InvalidProducerPropertiesExpressionFaultType * soap_new_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__InvalidProducerPropertiesExpressionFaultType * soap_new_req_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap *soap, time_t Timestamp1) { wsnt__InvalidProducerPropertiesExpressionFaultType *_p = soap_instantiate_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; } return _p; }

inline wsnt__InvalidProducerPropertiesExpressionFaultType * soap_new_set_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap *soap, time_t Timestamp1, struct wsa5__EndpointReferenceType *Originator1, _wsrfbf__BaseFaultType_ErrorCode *ErrorCode1, std::vector<_wsrfbf__BaseFaultType_Description >*Description1, _wsrfbf__BaseFaultType_FaultCause *FaultCause1) { wsnt__InvalidProducerPropertiesExpressionFaultType *_p = soap_instantiate_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; _p->wsrfbf__BaseFaultType::Originator = Originator1; _p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1; _p->wsrfbf__BaseFaultType::Description = Description1; _p->wsrfbf__BaseFaultType::FaultCause = FaultCause1; } return _p; }

inline void soap_delete_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap *soap, wsnt__InvalidProducerPropertiesExpressionFaultType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsnt__MultipleTopicsSpecifiedFaultType
#define SOAP_TYPE_wsnt__MultipleTopicsSpecifiedFaultType (720)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, const char*, int, const wsnt__MultipleTopicsSpecifiedFaultType *, const char*);
SOAP_FMAC3 wsnt__MultipleTopicsSpecifiedFaultType * SOAP_FMAC4 soap_in_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, const char*, wsnt__MultipleTopicsSpecifiedFaultType *, const char*);

#ifndef soap_write_wsnt__MultipleTopicsSpecifiedFaultType
#define soap_write_wsnt__MultipleTopicsSpecifiedFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:MultipleTopicsSpecifiedFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__MultipleTopicsSpecifiedFaultType * SOAP_FMAC4 soap_get_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, wsnt__MultipleTopicsSpecifiedFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__MultipleTopicsSpecifiedFaultType
#define soap_read_wsnt__MultipleTopicsSpecifiedFaultType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__MultipleTopicsSpecifiedFaultType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wsnt__MultipleTopicsSpecifiedFaultType * SOAP_FMAC2 soap_instantiate_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__MultipleTopicsSpecifiedFaultType * soap_new_wsnt__MultipleTopicsSpecifiedFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__MultipleTopicsSpecifiedFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__MultipleTopicsSpecifiedFaultType * soap_new_req_wsnt__MultipleTopicsSpecifiedFaultType(struct soap *soap, time_t Timestamp1) { wsnt__MultipleTopicsSpecifiedFaultType *_p = soap_instantiate_wsnt__MultipleTopicsSpecifiedFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; } return _p; }

inline wsnt__MultipleTopicsSpecifiedFaultType * soap_new_set_wsnt__MultipleTopicsSpecifiedFaultType(struct soap *soap, time_t Timestamp1, struct wsa5__EndpointReferenceType *Originator1, _wsrfbf__BaseFaultType_ErrorCode *ErrorCode1, std::vector<_wsrfbf__BaseFaultType_Description >*Description1, _wsrfbf__BaseFaultType_FaultCause *FaultCause1) { wsnt__MultipleTopicsSpecifiedFaultType *_p = soap_instantiate_wsnt__MultipleTopicsSpecifiedFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; _p->wsrfbf__BaseFaultType::Originator = Originator1; _p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1; _p->wsrfbf__BaseFaultType::Description = Description1; _p->wsrfbf__BaseFaultType::FaultCause = FaultCause1; } return _p; }

inline void soap_delete_wsnt__MultipleTopicsSpecifiedFaultType(struct soap *soap, wsnt__MultipleTopicsSpecifiedFaultType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsnt__TopicNotSupportedFaultType
#define SOAP_TYPE_wsnt__TopicNotSupportedFaultType (719)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__TopicNotSupportedFaultType(struct soap*, const char*, int, const wsnt__TopicNotSupportedFaultType *, const char*);
SOAP_FMAC3 wsnt__TopicNotSupportedFaultType * SOAP_FMAC4 soap_in_wsnt__TopicNotSupportedFaultType(struct soap*, const char*, wsnt__TopicNotSupportedFaultType *, const char*);

#ifndef soap_write_wsnt__TopicNotSupportedFaultType
#define soap_write_wsnt__TopicNotSupportedFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:TopicNotSupportedFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__TopicNotSupportedFaultType * SOAP_FMAC4 soap_get_wsnt__TopicNotSupportedFaultType(struct soap*, wsnt__TopicNotSupportedFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__TopicNotSupportedFaultType
#define soap_read_wsnt__TopicNotSupportedFaultType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__TopicNotSupportedFaultType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wsnt__TopicNotSupportedFaultType * SOAP_FMAC2 soap_instantiate_wsnt__TopicNotSupportedFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__TopicNotSupportedFaultType * soap_new_wsnt__TopicNotSupportedFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__TopicNotSupportedFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__TopicNotSupportedFaultType * soap_new_req_wsnt__TopicNotSupportedFaultType(struct soap *soap, time_t Timestamp1) { wsnt__TopicNotSupportedFaultType *_p = soap_instantiate_wsnt__TopicNotSupportedFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; } return _p; }

inline wsnt__TopicNotSupportedFaultType * soap_new_set_wsnt__TopicNotSupportedFaultType(struct soap *soap, time_t Timestamp1, struct wsa5__EndpointReferenceType *Originator1, _wsrfbf__BaseFaultType_ErrorCode *ErrorCode1, std::vector<_wsrfbf__BaseFaultType_Description >*Description1, _wsrfbf__BaseFaultType_FaultCause *FaultCause1) { wsnt__TopicNotSupportedFaultType *_p = soap_instantiate_wsnt__TopicNotSupportedFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; _p->wsrfbf__BaseFaultType::Originator = Originator1; _p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1; _p->wsrfbf__BaseFaultType::Description = Description1; _p->wsrfbf__BaseFaultType::FaultCause = FaultCause1; } return _p; }

inline void soap_delete_wsnt__TopicNotSupportedFaultType(struct soap *soap, wsnt__TopicNotSupportedFaultType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsnt__TopicNotSupportedFaultType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsnt__InvalidTopicExpressionFaultType
#define SOAP_TYPE_wsnt__InvalidTopicExpressionFaultType (718)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__InvalidTopicExpressionFaultType(struct soap*, const char*, int, const wsnt__InvalidTopicExpressionFaultType *, const char*);
SOAP_FMAC3 wsnt__InvalidTopicExpressionFaultType * SOAP_FMAC4 soap_in_wsnt__InvalidTopicExpressionFaultType(struct soap*, const char*, wsnt__InvalidTopicExpressionFaultType *, const char*);

#ifndef soap_write_wsnt__InvalidTopicExpressionFaultType
#define soap_write_wsnt__InvalidTopicExpressionFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:InvalidTopicExpressionFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__InvalidTopicExpressionFaultType * SOAP_FMAC4 soap_get_wsnt__InvalidTopicExpressionFaultType(struct soap*, wsnt__InvalidTopicExpressionFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__InvalidTopicExpressionFaultType
#define soap_read_wsnt__InvalidTopicExpressionFaultType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__InvalidTopicExpressionFaultType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wsnt__InvalidTopicExpressionFaultType * SOAP_FMAC2 soap_instantiate_wsnt__InvalidTopicExpressionFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__InvalidTopicExpressionFaultType * soap_new_wsnt__InvalidTopicExpressionFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__InvalidTopicExpressionFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__InvalidTopicExpressionFaultType * soap_new_req_wsnt__InvalidTopicExpressionFaultType(struct soap *soap, time_t Timestamp1) { wsnt__InvalidTopicExpressionFaultType *_p = soap_instantiate_wsnt__InvalidTopicExpressionFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; } return _p; }

inline wsnt__InvalidTopicExpressionFaultType * soap_new_set_wsnt__InvalidTopicExpressionFaultType(struct soap *soap, time_t Timestamp1, struct wsa5__EndpointReferenceType *Originator1, _wsrfbf__BaseFaultType_ErrorCode *ErrorCode1, std::vector<_wsrfbf__BaseFaultType_Description >*Description1, _wsrfbf__BaseFaultType_FaultCause *FaultCause1) { wsnt__InvalidTopicExpressionFaultType *_p = soap_instantiate_wsnt__InvalidTopicExpressionFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; _p->wsrfbf__BaseFaultType::Originator = Originator1; _p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1; _p->wsrfbf__BaseFaultType::Description = Description1; _p->wsrfbf__BaseFaultType::FaultCause = FaultCause1; } return _p; }

inline void soap_delete_wsnt__InvalidTopicExpressionFaultType(struct soap *soap, wsnt__InvalidTopicExpressionFaultType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsnt__InvalidTopicExpressionFaultType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsnt__TopicExpressionDialectUnknownFaultType
#define SOAP_TYPE_wsnt__TopicExpressionDialectUnknownFaultType (717)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, const char*, int, const wsnt__TopicExpressionDialectUnknownFaultType *, const char*);
SOAP_FMAC3 wsnt__TopicExpressionDialectUnknownFaultType * SOAP_FMAC4 soap_in_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, const char*, wsnt__TopicExpressionDialectUnknownFaultType *, const char*);

#ifndef soap_write_wsnt__TopicExpressionDialectUnknownFaultType
#define soap_write_wsnt__TopicExpressionDialectUnknownFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:TopicExpressionDialectUnknownFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__TopicExpressionDialectUnknownFaultType * SOAP_FMAC4 soap_get_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, wsnt__TopicExpressionDialectUnknownFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__TopicExpressionDialectUnknownFaultType
#define soap_read_wsnt__TopicExpressionDialectUnknownFaultType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__TopicExpressionDialectUnknownFaultType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wsnt__TopicExpressionDialectUnknownFaultType * SOAP_FMAC2 soap_instantiate_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__TopicExpressionDialectUnknownFaultType * soap_new_wsnt__TopicExpressionDialectUnknownFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__TopicExpressionDialectUnknownFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__TopicExpressionDialectUnknownFaultType * soap_new_req_wsnt__TopicExpressionDialectUnknownFaultType(struct soap *soap, time_t Timestamp1) { wsnt__TopicExpressionDialectUnknownFaultType *_p = soap_instantiate_wsnt__TopicExpressionDialectUnknownFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; } return _p; }

inline wsnt__TopicExpressionDialectUnknownFaultType * soap_new_set_wsnt__TopicExpressionDialectUnknownFaultType(struct soap *soap, time_t Timestamp1, struct wsa5__EndpointReferenceType *Originator1, _wsrfbf__BaseFaultType_ErrorCode *ErrorCode1, std::vector<_wsrfbf__BaseFaultType_Description >*Description1, _wsrfbf__BaseFaultType_FaultCause *FaultCause1) { wsnt__TopicExpressionDialectUnknownFaultType *_p = soap_instantiate_wsnt__TopicExpressionDialectUnknownFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; _p->wsrfbf__BaseFaultType::Originator = Originator1; _p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1; _p->wsrfbf__BaseFaultType::Description = Description1; _p->wsrfbf__BaseFaultType::FaultCause = FaultCause1; } return _p; }

inline void soap_delete_wsnt__TopicExpressionDialectUnknownFaultType(struct soap *soap, wsnt__TopicExpressionDialectUnknownFaultType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsnt__InvalidFilterFaultType
#define SOAP_TYPE_wsnt__InvalidFilterFaultType (716)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__InvalidFilterFaultType(struct soap*, const char*, int, const wsnt__InvalidFilterFaultType *, const char*);
SOAP_FMAC3 wsnt__InvalidFilterFaultType * SOAP_FMAC4 soap_in_wsnt__InvalidFilterFaultType(struct soap*, const char*, wsnt__InvalidFilterFaultType *, const char*);

#ifndef soap_write_wsnt__InvalidFilterFaultType
#define soap_write_wsnt__InvalidFilterFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:InvalidFilterFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__InvalidFilterFaultType * SOAP_FMAC4 soap_get_wsnt__InvalidFilterFaultType(struct soap*, wsnt__InvalidFilterFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__InvalidFilterFaultType
#define soap_read_wsnt__InvalidFilterFaultType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__InvalidFilterFaultType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wsnt__InvalidFilterFaultType * SOAP_FMAC2 soap_instantiate_wsnt__InvalidFilterFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__InvalidFilterFaultType * soap_new_wsnt__InvalidFilterFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__InvalidFilterFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__InvalidFilterFaultType * soap_new_req_wsnt__InvalidFilterFaultType(struct soap *soap, std::vector<std::string >& UnknownFilter, time_t Timestamp1) { wsnt__InvalidFilterFaultType *_p = soap_instantiate_wsnt__InvalidFilterFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsnt__InvalidFilterFaultType::UnknownFilter = UnknownFilter; _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; } return _p; }

inline wsnt__InvalidFilterFaultType * soap_new_set_wsnt__InvalidFilterFaultType(struct soap *soap, std::vector<std::string >& UnknownFilter, time_t Timestamp1, struct wsa5__EndpointReferenceType *Originator1, _wsrfbf__BaseFaultType_ErrorCode *ErrorCode1, std::vector<_wsrfbf__BaseFaultType_Description >*Description1, _wsrfbf__BaseFaultType_FaultCause *FaultCause1) { wsnt__InvalidFilterFaultType *_p = soap_instantiate_wsnt__InvalidFilterFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsnt__InvalidFilterFaultType::UnknownFilter = UnknownFilter; _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; _p->wsrfbf__BaseFaultType::Originator = Originator1; _p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1; _p->wsrfbf__BaseFaultType::Description = Description1; _p->wsrfbf__BaseFaultType::FaultCause = FaultCause1; } return _p; }

inline void soap_delete_wsnt__InvalidFilterFaultType(struct soap *soap, wsnt__InvalidFilterFaultType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsnt__InvalidFilterFaultType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsnt__SubscribeCreationFailedFaultType
#define SOAP_TYPE_wsnt__SubscribeCreationFailedFaultType (715)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__SubscribeCreationFailedFaultType(struct soap*, const char*, int, const wsnt__SubscribeCreationFailedFaultType *, const char*);
SOAP_FMAC3 wsnt__SubscribeCreationFailedFaultType * SOAP_FMAC4 soap_in_wsnt__SubscribeCreationFailedFaultType(struct soap*, const char*, wsnt__SubscribeCreationFailedFaultType *, const char*);

#ifndef soap_write_wsnt__SubscribeCreationFailedFaultType
#define soap_write_wsnt__SubscribeCreationFailedFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:SubscribeCreationFailedFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__SubscribeCreationFailedFaultType * SOAP_FMAC4 soap_get_wsnt__SubscribeCreationFailedFaultType(struct soap*, wsnt__SubscribeCreationFailedFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__SubscribeCreationFailedFaultType
#define soap_read_wsnt__SubscribeCreationFailedFaultType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__SubscribeCreationFailedFaultType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wsnt__SubscribeCreationFailedFaultType * SOAP_FMAC2 soap_instantiate_wsnt__SubscribeCreationFailedFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__SubscribeCreationFailedFaultType * soap_new_wsnt__SubscribeCreationFailedFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__SubscribeCreationFailedFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__SubscribeCreationFailedFaultType * soap_new_req_wsnt__SubscribeCreationFailedFaultType(struct soap *soap, time_t Timestamp1) { wsnt__SubscribeCreationFailedFaultType *_p = soap_instantiate_wsnt__SubscribeCreationFailedFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; } return _p; }

inline wsnt__SubscribeCreationFailedFaultType * soap_new_set_wsnt__SubscribeCreationFailedFaultType(struct soap *soap, time_t Timestamp1, struct wsa5__EndpointReferenceType *Originator1, _wsrfbf__BaseFaultType_ErrorCode *ErrorCode1, std::vector<_wsrfbf__BaseFaultType_Description >*Description1, _wsrfbf__BaseFaultType_FaultCause *FaultCause1) { wsnt__SubscribeCreationFailedFaultType *_p = soap_instantiate_wsnt__SubscribeCreationFailedFaultType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsrfbf__BaseFaultType::Timestamp = Timestamp1; _p->wsrfbf__BaseFaultType::Originator = Originator1; _p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1; _p->wsrfbf__BaseFaultType::Description = Description1; _p->wsrfbf__BaseFaultType::FaultCause = FaultCause1; } return _p; }

inline void soap_delete_wsnt__SubscribeCreationFailedFaultType(struct soap *soap, wsnt__SubscribeCreationFailedFaultType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsnt__SubscribeCreationFailedFaultType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsnt__NotificationMessageHolderType
#define SOAP_TYPE_wsnt__NotificationMessageHolderType (714)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__NotificationMessageHolderType(struct soap*, const char*, int, const wsnt__NotificationMessageHolderType *, const char*);
SOAP_FMAC3 wsnt__NotificationMessageHolderType * SOAP_FMAC4 soap_in_wsnt__NotificationMessageHolderType(struct soap*, const char*, wsnt__NotificationMessageHolderType *, const char*);

#ifndef soap_write_wsnt__NotificationMessageHolderType
#define soap_write_wsnt__NotificationMessageHolderType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:NotificationMessageHolderType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__NotificationMessageHolderType * SOAP_FMAC4 soap_get_wsnt__NotificationMessageHolderType(struct soap*, wsnt__NotificationMessageHolderType *, const char*, const char*);

#ifndef soap_read_wsnt__NotificationMessageHolderType
#define soap_read_wsnt__NotificationMessageHolderType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__NotificationMessageHolderType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wsnt__NotificationMessageHolderType * SOAP_FMAC2 soap_instantiate_wsnt__NotificationMessageHolderType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__NotificationMessageHolderType * soap_new_wsnt__NotificationMessageHolderType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__NotificationMessageHolderType(soap, n, NULL, NULL, NULL); }

inline wsnt__NotificationMessageHolderType * soap_new_req_wsnt__NotificationMessageHolderType(struct soap *soap, _wsnt__NotificationMessageHolderType_Message& Message) { wsnt__NotificationMessageHolderType *_p = soap_instantiate_wsnt__NotificationMessageHolderType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsnt__NotificationMessageHolderType::Message = Message; } return _p; }

inline wsnt__NotificationMessageHolderType * soap_new_set_wsnt__NotificationMessageHolderType(struct soap *soap, struct wsa5__EndpointReferenceType *SubscriptionReference, wsnt__TopicExpressionType *Topic, struct wsa5__EndpointReferenceType *ProducerReference, _wsnt__NotificationMessageHolderType_Message& Message) { wsnt__NotificationMessageHolderType *_p = soap_instantiate_wsnt__NotificationMessageHolderType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsnt__NotificationMessageHolderType::SubscriptionReference = SubscriptionReference; _p->wsnt__NotificationMessageHolderType::Topic = Topic; _p->wsnt__NotificationMessageHolderType::ProducerReference = ProducerReference; _p->wsnt__NotificationMessageHolderType::Message = Message; } return _p; }

inline void soap_delete_wsnt__NotificationMessageHolderType(struct soap *soap, wsnt__NotificationMessageHolderType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsnt__NotificationMessageHolderType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsnt__SubscriptionPolicyType
#define SOAP_TYPE_wsnt__SubscriptionPolicyType (713)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__SubscriptionPolicyType(struct soap*, const char*, int, const wsnt__SubscriptionPolicyType *, const char*);
SOAP_FMAC3 wsnt__SubscriptionPolicyType * SOAP_FMAC4 soap_in_wsnt__SubscriptionPolicyType(struct soap*, const char*, wsnt__SubscriptionPolicyType *, const char*);

#ifndef soap_write_wsnt__SubscriptionPolicyType
#define soap_write_wsnt__SubscriptionPolicyType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:SubscriptionPolicyType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__SubscriptionPolicyType * SOAP_FMAC4 soap_get_wsnt__SubscriptionPolicyType(struct soap*, wsnt__SubscriptionPolicyType *, const char*, const char*);

#ifndef soap_read_wsnt__SubscriptionPolicyType
#define soap_read_wsnt__SubscriptionPolicyType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__SubscriptionPolicyType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wsnt__SubscriptionPolicyType * SOAP_FMAC2 soap_instantiate_wsnt__SubscriptionPolicyType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__SubscriptionPolicyType * soap_new_wsnt__SubscriptionPolicyType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__SubscriptionPolicyType(soap, n, NULL, NULL, NULL); }

inline wsnt__SubscriptionPolicyType * soap_new_req_wsnt__SubscriptionPolicyType(struct soap *soap) { wsnt__SubscriptionPolicyType *_p = soap_instantiate_wsnt__SubscriptionPolicyType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline wsnt__SubscriptionPolicyType * soap_new_set_wsnt__SubscriptionPolicyType(struct soap *soap) { wsnt__SubscriptionPolicyType *_p = soap_instantiate_wsnt__SubscriptionPolicyType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_wsnt__SubscriptionPolicyType(struct soap *soap, wsnt__SubscriptionPolicyType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsnt__SubscriptionPolicyType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsnt__FilterType
#define SOAP_TYPE_wsnt__FilterType (712)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__FilterType(struct soap*, const char*, int, const wsnt__FilterType *, const char*);
SOAP_FMAC3 wsnt__FilterType * SOAP_FMAC4 soap_in_wsnt__FilterType(struct soap*, const char*, wsnt__FilterType *, const char*);

#ifndef soap_write_wsnt__FilterType
#define soap_write_wsnt__FilterType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:FilterType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__FilterType * SOAP_FMAC4 soap_get_wsnt__FilterType(struct soap*, wsnt__FilterType *, const char*, const char*);

#ifndef soap_read_wsnt__FilterType
#define soap_read_wsnt__FilterType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__FilterType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wsnt__FilterType * SOAP_FMAC2 soap_instantiate_wsnt__FilterType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__FilterType * soap_new_wsnt__FilterType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__FilterType(soap, n, NULL, NULL, NULL); }

inline wsnt__FilterType * soap_new_req_wsnt__FilterType(struct soap *soap) { wsnt__FilterType *_p = soap_instantiate_wsnt__FilterType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline wsnt__FilterType * soap_new_set_wsnt__FilterType(struct soap *soap) { wsnt__FilterType *_p = soap_instantiate_wsnt__FilterType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_wsnt__FilterType(struct soap *soap, wsnt__FilterType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsnt__FilterType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsnt__TopicExpressionType
#define SOAP_TYPE_wsnt__TopicExpressionType (711)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__TopicExpressionType(struct soap*, const char*, int, const wsnt__TopicExpressionType *, const char*);
SOAP_FMAC3 wsnt__TopicExpressionType * SOAP_FMAC4 soap_in_wsnt__TopicExpressionType(struct soap*, const char*, wsnt__TopicExpressionType *, const char*);

#ifndef soap_write_wsnt__TopicExpressionType
#define soap_write_wsnt__TopicExpressionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:TopicExpressionType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__TopicExpressionType * SOAP_FMAC4 soap_get_wsnt__TopicExpressionType(struct soap*, wsnt__TopicExpressionType *, const char*, const char*);

#ifndef soap_read_wsnt__TopicExpressionType
#define soap_read_wsnt__TopicExpressionType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__TopicExpressionType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wsnt__TopicExpressionType * SOAP_FMAC2 soap_instantiate_wsnt__TopicExpressionType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__TopicExpressionType * soap_new_wsnt__TopicExpressionType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__TopicExpressionType(soap, n, NULL, NULL, NULL); }

inline wsnt__TopicExpressionType * soap_new_req_wsnt__TopicExpressionType(struct soap *soap, std::string& Dialect) { wsnt__TopicExpressionType *_p = soap_instantiate_wsnt__TopicExpressionType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsnt__TopicExpressionType::Dialect = Dialect; } return _p; }

inline wsnt__TopicExpressionType * soap_new_set_wsnt__TopicExpressionType(struct soap *soap, std::string& Dialect, char *__mixed) { wsnt__TopicExpressionType *_p = soap_instantiate_wsnt__TopicExpressionType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsnt__TopicExpressionType::Dialect = Dialect; _p->wsnt__TopicExpressionType::__mixed = __mixed; } return _p; }

inline void soap_delete_wsnt__TopicExpressionType(struct soap *soap, wsnt__TopicExpressionType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsnt__TopicExpressionType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsnt__QueryExpressionType
#define SOAP_TYPE_wsnt__QueryExpressionType (710)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__QueryExpressionType(struct soap*, const char*, int, const wsnt__QueryExpressionType *, const char*);
SOAP_FMAC3 wsnt__QueryExpressionType * SOAP_FMAC4 soap_in_wsnt__QueryExpressionType(struct soap*, const char*, wsnt__QueryExpressionType *, const char*);

#ifndef soap_write_wsnt__QueryExpressionType
#define soap_write_wsnt__QueryExpressionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "wsnt:QueryExpressionType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__QueryExpressionType * SOAP_FMAC4 soap_get_wsnt__QueryExpressionType(struct soap*, wsnt__QueryExpressionType *, const char*, const char*);

#ifndef soap_read_wsnt__QueryExpressionType
#define soap_read_wsnt__QueryExpressionType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__QueryExpressionType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 wsnt__QueryExpressionType * SOAP_FMAC2 soap_instantiate_wsnt__QueryExpressionType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__QueryExpressionType * soap_new_wsnt__QueryExpressionType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__QueryExpressionType(soap, n, NULL, NULL, NULL); }

inline wsnt__QueryExpressionType * soap_new_req_wsnt__QueryExpressionType(struct soap *soap, std::string& Dialect) { wsnt__QueryExpressionType *_p = soap_instantiate_wsnt__QueryExpressionType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsnt__QueryExpressionType::Dialect = Dialect; } return _p; }

inline wsnt__QueryExpressionType * soap_new_set_wsnt__QueryExpressionType(struct soap *soap, std::string& Dialect, char *__mixed) { wsnt__QueryExpressionType *_p = soap_instantiate_wsnt__QueryExpressionType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->wsnt__QueryExpressionType::Dialect = Dialect; _p->wsnt__QueryExpressionType::__mixed = __mixed; } return _p; }

inline void soap_delete_wsnt__QueryExpressionType(struct soap *soap, wsnt__QueryExpressionType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsnt__QueryExpressionType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tt__Message
#define SOAP_TYPE__tt__Message (709)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__Message(struct soap*, const char*, int, const _tt__Message *, const char*);
SOAP_FMAC3 _tt__Message * SOAP_FMAC4 soap_in__tt__Message(struct soap*, const char*, _tt__Message *, const char*);

#ifndef soap_write__tt__Message
#define soap_write__tt__Message(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Message", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tt__Message * SOAP_FMAC4 soap_get__tt__Message(struct soap*, _tt__Message *, const char*, const char*);

#ifndef soap_read__tt__Message
#define soap_read__tt__Message(soap, data) ( soap_begin_recv(soap) || !soap_get__tt__Message(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tt__Message * SOAP_FMAC2 soap_instantiate__tt__Message(struct soap*, int, const char*, const char*, size_t*);

inline _tt__Message * soap_new__tt__Message(struct soap *soap, int n = -1) { return soap_instantiate__tt__Message(soap, n, NULL, NULL, NULL); }

inline _tt__Message * soap_new_req__tt__Message(struct soap *soap, time_t UtcTime) { _tt__Message *_p = soap_instantiate__tt__Message(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tt__Message::UtcTime = UtcTime; } return _p; }

inline _tt__Message * soap_new_set__tt__Message(struct soap *soap, tt__ItemList *Source, tt__ItemList *Key, tt__ItemList *Data, tt__MessageExtension *Extension, time_t UtcTime, enum tt__PropertyOperation *PropertyOperation) { _tt__Message *_p = soap_instantiate__tt__Message(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tt__Message::Source = Source; _p->_tt__Message::Key = Key; _p->_tt__Message::Data = Data; _p->_tt__Message::Extension = Extension; _p->_tt__Message::UtcTime = UtcTime; _p->_tt__Message::PropertyOperation = PropertyOperation; } return _p; }

inline void soap_delete__tt__Message(struct soap *soap, _tt__Message *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tt__Message(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__OSDConfigurationOptionsExtension
#define SOAP_TYPE_tt__OSDConfigurationOptionsExtension (708)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDConfigurationOptionsExtension(struct soap*, const char*, int, const tt__OSDConfigurationOptionsExtension *, const char*);
SOAP_FMAC3 tt__OSDConfigurationOptionsExtension * SOAP_FMAC4 soap_in_tt__OSDConfigurationOptionsExtension(struct soap*, const char*, tt__OSDConfigurationOptionsExtension *, const char*);

#ifndef soap_write_tt__OSDConfigurationOptionsExtension
#define soap_write_tt__OSDConfigurationOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:OSDConfigurationOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDConfigurationOptionsExtension * SOAP_FMAC4 soap_get_tt__OSDConfigurationOptionsExtension(struct soap*, tt__OSDConfigurationOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__OSDConfigurationOptionsExtension
#define soap_read_tt__OSDConfigurationOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__OSDConfigurationOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__OSDConfigurationOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__OSDConfigurationOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDConfigurationOptionsExtension * soap_new_tt__OSDConfigurationOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDConfigurationOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__OSDConfigurationOptionsExtension * soap_new_req_tt__OSDConfigurationOptionsExtension(struct soap *soap) { tt__OSDConfigurationOptionsExtension *_p = soap_instantiate_tt__OSDConfigurationOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__OSDConfigurationOptionsExtension * soap_new_set_tt__OSDConfigurationOptionsExtension(struct soap *soap) { tt__OSDConfigurationOptionsExtension *_p = soap_instantiate_tt__OSDConfigurationOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__OSDConfigurationOptionsExtension(struct soap *soap, tt__OSDConfigurationOptionsExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__OSDConfigurationOptionsExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__OSDConfigurationOptions
#define SOAP_TYPE_tt__OSDConfigurationOptions (707)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDConfigurationOptions(struct soap*, const char*, int, const tt__OSDConfigurationOptions *, const char*);
SOAP_FMAC3 tt__OSDConfigurationOptions * SOAP_FMAC4 soap_in_tt__OSDConfigurationOptions(struct soap*, const char*, tt__OSDConfigurationOptions *, const char*);

#ifndef soap_write_tt__OSDConfigurationOptions
#define soap_write_tt__OSDConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:OSDConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDConfigurationOptions * SOAP_FMAC4 soap_get_tt__OSDConfigurationOptions(struct soap*, tt__OSDConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tt__OSDConfigurationOptions
#define soap_read_tt__OSDConfigurationOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__OSDConfigurationOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__OSDConfigurationOptions * SOAP_FMAC2 soap_instantiate_tt__OSDConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDConfigurationOptions * soap_new_tt__OSDConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline tt__OSDConfigurationOptions * soap_new_req_tt__OSDConfigurationOptions(struct soap *soap, tt__MaximumNumberOfOSDs *MaximumNumberOfOSDs, std::vector<enum tt__OSDType >& Type, std::vector<std::string >& PositionOption) { tt__OSDConfigurationOptions *_p = soap_instantiate_tt__OSDConfigurationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__OSDConfigurationOptions::MaximumNumberOfOSDs = MaximumNumberOfOSDs; _p->tt__OSDConfigurationOptions::Type = Type; _p->tt__OSDConfigurationOptions::PositionOption = PositionOption; } return _p; }

inline tt__OSDConfigurationOptions * soap_new_set_tt__OSDConfigurationOptions(struct soap *soap, tt__MaximumNumberOfOSDs *MaximumNumberOfOSDs, std::vector<enum tt__OSDType >& Type, std::vector<std::string >& PositionOption, tt__OSDTextOptions *TextOption, tt__OSDImgOptions *ImageOption, tt__OSDConfigurationOptionsExtension *Extension) { tt__OSDConfigurationOptions *_p = soap_instantiate_tt__OSDConfigurationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__OSDConfigurationOptions::MaximumNumberOfOSDs = MaximumNumberOfOSDs; _p->tt__OSDConfigurationOptions::Type = Type; _p->tt__OSDConfigurationOptions::PositionOption = PositionOption; _p->tt__OSDConfigurationOptions::TextOption = TextOption; _p->tt__OSDConfigurationOptions::ImageOption = ImageOption; _p->tt__OSDConfigurationOptions::Extension = Extension; } return _p; }

inline void soap_delete_tt__OSDConfigurationOptions(struct soap *soap, tt__OSDConfigurationOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__OSDConfigurationOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__MaximumNumberOfOSDs
#define SOAP_TYPE_tt__MaximumNumberOfOSDs (706)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MaximumNumberOfOSDs(struct soap*, const char*, int, const tt__MaximumNumberOfOSDs *, const char*);
SOAP_FMAC3 tt__MaximumNumberOfOSDs * SOAP_FMAC4 soap_in_tt__MaximumNumberOfOSDs(struct soap*, const char*, tt__MaximumNumberOfOSDs *, const char*);

#ifndef soap_write_tt__MaximumNumberOfOSDs
#define soap_write_tt__MaximumNumberOfOSDs(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:MaximumNumberOfOSDs", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MaximumNumberOfOSDs * SOAP_FMAC4 soap_get_tt__MaximumNumberOfOSDs(struct soap*, tt__MaximumNumberOfOSDs *, const char*, const char*);

#ifndef soap_read_tt__MaximumNumberOfOSDs
#define soap_read_tt__MaximumNumberOfOSDs(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__MaximumNumberOfOSDs(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__MaximumNumberOfOSDs * SOAP_FMAC2 soap_instantiate_tt__MaximumNumberOfOSDs(struct soap*, int, const char*, const char*, size_t*);

inline tt__MaximumNumberOfOSDs * soap_new_tt__MaximumNumberOfOSDs(struct soap *soap, int n = -1) { return soap_instantiate_tt__MaximumNumberOfOSDs(soap, n, NULL, NULL, NULL); }

inline tt__MaximumNumberOfOSDs * soap_new_req_tt__MaximumNumberOfOSDs(struct soap *soap, int Total) { tt__MaximumNumberOfOSDs *_p = soap_instantiate_tt__MaximumNumberOfOSDs(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MaximumNumberOfOSDs::Total = Total; } return _p; }

inline tt__MaximumNumberOfOSDs * soap_new_set_tt__MaximumNumberOfOSDs(struct soap *soap, int Total, int *Image, int *PlainText, int *Date, int *Time, int *DateAndTime) { tt__MaximumNumberOfOSDs *_p = soap_instantiate_tt__MaximumNumberOfOSDs(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MaximumNumberOfOSDs::Total = Total; _p->tt__MaximumNumberOfOSDs::Image = Image; _p->tt__MaximumNumberOfOSDs::PlainText = PlainText; _p->tt__MaximumNumberOfOSDs::Date = Date; _p->tt__MaximumNumberOfOSDs::Time = Time; _p->tt__MaximumNumberOfOSDs::DateAndTime = DateAndTime; } return _p; }

inline void soap_delete_tt__MaximumNumberOfOSDs(struct soap *soap, tt__MaximumNumberOfOSDs *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__MaximumNumberOfOSDs(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__OSDConfigurationExtension
#define SOAP_TYPE_tt__OSDConfigurationExtension (705)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDConfigurationExtension(struct soap*, const char*, int, const tt__OSDConfigurationExtension *, const char*);
SOAP_FMAC3 tt__OSDConfigurationExtension * SOAP_FMAC4 soap_in_tt__OSDConfigurationExtension(struct soap*, const char*, tt__OSDConfigurationExtension *, const char*);

#ifndef soap_write_tt__OSDConfigurationExtension
#define soap_write_tt__OSDConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:OSDConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDConfigurationExtension * SOAP_FMAC4 soap_get_tt__OSDConfigurationExtension(struct soap*, tt__OSDConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__OSDConfigurationExtension
#define soap_read_tt__OSDConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__OSDConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__OSDConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__OSDConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDConfigurationExtension * soap_new_tt__OSDConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__OSDConfigurationExtension * soap_new_req_tt__OSDConfigurationExtension(struct soap *soap) { tt__OSDConfigurationExtension *_p = soap_instantiate_tt__OSDConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__OSDConfigurationExtension * soap_new_set_tt__OSDConfigurationExtension(struct soap *soap) { tt__OSDConfigurationExtension *_p = soap_instantiate_tt__OSDConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__OSDConfigurationExtension(struct soap *soap, tt__OSDConfigurationExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__OSDConfigurationExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__OSDConfiguration
#define SOAP_TYPE_tt__OSDConfiguration (704)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDConfiguration(struct soap*, const char*, int, const tt__OSDConfiguration *, const char*);
SOAP_FMAC3 tt__OSDConfiguration * SOAP_FMAC4 soap_in_tt__OSDConfiguration(struct soap*, const char*, tt__OSDConfiguration *, const char*);

#ifndef soap_write_tt__OSDConfiguration
#define soap_write_tt__OSDConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:OSDConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDConfiguration * SOAP_FMAC4 soap_get_tt__OSDConfiguration(struct soap*, tt__OSDConfiguration *, const char*, const char*);

#ifndef soap_read_tt__OSDConfiguration
#define soap_read_tt__OSDConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__OSDConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__OSDConfiguration * SOAP_FMAC2 soap_instantiate_tt__OSDConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDConfiguration * soap_new_tt__OSDConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__OSDConfiguration * soap_new_req_tt__OSDConfiguration(struct soap *soap, tt__OSDReference *VideoSourceConfigurationToken, enum tt__OSDType Type, tt__OSDPosConfiguration *Position, std::string& token1) { tt__OSDConfiguration *_p = soap_instantiate_tt__OSDConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__OSDConfiguration::VideoSourceConfigurationToken = VideoSourceConfigurationToken; _p->tt__OSDConfiguration::Type = Type; _p->tt__OSDConfiguration::Position = Position; _p->tt__DeviceEntity::token = token1; } return _p; }

inline tt__OSDConfiguration * soap_new_set_tt__OSDConfiguration(struct soap *soap, tt__OSDReference *VideoSourceConfigurationToken, enum tt__OSDType Type, tt__OSDPosConfiguration *Position, tt__OSDTextConfiguration *TextString, tt__OSDImgConfiguration *Image, tt__OSDConfigurationExtension *Extension, std::string& token1) { tt__OSDConfiguration *_p = soap_instantiate_tt__OSDConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__OSDConfiguration::VideoSourceConfigurationToken = VideoSourceConfigurationToken; _p->tt__OSDConfiguration::Type = Type; _p->tt__OSDConfiguration::Position = Position; _p->tt__OSDConfiguration::TextString = TextString; _p->tt__OSDConfiguration::Image = Image; _p->tt__OSDConfiguration::Extension = Extension; _p->tt__DeviceEntity::token = token1; } return _p; }

inline void soap_delete_tt__OSDConfiguration(struct soap *soap, tt__OSDConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__OSDConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__OSDImgOptionsExtension
#define SOAP_TYPE_tt__OSDImgOptionsExtension (703)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDImgOptionsExtension(struct soap*, const char*, int, const tt__OSDImgOptionsExtension *, const char*);
SOAP_FMAC3 tt__OSDImgOptionsExtension * SOAP_FMAC4 soap_in_tt__OSDImgOptionsExtension(struct soap*, const char*, tt__OSDImgOptionsExtension *, const char*);

#ifndef soap_write_tt__OSDImgOptionsExtension
#define soap_write_tt__OSDImgOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:OSDImgOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDImgOptionsExtension * SOAP_FMAC4 soap_get_tt__OSDImgOptionsExtension(struct soap*, tt__OSDImgOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__OSDImgOptionsExtension
#define soap_read_tt__OSDImgOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__OSDImgOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__OSDImgOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__OSDImgOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDImgOptionsExtension * soap_new_tt__OSDImgOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDImgOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__OSDImgOptionsExtension * soap_new_req_tt__OSDImgOptionsExtension(struct soap *soap) { tt__OSDImgOptionsExtension *_p = soap_instantiate_tt__OSDImgOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__OSDImgOptionsExtension * soap_new_set_tt__OSDImgOptionsExtension(struct soap *soap) { tt__OSDImgOptionsExtension *_p = soap_instantiate_tt__OSDImgOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__OSDImgOptionsExtension(struct soap *soap, tt__OSDImgOptionsExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__OSDImgOptionsExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__OSDImgOptions
#define SOAP_TYPE_tt__OSDImgOptions (702)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDImgOptions(struct soap*, const char*, int, const tt__OSDImgOptions *, const char*);
SOAP_FMAC3 tt__OSDImgOptions * SOAP_FMAC4 soap_in_tt__OSDImgOptions(struct soap*, const char*, tt__OSDImgOptions *, const char*);

#ifndef soap_write_tt__OSDImgOptions
#define soap_write_tt__OSDImgOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:OSDImgOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDImgOptions * SOAP_FMAC4 soap_get_tt__OSDImgOptions(struct soap*, tt__OSDImgOptions *, const char*, const char*);

#ifndef soap_read_tt__OSDImgOptions
#define soap_read_tt__OSDImgOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__OSDImgOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__OSDImgOptions * SOAP_FMAC2 soap_instantiate_tt__OSDImgOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDImgOptions * soap_new_tt__OSDImgOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDImgOptions(soap, n, NULL, NULL, NULL); }

inline tt__OSDImgOptions * soap_new_req_tt__OSDImgOptions(struct soap *soap, std::vector<std::string >& ImagePath) { tt__OSDImgOptions *_p = soap_instantiate_tt__OSDImgOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__OSDImgOptions::ImagePath = ImagePath; } return _p; }

inline tt__OSDImgOptions * soap_new_set_tt__OSDImgOptions(struct soap *soap, std::vector<std::string >& ImagePath, tt__OSDImgOptionsExtension *Extension) { tt__OSDImgOptions *_p = soap_instantiate_tt__OSDImgOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__OSDImgOptions::ImagePath = ImagePath; _p->tt__OSDImgOptions::Extension = Extension; } return _p; }

inline void soap_delete_tt__OSDImgOptions(struct soap *soap, tt__OSDImgOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__OSDImgOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__OSDTextOptionsExtension
#define SOAP_TYPE_tt__OSDTextOptionsExtension (701)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDTextOptionsExtension(struct soap*, const char*, int, const tt__OSDTextOptionsExtension *, const char*);
SOAP_FMAC3 tt__OSDTextOptionsExtension * SOAP_FMAC4 soap_in_tt__OSDTextOptionsExtension(struct soap*, const char*, tt__OSDTextOptionsExtension *, const char*);

#ifndef soap_write_tt__OSDTextOptionsExtension
#define soap_write_tt__OSDTextOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:OSDTextOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDTextOptionsExtension * SOAP_FMAC4 soap_get_tt__OSDTextOptionsExtension(struct soap*, tt__OSDTextOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__OSDTextOptionsExtension
#define soap_read_tt__OSDTextOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__OSDTextOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__OSDTextOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__OSDTextOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDTextOptionsExtension * soap_new_tt__OSDTextOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDTextOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__OSDTextOptionsExtension * soap_new_req_tt__OSDTextOptionsExtension(struct soap *soap) { tt__OSDTextOptionsExtension *_p = soap_instantiate_tt__OSDTextOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__OSDTextOptionsExtension * soap_new_set_tt__OSDTextOptionsExtension(struct soap *soap) { tt__OSDTextOptionsExtension *_p = soap_instantiate_tt__OSDTextOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__OSDTextOptionsExtension(struct soap *soap, tt__OSDTextOptionsExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__OSDTextOptionsExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__OSDTextOptions
#define SOAP_TYPE_tt__OSDTextOptions (700)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDTextOptions(struct soap*, const char*, int, const tt__OSDTextOptions *, const char*);
SOAP_FMAC3 tt__OSDTextOptions * SOAP_FMAC4 soap_in_tt__OSDTextOptions(struct soap*, const char*, tt__OSDTextOptions *, const char*);

#ifndef soap_write_tt__OSDTextOptions
#define soap_write_tt__OSDTextOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:OSDTextOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDTextOptions * SOAP_FMAC4 soap_get_tt__OSDTextOptions(struct soap*, tt__OSDTextOptions *, const char*, const char*);

#ifndef soap_read_tt__OSDTextOptions
#define soap_read_tt__OSDTextOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__OSDTextOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__OSDTextOptions * SOAP_FMAC2 soap_instantiate_tt__OSDTextOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDTextOptions * soap_new_tt__OSDTextOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDTextOptions(soap, n, NULL, NULL, NULL); }

inline tt__OSDTextOptions * soap_new_req_tt__OSDTextOptions(struct soap *soap, std::vector<std::string >& Type) { tt__OSDTextOptions *_p = soap_instantiate_tt__OSDTextOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__OSDTextOptions::Type = Type; } return _p; }

inline tt__OSDTextOptions * soap_new_set_tt__OSDTextOptions(struct soap *soap, std::vector<std::string >& Type, tt__IntRange *FontSizeRange, std::vector<std::string >& DateFormat, std::vector<std::string >& TimeFormat, tt__OSDColorOptions *FontColor, tt__OSDColorOptions *BackgroundColor, tt__OSDTextOptionsExtension *Extension) { tt__OSDTextOptions *_p = soap_instantiate_tt__OSDTextOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__OSDTextOptions::Type = Type; _p->tt__OSDTextOptions::FontSizeRange = FontSizeRange; _p->tt__OSDTextOptions::DateFormat = DateFormat; _p->tt__OSDTextOptions::TimeFormat = TimeFormat; _p->tt__OSDTextOptions::FontColor = FontColor; _p->tt__OSDTextOptions::BackgroundColor = BackgroundColor; _p->tt__OSDTextOptions::Extension = Extension; } return _p; }

inline void soap_delete_tt__OSDTextOptions(struct soap *soap, tt__OSDTextOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__OSDTextOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__OSDColorOptionsExtension
#define SOAP_TYPE_tt__OSDColorOptionsExtension (699)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDColorOptionsExtension(struct soap*, const char*, int, const tt__OSDColorOptionsExtension *, const char*);
SOAP_FMAC3 tt__OSDColorOptionsExtension * SOAP_FMAC4 soap_in_tt__OSDColorOptionsExtension(struct soap*, const char*, tt__OSDColorOptionsExtension *, const char*);

#ifndef soap_write_tt__OSDColorOptionsExtension
#define soap_write_tt__OSDColorOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:OSDColorOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDColorOptionsExtension * SOAP_FMAC4 soap_get_tt__OSDColorOptionsExtension(struct soap*, tt__OSDColorOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__OSDColorOptionsExtension
#define soap_read_tt__OSDColorOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__OSDColorOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__OSDColorOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__OSDColorOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDColorOptionsExtension * soap_new_tt__OSDColorOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDColorOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__OSDColorOptionsExtension * soap_new_req_tt__OSDColorOptionsExtension(struct soap *soap) { tt__OSDColorOptionsExtension *_p = soap_instantiate_tt__OSDColorOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__OSDColorOptionsExtension * soap_new_set_tt__OSDColorOptionsExtension(struct soap *soap) { tt__OSDColorOptionsExtension *_p = soap_instantiate_tt__OSDColorOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__OSDColorOptionsExtension(struct soap *soap, tt__OSDColorOptionsExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__OSDColorOptionsExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__OSDColorOptions
#define SOAP_TYPE_tt__OSDColorOptions (698)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDColorOptions(struct soap*, const char*, int, const tt__OSDColorOptions *, const char*);
SOAP_FMAC3 tt__OSDColorOptions * SOAP_FMAC4 soap_in_tt__OSDColorOptions(struct soap*, const char*, tt__OSDColorOptions *, const char*);

#ifndef soap_write_tt__OSDColorOptions
#define soap_write_tt__OSDColorOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:OSDColorOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDColorOptions * SOAP_FMAC4 soap_get_tt__OSDColorOptions(struct soap*, tt__OSDColorOptions *, const char*, const char*);

#ifndef soap_read_tt__OSDColorOptions
#define soap_read_tt__OSDColorOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__OSDColorOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__OSDColorOptions * SOAP_FMAC2 soap_instantiate_tt__OSDColorOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDColorOptions * soap_new_tt__OSDColorOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDColorOptions(soap, n, NULL, NULL, NULL); }

inline tt__OSDColorOptions * soap_new_req_tt__OSDColorOptions(struct soap *soap) { tt__OSDColorOptions *_p = soap_instantiate_tt__OSDColorOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__OSDColorOptions * soap_new_set_tt__OSDColorOptions(struct soap *soap, tt__ColorOptions *Color, tt__IntRange *Transparent, tt__OSDColorOptionsExtension *Extension) { tt__OSDColorOptions *_p = soap_instantiate_tt__OSDColorOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__OSDColorOptions::Color = Color; _p->tt__OSDColorOptions::Transparent = Transparent; _p->tt__OSDColorOptions::Extension = Extension; } return _p; }

inline void soap_delete_tt__OSDColorOptions(struct soap *soap, tt__OSDColorOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__OSDColorOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ColorOptions
#define SOAP_TYPE_tt__ColorOptions (697)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ColorOptions(struct soap*, const char*, int, const tt__ColorOptions *, const char*);
SOAP_FMAC3 tt__ColorOptions * SOAP_FMAC4 soap_in_tt__ColorOptions(struct soap*, const char*, tt__ColorOptions *, const char*);

#ifndef soap_write_tt__ColorOptions
#define soap_write_tt__ColorOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ColorOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ColorOptions * SOAP_FMAC4 soap_get_tt__ColorOptions(struct soap*, tt__ColorOptions *, const char*, const char*);

#ifndef soap_read_tt__ColorOptions
#define soap_read_tt__ColorOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ColorOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ColorOptions * SOAP_FMAC2 soap_instantiate_tt__ColorOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__ColorOptions * soap_new_tt__ColorOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__ColorOptions(soap, n, NULL, NULL, NULL); }

inline tt__ColorOptions * soap_new_req_tt__ColorOptions(struct soap *soap, int __union_ColorOptions, union _tt__union_ColorOptions& union_ColorOptions) { tt__ColorOptions *_p = soap_instantiate_tt__ColorOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ColorOptions::__union_ColorOptions = __union_ColorOptions; _p->tt__ColorOptions::union_ColorOptions = union_ColorOptions; } return _p; }

inline tt__ColorOptions * soap_new_set_tt__ColorOptions(struct soap *soap, int __union_ColorOptions, union _tt__union_ColorOptions& union_ColorOptions) { tt__ColorOptions *_p = soap_instantiate_tt__ColorOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ColorOptions::__union_ColorOptions = __union_ColorOptions; _p->tt__ColorOptions::union_ColorOptions = union_ColorOptions; } return _p; }

inline void soap_delete_tt__ColorOptions(struct soap *soap, tt__ColorOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ColorOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ColorspaceRange
#define SOAP_TYPE_tt__ColorspaceRange (696)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ColorspaceRange(struct soap*, const char*, int, const tt__ColorspaceRange *, const char*);
SOAP_FMAC3 tt__ColorspaceRange * SOAP_FMAC4 soap_in_tt__ColorspaceRange(struct soap*, const char*, tt__ColorspaceRange *, const char*);

#ifndef soap_write_tt__ColorspaceRange
#define soap_write_tt__ColorspaceRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ColorspaceRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ColorspaceRange * SOAP_FMAC4 soap_get_tt__ColorspaceRange(struct soap*, tt__ColorspaceRange *, const char*, const char*);

#ifndef soap_read_tt__ColorspaceRange
#define soap_read_tt__ColorspaceRange(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ColorspaceRange(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ColorspaceRange * SOAP_FMAC2 soap_instantiate_tt__ColorspaceRange(struct soap*, int, const char*, const char*, size_t*);

inline tt__ColorspaceRange * soap_new_tt__ColorspaceRange(struct soap *soap, int n = -1) { return soap_instantiate_tt__ColorspaceRange(soap, n, NULL, NULL, NULL); }

inline tt__ColorspaceRange * soap_new_req_tt__ColorspaceRange(struct soap *soap, tt__FloatRange *X, tt__FloatRange *Y, tt__FloatRange *Z, std::string& Colorspace) { tt__ColorspaceRange *_p = soap_instantiate_tt__ColorspaceRange(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ColorspaceRange::X = X; _p->tt__ColorspaceRange::Y = Y; _p->tt__ColorspaceRange::Z = Z; _p->tt__ColorspaceRange::Colorspace = Colorspace; } return _p; }

inline tt__ColorspaceRange * soap_new_set_tt__ColorspaceRange(struct soap *soap, tt__FloatRange *X, tt__FloatRange *Y, tt__FloatRange *Z, std::string& Colorspace) { tt__ColorspaceRange *_p = soap_instantiate_tt__ColorspaceRange(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ColorspaceRange::X = X; _p->tt__ColorspaceRange::Y = Y; _p->tt__ColorspaceRange::Z = Z; _p->tt__ColorspaceRange::Colorspace = Colorspace; } return _p; }

inline void soap_delete_tt__ColorspaceRange(struct soap *soap, tt__ColorspaceRange *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ColorspaceRange(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__OSDImgConfigurationExtension
#define SOAP_TYPE_tt__OSDImgConfigurationExtension (695)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDImgConfigurationExtension(struct soap*, const char*, int, const tt__OSDImgConfigurationExtension *, const char*);
SOAP_FMAC3 tt__OSDImgConfigurationExtension * SOAP_FMAC4 soap_in_tt__OSDImgConfigurationExtension(struct soap*, const char*, tt__OSDImgConfigurationExtension *, const char*);

#ifndef soap_write_tt__OSDImgConfigurationExtension
#define soap_write_tt__OSDImgConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:OSDImgConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDImgConfigurationExtension * SOAP_FMAC4 soap_get_tt__OSDImgConfigurationExtension(struct soap*, tt__OSDImgConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__OSDImgConfigurationExtension
#define soap_read_tt__OSDImgConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__OSDImgConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__OSDImgConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__OSDImgConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDImgConfigurationExtension * soap_new_tt__OSDImgConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDImgConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__OSDImgConfigurationExtension * soap_new_req_tt__OSDImgConfigurationExtension(struct soap *soap) { tt__OSDImgConfigurationExtension *_p = soap_instantiate_tt__OSDImgConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__OSDImgConfigurationExtension * soap_new_set_tt__OSDImgConfigurationExtension(struct soap *soap) { tt__OSDImgConfigurationExtension *_p = soap_instantiate_tt__OSDImgConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__OSDImgConfigurationExtension(struct soap *soap, tt__OSDImgConfigurationExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__OSDImgConfigurationExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__OSDImgConfiguration
#define SOAP_TYPE_tt__OSDImgConfiguration (694)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDImgConfiguration(struct soap*, const char*, int, const tt__OSDImgConfiguration *, const char*);
SOAP_FMAC3 tt__OSDImgConfiguration * SOAP_FMAC4 soap_in_tt__OSDImgConfiguration(struct soap*, const char*, tt__OSDImgConfiguration *, const char*);

#ifndef soap_write_tt__OSDImgConfiguration
#define soap_write_tt__OSDImgConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:OSDImgConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDImgConfiguration * SOAP_FMAC4 soap_get_tt__OSDImgConfiguration(struct soap*, tt__OSDImgConfiguration *, const char*, const char*);

#ifndef soap_read_tt__OSDImgConfiguration
#define soap_read_tt__OSDImgConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__OSDImgConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__OSDImgConfiguration * SOAP_FMAC2 soap_instantiate_tt__OSDImgConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDImgConfiguration * soap_new_tt__OSDImgConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDImgConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__OSDImgConfiguration * soap_new_req_tt__OSDImgConfiguration(struct soap *soap, std::string& ImgPath) { tt__OSDImgConfiguration *_p = soap_instantiate_tt__OSDImgConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__OSDImgConfiguration::ImgPath = ImgPath; } return _p; }

inline tt__OSDImgConfiguration * soap_new_set_tt__OSDImgConfiguration(struct soap *soap, std::string& ImgPath, tt__OSDImgConfigurationExtension *Extension) { tt__OSDImgConfiguration *_p = soap_instantiate_tt__OSDImgConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__OSDImgConfiguration::ImgPath = ImgPath; _p->tt__OSDImgConfiguration::Extension = Extension; } return _p; }

inline void soap_delete_tt__OSDImgConfiguration(struct soap *soap, tt__OSDImgConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__OSDImgConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__OSDTextConfigurationExtension
#define SOAP_TYPE_tt__OSDTextConfigurationExtension (693)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDTextConfigurationExtension(struct soap*, const char*, int, const tt__OSDTextConfigurationExtension *, const char*);
SOAP_FMAC3 tt__OSDTextConfigurationExtension * SOAP_FMAC4 soap_in_tt__OSDTextConfigurationExtension(struct soap*, const char*, tt__OSDTextConfigurationExtension *, const char*);

#ifndef soap_write_tt__OSDTextConfigurationExtension
#define soap_write_tt__OSDTextConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:OSDTextConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDTextConfigurationExtension * SOAP_FMAC4 soap_get_tt__OSDTextConfigurationExtension(struct soap*, tt__OSDTextConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__OSDTextConfigurationExtension
#define soap_read_tt__OSDTextConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__OSDTextConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__OSDTextConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__OSDTextConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDTextConfigurationExtension * soap_new_tt__OSDTextConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDTextConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__OSDTextConfigurationExtension * soap_new_req_tt__OSDTextConfigurationExtension(struct soap *soap) { tt__OSDTextConfigurationExtension *_p = soap_instantiate_tt__OSDTextConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__OSDTextConfigurationExtension * soap_new_set_tt__OSDTextConfigurationExtension(struct soap *soap) { tt__OSDTextConfigurationExtension *_p = soap_instantiate_tt__OSDTextConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__OSDTextConfigurationExtension(struct soap *soap, tt__OSDTextConfigurationExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__OSDTextConfigurationExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__OSDTextConfiguration
#define SOAP_TYPE_tt__OSDTextConfiguration (692)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDTextConfiguration(struct soap*, const char*, int, const tt__OSDTextConfiguration *, const char*);
SOAP_FMAC3 tt__OSDTextConfiguration * SOAP_FMAC4 soap_in_tt__OSDTextConfiguration(struct soap*, const char*, tt__OSDTextConfiguration *, const char*);

#ifndef soap_write_tt__OSDTextConfiguration
#define soap_write_tt__OSDTextConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:OSDTextConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDTextConfiguration * SOAP_FMAC4 soap_get_tt__OSDTextConfiguration(struct soap*, tt__OSDTextConfiguration *, const char*, const char*);

#ifndef soap_read_tt__OSDTextConfiguration
#define soap_read_tt__OSDTextConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__OSDTextConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__OSDTextConfiguration * SOAP_FMAC2 soap_instantiate_tt__OSDTextConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDTextConfiguration * soap_new_tt__OSDTextConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDTextConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__OSDTextConfiguration * soap_new_req_tt__OSDTextConfiguration(struct soap *soap, std::string& Type) { tt__OSDTextConfiguration *_p = soap_instantiate_tt__OSDTextConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__OSDTextConfiguration::Type = Type; } return _p; }

inline tt__OSDTextConfiguration * soap_new_set_tt__OSDTextConfiguration(struct soap *soap, std::string& Type, std::string *DateFormat, std::string *TimeFormat, int *FontSize, tt__OSDColor *FontColor, tt__OSDColor *BackgroundColor, std::string *PlainText, tt__OSDTextConfigurationExtension *Extension) { tt__OSDTextConfiguration *_p = soap_instantiate_tt__OSDTextConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__OSDTextConfiguration::Type = Type; _p->tt__OSDTextConfiguration::DateFormat = DateFormat; _p->tt__OSDTextConfiguration::TimeFormat = TimeFormat; _p->tt__OSDTextConfiguration::FontSize = FontSize; _p->tt__OSDTextConfiguration::FontColor = FontColor; _p->tt__OSDTextConfiguration::BackgroundColor = BackgroundColor; _p->tt__OSDTextConfiguration::PlainText = PlainText; _p->tt__OSDTextConfiguration::Extension = Extension; } return _p; }

inline void soap_delete_tt__OSDTextConfiguration(struct soap *soap, tt__OSDTextConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__OSDTextConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__OSDColor
#define SOAP_TYPE_tt__OSDColor (691)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDColor(struct soap*, const char*, int, const tt__OSDColor *, const char*);
SOAP_FMAC3 tt__OSDColor * SOAP_FMAC4 soap_in_tt__OSDColor(struct soap*, const char*, tt__OSDColor *, const char*);

#ifndef soap_write_tt__OSDColor
#define soap_write_tt__OSDColor(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:OSDColor", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDColor * SOAP_FMAC4 soap_get_tt__OSDColor(struct soap*, tt__OSDColor *, const char*, const char*);

#ifndef soap_read_tt__OSDColor
#define soap_read_tt__OSDColor(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__OSDColor(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__OSDColor * SOAP_FMAC2 soap_instantiate_tt__OSDColor(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDColor * soap_new_tt__OSDColor(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDColor(soap, n, NULL, NULL, NULL); }

inline tt__OSDColor * soap_new_req_tt__OSDColor(struct soap *soap, tt__Color *Color) { tt__OSDColor *_p = soap_instantiate_tt__OSDColor(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__OSDColor::Color = Color; } return _p; }

inline tt__OSDColor * soap_new_set_tt__OSDColor(struct soap *soap, tt__Color *Color, int *Transparent) { tt__OSDColor *_p = soap_instantiate_tt__OSDColor(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__OSDColor::Color = Color; _p->tt__OSDColor::Transparent = Transparent; } return _p; }

inline void soap_delete_tt__OSDColor(struct soap *soap, tt__OSDColor *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__OSDColor(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__OSDPosConfigurationExtension
#define SOAP_TYPE_tt__OSDPosConfigurationExtension (690)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDPosConfigurationExtension(struct soap*, const char*, int, const tt__OSDPosConfigurationExtension *, const char*);
SOAP_FMAC3 tt__OSDPosConfigurationExtension * SOAP_FMAC4 soap_in_tt__OSDPosConfigurationExtension(struct soap*, const char*, tt__OSDPosConfigurationExtension *, const char*);

#ifndef soap_write_tt__OSDPosConfigurationExtension
#define soap_write_tt__OSDPosConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:OSDPosConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDPosConfigurationExtension * SOAP_FMAC4 soap_get_tt__OSDPosConfigurationExtension(struct soap*, tt__OSDPosConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__OSDPosConfigurationExtension
#define soap_read_tt__OSDPosConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__OSDPosConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__OSDPosConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__OSDPosConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDPosConfigurationExtension * soap_new_tt__OSDPosConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDPosConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__OSDPosConfigurationExtension * soap_new_req_tt__OSDPosConfigurationExtension(struct soap *soap) { tt__OSDPosConfigurationExtension *_p = soap_instantiate_tt__OSDPosConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__OSDPosConfigurationExtension * soap_new_set_tt__OSDPosConfigurationExtension(struct soap *soap) { tt__OSDPosConfigurationExtension *_p = soap_instantiate_tt__OSDPosConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__OSDPosConfigurationExtension(struct soap *soap, tt__OSDPosConfigurationExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__OSDPosConfigurationExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__OSDPosConfiguration
#define SOAP_TYPE_tt__OSDPosConfiguration (689)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDPosConfiguration(struct soap*, const char*, int, const tt__OSDPosConfiguration *, const char*);
SOAP_FMAC3 tt__OSDPosConfiguration * SOAP_FMAC4 soap_in_tt__OSDPosConfiguration(struct soap*, const char*, tt__OSDPosConfiguration *, const char*);

#ifndef soap_write_tt__OSDPosConfiguration
#define soap_write_tt__OSDPosConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:OSDPosConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDPosConfiguration * SOAP_FMAC4 soap_get_tt__OSDPosConfiguration(struct soap*, tt__OSDPosConfiguration *, const char*, const char*);

#ifndef soap_read_tt__OSDPosConfiguration
#define soap_read_tt__OSDPosConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__OSDPosConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__OSDPosConfiguration * SOAP_FMAC2 soap_instantiate_tt__OSDPosConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDPosConfiguration * soap_new_tt__OSDPosConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDPosConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__OSDPosConfiguration * soap_new_req_tt__OSDPosConfiguration(struct soap *soap, std::string& Type) { tt__OSDPosConfiguration *_p = soap_instantiate_tt__OSDPosConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__OSDPosConfiguration::Type = Type; } return _p; }

inline tt__OSDPosConfiguration * soap_new_set_tt__OSDPosConfiguration(struct soap *soap, std::string& Type, tt__Vector *Pos, tt__OSDPosConfigurationExtension *Extension) { tt__OSDPosConfiguration *_p = soap_instantiate_tt__OSDPosConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__OSDPosConfiguration::Type = Type; _p->tt__OSDPosConfiguration::Pos = Pos; _p->tt__OSDPosConfiguration::Extension = Extension; } return _p; }

inline void soap_delete_tt__OSDPosConfiguration(struct soap *soap, tt__OSDPosConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__OSDPosConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__OSDReference
#define SOAP_TYPE_tt__OSDReference (688)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDReference(struct soap*, const char*, int, const tt__OSDReference *, const char*);
SOAP_FMAC3 tt__OSDReference * SOAP_FMAC4 soap_in_tt__OSDReference(struct soap*, const char*, tt__OSDReference *, const char*);

#ifndef soap_write_tt__OSDReference
#define soap_write_tt__OSDReference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:OSDReference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDReference * SOAP_FMAC4 soap_get_tt__OSDReference(struct soap*, tt__OSDReference *, const char*, const char*);

#ifndef soap_read_tt__OSDReference
#define soap_read_tt__OSDReference(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__OSDReference(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__OSDReference * SOAP_FMAC2 soap_instantiate_tt__OSDReference(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDReference * soap_new_tt__OSDReference(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDReference(soap, n, NULL, NULL, NULL); }

inline tt__OSDReference * soap_new_req_tt__OSDReference(struct soap *soap, std::string& __item) { tt__OSDReference *_p = soap_instantiate_tt__OSDReference(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__OSDReference::__item = __item; } return _p; }

inline tt__OSDReference * soap_new_set_tt__OSDReference(struct soap *soap, std::string& __item) { tt__OSDReference *_p = soap_instantiate_tt__OSDReference(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__OSDReference::__item = __item; } return _p; }

inline void soap_delete_tt__OSDReference(struct soap *soap, tt__OSDReference *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__OSDReference(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AudioClassDescriptorExtension
#define SOAP_TYPE_tt__AudioClassDescriptorExtension (687)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioClassDescriptorExtension(struct soap*, const char*, int, const tt__AudioClassDescriptorExtension *, const char*);
SOAP_FMAC3 tt__AudioClassDescriptorExtension * SOAP_FMAC4 soap_in_tt__AudioClassDescriptorExtension(struct soap*, const char*, tt__AudioClassDescriptorExtension *, const char*);

#ifndef soap_write_tt__AudioClassDescriptorExtension
#define soap_write_tt__AudioClassDescriptorExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AudioClassDescriptorExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioClassDescriptorExtension * SOAP_FMAC4 soap_get_tt__AudioClassDescriptorExtension(struct soap*, tt__AudioClassDescriptorExtension *, const char*, const char*);

#ifndef soap_read_tt__AudioClassDescriptorExtension
#define soap_read_tt__AudioClassDescriptorExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AudioClassDescriptorExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AudioClassDescriptorExtension * SOAP_FMAC2 soap_instantiate_tt__AudioClassDescriptorExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioClassDescriptorExtension * soap_new_tt__AudioClassDescriptorExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioClassDescriptorExtension(soap, n, NULL, NULL, NULL); }

inline tt__AudioClassDescriptorExtension * soap_new_req_tt__AudioClassDescriptorExtension(struct soap *soap) { tt__AudioClassDescriptorExtension *_p = soap_instantiate_tt__AudioClassDescriptorExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__AudioClassDescriptorExtension * soap_new_set_tt__AudioClassDescriptorExtension(struct soap *soap) { tt__AudioClassDescriptorExtension *_p = soap_instantiate_tt__AudioClassDescriptorExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__AudioClassDescriptorExtension(struct soap *soap, tt__AudioClassDescriptorExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AudioClassDescriptorExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AudioClassDescriptor
#define SOAP_TYPE_tt__AudioClassDescriptor (686)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioClassDescriptor(struct soap*, const char*, int, const tt__AudioClassDescriptor *, const char*);
SOAP_FMAC3 tt__AudioClassDescriptor * SOAP_FMAC4 soap_in_tt__AudioClassDescriptor(struct soap*, const char*, tt__AudioClassDescriptor *, const char*);

#ifndef soap_write_tt__AudioClassDescriptor
#define soap_write_tt__AudioClassDescriptor(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AudioClassDescriptor", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioClassDescriptor * SOAP_FMAC4 soap_get_tt__AudioClassDescriptor(struct soap*, tt__AudioClassDescriptor *, const char*, const char*);

#ifndef soap_read_tt__AudioClassDescriptor
#define soap_read_tt__AudioClassDescriptor(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AudioClassDescriptor(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AudioClassDescriptor * SOAP_FMAC2 soap_instantiate_tt__AudioClassDescriptor(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioClassDescriptor * soap_new_tt__AudioClassDescriptor(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioClassDescriptor(soap, n, NULL, NULL, NULL); }

inline tt__AudioClassDescriptor * soap_new_req_tt__AudioClassDescriptor(struct soap *soap) { tt__AudioClassDescriptor *_p = soap_instantiate_tt__AudioClassDescriptor(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__AudioClassDescriptor * soap_new_set_tt__AudioClassDescriptor(struct soap *soap, std::vector<tt__AudioClassCandidate * >& ClassCandidate, tt__AudioClassDescriptorExtension *Extension) { tt__AudioClassDescriptor *_p = soap_instantiate_tt__AudioClassDescriptor(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AudioClassDescriptor::ClassCandidate = ClassCandidate; _p->tt__AudioClassDescriptor::Extension = Extension; } return _p; }

inline void soap_delete_tt__AudioClassDescriptor(struct soap *soap, tt__AudioClassDescriptor *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AudioClassDescriptor(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AudioClassCandidate
#define SOAP_TYPE_tt__AudioClassCandidate (685)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioClassCandidate(struct soap*, const char*, int, const tt__AudioClassCandidate *, const char*);
SOAP_FMAC3 tt__AudioClassCandidate * SOAP_FMAC4 soap_in_tt__AudioClassCandidate(struct soap*, const char*, tt__AudioClassCandidate *, const char*);

#ifndef soap_write_tt__AudioClassCandidate
#define soap_write_tt__AudioClassCandidate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AudioClassCandidate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioClassCandidate * SOAP_FMAC4 soap_get_tt__AudioClassCandidate(struct soap*, tt__AudioClassCandidate *, const char*, const char*);

#ifndef soap_read_tt__AudioClassCandidate
#define soap_read_tt__AudioClassCandidate(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AudioClassCandidate(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AudioClassCandidate * SOAP_FMAC2 soap_instantiate_tt__AudioClassCandidate(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioClassCandidate * soap_new_tt__AudioClassCandidate(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioClassCandidate(soap, n, NULL, NULL, NULL); }

inline tt__AudioClassCandidate * soap_new_req_tt__AudioClassCandidate(struct soap *soap, std::string& Type, float Likelihood) { tt__AudioClassCandidate *_p = soap_instantiate_tt__AudioClassCandidate(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AudioClassCandidate::Type = Type; _p->tt__AudioClassCandidate::Likelihood = Likelihood; } return _p; }

inline tt__AudioClassCandidate * soap_new_set_tt__AudioClassCandidate(struct soap *soap, std::string& Type, float Likelihood) { tt__AudioClassCandidate *_p = soap_instantiate_tt__AudioClassCandidate(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AudioClassCandidate::Type = Type; _p->tt__AudioClassCandidate::Likelihood = Likelihood; } return _p; }

inline void soap_delete_tt__AudioClassCandidate(struct soap *soap, tt__AudioClassCandidate *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AudioClassCandidate(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ActionEngineEventPayloadExtension
#define SOAP_TYPE_tt__ActionEngineEventPayloadExtension (684)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ActionEngineEventPayloadExtension(struct soap*, const char*, int, const tt__ActionEngineEventPayloadExtension *, const char*);
SOAP_FMAC3 tt__ActionEngineEventPayloadExtension * SOAP_FMAC4 soap_in_tt__ActionEngineEventPayloadExtension(struct soap*, const char*, tt__ActionEngineEventPayloadExtension *, const char*);

#ifndef soap_write_tt__ActionEngineEventPayloadExtension
#define soap_write_tt__ActionEngineEventPayloadExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ActionEngineEventPayloadExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ActionEngineEventPayloadExtension * SOAP_FMAC4 soap_get_tt__ActionEngineEventPayloadExtension(struct soap*, tt__ActionEngineEventPayloadExtension *, const char*, const char*);

#ifndef soap_read_tt__ActionEngineEventPayloadExtension
#define soap_read_tt__ActionEngineEventPayloadExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ActionEngineEventPayloadExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ActionEngineEventPayloadExtension * SOAP_FMAC2 soap_instantiate_tt__ActionEngineEventPayloadExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ActionEngineEventPayloadExtension * soap_new_tt__ActionEngineEventPayloadExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ActionEngineEventPayloadExtension(soap, n, NULL, NULL, NULL); }

inline tt__ActionEngineEventPayloadExtension * soap_new_req_tt__ActionEngineEventPayloadExtension(struct soap *soap) { tt__ActionEngineEventPayloadExtension *_p = soap_instantiate_tt__ActionEngineEventPayloadExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ActionEngineEventPayloadExtension * soap_new_set_tt__ActionEngineEventPayloadExtension(struct soap *soap) { tt__ActionEngineEventPayloadExtension *_p = soap_instantiate_tt__ActionEngineEventPayloadExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__ActionEngineEventPayloadExtension(struct soap *soap, tt__ActionEngineEventPayloadExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ActionEngineEventPayloadExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ActionEngineEventPayload
#define SOAP_TYPE_tt__ActionEngineEventPayload (683)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ActionEngineEventPayload(struct soap*, const char*, int, const tt__ActionEngineEventPayload *, const char*);
SOAP_FMAC3 tt__ActionEngineEventPayload * SOAP_FMAC4 soap_in_tt__ActionEngineEventPayload(struct soap*, const char*, tt__ActionEngineEventPayload *, const char*);

#ifndef soap_write_tt__ActionEngineEventPayload
#define soap_write_tt__ActionEngineEventPayload(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ActionEngineEventPayload", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ActionEngineEventPayload * SOAP_FMAC4 soap_get_tt__ActionEngineEventPayload(struct soap*, tt__ActionEngineEventPayload *, const char*, const char*);

#ifndef soap_read_tt__ActionEngineEventPayload
#define soap_read_tt__ActionEngineEventPayload(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ActionEngineEventPayload(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ActionEngineEventPayload * SOAP_FMAC2 soap_instantiate_tt__ActionEngineEventPayload(struct soap*, int, const char*, const char*, size_t*);

inline tt__ActionEngineEventPayload * soap_new_tt__ActionEngineEventPayload(struct soap *soap, int n = -1) { return soap_instantiate_tt__ActionEngineEventPayload(soap, n, NULL, NULL, NULL); }

inline tt__ActionEngineEventPayload * soap_new_req_tt__ActionEngineEventPayload(struct soap *soap) { tt__ActionEngineEventPayload *_p = soap_instantiate_tt__ActionEngineEventPayload(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ActionEngineEventPayload * soap_new_set_tt__ActionEngineEventPayload(struct soap *soap, struct SOAP_ENV__Envelope *RequestInfo, struct SOAP_ENV__Envelope *ResponseInfo, struct SOAP_ENV__Fault *Fault, tt__ActionEngineEventPayloadExtension *Extension) { tt__ActionEngineEventPayload *_p = soap_instantiate_tt__ActionEngineEventPayload(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ActionEngineEventPayload::RequestInfo = RequestInfo; _p->tt__ActionEngineEventPayload::ResponseInfo = ResponseInfo; _p->tt__ActionEngineEventPayload::Fault = Fault; _p->tt__ActionEngineEventPayload::Extension = Extension; } return _p; }

inline void soap_delete_tt__ActionEngineEventPayload(struct soap *soap, tt__ActionEngineEventPayload *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ActionEngineEventPayload(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AnalyticsState
#define SOAP_TYPE_tt__AnalyticsState (682)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsState(struct soap*, const char*, int, const tt__AnalyticsState *, const char*);
SOAP_FMAC3 tt__AnalyticsState * SOAP_FMAC4 soap_in_tt__AnalyticsState(struct soap*, const char*, tt__AnalyticsState *, const char*);

#ifndef soap_write_tt__AnalyticsState
#define soap_write_tt__AnalyticsState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AnalyticsState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsState * SOAP_FMAC4 soap_get_tt__AnalyticsState(struct soap*, tt__AnalyticsState *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsState
#define soap_read_tt__AnalyticsState(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AnalyticsState(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AnalyticsState * SOAP_FMAC2 soap_instantiate_tt__AnalyticsState(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsState * soap_new_tt__AnalyticsState(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsState(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsState * soap_new_req_tt__AnalyticsState(struct soap *soap, std::string& State) { tt__AnalyticsState *_p = soap_instantiate_tt__AnalyticsState(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AnalyticsState::State = State; } return _p; }

inline tt__AnalyticsState * soap_new_set_tt__AnalyticsState(struct soap *soap, std::string *Error, std::string& State) { tt__AnalyticsState *_p = soap_instantiate_tt__AnalyticsState(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AnalyticsState::Error = Error; _p->tt__AnalyticsState::State = State; } return _p; }

inline void soap_delete_tt__AnalyticsState(struct soap *soap, tt__AnalyticsState *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AnalyticsState(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AnalyticsStateInformation
#define SOAP_TYPE_tt__AnalyticsStateInformation (681)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsStateInformation(struct soap*, const char*, int, const tt__AnalyticsStateInformation *, const char*);
SOAP_FMAC3 tt__AnalyticsStateInformation * SOAP_FMAC4 soap_in_tt__AnalyticsStateInformation(struct soap*, const char*, tt__AnalyticsStateInformation *, const char*);

#ifndef soap_write_tt__AnalyticsStateInformation
#define soap_write_tt__AnalyticsStateInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AnalyticsStateInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsStateInformation * SOAP_FMAC4 soap_get_tt__AnalyticsStateInformation(struct soap*, tt__AnalyticsStateInformation *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsStateInformation
#define soap_read_tt__AnalyticsStateInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AnalyticsStateInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AnalyticsStateInformation * SOAP_FMAC2 soap_instantiate_tt__AnalyticsStateInformation(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsStateInformation * soap_new_tt__AnalyticsStateInformation(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsStateInformation(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsStateInformation * soap_new_req_tt__AnalyticsStateInformation(struct soap *soap, std::string& AnalyticsEngineControlToken, tt__AnalyticsState *State) { tt__AnalyticsStateInformation *_p = soap_instantiate_tt__AnalyticsStateInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AnalyticsStateInformation::AnalyticsEngineControlToken = AnalyticsEngineControlToken; _p->tt__AnalyticsStateInformation::State = State; } return _p; }

inline tt__AnalyticsStateInformation * soap_new_set_tt__AnalyticsStateInformation(struct soap *soap, std::string& AnalyticsEngineControlToken, tt__AnalyticsState *State) { tt__AnalyticsStateInformation *_p = soap_instantiate_tt__AnalyticsStateInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AnalyticsStateInformation::AnalyticsEngineControlToken = AnalyticsEngineControlToken; _p->tt__AnalyticsStateInformation::State = State; } return _p; }

inline void soap_delete_tt__AnalyticsStateInformation(struct soap *soap, tt__AnalyticsStateInformation *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AnalyticsStateInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AnalyticsEngineControl
#define SOAP_TYPE_tt__AnalyticsEngineControl (680)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsEngineControl(struct soap*, const char*, int, const tt__AnalyticsEngineControl *, const char*);
SOAP_FMAC3 tt__AnalyticsEngineControl * SOAP_FMAC4 soap_in_tt__AnalyticsEngineControl(struct soap*, const char*, tt__AnalyticsEngineControl *, const char*);

#ifndef soap_write_tt__AnalyticsEngineControl
#define soap_write_tt__AnalyticsEngineControl(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AnalyticsEngineControl", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsEngineControl * SOAP_FMAC4 soap_get_tt__AnalyticsEngineControl(struct soap*, tt__AnalyticsEngineControl *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsEngineControl
#define soap_read_tt__AnalyticsEngineControl(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AnalyticsEngineControl(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AnalyticsEngineControl * SOAP_FMAC2 soap_instantiate_tt__AnalyticsEngineControl(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsEngineControl * soap_new_tt__AnalyticsEngineControl(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsEngineControl(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsEngineControl * soap_new_req_tt__AnalyticsEngineControl(struct soap *soap, std::string& EngineToken, std::string& EngineConfigToken, std::vector<std::string >& InputToken, std::vector<std::string >& ReceiverToken, tt__Config *Subscription, enum tt__ModeOfOperation Mode, std::string& Name1, int UseCount1, std::string& token1) { tt__AnalyticsEngineControl *_p = soap_instantiate_tt__AnalyticsEngineControl(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AnalyticsEngineControl::EngineToken = EngineToken; _p->tt__AnalyticsEngineControl::EngineConfigToken = EngineConfigToken; _p->tt__AnalyticsEngineControl::InputToken = InputToken; _p->tt__AnalyticsEngineControl::ReceiverToken = ReceiverToken; _p->tt__AnalyticsEngineControl::Subscription = Subscription; _p->tt__AnalyticsEngineControl::Mode = Mode; _p->tt__ConfigurationEntity::Name = Name1; _p->tt__ConfigurationEntity::UseCount = UseCount1; _p->tt__ConfigurationEntity::token = token1; } return _p; }

inline tt__AnalyticsEngineControl * soap_new_set_tt__AnalyticsEngineControl(struct soap *soap, std::string& EngineToken, std::string& EngineConfigToken, std::vector<std::string >& InputToken, std::vector<std::string >& ReceiverToken, tt__MulticastConfiguration *Multicast, tt__Config *Subscription, enum tt__ModeOfOperation Mode, std::string& Name1, int UseCount1, std::string& token1) { tt__AnalyticsEngineControl *_p = soap_instantiate_tt__AnalyticsEngineControl(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AnalyticsEngineControl::EngineToken = EngineToken; _p->tt__AnalyticsEngineControl::EngineConfigToken = EngineConfigToken; _p->tt__AnalyticsEngineControl::InputToken = InputToken; _p->tt__AnalyticsEngineControl::ReceiverToken = ReceiverToken; _p->tt__AnalyticsEngineControl::Multicast = Multicast; _p->tt__AnalyticsEngineControl::Subscription = Subscription; _p->tt__AnalyticsEngineControl::Mode = Mode; _p->tt__ConfigurationEntity::Name = Name1; _p->tt__ConfigurationEntity::UseCount = UseCount1; _p->tt__ConfigurationEntity::token = token1; } return _p; }

inline void soap_delete_tt__AnalyticsEngineControl(struct soap *soap, tt__AnalyticsEngineControl *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AnalyticsEngineControl(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__MetadataInputExtension
#define SOAP_TYPE_tt__MetadataInputExtension (679)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MetadataInputExtension(struct soap*, const char*, int, const tt__MetadataInputExtension *, const char*);
SOAP_FMAC3 tt__MetadataInputExtension * SOAP_FMAC4 soap_in_tt__MetadataInputExtension(struct soap*, const char*, tt__MetadataInputExtension *, const char*);

#ifndef soap_write_tt__MetadataInputExtension
#define soap_write_tt__MetadataInputExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:MetadataInputExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataInputExtension * SOAP_FMAC4 soap_get_tt__MetadataInputExtension(struct soap*, tt__MetadataInputExtension *, const char*, const char*);

#ifndef soap_read_tt__MetadataInputExtension
#define soap_read_tt__MetadataInputExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__MetadataInputExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__MetadataInputExtension * SOAP_FMAC2 soap_instantiate_tt__MetadataInputExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__MetadataInputExtension * soap_new_tt__MetadataInputExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__MetadataInputExtension(soap, n, NULL, NULL, NULL); }

inline tt__MetadataInputExtension * soap_new_req_tt__MetadataInputExtension(struct soap *soap) { tt__MetadataInputExtension *_p = soap_instantiate_tt__MetadataInputExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__MetadataInputExtension * soap_new_set_tt__MetadataInputExtension(struct soap *soap) { tt__MetadataInputExtension *_p = soap_instantiate_tt__MetadataInputExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__MetadataInputExtension(struct soap *soap, tt__MetadataInputExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__MetadataInputExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__MetadataInput
#define SOAP_TYPE_tt__MetadataInput (678)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MetadataInput(struct soap*, const char*, int, const tt__MetadataInput *, const char*);
SOAP_FMAC3 tt__MetadataInput * SOAP_FMAC4 soap_in_tt__MetadataInput(struct soap*, const char*, tt__MetadataInput *, const char*);

#ifndef soap_write_tt__MetadataInput
#define soap_write_tt__MetadataInput(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:MetadataInput", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataInput * SOAP_FMAC4 soap_get_tt__MetadataInput(struct soap*, tt__MetadataInput *, const char*, const char*);

#ifndef soap_read_tt__MetadataInput
#define soap_read_tt__MetadataInput(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__MetadataInput(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__MetadataInput * SOAP_FMAC2 soap_instantiate_tt__MetadataInput(struct soap*, int, const char*, const char*, size_t*);

inline tt__MetadataInput * soap_new_tt__MetadataInput(struct soap *soap, int n = -1) { return soap_instantiate_tt__MetadataInput(soap, n, NULL, NULL, NULL); }

inline tt__MetadataInput * soap_new_req_tt__MetadataInput(struct soap *soap) { tt__MetadataInput *_p = soap_instantiate_tt__MetadataInput(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__MetadataInput * soap_new_set_tt__MetadataInput(struct soap *soap, std::vector<tt__Config * >& MetadataConfig, tt__MetadataInputExtension *Extension) { tt__MetadataInput *_p = soap_instantiate_tt__MetadataInput(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MetadataInput::MetadataConfig = MetadataConfig; _p->tt__MetadataInput::Extension = Extension; } return _p; }

inline void soap_delete_tt__MetadataInput(struct soap *soap, tt__MetadataInput *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__MetadataInput(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__SourceIdentificationExtension
#define SOAP_TYPE_tt__SourceIdentificationExtension (677)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SourceIdentificationExtension(struct soap*, const char*, int, const tt__SourceIdentificationExtension *, const char*);
SOAP_FMAC3 tt__SourceIdentificationExtension * SOAP_FMAC4 soap_in_tt__SourceIdentificationExtension(struct soap*, const char*, tt__SourceIdentificationExtension *, const char*);

#ifndef soap_write_tt__SourceIdentificationExtension
#define soap_write_tt__SourceIdentificationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:SourceIdentificationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SourceIdentificationExtension * SOAP_FMAC4 soap_get_tt__SourceIdentificationExtension(struct soap*, tt__SourceIdentificationExtension *, const char*, const char*);

#ifndef soap_read_tt__SourceIdentificationExtension
#define soap_read_tt__SourceIdentificationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__SourceIdentificationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__SourceIdentificationExtension * SOAP_FMAC2 soap_instantiate_tt__SourceIdentificationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__SourceIdentificationExtension * soap_new_tt__SourceIdentificationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__SourceIdentificationExtension(soap, n, NULL, NULL, NULL); }

inline tt__SourceIdentificationExtension * soap_new_req_tt__SourceIdentificationExtension(struct soap *soap) { tt__SourceIdentificationExtension *_p = soap_instantiate_tt__SourceIdentificationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__SourceIdentificationExtension * soap_new_set_tt__SourceIdentificationExtension(struct soap *soap) { tt__SourceIdentificationExtension *_p = soap_instantiate_tt__SourceIdentificationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__SourceIdentificationExtension(struct soap *soap, tt__SourceIdentificationExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__SourceIdentificationExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__SourceIdentification
#define SOAP_TYPE_tt__SourceIdentification (676)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SourceIdentification(struct soap*, const char*, int, const tt__SourceIdentification *, const char*);
SOAP_FMAC3 tt__SourceIdentification * SOAP_FMAC4 soap_in_tt__SourceIdentification(struct soap*, const char*, tt__SourceIdentification *, const char*);

#ifndef soap_write_tt__SourceIdentification
#define soap_write_tt__SourceIdentification(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:SourceIdentification", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SourceIdentification * SOAP_FMAC4 soap_get_tt__SourceIdentification(struct soap*, tt__SourceIdentification *, const char*, const char*);

#ifndef soap_read_tt__SourceIdentification
#define soap_read_tt__SourceIdentification(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__SourceIdentification(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__SourceIdentification * SOAP_FMAC2 soap_instantiate_tt__SourceIdentification(struct soap*, int, const char*, const char*, size_t*);

inline tt__SourceIdentification * soap_new_tt__SourceIdentification(struct soap *soap, int n = -1) { return soap_instantiate_tt__SourceIdentification(soap, n, NULL, NULL, NULL); }

inline tt__SourceIdentification * soap_new_req_tt__SourceIdentification(struct soap *soap, std::string& Name, std::vector<std::string >& Token) { tt__SourceIdentification *_p = soap_instantiate_tt__SourceIdentification(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__SourceIdentification::Name = Name; _p->tt__SourceIdentification::Token = Token; } return _p; }

inline tt__SourceIdentification * soap_new_set_tt__SourceIdentification(struct soap *soap, std::string& Name, std::vector<std::string >& Token, tt__SourceIdentificationExtension *Extension) { tt__SourceIdentification *_p = soap_instantiate_tt__SourceIdentification(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__SourceIdentification::Name = Name; _p->tt__SourceIdentification::Token = Token; _p->tt__SourceIdentification::Extension = Extension; } return _p; }

inline void soap_delete_tt__SourceIdentification(struct soap *soap, tt__SourceIdentification *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__SourceIdentification(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AnalyticsEngineInput
#define SOAP_TYPE_tt__AnalyticsEngineInput (675)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsEngineInput(struct soap*, const char*, int, const tt__AnalyticsEngineInput *, const char*);
SOAP_FMAC3 tt__AnalyticsEngineInput * SOAP_FMAC4 soap_in_tt__AnalyticsEngineInput(struct soap*, const char*, tt__AnalyticsEngineInput *, const char*);

#ifndef soap_write_tt__AnalyticsEngineInput
#define soap_write_tt__AnalyticsEngineInput(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AnalyticsEngineInput", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsEngineInput * SOAP_FMAC4 soap_get_tt__AnalyticsEngineInput(struct soap*, tt__AnalyticsEngineInput *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsEngineInput
#define soap_read_tt__AnalyticsEngineInput(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AnalyticsEngineInput(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AnalyticsEngineInput * SOAP_FMAC2 soap_instantiate_tt__AnalyticsEngineInput(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsEngineInput * soap_new_tt__AnalyticsEngineInput(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsEngineInput(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsEngineInput * soap_new_req_tt__AnalyticsEngineInput(struct soap *soap, tt__SourceIdentification *SourceIdentification, tt__VideoEncoderConfiguration *VideoInput, tt__MetadataInput *MetadataInput, std::string& Name1, int UseCount1, std::string& token1) { tt__AnalyticsEngineInput *_p = soap_instantiate_tt__AnalyticsEngineInput(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AnalyticsEngineInput::SourceIdentification = SourceIdentification; _p->tt__AnalyticsEngineInput::VideoInput = VideoInput; _p->tt__AnalyticsEngineInput::MetadataInput = MetadataInput; _p->tt__ConfigurationEntity::Name = Name1; _p->tt__ConfigurationEntity::UseCount = UseCount1; _p->tt__ConfigurationEntity::token = token1; } return _p; }

inline tt__AnalyticsEngineInput * soap_new_set_tt__AnalyticsEngineInput(struct soap *soap, tt__SourceIdentification *SourceIdentification, tt__VideoEncoderConfiguration *VideoInput, tt__MetadataInput *MetadataInput, std::string& Name1, int UseCount1, std::string& token1) { tt__AnalyticsEngineInput *_p = soap_instantiate_tt__AnalyticsEngineInput(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AnalyticsEngineInput::SourceIdentification = SourceIdentification; _p->tt__AnalyticsEngineInput::VideoInput = VideoInput; _p->tt__AnalyticsEngineInput::MetadataInput = MetadataInput; _p->tt__ConfigurationEntity::Name = Name1; _p->tt__ConfigurationEntity::UseCount = UseCount1; _p->tt__ConfigurationEntity::token = token1; } return _p; }

inline void soap_delete_tt__AnalyticsEngineInput(struct soap *soap, tt__AnalyticsEngineInput *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AnalyticsEngineInput(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AnalyticsEngineInputInfoExtension
#define SOAP_TYPE_tt__AnalyticsEngineInputInfoExtension (674)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsEngineInputInfoExtension(struct soap*, const char*, int, const tt__AnalyticsEngineInputInfoExtension *, const char*);
SOAP_FMAC3 tt__AnalyticsEngineInputInfoExtension * SOAP_FMAC4 soap_in_tt__AnalyticsEngineInputInfoExtension(struct soap*, const char*, tt__AnalyticsEngineInputInfoExtension *, const char*);

#ifndef soap_write_tt__AnalyticsEngineInputInfoExtension
#define soap_write_tt__AnalyticsEngineInputInfoExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AnalyticsEngineInputInfoExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsEngineInputInfoExtension * SOAP_FMAC4 soap_get_tt__AnalyticsEngineInputInfoExtension(struct soap*, tt__AnalyticsEngineInputInfoExtension *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsEngineInputInfoExtension
#define soap_read_tt__AnalyticsEngineInputInfoExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AnalyticsEngineInputInfoExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AnalyticsEngineInputInfoExtension * SOAP_FMAC2 soap_instantiate_tt__AnalyticsEngineInputInfoExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsEngineInputInfoExtension * soap_new_tt__AnalyticsEngineInputInfoExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsEngineInputInfoExtension(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsEngineInputInfoExtension * soap_new_req_tt__AnalyticsEngineInputInfoExtension(struct soap *soap) { tt__AnalyticsEngineInputInfoExtension *_p = soap_instantiate_tt__AnalyticsEngineInputInfoExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__AnalyticsEngineInputInfoExtension * soap_new_set_tt__AnalyticsEngineInputInfoExtension(struct soap *soap) { tt__AnalyticsEngineInputInfoExtension *_p = soap_instantiate_tt__AnalyticsEngineInputInfoExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__AnalyticsEngineInputInfoExtension(struct soap *soap, tt__AnalyticsEngineInputInfoExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AnalyticsEngineInputInfoExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AnalyticsEngineInputInfo
#define SOAP_TYPE_tt__AnalyticsEngineInputInfo (673)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsEngineInputInfo(struct soap*, const char*, int, const tt__AnalyticsEngineInputInfo *, const char*);
SOAP_FMAC3 tt__AnalyticsEngineInputInfo * SOAP_FMAC4 soap_in_tt__AnalyticsEngineInputInfo(struct soap*, const char*, tt__AnalyticsEngineInputInfo *, const char*);

#ifndef soap_write_tt__AnalyticsEngineInputInfo
#define soap_write_tt__AnalyticsEngineInputInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AnalyticsEngineInputInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsEngineInputInfo * SOAP_FMAC4 soap_get_tt__AnalyticsEngineInputInfo(struct soap*, tt__AnalyticsEngineInputInfo *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsEngineInputInfo
#define soap_read_tt__AnalyticsEngineInputInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AnalyticsEngineInputInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AnalyticsEngineInputInfo * SOAP_FMAC2 soap_instantiate_tt__AnalyticsEngineInputInfo(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsEngineInputInfo * soap_new_tt__AnalyticsEngineInputInfo(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsEngineInputInfo(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsEngineInputInfo * soap_new_req_tt__AnalyticsEngineInputInfo(struct soap *soap) { tt__AnalyticsEngineInputInfo *_p = soap_instantiate_tt__AnalyticsEngineInputInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__AnalyticsEngineInputInfo * soap_new_set_tt__AnalyticsEngineInputInfo(struct soap *soap, tt__Config *InputInfo, tt__AnalyticsEngineInputInfoExtension *Extension) { tt__AnalyticsEngineInputInfo *_p = soap_instantiate_tt__AnalyticsEngineInputInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AnalyticsEngineInputInfo::InputInfo = InputInfo; _p->tt__AnalyticsEngineInputInfo::Extension = Extension; } return _p; }

inline void soap_delete_tt__AnalyticsEngineInputInfo(struct soap *soap, tt__AnalyticsEngineInputInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AnalyticsEngineInputInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__EngineConfiguration
#define SOAP_TYPE_tt__EngineConfiguration (672)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__EngineConfiguration(struct soap*, const char*, int, const tt__EngineConfiguration *, const char*);
SOAP_FMAC3 tt__EngineConfiguration * SOAP_FMAC4 soap_in_tt__EngineConfiguration(struct soap*, const char*, tt__EngineConfiguration *, const char*);

#ifndef soap_write_tt__EngineConfiguration
#define soap_write_tt__EngineConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:EngineConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EngineConfiguration * SOAP_FMAC4 soap_get_tt__EngineConfiguration(struct soap*, tt__EngineConfiguration *, const char*, const char*);

#ifndef soap_read_tt__EngineConfiguration
#define soap_read_tt__EngineConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__EngineConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__EngineConfiguration * SOAP_FMAC2 soap_instantiate_tt__EngineConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__EngineConfiguration * soap_new_tt__EngineConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__EngineConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__EngineConfiguration * soap_new_req_tt__EngineConfiguration(struct soap *soap, tt__VideoAnalyticsConfiguration *VideoAnalyticsConfiguration, tt__AnalyticsEngineInputInfo *AnalyticsEngineInputInfo) { tt__EngineConfiguration *_p = soap_instantiate_tt__EngineConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__EngineConfiguration::VideoAnalyticsConfiguration = VideoAnalyticsConfiguration; _p->tt__EngineConfiguration::AnalyticsEngineInputInfo = AnalyticsEngineInputInfo; } return _p; }

inline tt__EngineConfiguration * soap_new_set_tt__EngineConfiguration(struct soap *soap, tt__VideoAnalyticsConfiguration *VideoAnalyticsConfiguration, tt__AnalyticsEngineInputInfo *AnalyticsEngineInputInfo) { tt__EngineConfiguration *_p = soap_instantiate_tt__EngineConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__EngineConfiguration::VideoAnalyticsConfiguration = VideoAnalyticsConfiguration; _p->tt__EngineConfiguration::AnalyticsEngineInputInfo = AnalyticsEngineInputInfo; } return _p; }

inline void soap_delete_tt__EngineConfiguration(struct soap *soap, tt__EngineConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__EngineConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AnalyticsDeviceEngineConfigurationExtension
#define SOAP_TYPE_tt__AnalyticsDeviceEngineConfigurationExtension (671)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsDeviceEngineConfigurationExtension(struct soap*, const char*, int, const tt__AnalyticsDeviceEngineConfigurationExtension *, const char*);
SOAP_FMAC3 tt__AnalyticsDeviceEngineConfigurationExtension * SOAP_FMAC4 soap_in_tt__AnalyticsDeviceEngineConfigurationExtension(struct soap*, const char*, tt__AnalyticsDeviceEngineConfigurationExtension *, const char*);

#ifndef soap_write_tt__AnalyticsDeviceEngineConfigurationExtension
#define soap_write_tt__AnalyticsDeviceEngineConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AnalyticsDeviceEngineConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsDeviceEngineConfigurationExtension * SOAP_FMAC4 soap_get_tt__AnalyticsDeviceEngineConfigurationExtension(struct soap*, tt__AnalyticsDeviceEngineConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsDeviceEngineConfigurationExtension
#define soap_read_tt__AnalyticsDeviceEngineConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AnalyticsDeviceEngineConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AnalyticsDeviceEngineConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__AnalyticsDeviceEngineConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsDeviceEngineConfigurationExtension * soap_new_tt__AnalyticsDeviceEngineConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsDeviceEngineConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsDeviceEngineConfigurationExtension * soap_new_req_tt__AnalyticsDeviceEngineConfigurationExtension(struct soap *soap) { tt__AnalyticsDeviceEngineConfigurationExtension *_p = soap_instantiate_tt__AnalyticsDeviceEngineConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__AnalyticsDeviceEngineConfigurationExtension * soap_new_set_tt__AnalyticsDeviceEngineConfigurationExtension(struct soap *soap) { tt__AnalyticsDeviceEngineConfigurationExtension *_p = soap_instantiate_tt__AnalyticsDeviceEngineConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__AnalyticsDeviceEngineConfigurationExtension(struct soap *soap, tt__AnalyticsDeviceEngineConfigurationExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AnalyticsDeviceEngineConfigurationExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AnalyticsDeviceEngineConfiguration
#define SOAP_TYPE_tt__AnalyticsDeviceEngineConfiguration (670)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsDeviceEngineConfiguration(struct soap*, const char*, int, const tt__AnalyticsDeviceEngineConfiguration *, const char*);
SOAP_FMAC3 tt__AnalyticsDeviceEngineConfiguration * SOAP_FMAC4 soap_in_tt__AnalyticsDeviceEngineConfiguration(struct soap*, const char*, tt__AnalyticsDeviceEngineConfiguration *, const char*);

#ifndef soap_write_tt__AnalyticsDeviceEngineConfiguration
#define soap_write_tt__AnalyticsDeviceEngineConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AnalyticsDeviceEngineConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsDeviceEngineConfiguration * SOAP_FMAC4 soap_get_tt__AnalyticsDeviceEngineConfiguration(struct soap*, tt__AnalyticsDeviceEngineConfiguration *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsDeviceEngineConfiguration
#define soap_read_tt__AnalyticsDeviceEngineConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AnalyticsDeviceEngineConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AnalyticsDeviceEngineConfiguration * SOAP_FMAC2 soap_instantiate_tt__AnalyticsDeviceEngineConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsDeviceEngineConfiguration * soap_new_tt__AnalyticsDeviceEngineConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsDeviceEngineConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsDeviceEngineConfiguration * soap_new_req_tt__AnalyticsDeviceEngineConfiguration(struct soap *soap, std::vector<tt__EngineConfiguration * >& EngineConfiguration) { tt__AnalyticsDeviceEngineConfiguration *_p = soap_instantiate_tt__AnalyticsDeviceEngineConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AnalyticsDeviceEngineConfiguration::EngineConfiguration = EngineConfiguration; } return _p; }

inline tt__AnalyticsDeviceEngineConfiguration * soap_new_set_tt__AnalyticsDeviceEngineConfiguration(struct soap *soap, std::vector<tt__EngineConfiguration * >& EngineConfiguration, tt__AnalyticsDeviceEngineConfigurationExtension *Extension) { tt__AnalyticsDeviceEngineConfiguration *_p = soap_instantiate_tt__AnalyticsDeviceEngineConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AnalyticsDeviceEngineConfiguration::EngineConfiguration = EngineConfiguration; _p->tt__AnalyticsDeviceEngineConfiguration::Extension = Extension; } return _p; }

inline void soap_delete_tt__AnalyticsDeviceEngineConfiguration(struct soap *soap, tt__AnalyticsDeviceEngineConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AnalyticsDeviceEngineConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AnalyticsEngine
#define SOAP_TYPE_tt__AnalyticsEngine (669)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsEngine(struct soap*, const char*, int, const tt__AnalyticsEngine *, const char*);
SOAP_FMAC3 tt__AnalyticsEngine * SOAP_FMAC4 soap_in_tt__AnalyticsEngine(struct soap*, const char*, tt__AnalyticsEngine *, const char*);

#ifndef soap_write_tt__AnalyticsEngine
#define soap_write_tt__AnalyticsEngine(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AnalyticsEngine", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsEngine * SOAP_FMAC4 soap_get_tt__AnalyticsEngine(struct soap*, tt__AnalyticsEngine *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsEngine
#define soap_read_tt__AnalyticsEngine(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AnalyticsEngine(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AnalyticsEngine * SOAP_FMAC2 soap_instantiate_tt__AnalyticsEngine(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsEngine * soap_new_tt__AnalyticsEngine(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsEngine(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsEngine * soap_new_req_tt__AnalyticsEngine(struct soap *soap, tt__AnalyticsDeviceEngineConfiguration *AnalyticsEngineConfiguration, std::string& Name1, int UseCount1, std::string& token1) { tt__AnalyticsEngine *_p = soap_instantiate_tt__AnalyticsEngine(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AnalyticsEngine::AnalyticsEngineConfiguration = AnalyticsEngineConfiguration; _p->tt__ConfigurationEntity::Name = Name1; _p->tt__ConfigurationEntity::UseCount = UseCount1; _p->tt__ConfigurationEntity::token = token1; } return _p; }

inline tt__AnalyticsEngine * soap_new_set_tt__AnalyticsEngine(struct soap *soap, tt__AnalyticsDeviceEngineConfiguration *AnalyticsEngineConfiguration, std::string& Name1, int UseCount1, std::string& token1) { tt__AnalyticsEngine *_p = soap_instantiate_tt__AnalyticsEngine(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AnalyticsEngine::AnalyticsEngineConfiguration = AnalyticsEngineConfiguration; _p->tt__ConfigurationEntity::Name = Name1; _p->tt__ConfigurationEntity::UseCount = UseCount1; _p->tt__ConfigurationEntity::token = token1; } return _p; }

inline void soap_delete_tt__AnalyticsEngine(struct soap *soap, tt__AnalyticsEngine *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AnalyticsEngine(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ReplayConfiguration
#define SOAP_TYPE_tt__ReplayConfiguration (668)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ReplayConfiguration(struct soap*, const char*, int, const tt__ReplayConfiguration *, const char*);
SOAP_FMAC3 tt__ReplayConfiguration * SOAP_FMAC4 soap_in_tt__ReplayConfiguration(struct soap*, const char*, tt__ReplayConfiguration *, const char*);

#ifndef soap_write_tt__ReplayConfiguration
#define soap_write_tt__ReplayConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ReplayConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ReplayConfiguration * SOAP_FMAC4 soap_get_tt__ReplayConfiguration(struct soap*, tt__ReplayConfiguration *, const char*, const char*);

#ifndef soap_read_tt__ReplayConfiguration
#define soap_read_tt__ReplayConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ReplayConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ReplayConfiguration * SOAP_FMAC2 soap_instantiate_tt__ReplayConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__ReplayConfiguration * soap_new_tt__ReplayConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__ReplayConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__ReplayConfiguration * soap_new_req_tt__ReplayConfiguration(struct soap *soap, LONG64 SessionTimeout) { tt__ReplayConfiguration *_p = soap_instantiate_tt__ReplayConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ReplayConfiguration::SessionTimeout = SessionTimeout; } return _p; }

inline tt__ReplayConfiguration * soap_new_set_tt__ReplayConfiguration(struct soap *soap, LONG64 SessionTimeout) { tt__ReplayConfiguration *_p = soap_instantiate_tt__ReplayConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ReplayConfiguration::SessionTimeout = SessionTimeout; } return _p; }

inline void soap_delete_tt__ReplayConfiguration(struct soap *soap, tt__ReplayConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ReplayConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__GetRecordingJobsResponseItem
#define SOAP_TYPE_tt__GetRecordingJobsResponseItem (667)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__GetRecordingJobsResponseItem(struct soap*, const char*, int, const tt__GetRecordingJobsResponseItem *, const char*);
SOAP_FMAC3 tt__GetRecordingJobsResponseItem * SOAP_FMAC4 soap_in_tt__GetRecordingJobsResponseItem(struct soap*, const char*, tt__GetRecordingJobsResponseItem *, const char*);

#ifndef soap_write_tt__GetRecordingJobsResponseItem
#define soap_write_tt__GetRecordingJobsResponseItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:GetRecordingJobsResponseItem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__GetRecordingJobsResponseItem * SOAP_FMAC4 soap_get_tt__GetRecordingJobsResponseItem(struct soap*, tt__GetRecordingJobsResponseItem *, const char*, const char*);

#ifndef soap_read_tt__GetRecordingJobsResponseItem
#define soap_read_tt__GetRecordingJobsResponseItem(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__GetRecordingJobsResponseItem(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__GetRecordingJobsResponseItem * SOAP_FMAC2 soap_instantiate_tt__GetRecordingJobsResponseItem(struct soap*, int, const char*, const char*, size_t*);

inline tt__GetRecordingJobsResponseItem * soap_new_tt__GetRecordingJobsResponseItem(struct soap *soap, int n = -1) { return soap_instantiate_tt__GetRecordingJobsResponseItem(soap, n, NULL, NULL, NULL); }

inline tt__GetRecordingJobsResponseItem * soap_new_req_tt__GetRecordingJobsResponseItem(struct soap *soap, std::string& JobToken, tt__RecordingJobConfiguration *JobConfiguration) { tt__GetRecordingJobsResponseItem *_p = soap_instantiate_tt__GetRecordingJobsResponseItem(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__GetRecordingJobsResponseItem::JobToken = JobToken; _p->tt__GetRecordingJobsResponseItem::JobConfiguration = JobConfiguration; } return _p; }

inline tt__GetRecordingJobsResponseItem * soap_new_set_tt__GetRecordingJobsResponseItem(struct soap *soap, std::string& JobToken, tt__RecordingJobConfiguration *JobConfiguration) { tt__GetRecordingJobsResponseItem *_p = soap_instantiate_tt__GetRecordingJobsResponseItem(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__GetRecordingJobsResponseItem::JobToken = JobToken; _p->tt__GetRecordingJobsResponseItem::JobConfiguration = JobConfiguration; } return _p; }

inline void soap_delete_tt__GetRecordingJobsResponseItem(struct soap *soap, tt__GetRecordingJobsResponseItem *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__GetRecordingJobsResponseItem(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RecordingJobStateTrack
#define SOAP_TYPE_tt__RecordingJobStateTrack (666)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingJobStateTrack(struct soap*, const char*, int, const tt__RecordingJobStateTrack *, const char*);
SOAP_FMAC3 tt__RecordingJobStateTrack * SOAP_FMAC4 soap_in_tt__RecordingJobStateTrack(struct soap*, const char*, tt__RecordingJobStateTrack *, const char*);

#ifndef soap_write_tt__RecordingJobStateTrack
#define soap_write_tt__RecordingJobStateTrack(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RecordingJobStateTrack", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobStateTrack * SOAP_FMAC4 soap_get_tt__RecordingJobStateTrack(struct soap*, tt__RecordingJobStateTrack *, const char*, const char*);

#ifndef soap_read_tt__RecordingJobStateTrack
#define soap_read_tt__RecordingJobStateTrack(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RecordingJobStateTrack(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RecordingJobStateTrack * SOAP_FMAC2 soap_instantiate_tt__RecordingJobStateTrack(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingJobStateTrack * soap_new_tt__RecordingJobStateTrack(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingJobStateTrack(soap, n, NULL, NULL, NULL); }

inline tt__RecordingJobStateTrack * soap_new_req_tt__RecordingJobStateTrack(struct soap *soap, std::string& SourceTag, std::string& Destination, std::string& State) { tt__RecordingJobStateTrack *_p = soap_instantiate_tt__RecordingJobStateTrack(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RecordingJobStateTrack::SourceTag = SourceTag; _p->tt__RecordingJobStateTrack::Destination = Destination; _p->tt__RecordingJobStateTrack::State = State; } return _p; }

inline tt__RecordingJobStateTrack * soap_new_set_tt__RecordingJobStateTrack(struct soap *soap, std::string& SourceTag, std::string& Destination, std::string *Error, std::string& State) { tt__RecordingJobStateTrack *_p = soap_instantiate_tt__RecordingJobStateTrack(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RecordingJobStateTrack::SourceTag = SourceTag; _p->tt__RecordingJobStateTrack::Destination = Destination; _p->tt__RecordingJobStateTrack::Error = Error; _p->tt__RecordingJobStateTrack::State = State; } return _p; }

inline void soap_delete_tt__RecordingJobStateTrack(struct soap *soap, tt__RecordingJobStateTrack *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RecordingJobStateTrack(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RecordingJobStateTracks
#define SOAP_TYPE_tt__RecordingJobStateTracks (665)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingJobStateTracks(struct soap*, const char*, int, const tt__RecordingJobStateTracks *, const char*);
SOAP_FMAC3 tt__RecordingJobStateTracks * SOAP_FMAC4 soap_in_tt__RecordingJobStateTracks(struct soap*, const char*, tt__RecordingJobStateTracks *, const char*);

#ifndef soap_write_tt__RecordingJobStateTracks
#define soap_write_tt__RecordingJobStateTracks(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RecordingJobStateTracks", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobStateTracks * SOAP_FMAC4 soap_get_tt__RecordingJobStateTracks(struct soap*, tt__RecordingJobStateTracks *, const char*, const char*);

#ifndef soap_read_tt__RecordingJobStateTracks
#define soap_read_tt__RecordingJobStateTracks(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RecordingJobStateTracks(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RecordingJobStateTracks * SOAP_FMAC2 soap_instantiate_tt__RecordingJobStateTracks(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingJobStateTracks * soap_new_tt__RecordingJobStateTracks(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingJobStateTracks(soap, n, NULL, NULL, NULL); }

inline tt__RecordingJobStateTracks * soap_new_req_tt__RecordingJobStateTracks(struct soap *soap) { tt__RecordingJobStateTracks *_p = soap_instantiate_tt__RecordingJobStateTracks(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__RecordingJobStateTracks * soap_new_set_tt__RecordingJobStateTracks(struct soap *soap, std::vector<tt__RecordingJobStateTrack * >& Track) { tt__RecordingJobStateTracks *_p = soap_instantiate_tt__RecordingJobStateTracks(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RecordingJobStateTracks::Track = Track; } return _p; }

inline void soap_delete_tt__RecordingJobStateTracks(struct soap *soap, tt__RecordingJobStateTracks *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RecordingJobStateTracks(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RecordingJobStateSource
#define SOAP_TYPE_tt__RecordingJobStateSource (664)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingJobStateSource(struct soap*, const char*, int, const tt__RecordingJobStateSource *, const char*);
SOAP_FMAC3 tt__RecordingJobStateSource * SOAP_FMAC4 soap_in_tt__RecordingJobStateSource(struct soap*, const char*, tt__RecordingJobStateSource *, const char*);

#ifndef soap_write_tt__RecordingJobStateSource
#define soap_write_tt__RecordingJobStateSource(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RecordingJobStateSource", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobStateSource * SOAP_FMAC4 soap_get_tt__RecordingJobStateSource(struct soap*, tt__RecordingJobStateSource *, const char*, const char*);

#ifndef soap_read_tt__RecordingJobStateSource
#define soap_read_tt__RecordingJobStateSource(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RecordingJobStateSource(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RecordingJobStateSource * SOAP_FMAC2 soap_instantiate_tt__RecordingJobStateSource(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingJobStateSource * soap_new_tt__RecordingJobStateSource(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingJobStateSource(soap, n, NULL, NULL, NULL); }

inline tt__RecordingJobStateSource * soap_new_req_tt__RecordingJobStateSource(struct soap *soap, tt__SourceReference *SourceToken, std::string& State, tt__RecordingJobStateTracks *Tracks) { tt__RecordingJobStateSource *_p = soap_instantiate_tt__RecordingJobStateSource(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RecordingJobStateSource::SourceToken = SourceToken; _p->tt__RecordingJobStateSource::State = State; _p->tt__RecordingJobStateSource::Tracks = Tracks; } return _p; }

inline tt__RecordingJobStateSource * soap_new_set_tt__RecordingJobStateSource(struct soap *soap, tt__SourceReference *SourceToken, std::string& State, tt__RecordingJobStateTracks *Tracks) { tt__RecordingJobStateSource *_p = soap_instantiate_tt__RecordingJobStateSource(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RecordingJobStateSource::SourceToken = SourceToken; _p->tt__RecordingJobStateSource::State = State; _p->tt__RecordingJobStateSource::Tracks = Tracks; } return _p; }

inline void soap_delete_tt__RecordingJobStateSource(struct soap *soap, tt__RecordingJobStateSource *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RecordingJobStateSource(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RecordingJobStateInformationExtension
#define SOAP_TYPE_tt__RecordingJobStateInformationExtension (663)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingJobStateInformationExtension(struct soap*, const char*, int, const tt__RecordingJobStateInformationExtension *, const char*);
SOAP_FMAC3 tt__RecordingJobStateInformationExtension * SOAP_FMAC4 soap_in_tt__RecordingJobStateInformationExtension(struct soap*, const char*, tt__RecordingJobStateInformationExtension *, const char*);

#ifndef soap_write_tt__RecordingJobStateInformationExtension
#define soap_write_tt__RecordingJobStateInformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RecordingJobStateInformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobStateInformationExtension * SOAP_FMAC4 soap_get_tt__RecordingJobStateInformationExtension(struct soap*, tt__RecordingJobStateInformationExtension *, const char*, const char*);

#ifndef soap_read_tt__RecordingJobStateInformationExtension
#define soap_read_tt__RecordingJobStateInformationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RecordingJobStateInformationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RecordingJobStateInformationExtension * SOAP_FMAC2 soap_instantiate_tt__RecordingJobStateInformationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingJobStateInformationExtension * soap_new_tt__RecordingJobStateInformationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingJobStateInformationExtension(soap, n, NULL, NULL, NULL); }

inline tt__RecordingJobStateInformationExtension * soap_new_req_tt__RecordingJobStateInformationExtension(struct soap *soap) { tt__RecordingJobStateInformationExtension *_p = soap_instantiate_tt__RecordingJobStateInformationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__RecordingJobStateInformationExtension * soap_new_set_tt__RecordingJobStateInformationExtension(struct soap *soap) { tt__RecordingJobStateInformationExtension *_p = soap_instantiate_tt__RecordingJobStateInformationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__RecordingJobStateInformationExtension(struct soap *soap, tt__RecordingJobStateInformationExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RecordingJobStateInformationExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RecordingJobStateInformation
#define SOAP_TYPE_tt__RecordingJobStateInformation (662)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingJobStateInformation(struct soap*, const char*, int, const tt__RecordingJobStateInformation *, const char*);
SOAP_FMAC3 tt__RecordingJobStateInformation * SOAP_FMAC4 soap_in_tt__RecordingJobStateInformation(struct soap*, const char*, tt__RecordingJobStateInformation *, const char*);

#ifndef soap_write_tt__RecordingJobStateInformation
#define soap_write_tt__RecordingJobStateInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RecordingJobStateInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobStateInformation * SOAP_FMAC4 soap_get_tt__RecordingJobStateInformation(struct soap*, tt__RecordingJobStateInformation *, const char*, const char*);

#ifndef soap_read_tt__RecordingJobStateInformation
#define soap_read_tt__RecordingJobStateInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RecordingJobStateInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RecordingJobStateInformation * SOAP_FMAC2 soap_instantiate_tt__RecordingJobStateInformation(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingJobStateInformation * soap_new_tt__RecordingJobStateInformation(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingJobStateInformation(soap, n, NULL, NULL, NULL); }

inline tt__RecordingJobStateInformation * soap_new_req_tt__RecordingJobStateInformation(struct soap *soap, std::string& RecordingToken, std::string& State) { tt__RecordingJobStateInformation *_p = soap_instantiate_tt__RecordingJobStateInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RecordingJobStateInformation::RecordingToken = RecordingToken; _p->tt__RecordingJobStateInformation::State = State; } return _p; }

inline tt__RecordingJobStateInformation * soap_new_set_tt__RecordingJobStateInformation(struct soap *soap, std::string& RecordingToken, std::string& State, std::vector<tt__RecordingJobStateSource * >& Sources, tt__RecordingJobStateInformationExtension *Extension) { tt__RecordingJobStateInformation *_p = soap_instantiate_tt__RecordingJobStateInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RecordingJobStateInformation::RecordingToken = RecordingToken; _p->tt__RecordingJobStateInformation::State = State; _p->tt__RecordingJobStateInformation::Sources = Sources; _p->tt__RecordingJobStateInformation::Extension = Extension; } return _p; }

inline void soap_delete_tt__RecordingJobStateInformation(struct soap *soap, tt__RecordingJobStateInformation *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RecordingJobStateInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RecordingJobTrack
#define SOAP_TYPE_tt__RecordingJobTrack (661)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingJobTrack(struct soap*, const char*, int, const tt__RecordingJobTrack *, const char*);
SOAP_FMAC3 tt__RecordingJobTrack * SOAP_FMAC4 soap_in_tt__RecordingJobTrack(struct soap*, const char*, tt__RecordingJobTrack *, const char*);

#ifndef soap_write_tt__RecordingJobTrack
#define soap_write_tt__RecordingJobTrack(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RecordingJobTrack", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobTrack * SOAP_FMAC4 soap_get_tt__RecordingJobTrack(struct soap*, tt__RecordingJobTrack *, const char*, const char*);

#ifndef soap_read_tt__RecordingJobTrack
#define soap_read_tt__RecordingJobTrack(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RecordingJobTrack(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RecordingJobTrack * SOAP_FMAC2 soap_instantiate_tt__RecordingJobTrack(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingJobTrack * soap_new_tt__RecordingJobTrack(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingJobTrack(soap, n, NULL, NULL, NULL); }

inline tt__RecordingJobTrack * soap_new_req_tt__RecordingJobTrack(struct soap *soap, std::string& SourceTag, std::string& Destination) { tt__RecordingJobTrack *_p = soap_instantiate_tt__RecordingJobTrack(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RecordingJobTrack::SourceTag = SourceTag; _p->tt__RecordingJobTrack::Destination = Destination; } return _p; }

inline tt__RecordingJobTrack * soap_new_set_tt__RecordingJobTrack(struct soap *soap, std::string& SourceTag, std::string& Destination) { tt__RecordingJobTrack *_p = soap_instantiate_tt__RecordingJobTrack(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RecordingJobTrack::SourceTag = SourceTag; _p->tt__RecordingJobTrack::Destination = Destination; } return _p; }

inline void soap_delete_tt__RecordingJobTrack(struct soap *soap, tt__RecordingJobTrack *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RecordingJobTrack(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RecordingJobSourceExtension
#define SOAP_TYPE_tt__RecordingJobSourceExtension (660)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingJobSourceExtension(struct soap*, const char*, int, const tt__RecordingJobSourceExtension *, const char*);
SOAP_FMAC3 tt__RecordingJobSourceExtension * SOAP_FMAC4 soap_in_tt__RecordingJobSourceExtension(struct soap*, const char*, tt__RecordingJobSourceExtension *, const char*);

#ifndef soap_write_tt__RecordingJobSourceExtension
#define soap_write_tt__RecordingJobSourceExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RecordingJobSourceExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobSourceExtension * SOAP_FMAC4 soap_get_tt__RecordingJobSourceExtension(struct soap*, tt__RecordingJobSourceExtension *, const char*, const char*);

#ifndef soap_read_tt__RecordingJobSourceExtension
#define soap_read_tt__RecordingJobSourceExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RecordingJobSourceExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RecordingJobSourceExtension * SOAP_FMAC2 soap_instantiate_tt__RecordingJobSourceExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingJobSourceExtension * soap_new_tt__RecordingJobSourceExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingJobSourceExtension(soap, n, NULL, NULL, NULL); }

inline tt__RecordingJobSourceExtension * soap_new_req_tt__RecordingJobSourceExtension(struct soap *soap) { tt__RecordingJobSourceExtension *_p = soap_instantiate_tt__RecordingJobSourceExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__RecordingJobSourceExtension * soap_new_set_tt__RecordingJobSourceExtension(struct soap *soap) { tt__RecordingJobSourceExtension *_p = soap_instantiate_tt__RecordingJobSourceExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__RecordingJobSourceExtension(struct soap *soap, tt__RecordingJobSourceExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RecordingJobSourceExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RecordingJobSource
#define SOAP_TYPE_tt__RecordingJobSource (659)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingJobSource(struct soap*, const char*, int, const tt__RecordingJobSource *, const char*);
SOAP_FMAC3 tt__RecordingJobSource * SOAP_FMAC4 soap_in_tt__RecordingJobSource(struct soap*, const char*, tt__RecordingJobSource *, const char*);

#ifndef soap_write_tt__RecordingJobSource
#define soap_write_tt__RecordingJobSource(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RecordingJobSource", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobSource * SOAP_FMAC4 soap_get_tt__RecordingJobSource(struct soap*, tt__RecordingJobSource *, const char*, const char*);

#ifndef soap_read_tt__RecordingJobSource
#define soap_read_tt__RecordingJobSource(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RecordingJobSource(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RecordingJobSource * SOAP_FMAC2 soap_instantiate_tt__RecordingJobSource(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingJobSource * soap_new_tt__RecordingJobSource(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingJobSource(soap, n, NULL, NULL, NULL); }

inline tt__RecordingJobSource * soap_new_req_tt__RecordingJobSource(struct soap *soap) { tt__RecordingJobSource *_p = soap_instantiate_tt__RecordingJobSource(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__RecordingJobSource * soap_new_set_tt__RecordingJobSource(struct soap *soap, tt__SourceReference *SourceToken, bool *AutoCreateReceiver, std::vector<tt__RecordingJobTrack * >& Tracks, tt__RecordingJobSourceExtension *Extension) { tt__RecordingJobSource *_p = soap_instantiate_tt__RecordingJobSource(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RecordingJobSource::SourceToken = SourceToken; _p->tt__RecordingJobSource::AutoCreateReceiver = AutoCreateReceiver; _p->tt__RecordingJobSource::Tracks = Tracks; _p->tt__RecordingJobSource::Extension = Extension; } return _p; }

inline void soap_delete_tt__RecordingJobSource(struct soap *soap, tt__RecordingJobSource *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RecordingJobSource(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RecordingJobConfigurationExtension
#define SOAP_TYPE_tt__RecordingJobConfigurationExtension (658)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingJobConfigurationExtension(struct soap*, const char*, int, const tt__RecordingJobConfigurationExtension *, const char*);
SOAP_FMAC3 tt__RecordingJobConfigurationExtension * SOAP_FMAC4 soap_in_tt__RecordingJobConfigurationExtension(struct soap*, const char*, tt__RecordingJobConfigurationExtension *, const char*);

#ifndef soap_write_tt__RecordingJobConfigurationExtension
#define soap_write_tt__RecordingJobConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RecordingJobConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobConfigurationExtension * SOAP_FMAC4 soap_get_tt__RecordingJobConfigurationExtension(struct soap*, tt__RecordingJobConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__RecordingJobConfigurationExtension
#define soap_read_tt__RecordingJobConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RecordingJobConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RecordingJobConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__RecordingJobConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingJobConfigurationExtension * soap_new_tt__RecordingJobConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingJobConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__RecordingJobConfigurationExtension * soap_new_req_tt__RecordingJobConfigurationExtension(struct soap *soap) { tt__RecordingJobConfigurationExtension *_p = soap_instantiate_tt__RecordingJobConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__RecordingJobConfigurationExtension * soap_new_set_tt__RecordingJobConfigurationExtension(struct soap *soap) { tt__RecordingJobConfigurationExtension *_p = soap_instantiate_tt__RecordingJobConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__RecordingJobConfigurationExtension(struct soap *soap, tt__RecordingJobConfigurationExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RecordingJobConfigurationExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RecordingJobConfiguration
#define SOAP_TYPE_tt__RecordingJobConfiguration (657)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingJobConfiguration(struct soap*, const char*, int, const tt__RecordingJobConfiguration *, const char*);
SOAP_FMAC3 tt__RecordingJobConfiguration * SOAP_FMAC4 soap_in_tt__RecordingJobConfiguration(struct soap*, const char*, tt__RecordingJobConfiguration *, const char*);

#ifndef soap_write_tt__RecordingJobConfiguration
#define soap_write_tt__RecordingJobConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RecordingJobConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobConfiguration * SOAP_FMAC4 soap_get_tt__RecordingJobConfiguration(struct soap*, tt__RecordingJobConfiguration *, const char*, const char*);

#ifndef soap_read_tt__RecordingJobConfiguration
#define soap_read_tt__RecordingJobConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RecordingJobConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RecordingJobConfiguration * SOAP_FMAC2 soap_instantiate_tt__RecordingJobConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingJobConfiguration * soap_new_tt__RecordingJobConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingJobConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__RecordingJobConfiguration * soap_new_req_tt__RecordingJobConfiguration(struct soap *soap, std::string& RecordingToken, std::string& Mode, int Priority) { tt__RecordingJobConfiguration *_p = soap_instantiate_tt__RecordingJobConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RecordingJobConfiguration::RecordingToken = RecordingToken; _p->tt__RecordingJobConfiguration::Mode = Mode; _p->tt__RecordingJobConfiguration::Priority = Priority; } return _p; }

inline tt__RecordingJobConfiguration * soap_new_set_tt__RecordingJobConfiguration(struct soap *soap, std::string& RecordingToken, std::string& Mode, int Priority, std::vector<tt__RecordingJobSource * >& Source, tt__RecordingJobConfigurationExtension *Extension) { tt__RecordingJobConfiguration *_p = soap_instantiate_tt__RecordingJobConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RecordingJobConfiguration::RecordingToken = RecordingToken; _p->tt__RecordingJobConfiguration::Mode = Mode; _p->tt__RecordingJobConfiguration::Priority = Priority; _p->tt__RecordingJobConfiguration::Source = Source; _p->tt__RecordingJobConfiguration::Extension = Extension; } return _p; }

inline void soap_delete_tt__RecordingJobConfiguration(struct soap *soap, tt__RecordingJobConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RecordingJobConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__GetTracksResponseItem
#define SOAP_TYPE_tt__GetTracksResponseItem (656)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__GetTracksResponseItem(struct soap*, const char*, int, const tt__GetTracksResponseItem *, const char*);
SOAP_FMAC3 tt__GetTracksResponseItem * SOAP_FMAC4 soap_in_tt__GetTracksResponseItem(struct soap*, const char*, tt__GetTracksResponseItem *, const char*);

#ifndef soap_write_tt__GetTracksResponseItem
#define soap_write_tt__GetTracksResponseItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:GetTracksResponseItem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__GetTracksResponseItem * SOAP_FMAC4 soap_get_tt__GetTracksResponseItem(struct soap*, tt__GetTracksResponseItem *, const char*, const char*);

#ifndef soap_read_tt__GetTracksResponseItem
#define soap_read_tt__GetTracksResponseItem(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__GetTracksResponseItem(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__GetTracksResponseItem * SOAP_FMAC2 soap_instantiate_tt__GetTracksResponseItem(struct soap*, int, const char*, const char*, size_t*);

inline tt__GetTracksResponseItem * soap_new_tt__GetTracksResponseItem(struct soap *soap, int n = -1) { return soap_instantiate_tt__GetTracksResponseItem(soap, n, NULL, NULL, NULL); }

inline tt__GetTracksResponseItem * soap_new_req_tt__GetTracksResponseItem(struct soap *soap, std::string& TrackToken, tt__TrackConfiguration *Configuration) { tt__GetTracksResponseItem *_p = soap_instantiate_tt__GetTracksResponseItem(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__GetTracksResponseItem::TrackToken = TrackToken; _p->tt__GetTracksResponseItem::Configuration = Configuration; } return _p; }

inline tt__GetTracksResponseItem * soap_new_set_tt__GetTracksResponseItem(struct soap *soap, std::string& TrackToken, tt__TrackConfiguration *Configuration) { tt__GetTracksResponseItem *_p = soap_instantiate_tt__GetTracksResponseItem(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__GetTracksResponseItem::TrackToken = TrackToken; _p->tt__GetTracksResponseItem::Configuration = Configuration; } return _p; }

inline void soap_delete_tt__GetTracksResponseItem(struct soap *soap, tt__GetTracksResponseItem *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__GetTracksResponseItem(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__GetTracksResponseList
#define SOAP_TYPE_tt__GetTracksResponseList (655)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__GetTracksResponseList(struct soap*, const char*, int, const tt__GetTracksResponseList *, const char*);
SOAP_FMAC3 tt__GetTracksResponseList * SOAP_FMAC4 soap_in_tt__GetTracksResponseList(struct soap*, const char*, tt__GetTracksResponseList *, const char*);

#ifndef soap_write_tt__GetTracksResponseList
#define soap_write_tt__GetTracksResponseList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:GetTracksResponseList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__GetTracksResponseList * SOAP_FMAC4 soap_get_tt__GetTracksResponseList(struct soap*, tt__GetTracksResponseList *, const char*, const char*);

#ifndef soap_read_tt__GetTracksResponseList
#define soap_read_tt__GetTracksResponseList(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__GetTracksResponseList(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__GetTracksResponseList * SOAP_FMAC2 soap_instantiate_tt__GetTracksResponseList(struct soap*, int, const char*, const char*, size_t*);

inline tt__GetTracksResponseList * soap_new_tt__GetTracksResponseList(struct soap *soap, int n = -1) { return soap_instantiate_tt__GetTracksResponseList(soap, n, NULL, NULL, NULL); }

inline tt__GetTracksResponseList * soap_new_req_tt__GetTracksResponseList(struct soap *soap) { tt__GetTracksResponseList *_p = soap_instantiate_tt__GetTracksResponseList(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__GetTracksResponseList * soap_new_set_tt__GetTracksResponseList(struct soap *soap, std::vector<tt__GetTracksResponseItem * >& Track) { tt__GetTracksResponseList *_p = soap_instantiate_tt__GetTracksResponseList(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__GetTracksResponseList::Track = Track; } return _p; }

inline void soap_delete_tt__GetTracksResponseList(struct soap *soap, tt__GetTracksResponseList *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__GetTracksResponseList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__GetRecordingsResponseItem
#define SOAP_TYPE_tt__GetRecordingsResponseItem (654)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__GetRecordingsResponseItem(struct soap*, const char*, int, const tt__GetRecordingsResponseItem *, const char*);
SOAP_FMAC3 tt__GetRecordingsResponseItem * SOAP_FMAC4 soap_in_tt__GetRecordingsResponseItem(struct soap*, const char*, tt__GetRecordingsResponseItem *, const char*);

#ifndef soap_write_tt__GetRecordingsResponseItem
#define soap_write_tt__GetRecordingsResponseItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:GetRecordingsResponseItem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__GetRecordingsResponseItem * SOAP_FMAC4 soap_get_tt__GetRecordingsResponseItem(struct soap*, tt__GetRecordingsResponseItem *, const char*, const char*);

#ifndef soap_read_tt__GetRecordingsResponseItem
#define soap_read_tt__GetRecordingsResponseItem(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__GetRecordingsResponseItem(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__GetRecordingsResponseItem * SOAP_FMAC2 soap_instantiate_tt__GetRecordingsResponseItem(struct soap*, int, const char*, const char*, size_t*);

inline tt__GetRecordingsResponseItem * soap_new_tt__GetRecordingsResponseItem(struct soap *soap, int n = -1) { return soap_instantiate_tt__GetRecordingsResponseItem(soap, n, NULL, NULL, NULL); }

inline tt__GetRecordingsResponseItem * soap_new_req_tt__GetRecordingsResponseItem(struct soap *soap, std::string& RecordingToken, tt__RecordingConfiguration *Configuration, tt__GetTracksResponseList *Tracks) { tt__GetRecordingsResponseItem *_p = soap_instantiate_tt__GetRecordingsResponseItem(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__GetRecordingsResponseItem::RecordingToken = RecordingToken; _p->tt__GetRecordingsResponseItem::Configuration = Configuration; _p->tt__GetRecordingsResponseItem::Tracks = Tracks; } return _p; }

inline tt__GetRecordingsResponseItem * soap_new_set_tt__GetRecordingsResponseItem(struct soap *soap, std::string& RecordingToken, tt__RecordingConfiguration *Configuration, tt__GetTracksResponseList *Tracks) { tt__GetRecordingsResponseItem *_p = soap_instantiate_tt__GetRecordingsResponseItem(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__GetRecordingsResponseItem::RecordingToken = RecordingToken; _p->tt__GetRecordingsResponseItem::Configuration = Configuration; _p->tt__GetRecordingsResponseItem::Tracks = Tracks; } return _p; }

inline void soap_delete_tt__GetRecordingsResponseItem(struct soap *soap, tt__GetRecordingsResponseItem *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__GetRecordingsResponseItem(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__TrackConfiguration
#define SOAP_TYPE_tt__TrackConfiguration (653)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__TrackConfiguration(struct soap*, const char*, int, const tt__TrackConfiguration *, const char*);
SOAP_FMAC3 tt__TrackConfiguration * SOAP_FMAC4 soap_in_tt__TrackConfiguration(struct soap*, const char*, tt__TrackConfiguration *, const char*);

#ifndef soap_write_tt__TrackConfiguration
#define soap_write_tt__TrackConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:TrackConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TrackConfiguration * SOAP_FMAC4 soap_get_tt__TrackConfiguration(struct soap*, tt__TrackConfiguration *, const char*, const char*);

#ifndef soap_read_tt__TrackConfiguration
#define soap_read_tt__TrackConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__TrackConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__TrackConfiguration * SOAP_FMAC2 soap_instantiate_tt__TrackConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__TrackConfiguration * soap_new_tt__TrackConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__TrackConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__TrackConfiguration * soap_new_req_tt__TrackConfiguration(struct soap *soap, enum tt__TrackType TrackType, std::string& Description) { tt__TrackConfiguration *_p = soap_instantiate_tt__TrackConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__TrackConfiguration::TrackType = TrackType; _p->tt__TrackConfiguration::Description = Description; } return _p; }

inline tt__TrackConfiguration * soap_new_set_tt__TrackConfiguration(struct soap *soap, enum tt__TrackType TrackType, std::string& Description) { tt__TrackConfiguration *_p = soap_instantiate_tt__TrackConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__TrackConfiguration::TrackType = TrackType; _p->tt__TrackConfiguration::Description = Description; } return _p; }

inline void soap_delete_tt__TrackConfiguration(struct soap *soap, tt__TrackConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__TrackConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RecordingConfiguration
#define SOAP_TYPE_tt__RecordingConfiguration (652)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingConfiguration(struct soap*, const char*, int, const tt__RecordingConfiguration *, const char*);
SOAP_FMAC3 tt__RecordingConfiguration * SOAP_FMAC4 soap_in_tt__RecordingConfiguration(struct soap*, const char*, tt__RecordingConfiguration *, const char*);

#ifndef soap_write_tt__RecordingConfiguration
#define soap_write_tt__RecordingConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RecordingConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingConfiguration * SOAP_FMAC4 soap_get_tt__RecordingConfiguration(struct soap*, tt__RecordingConfiguration *, const char*, const char*);

#ifndef soap_read_tt__RecordingConfiguration
#define soap_read_tt__RecordingConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RecordingConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RecordingConfiguration * SOAP_FMAC2 soap_instantiate_tt__RecordingConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingConfiguration * soap_new_tt__RecordingConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__RecordingConfiguration * soap_new_req_tt__RecordingConfiguration(struct soap *soap, tt__RecordingSourceInformation *Source, std::string& Content, LONG64 MaximumRetentionTime) { tt__RecordingConfiguration *_p = soap_instantiate_tt__RecordingConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RecordingConfiguration::Source = Source; _p->tt__RecordingConfiguration::Content = Content; _p->tt__RecordingConfiguration::MaximumRetentionTime = MaximumRetentionTime; } return _p; }

inline tt__RecordingConfiguration * soap_new_set_tt__RecordingConfiguration(struct soap *soap, tt__RecordingSourceInformation *Source, std::string& Content, LONG64 MaximumRetentionTime) { tt__RecordingConfiguration *_p = soap_instantiate_tt__RecordingConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RecordingConfiguration::Source = Source; _p->tt__RecordingConfiguration::Content = Content; _p->tt__RecordingConfiguration::MaximumRetentionTime = MaximumRetentionTime; } return _p; }

inline void soap_delete_tt__RecordingConfiguration(struct soap *soap, tt__RecordingConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RecordingConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__MetadataAttributes
#define SOAP_TYPE_tt__MetadataAttributes (651)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MetadataAttributes(struct soap*, const char*, int, const tt__MetadataAttributes *, const char*);
SOAP_FMAC3 tt__MetadataAttributes * SOAP_FMAC4 soap_in_tt__MetadataAttributes(struct soap*, const char*, tt__MetadataAttributes *, const char*);

#ifndef soap_write_tt__MetadataAttributes
#define soap_write_tt__MetadataAttributes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:MetadataAttributes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataAttributes * SOAP_FMAC4 soap_get_tt__MetadataAttributes(struct soap*, tt__MetadataAttributes *, const char*, const char*);

#ifndef soap_read_tt__MetadataAttributes
#define soap_read_tt__MetadataAttributes(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__MetadataAttributes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__MetadataAttributes * SOAP_FMAC2 soap_instantiate_tt__MetadataAttributes(struct soap*, int, const char*, const char*, size_t*);

inline tt__MetadataAttributes * soap_new_tt__MetadataAttributes(struct soap *soap, int n = -1) { return soap_instantiate_tt__MetadataAttributes(soap, n, NULL, NULL, NULL); }

inline tt__MetadataAttributes * soap_new_req_tt__MetadataAttributes(struct soap *soap, bool CanContainPTZ, bool CanContainAnalytics, bool CanContainNotifications) { tt__MetadataAttributes *_p = soap_instantiate_tt__MetadataAttributes(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MetadataAttributes::CanContainPTZ = CanContainPTZ; _p->tt__MetadataAttributes::CanContainAnalytics = CanContainAnalytics; _p->tt__MetadataAttributes::CanContainNotifications = CanContainNotifications; } return _p; }

inline tt__MetadataAttributes * soap_new_set_tt__MetadataAttributes(struct soap *soap, bool CanContainPTZ, bool CanContainAnalytics, bool CanContainNotifications, std::string *PtzSpaces) { tt__MetadataAttributes *_p = soap_instantiate_tt__MetadataAttributes(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MetadataAttributes::CanContainPTZ = CanContainPTZ; _p->tt__MetadataAttributes::CanContainAnalytics = CanContainAnalytics; _p->tt__MetadataAttributes::CanContainNotifications = CanContainNotifications; _p->tt__MetadataAttributes::PtzSpaces = PtzSpaces; } return _p; }

inline void soap_delete_tt__MetadataAttributes(struct soap *soap, tt__MetadataAttributes *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__MetadataAttributes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AudioAttributes
#define SOAP_TYPE_tt__AudioAttributes (650)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioAttributes(struct soap*, const char*, int, const tt__AudioAttributes *, const char*);
SOAP_FMAC3 tt__AudioAttributes * SOAP_FMAC4 soap_in_tt__AudioAttributes(struct soap*, const char*, tt__AudioAttributes *, const char*);

#ifndef soap_write_tt__AudioAttributes
#define soap_write_tt__AudioAttributes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AudioAttributes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioAttributes * SOAP_FMAC4 soap_get_tt__AudioAttributes(struct soap*, tt__AudioAttributes *, const char*, const char*);

#ifndef soap_read_tt__AudioAttributes
#define soap_read_tt__AudioAttributes(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AudioAttributes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AudioAttributes * SOAP_FMAC2 soap_instantiate_tt__AudioAttributes(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioAttributes * soap_new_tt__AudioAttributes(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioAttributes(soap, n, NULL, NULL, NULL); }

inline tt__AudioAttributes * soap_new_req_tt__AudioAttributes(struct soap *soap, enum tt__AudioEncoding Encoding, int Samplerate) { tt__AudioAttributes *_p = soap_instantiate_tt__AudioAttributes(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AudioAttributes::Encoding = Encoding; _p->tt__AudioAttributes::Samplerate = Samplerate; } return _p; }

inline tt__AudioAttributes * soap_new_set_tt__AudioAttributes(struct soap *soap, int *Bitrate, enum tt__AudioEncoding Encoding, int Samplerate) { tt__AudioAttributes *_p = soap_instantiate_tt__AudioAttributes(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AudioAttributes::Bitrate = Bitrate; _p->tt__AudioAttributes::Encoding = Encoding; _p->tt__AudioAttributes::Samplerate = Samplerate; } return _p; }

inline void soap_delete_tt__AudioAttributes(struct soap *soap, tt__AudioAttributes *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AudioAttributes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__VideoAttributes
#define SOAP_TYPE_tt__VideoAttributes (649)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoAttributes(struct soap*, const char*, int, const tt__VideoAttributes *, const char*);
SOAP_FMAC3 tt__VideoAttributes * SOAP_FMAC4 soap_in_tt__VideoAttributes(struct soap*, const char*, tt__VideoAttributes *, const char*);

#ifndef soap_write_tt__VideoAttributes
#define soap_write_tt__VideoAttributes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:VideoAttributes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoAttributes * SOAP_FMAC4 soap_get_tt__VideoAttributes(struct soap*, tt__VideoAttributes *, const char*, const char*);

#ifndef soap_read_tt__VideoAttributes
#define soap_read_tt__VideoAttributes(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoAttributes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__VideoAttributes * SOAP_FMAC2 soap_instantiate_tt__VideoAttributes(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoAttributes * soap_new_tt__VideoAttributes(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoAttributes(soap, n, NULL, NULL, NULL); }

inline tt__VideoAttributes * soap_new_req_tt__VideoAttributes(struct soap *soap, int Width, int Height, enum tt__VideoEncoding Encoding, float Framerate) { tt__VideoAttributes *_p = soap_instantiate_tt__VideoAttributes(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoAttributes::Width = Width; _p->tt__VideoAttributes::Height = Height; _p->tt__VideoAttributes::Encoding = Encoding; _p->tt__VideoAttributes::Framerate = Framerate; } return _p; }

inline tt__VideoAttributes * soap_new_set_tt__VideoAttributes(struct soap *soap, int *Bitrate, int Width, int Height, enum tt__VideoEncoding Encoding, float Framerate) { tt__VideoAttributes *_p = soap_instantiate_tt__VideoAttributes(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoAttributes::Bitrate = Bitrate; _p->tt__VideoAttributes::Width = Width; _p->tt__VideoAttributes::Height = Height; _p->tt__VideoAttributes::Encoding = Encoding; _p->tt__VideoAttributes::Framerate = Framerate; } return _p; }

inline void soap_delete_tt__VideoAttributes(struct soap *soap, tt__VideoAttributes *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__VideoAttributes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__TrackAttributesExtension
#define SOAP_TYPE_tt__TrackAttributesExtension (648)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__TrackAttributesExtension(struct soap*, const char*, int, const tt__TrackAttributesExtension *, const char*);
SOAP_FMAC3 tt__TrackAttributesExtension * SOAP_FMAC4 soap_in_tt__TrackAttributesExtension(struct soap*, const char*, tt__TrackAttributesExtension *, const char*);

#ifndef soap_write_tt__TrackAttributesExtension
#define soap_write_tt__TrackAttributesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:TrackAttributesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TrackAttributesExtension * SOAP_FMAC4 soap_get_tt__TrackAttributesExtension(struct soap*, tt__TrackAttributesExtension *, const char*, const char*);

#ifndef soap_read_tt__TrackAttributesExtension
#define soap_read_tt__TrackAttributesExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__TrackAttributesExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__TrackAttributesExtension * SOAP_FMAC2 soap_instantiate_tt__TrackAttributesExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__TrackAttributesExtension * soap_new_tt__TrackAttributesExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__TrackAttributesExtension(soap, n, NULL, NULL, NULL); }

inline tt__TrackAttributesExtension * soap_new_req_tt__TrackAttributesExtension(struct soap *soap) { tt__TrackAttributesExtension *_p = soap_instantiate_tt__TrackAttributesExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__TrackAttributesExtension * soap_new_set_tt__TrackAttributesExtension(struct soap *soap) { tt__TrackAttributesExtension *_p = soap_instantiate_tt__TrackAttributesExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__TrackAttributesExtension(struct soap *soap, tt__TrackAttributesExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__TrackAttributesExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__TrackAttributes
#define SOAP_TYPE_tt__TrackAttributes (647)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__TrackAttributes(struct soap*, const char*, int, const tt__TrackAttributes *, const char*);
SOAP_FMAC3 tt__TrackAttributes * SOAP_FMAC4 soap_in_tt__TrackAttributes(struct soap*, const char*, tt__TrackAttributes *, const char*);

#ifndef soap_write_tt__TrackAttributes
#define soap_write_tt__TrackAttributes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:TrackAttributes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TrackAttributes * SOAP_FMAC4 soap_get_tt__TrackAttributes(struct soap*, tt__TrackAttributes *, const char*, const char*);

#ifndef soap_read_tt__TrackAttributes
#define soap_read_tt__TrackAttributes(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__TrackAttributes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__TrackAttributes * SOAP_FMAC2 soap_instantiate_tt__TrackAttributes(struct soap*, int, const char*, const char*, size_t*);

inline tt__TrackAttributes * soap_new_tt__TrackAttributes(struct soap *soap, int n = -1) { return soap_instantiate_tt__TrackAttributes(soap, n, NULL, NULL, NULL); }

inline tt__TrackAttributes * soap_new_req_tt__TrackAttributes(struct soap *soap, tt__TrackInformation *TrackInformation) { tt__TrackAttributes *_p = soap_instantiate_tt__TrackAttributes(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__TrackAttributes::TrackInformation = TrackInformation; } return _p; }

inline tt__TrackAttributes * soap_new_set_tt__TrackAttributes(struct soap *soap, tt__TrackInformation *TrackInformation, tt__VideoAttributes *VideoAttributes, tt__AudioAttributes *AudioAttributes, tt__MetadataAttributes *MetadataAttributes, tt__TrackAttributesExtension *Extension) { tt__TrackAttributes *_p = soap_instantiate_tt__TrackAttributes(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__TrackAttributes::TrackInformation = TrackInformation; _p->tt__TrackAttributes::VideoAttributes = VideoAttributes; _p->tt__TrackAttributes::AudioAttributes = AudioAttributes; _p->tt__TrackAttributes::MetadataAttributes = MetadataAttributes; _p->tt__TrackAttributes::Extension = Extension; } return _p; }

inline void soap_delete_tt__TrackAttributes(struct soap *soap, tt__TrackAttributes *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__TrackAttributes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__MediaAttributes
#define SOAP_TYPE_tt__MediaAttributes (646)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MediaAttributes(struct soap*, const char*, int, const tt__MediaAttributes *, const char*);
SOAP_FMAC3 tt__MediaAttributes * SOAP_FMAC4 soap_in_tt__MediaAttributes(struct soap*, const char*, tt__MediaAttributes *, const char*);

#ifndef soap_write_tt__MediaAttributes
#define soap_write_tt__MediaAttributes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:MediaAttributes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MediaAttributes * SOAP_FMAC4 soap_get_tt__MediaAttributes(struct soap*, tt__MediaAttributes *, const char*, const char*);

#ifndef soap_read_tt__MediaAttributes
#define soap_read_tt__MediaAttributes(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__MediaAttributes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__MediaAttributes * SOAP_FMAC2 soap_instantiate_tt__MediaAttributes(struct soap*, int, const char*, const char*, size_t*);

inline tt__MediaAttributes * soap_new_tt__MediaAttributes(struct soap *soap, int n = -1) { return soap_instantiate_tt__MediaAttributes(soap, n, NULL, NULL, NULL); }

inline tt__MediaAttributes * soap_new_req_tt__MediaAttributes(struct soap *soap, std::string& RecordingToken, time_t From, time_t Until) { tt__MediaAttributes *_p = soap_instantiate_tt__MediaAttributes(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MediaAttributes::RecordingToken = RecordingToken; _p->tt__MediaAttributes::From = From; _p->tt__MediaAttributes::Until = Until; } return _p; }

inline tt__MediaAttributes * soap_new_set_tt__MediaAttributes(struct soap *soap, std::string& RecordingToken, std::vector<tt__TrackAttributes * >& TrackAttributes, time_t From, time_t Until) { tt__MediaAttributes *_p = soap_instantiate_tt__MediaAttributes(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MediaAttributes::RecordingToken = RecordingToken; _p->tt__MediaAttributes::TrackAttributes = TrackAttributes; _p->tt__MediaAttributes::From = From; _p->tt__MediaAttributes::Until = Until; } return _p; }

inline void soap_delete_tt__MediaAttributes(struct soap *soap, tt__MediaAttributes *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__MediaAttributes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__TrackInformation
#define SOAP_TYPE_tt__TrackInformation (645)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__TrackInformation(struct soap*, const char*, int, const tt__TrackInformation *, const char*);
SOAP_FMAC3 tt__TrackInformation * SOAP_FMAC4 soap_in_tt__TrackInformation(struct soap*, const char*, tt__TrackInformation *, const char*);

#ifndef soap_write_tt__TrackInformation
#define soap_write_tt__TrackInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:TrackInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TrackInformation * SOAP_FMAC4 soap_get_tt__TrackInformation(struct soap*, tt__TrackInformation *, const char*, const char*);

#ifndef soap_read_tt__TrackInformation
#define soap_read_tt__TrackInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__TrackInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__TrackInformation * SOAP_FMAC2 soap_instantiate_tt__TrackInformation(struct soap*, int, const char*, const char*, size_t*);

inline tt__TrackInformation * soap_new_tt__TrackInformation(struct soap *soap, int n = -1) { return soap_instantiate_tt__TrackInformation(soap, n, NULL, NULL, NULL); }

inline tt__TrackInformation * soap_new_req_tt__TrackInformation(struct soap *soap, std::string& TrackToken, enum tt__TrackType TrackType, std::string& Description, time_t DataFrom, time_t DataTo) { tt__TrackInformation *_p = soap_instantiate_tt__TrackInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__TrackInformation::TrackToken = TrackToken; _p->tt__TrackInformation::TrackType = TrackType; _p->tt__TrackInformation::Description = Description; _p->tt__TrackInformation::DataFrom = DataFrom; _p->tt__TrackInformation::DataTo = DataTo; } return _p; }

inline tt__TrackInformation * soap_new_set_tt__TrackInformation(struct soap *soap, std::string& TrackToken, enum tt__TrackType TrackType, std::string& Description, time_t DataFrom, time_t DataTo) { tt__TrackInformation *_p = soap_instantiate_tt__TrackInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__TrackInformation::TrackToken = TrackToken; _p->tt__TrackInformation::TrackType = TrackType; _p->tt__TrackInformation::Description = Description; _p->tt__TrackInformation::DataFrom = DataFrom; _p->tt__TrackInformation::DataTo = DataTo; } return _p; }

inline void soap_delete_tt__TrackInformation(struct soap *soap, tt__TrackInformation *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__TrackInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RecordingSourceInformation
#define SOAP_TYPE_tt__RecordingSourceInformation (644)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingSourceInformation(struct soap*, const char*, int, const tt__RecordingSourceInformation *, const char*);
SOAP_FMAC3 tt__RecordingSourceInformation * SOAP_FMAC4 soap_in_tt__RecordingSourceInformation(struct soap*, const char*, tt__RecordingSourceInformation *, const char*);

#ifndef soap_write_tt__RecordingSourceInformation
#define soap_write_tt__RecordingSourceInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RecordingSourceInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingSourceInformation * SOAP_FMAC4 soap_get_tt__RecordingSourceInformation(struct soap*, tt__RecordingSourceInformation *, const char*, const char*);

#ifndef soap_read_tt__RecordingSourceInformation
#define soap_read_tt__RecordingSourceInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RecordingSourceInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RecordingSourceInformation * SOAP_FMAC2 soap_instantiate_tt__RecordingSourceInformation(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingSourceInformation * soap_new_tt__RecordingSourceInformation(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingSourceInformation(soap, n, NULL, NULL, NULL); }

inline tt__RecordingSourceInformation * soap_new_req_tt__RecordingSourceInformation(struct soap *soap, std::string& SourceId, std::string& Name, std::string& Location, std::string& Description, std::string& Address) { tt__RecordingSourceInformation *_p = soap_instantiate_tt__RecordingSourceInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RecordingSourceInformation::SourceId = SourceId; _p->tt__RecordingSourceInformation::Name = Name; _p->tt__RecordingSourceInformation::Location = Location; _p->tt__RecordingSourceInformation::Description = Description; _p->tt__RecordingSourceInformation::Address = Address; } return _p; }

inline tt__RecordingSourceInformation * soap_new_set_tt__RecordingSourceInformation(struct soap *soap, std::string& SourceId, std::string& Name, std::string& Location, std::string& Description, std::string& Address) { tt__RecordingSourceInformation *_p = soap_instantiate_tt__RecordingSourceInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RecordingSourceInformation::SourceId = SourceId; _p->tt__RecordingSourceInformation::Name = Name; _p->tt__RecordingSourceInformation::Location = Location; _p->tt__RecordingSourceInformation::Description = Description; _p->tt__RecordingSourceInformation::Address = Address; } return _p; }

inline void soap_delete_tt__RecordingSourceInformation(struct soap *soap, tt__RecordingSourceInformation *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RecordingSourceInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RecordingInformation
#define SOAP_TYPE_tt__RecordingInformation (643)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingInformation(struct soap*, const char*, int, const tt__RecordingInformation *, const char*);
SOAP_FMAC3 tt__RecordingInformation * SOAP_FMAC4 soap_in_tt__RecordingInformation(struct soap*, const char*, tt__RecordingInformation *, const char*);

#ifndef soap_write_tt__RecordingInformation
#define soap_write_tt__RecordingInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RecordingInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingInformation * SOAP_FMAC4 soap_get_tt__RecordingInformation(struct soap*, tt__RecordingInformation *, const char*, const char*);

#ifndef soap_read_tt__RecordingInformation
#define soap_read_tt__RecordingInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RecordingInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RecordingInformation * SOAP_FMAC2 soap_instantiate_tt__RecordingInformation(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingInformation * soap_new_tt__RecordingInformation(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingInformation(soap, n, NULL, NULL, NULL); }

inline tt__RecordingInformation * soap_new_req_tt__RecordingInformation(struct soap *soap, std::string& RecordingToken, tt__RecordingSourceInformation *Source, std::string& Content, enum tt__RecordingStatus RecordingStatus) { tt__RecordingInformation *_p = soap_instantiate_tt__RecordingInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RecordingInformation::RecordingToken = RecordingToken; _p->tt__RecordingInformation::Source = Source; _p->tt__RecordingInformation::Content = Content; _p->tt__RecordingInformation::RecordingStatus = RecordingStatus; } return _p; }

inline tt__RecordingInformation * soap_new_set_tt__RecordingInformation(struct soap *soap, std::string& RecordingToken, tt__RecordingSourceInformation *Source, time_t *EarliestRecording, time_t *LatestRecording, std::string& Content, std::vector<tt__TrackInformation * >& Track, enum tt__RecordingStatus RecordingStatus) { tt__RecordingInformation *_p = soap_instantiate_tt__RecordingInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RecordingInformation::RecordingToken = RecordingToken; _p->tt__RecordingInformation::Source = Source; _p->tt__RecordingInformation::EarliestRecording = EarliestRecording; _p->tt__RecordingInformation::LatestRecording = LatestRecording; _p->tt__RecordingInformation::Content = Content; _p->tt__RecordingInformation::Track = Track; _p->tt__RecordingInformation::RecordingStatus = RecordingStatus; } return _p; }

inline void soap_delete_tt__RecordingInformation(struct soap *soap, tt__RecordingInformation *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RecordingInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__FindMetadataResult
#define SOAP_TYPE_tt__FindMetadataResult (642)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FindMetadataResult(struct soap*, const char*, int, const tt__FindMetadataResult *, const char*);
SOAP_FMAC3 tt__FindMetadataResult * SOAP_FMAC4 soap_in_tt__FindMetadataResult(struct soap*, const char*, tt__FindMetadataResult *, const char*);

#ifndef soap_write_tt__FindMetadataResult
#define soap_write_tt__FindMetadataResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:FindMetadataResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FindMetadataResult * SOAP_FMAC4 soap_get_tt__FindMetadataResult(struct soap*, tt__FindMetadataResult *, const char*, const char*);

#ifndef soap_read_tt__FindMetadataResult
#define soap_read_tt__FindMetadataResult(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__FindMetadataResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__FindMetadataResult * SOAP_FMAC2 soap_instantiate_tt__FindMetadataResult(struct soap*, int, const char*, const char*, size_t*);

inline tt__FindMetadataResult * soap_new_tt__FindMetadataResult(struct soap *soap, int n = -1) { return soap_instantiate_tt__FindMetadataResult(soap, n, NULL, NULL, NULL); }

inline tt__FindMetadataResult * soap_new_req_tt__FindMetadataResult(struct soap *soap, std::string& RecordingToken, std::string& TrackToken, time_t Time) { tt__FindMetadataResult *_p = soap_instantiate_tt__FindMetadataResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FindMetadataResult::RecordingToken = RecordingToken; _p->tt__FindMetadataResult::TrackToken = TrackToken; _p->tt__FindMetadataResult::Time = Time; } return _p; }

inline tt__FindMetadataResult * soap_new_set_tt__FindMetadataResult(struct soap *soap, std::string& RecordingToken, std::string& TrackToken, time_t Time) { tt__FindMetadataResult *_p = soap_instantiate_tt__FindMetadataResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FindMetadataResult::RecordingToken = RecordingToken; _p->tt__FindMetadataResult::TrackToken = TrackToken; _p->tt__FindMetadataResult::Time = Time; } return _p; }

inline void soap_delete_tt__FindMetadataResult(struct soap *soap, tt__FindMetadataResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__FindMetadataResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__FindMetadataResultList
#define SOAP_TYPE_tt__FindMetadataResultList (641)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FindMetadataResultList(struct soap*, const char*, int, const tt__FindMetadataResultList *, const char*);
SOAP_FMAC3 tt__FindMetadataResultList * SOAP_FMAC4 soap_in_tt__FindMetadataResultList(struct soap*, const char*, tt__FindMetadataResultList *, const char*);

#ifndef soap_write_tt__FindMetadataResultList
#define soap_write_tt__FindMetadataResultList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:FindMetadataResultList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FindMetadataResultList * SOAP_FMAC4 soap_get_tt__FindMetadataResultList(struct soap*, tt__FindMetadataResultList *, const char*, const char*);

#ifndef soap_read_tt__FindMetadataResultList
#define soap_read_tt__FindMetadataResultList(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__FindMetadataResultList(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__FindMetadataResultList * SOAP_FMAC2 soap_instantiate_tt__FindMetadataResultList(struct soap*, int, const char*, const char*, size_t*);

inline tt__FindMetadataResultList * soap_new_tt__FindMetadataResultList(struct soap *soap, int n = -1) { return soap_instantiate_tt__FindMetadataResultList(soap, n, NULL, NULL, NULL); }

inline tt__FindMetadataResultList * soap_new_req_tt__FindMetadataResultList(struct soap *soap, enum tt__SearchState SearchState) { tt__FindMetadataResultList *_p = soap_instantiate_tt__FindMetadataResultList(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FindMetadataResultList::SearchState = SearchState; } return _p; }

inline tt__FindMetadataResultList * soap_new_set_tt__FindMetadataResultList(struct soap *soap, enum tt__SearchState SearchState, std::vector<tt__FindMetadataResult * >& Result) { tt__FindMetadataResultList *_p = soap_instantiate_tt__FindMetadataResultList(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FindMetadataResultList::SearchState = SearchState; _p->tt__FindMetadataResultList::Result = Result; } return _p; }

inline void soap_delete_tt__FindMetadataResultList(struct soap *soap, tt__FindMetadataResultList *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__FindMetadataResultList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__FindPTZPositionResult
#define SOAP_TYPE_tt__FindPTZPositionResult (640)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FindPTZPositionResult(struct soap*, const char*, int, const tt__FindPTZPositionResult *, const char*);
SOAP_FMAC3 tt__FindPTZPositionResult * SOAP_FMAC4 soap_in_tt__FindPTZPositionResult(struct soap*, const char*, tt__FindPTZPositionResult *, const char*);

#ifndef soap_write_tt__FindPTZPositionResult
#define soap_write_tt__FindPTZPositionResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:FindPTZPositionResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FindPTZPositionResult * SOAP_FMAC4 soap_get_tt__FindPTZPositionResult(struct soap*, tt__FindPTZPositionResult *, const char*, const char*);

#ifndef soap_read_tt__FindPTZPositionResult
#define soap_read_tt__FindPTZPositionResult(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__FindPTZPositionResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__FindPTZPositionResult * SOAP_FMAC2 soap_instantiate_tt__FindPTZPositionResult(struct soap*, int, const char*, const char*, size_t*);

inline tt__FindPTZPositionResult * soap_new_tt__FindPTZPositionResult(struct soap *soap, int n = -1) { return soap_instantiate_tt__FindPTZPositionResult(soap, n, NULL, NULL, NULL); }

inline tt__FindPTZPositionResult * soap_new_req_tt__FindPTZPositionResult(struct soap *soap, std::string& RecordingToken, std::string& TrackToken, time_t Time, tt__PTZVector *Position) { tt__FindPTZPositionResult *_p = soap_instantiate_tt__FindPTZPositionResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FindPTZPositionResult::RecordingToken = RecordingToken; _p->tt__FindPTZPositionResult::TrackToken = TrackToken; _p->tt__FindPTZPositionResult::Time = Time; _p->tt__FindPTZPositionResult::Position = Position; } return _p; }

inline tt__FindPTZPositionResult * soap_new_set_tt__FindPTZPositionResult(struct soap *soap, std::string& RecordingToken, std::string& TrackToken, time_t Time, tt__PTZVector *Position) { tt__FindPTZPositionResult *_p = soap_instantiate_tt__FindPTZPositionResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FindPTZPositionResult::RecordingToken = RecordingToken; _p->tt__FindPTZPositionResult::TrackToken = TrackToken; _p->tt__FindPTZPositionResult::Time = Time; _p->tt__FindPTZPositionResult::Position = Position; } return _p; }

inline void soap_delete_tt__FindPTZPositionResult(struct soap *soap, tt__FindPTZPositionResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__FindPTZPositionResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__FindPTZPositionResultList
#define SOAP_TYPE_tt__FindPTZPositionResultList (639)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FindPTZPositionResultList(struct soap*, const char*, int, const tt__FindPTZPositionResultList *, const char*);
SOAP_FMAC3 tt__FindPTZPositionResultList * SOAP_FMAC4 soap_in_tt__FindPTZPositionResultList(struct soap*, const char*, tt__FindPTZPositionResultList *, const char*);

#ifndef soap_write_tt__FindPTZPositionResultList
#define soap_write_tt__FindPTZPositionResultList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:FindPTZPositionResultList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FindPTZPositionResultList * SOAP_FMAC4 soap_get_tt__FindPTZPositionResultList(struct soap*, tt__FindPTZPositionResultList *, const char*, const char*);

#ifndef soap_read_tt__FindPTZPositionResultList
#define soap_read_tt__FindPTZPositionResultList(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__FindPTZPositionResultList(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__FindPTZPositionResultList * SOAP_FMAC2 soap_instantiate_tt__FindPTZPositionResultList(struct soap*, int, const char*, const char*, size_t*);

inline tt__FindPTZPositionResultList * soap_new_tt__FindPTZPositionResultList(struct soap *soap, int n = -1) { return soap_instantiate_tt__FindPTZPositionResultList(soap, n, NULL, NULL, NULL); }

inline tt__FindPTZPositionResultList * soap_new_req_tt__FindPTZPositionResultList(struct soap *soap, enum tt__SearchState SearchState) { tt__FindPTZPositionResultList *_p = soap_instantiate_tt__FindPTZPositionResultList(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FindPTZPositionResultList::SearchState = SearchState; } return _p; }

inline tt__FindPTZPositionResultList * soap_new_set_tt__FindPTZPositionResultList(struct soap *soap, enum tt__SearchState SearchState, std::vector<tt__FindPTZPositionResult * >& Result) { tt__FindPTZPositionResultList *_p = soap_instantiate_tt__FindPTZPositionResultList(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FindPTZPositionResultList::SearchState = SearchState; _p->tt__FindPTZPositionResultList::Result = Result; } return _p; }

inline void soap_delete_tt__FindPTZPositionResultList(struct soap *soap, tt__FindPTZPositionResultList *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__FindPTZPositionResultList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__FindEventResult
#define SOAP_TYPE_tt__FindEventResult (638)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FindEventResult(struct soap*, const char*, int, const tt__FindEventResult *, const char*);
SOAP_FMAC3 tt__FindEventResult * SOAP_FMAC4 soap_in_tt__FindEventResult(struct soap*, const char*, tt__FindEventResult *, const char*);

#ifndef soap_write_tt__FindEventResult
#define soap_write_tt__FindEventResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:FindEventResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FindEventResult * SOAP_FMAC4 soap_get_tt__FindEventResult(struct soap*, tt__FindEventResult *, const char*, const char*);

#ifndef soap_read_tt__FindEventResult
#define soap_read_tt__FindEventResult(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__FindEventResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__FindEventResult * SOAP_FMAC2 soap_instantiate_tt__FindEventResult(struct soap*, int, const char*, const char*, size_t*);

inline tt__FindEventResult * soap_new_tt__FindEventResult(struct soap *soap, int n = -1) { return soap_instantiate_tt__FindEventResult(soap, n, NULL, NULL, NULL); }

inline tt__FindEventResult * soap_new_req_tt__FindEventResult(struct soap *soap, std::string& RecordingToken, std::string& TrackToken, time_t Time, wsnt__NotificationMessageHolderType *Event, bool StartStateEvent) { tt__FindEventResult *_p = soap_instantiate_tt__FindEventResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FindEventResult::RecordingToken = RecordingToken; _p->tt__FindEventResult::TrackToken = TrackToken; _p->tt__FindEventResult::Time = Time; _p->tt__FindEventResult::Event = Event; _p->tt__FindEventResult::StartStateEvent = StartStateEvent; } return _p; }

inline tt__FindEventResult * soap_new_set_tt__FindEventResult(struct soap *soap, std::string& RecordingToken, std::string& TrackToken, time_t Time, wsnt__NotificationMessageHolderType *Event, bool StartStateEvent) { tt__FindEventResult *_p = soap_instantiate_tt__FindEventResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FindEventResult::RecordingToken = RecordingToken; _p->tt__FindEventResult::TrackToken = TrackToken; _p->tt__FindEventResult::Time = Time; _p->tt__FindEventResult::Event = Event; _p->tt__FindEventResult::StartStateEvent = StartStateEvent; } return _p; }

inline void soap_delete_tt__FindEventResult(struct soap *soap, tt__FindEventResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__FindEventResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__FindEventResultList
#define SOAP_TYPE_tt__FindEventResultList (637)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FindEventResultList(struct soap*, const char*, int, const tt__FindEventResultList *, const char*);
SOAP_FMAC3 tt__FindEventResultList * SOAP_FMAC4 soap_in_tt__FindEventResultList(struct soap*, const char*, tt__FindEventResultList *, const char*);

#ifndef soap_write_tt__FindEventResultList
#define soap_write_tt__FindEventResultList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:FindEventResultList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FindEventResultList * SOAP_FMAC4 soap_get_tt__FindEventResultList(struct soap*, tt__FindEventResultList *, const char*, const char*);

#ifndef soap_read_tt__FindEventResultList
#define soap_read_tt__FindEventResultList(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__FindEventResultList(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__FindEventResultList * SOAP_FMAC2 soap_instantiate_tt__FindEventResultList(struct soap*, int, const char*, const char*, size_t*);

inline tt__FindEventResultList * soap_new_tt__FindEventResultList(struct soap *soap, int n = -1) { return soap_instantiate_tt__FindEventResultList(soap, n, NULL, NULL, NULL); }

inline tt__FindEventResultList * soap_new_req_tt__FindEventResultList(struct soap *soap, enum tt__SearchState SearchState) { tt__FindEventResultList *_p = soap_instantiate_tt__FindEventResultList(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FindEventResultList::SearchState = SearchState; } return _p; }

inline tt__FindEventResultList * soap_new_set_tt__FindEventResultList(struct soap *soap, enum tt__SearchState SearchState, std::vector<tt__FindEventResult * >& Result) { tt__FindEventResultList *_p = soap_instantiate_tt__FindEventResultList(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FindEventResultList::SearchState = SearchState; _p->tt__FindEventResultList::Result = Result; } return _p; }

inline void soap_delete_tt__FindEventResultList(struct soap *soap, tt__FindEventResultList *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__FindEventResultList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__FindRecordingResultList
#define SOAP_TYPE_tt__FindRecordingResultList (636)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FindRecordingResultList(struct soap*, const char*, int, const tt__FindRecordingResultList *, const char*);
SOAP_FMAC3 tt__FindRecordingResultList * SOAP_FMAC4 soap_in_tt__FindRecordingResultList(struct soap*, const char*, tt__FindRecordingResultList *, const char*);

#ifndef soap_write_tt__FindRecordingResultList
#define soap_write_tt__FindRecordingResultList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:FindRecordingResultList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FindRecordingResultList * SOAP_FMAC4 soap_get_tt__FindRecordingResultList(struct soap*, tt__FindRecordingResultList *, const char*, const char*);

#ifndef soap_read_tt__FindRecordingResultList
#define soap_read_tt__FindRecordingResultList(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__FindRecordingResultList(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__FindRecordingResultList * SOAP_FMAC2 soap_instantiate_tt__FindRecordingResultList(struct soap*, int, const char*, const char*, size_t*);

inline tt__FindRecordingResultList * soap_new_tt__FindRecordingResultList(struct soap *soap, int n = -1) { return soap_instantiate_tt__FindRecordingResultList(soap, n, NULL, NULL, NULL); }

inline tt__FindRecordingResultList * soap_new_req_tt__FindRecordingResultList(struct soap *soap, enum tt__SearchState SearchState) { tt__FindRecordingResultList *_p = soap_instantiate_tt__FindRecordingResultList(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FindRecordingResultList::SearchState = SearchState; } return _p; }

inline tt__FindRecordingResultList * soap_new_set_tt__FindRecordingResultList(struct soap *soap, enum tt__SearchState SearchState, std::vector<tt__RecordingInformation * >& RecordingInformation) { tt__FindRecordingResultList *_p = soap_instantiate_tt__FindRecordingResultList(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FindRecordingResultList::SearchState = SearchState; _p->tt__FindRecordingResultList::RecordingInformation = RecordingInformation; } return _p; }

inline void soap_delete_tt__FindRecordingResultList(struct soap *soap, tt__FindRecordingResultList *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__FindRecordingResultList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__MetadataFilter
#define SOAP_TYPE_tt__MetadataFilter (635)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MetadataFilter(struct soap*, const char*, int, const tt__MetadataFilter *, const char*);
SOAP_FMAC3 tt__MetadataFilter * SOAP_FMAC4 soap_in_tt__MetadataFilter(struct soap*, const char*, tt__MetadataFilter *, const char*);

#ifndef soap_write_tt__MetadataFilter
#define soap_write_tt__MetadataFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:MetadataFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataFilter * SOAP_FMAC4 soap_get_tt__MetadataFilter(struct soap*, tt__MetadataFilter *, const char*, const char*);

#ifndef soap_read_tt__MetadataFilter
#define soap_read_tt__MetadataFilter(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__MetadataFilter(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__MetadataFilter * SOAP_FMAC2 soap_instantiate_tt__MetadataFilter(struct soap*, int, const char*, const char*, size_t*);

inline tt__MetadataFilter * soap_new_tt__MetadataFilter(struct soap *soap, int n = -1) { return soap_instantiate_tt__MetadataFilter(soap, n, NULL, NULL, NULL); }

inline tt__MetadataFilter * soap_new_req_tt__MetadataFilter(struct soap *soap, std::string& MetadataStreamFilter) { tt__MetadataFilter *_p = soap_instantiate_tt__MetadataFilter(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MetadataFilter::MetadataStreamFilter = MetadataStreamFilter; } return _p; }

inline tt__MetadataFilter * soap_new_set_tt__MetadataFilter(struct soap *soap, std::string& MetadataStreamFilter) { tt__MetadataFilter *_p = soap_instantiate_tt__MetadataFilter(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MetadataFilter::MetadataStreamFilter = MetadataStreamFilter; } return _p; }

inline void soap_delete_tt__MetadataFilter(struct soap *soap, tt__MetadataFilter *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__MetadataFilter(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZPositionFilter
#define SOAP_TYPE_tt__PTZPositionFilter (634)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPositionFilter(struct soap*, const char*, int, const tt__PTZPositionFilter *, const char*);
SOAP_FMAC3 tt__PTZPositionFilter * SOAP_FMAC4 soap_in_tt__PTZPositionFilter(struct soap*, const char*, tt__PTZPositionFilter *, const char*);

#ifndef soap_write_tt__PTZPositionFilter
#define soap_write_tt__PTZPositionFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZPositionFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPositionFilter * SOAP_FMAC4 soap_get_tt__PTZPositionFilter(struct soap*, tt__PTZPositionFilter *, const char*, const char*);

#ifndef soap_read_tt__PTZPositionFilter
#define soap_read_tt__PTZPositionFilter(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZPositionFilter(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZPositionFilter * SOAP_FMAC2 soap_instantiate_tt__PTZPositionFilter(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPositionFilter * soap_new_tt__PTZPositionFilter(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPositionFilter(soap, n, NULL, NULL, NULL); }

inline tt__PTZPositionFilter * soap_new_req_tt__PTZPositionFilter(struct soap *soap, tt__PTZVector *MinPosition, tt__PTZVector *MaxPosition, bool EnterOrExit) { tt__PTZPositionFilter *_p = soap_instantiate_tt__PTZPositionFilter(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZPositionFilter::MinPosition = MinPosition; _p->tt__PTZPositionFilter::MaxPosition = MaxPosition; _p->tt__PTZPositionFilter::EnterOrExit = EnterOrExit; } return _p; }

inline tt__PTZPositionFilter * soap_new_set_tt__PTZPositionFilter(struct soap *soap, tt__PTZVector *MinPosition, tt__PTZVector *MaxPosition, bool EnterOrExit) { tt__PTZPositionFilter *_p = soap_instantiate_tt__PTZPositionFilter(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZPositionFilter::MinPosition = MinPosition; _p->tt__PTZPositionFilter::MaxPosition = MaxPosition; _p->tt__PTZPositionFilter::EnterOrExit = EnterOrExit; } return _p; }

inline void soap_delete_tt__PTZPositionFilter(struct soap *soap, tt__PTZPositionFilter *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZPositionFilter(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__EventFilter
#define SOAP_TYPE_tt__EventFilter (633)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__EventFilter(struct soap*, const char*, int, const tt__EventFilter *, const char*);
SOAP_FMAC3 tt__EventFilter * SOAP_FMAC4 soap_in_tt__EventFilter(struct soap*, const char*, tt__EventFilter *, const char*);

#ifndef soap_write_tt__EventFilter
#define soap_write_tt__EventFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:EventFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EventFilter * SOAP_FMAC4 soap_get_tt__EventFilter(struct soap*, tt__EventFilter *, const char*, const char*);

#ifndef soap_read_tt__EventFilter
#define soap_read_tt__EventFilter(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__EventFilter(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__EventFilter * SOAP_FMAC2 soap_instantiate_tt__EventFilter(struct soap*, int, const char*, const char*, size_t*);

inline tt__EventFilter * soap_new_tt__EventFilter(struct soap *soap, int n = -1) { return soap_instantiate_tt__EventFilter(soap, n, NULL, NULL, NULL); }

inline tt__EventFilter * soap_new_req_tt__EventFilter(struct soap *soap) { tt__EventFilter *_p = soap_instantiate_tt__EventFilter(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__EventFilter * soap_new_set_tt__EventFilter(struct soap *soap) { tt__EventFilter *_p = soap_instantiate_tt__EventFilter(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__EventFilter(struct soap *soap, tt__EventFilter *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__EventFilter(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__SearchScopeExtension
#define SOAP_TYPE_tt__SearchScopeExtension (632)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SearchScopeExtension(struct soap*, const char*, int, const tt__SearchScopeExtension *, const char*);
SOAP_FMAC3 tt__SearchScopeExtension * SOAP_FMAC4 soap_in_tt__SearchScopeExtension(struct soap*, const char*, tt__SearchScopeExtension *, const char*);

#ifndef soap_write_tt__SearchScopeExtension
#define soap_write_tt__SearchScopeExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:SearchScopeExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SearchScopeExtension * SOAP_FMAC4 soap_get_tt__SearchScopeExtension(struct soap*, tt__SearchScopeExtension *, const char*, const char*);

#ifndef soap_read_tt__SearchScopeExtension
#define soap_read_tt__SearchScopeExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__SearchScopeExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__SearchScopeExtension * SOAP_FMAC2 soap_instantiate_tt__SearchScopeExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__SearchScopeExtension * soap_new_tt__SearchScopeExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__SearchScopeExtension(soap, n, NULL, NULL, NULL); }

inline tt__SearchScopeExtension * soap_new_req_tt__SearchScopeExtension(struct soap *soap) { tt__SearchScopeExtension *_p = soap_instantiate_tt__SearchScopeExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__SearchScopeExtension * soap_new_set_tt__SearchScopeExtension(struct soap *soap) { tt__SearchScopeExtension *_p = soap_instantiate_tt__SearchScopeExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__SearchScopeExtension(struct soap *soap, tt__SearchScopeExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__SearchScopeExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__SearchScope
#define SOAP_TYPE_tt__SearchScope (631)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SearchScope(struct soap*, const char*, int, const tt__SearchScope *, const char*);
SOAP_FMAC3 tt__SearchScope * SOAP_FMAC4 soap_in_tt__SearchScope(struct soap*, const char*, tt__SearchScope *, const char*);

#ifndef soap_write_tt__SearchScope
#define soap_write_tt__SearchScope(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:SearchScope", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SearchScope * SOAP_FMAC4 soap_get_tt__SearchScope(struct soap*, tt__SearchScope *, const char*, const char*);

#ifndef soap_read_tt__SearchScope
#define soap_read_tt__SearchScope(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__SearchScope(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__SearchScope * SOAP_FMAC2 soap_instantiate_tt__SearchScope(struct soap*, int, const char*, const char*, size_t*);

inline tt__SearchScope * soap_new_tt__SearchScope(struct soap *soap, int n = -1) { return soap_instantiate_tt__SearchScope(soap, n, NULL, NULL, NULL); }

inline tt__SearchScope * soap_new_req_tt__SearchScope(struct soap *soap) { tt__SearchScope *_p = soap_instantiate_tt__SearchScope(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__SearchScope * soap_new_set_tt__SearchScope(struct soap *soap, std::vector<tt__SourceReference * >& IncludedSources, std::vector<std::string >& IncludedRecordings, std::string *RecordingInformationFilter, tt__SearchScopeExtension *Extension) { tt__SearchScope *_p = soap_instantiate_tt__SearchScope(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__SearchScope::IncludedSources = IncludedSources; _p->tt__SearchScope::IncludedRecordings = IncludedRecordings; _p->tt__SearchScope::RecordingInformationFilter = RecordingInformationFilter; _p->tt__SearchScope::Extension = Extension; } return _p; }

inline void soap_delete_tt__SearchScope(struct soap *soap, tt__SearchScope *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__SearchScope(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RecordingSummary
#define SOAP_TYPE_tt__RecordingSummary (630)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingSummary(struct soap*, const char*, int, const tt__RecordingSummary *, const char*);
SOAP_FMAC3 tt__RecordingSummary * SOAP_FMAC4 soap_in_tt__RecordingSummary(struct soap*, const char*, tt__RecordingSummary *, const char*);

#ifndef soap_write_tt__RecordingSummary
#define soap_write_tt__RecordingSummary(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RecordingSummary", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingSummary * SOAP_FMAC4 soap_get_tt__RecordingSummary(struct soap*, tt__RecordingSummary *, const char*, const char*);

#ifndef soap_read_tt__RecordingSummary
#define soap_read_tt__RecordingSummary(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RecordingSummary(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RecordingSummary * SOAP_FMAC2 soap_instantiate_tt__RecordingSummary(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingSummary * soap_new_tt__RecordingSummary(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingSummary(soap, n, NULL, NULL, NULL); }

inline tt__RecordingSummary * soap_new_req_tt__RecordingSummary(struct soap *soap, time_t DataFrom, time_t DataUntil, int NumberRecordings) { tt__RecordingSummary *_p = soap_instantiate_tt__RecordingSummary(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RecordingSummary::DataFrom = DataFrom; _p->tt__RecordingSummary::DataUntil = DataUntil; _p->tt__RecordingSummary::NumberRecordings = NumberRecordings; } return _p; }

inline tt__RecordingSummary * soap_new_set_tt__RecordingSummary(struct soap *soap, time_t DataFrom, time_t DataUntil, int NumberRecordings) { tt__RecordingSummary *_p = soap_instantiate_tt__RecordingSummary(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RecordingSummary::DataFrom = DataFrom; _p->tt__RecordingSummary::DataUntil = DataUntil; _p->tt__RecordingSummary::NumberRecordings = NumberRecordings; } return _p; }

inline void soap_delete_tt__RecordingSummary(struct soap *soap, tt__RecordingSummary *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RecordingSummary(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__DateTimeRange
#define SOAP_TYPE_tt__DateTimeRange (629)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DateTimeRange(struct soap*, const char*, int, const tt__DateTimeRange *, const char*);
SOAP_FMAC3 tt__DateTimeRange * SOAP_FMAC4 soap_in_tt__DateTimeRange(struct soap*, const char*, tt__DateTimeRange *, const char*);

#ifndef soap_write_tt__DateTimeRange
#define soap_write_tt__DateTimeRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:DateTimeRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DateTimeRange * SOAP_FMAC4 soap_get_tt__DateTimeRange(struct soap*, tt__DateTimeRange *, const char*, const char*);

#ifndef soap_read_tt__DateTimeRange
#define soap_read_tt__DateTimeRange(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__DateTimeRange(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__DateTimeRange * SOAP_FMAC2 soap_instantiate_tt__DateTimeRange(struct soap*, int, const char*, const char*, size_t*);

inline tt__DateTimeRange * soap_new_tt__DateTimeRange(struct soap *soap, int n = -1) { return soap_instantiate_tt__DateTimeRange(soap, n, NULL, NULL, NULL); }

inline tt__DateTimeRange * soap_new_req_tt__DateTimeRange(struct soap *soap, time_t From, time_t Until) { tt__DateTimeRange *_p = soap_instantiate_tt__DateTimeRange(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__DateTimeRange::From = From; _p->tt__DateTimeRange::Until = Until; } return _p; }

inline tt__DateTimeRange * soap_new_set_tt__DateTimeRange(struct soap *soap, time_t From, time_t Until) { tt__DateTimeRange *_p = soap_instantiate_tt__DateTimeRange(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__DateTimeRange::From = From; _p->tt__DateTimeRange::Until = Until; } return _p; }

inline void soap_delete_tt__DateTimeRange(struct soap *soap, tt__DateTimeRange *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__DateTimeRange(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__SourceReference
#define SOAP_TYPE_tt__SourceReference (628)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SourceReference(struct soap*, const char*, int, const tt__SourceReference *, const char*);
SOAP_FMAC3 tt__SourceReference * SOAP_FMAC4 soap_in_tt__SourceReference(struct soap*, const char*, tt__SourceReference *, const char*);

#ifndef soap_write_tt__SourceReference
#define soap_write_tt__SourceReference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:SourceReference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SourceReference * SOAP_FMAC4 soap_get_tt__SourceReference(struct soap*, tt__SourceReference *, const char*, const char*);

#ifndef soap_read_tt__SourceReference
#define soap_read_tt__SourceReference(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__SourceReference(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__SourceReference * SOAP_FMAC2 soap_instantiate_tt__SourceReference(struct soap*, int, const char*, const char*, size_t*);

inline tt__SourceReference * soap_new_tt__SourceReference(struct soap *soap, int n = -1) { return soap_instantiate_tt__SourceReference(soap, n, NULL, NULL, NULL); }

inline tt__SourceReference * soap_new_req_tt__SourceReference(struct soap *soap, std::string& Token) { tt__SourceReference *_p = soap_instantiate_tt__SourceReference(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__SourceReference::Token = Token; } return _p; }

inline tt__SourceReference * soap_new_set_tt__SourceReference(struct soap *soap, std::string& Token, std::string& Type) { tt__SourceReference *_p = soap_instantiate_tt__SourceReference(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__SourceReference::Token = Token; _p->tt__SourceReference::Type = Type; } return _p; }

inline void soap_delete_tt__SourceReference(struct soap *soap, tt__SourceReference *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__SourceReference(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ReceiverStateInformation
#define SOAP_TYPE_tt__ReceiverStateInformation (627)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ReceiverStateInformation(struct soap*, const char*, int, const tt__ReceiverStateInformation *, const char*);
SOAP_FMAC3 tt__ReceiverStateInformation * SOAP_FMAC4 soap_in_tt__ReceiverStateInformation(struct soap*, const char*, tt__ReceiverStateInformation *, const char*);

#ifndef soap_write_tt__ReceiverStateInformation
#define soap_write_tt__ReceiverStateInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ReceiverStateInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ReceiverStateInformation * SOAP_FMAC4 soap_get_tt__ReceiverStateInformation(struct soap*, tt__ReceiverStateInformation *, const char*, const char*);

#ifndef soap_read_tt__ReceiverStateInformation
#define soap_read_tt__ReceiverStateInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ReceiverStateInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ReceiverStateInformation * SOAP_FMAC2 soap_instantiate_tt__ReceiverStateInformation(struct soap*, int, const char*, const char*, size_t*);

inline tt__ReceiverStateInformation * soap_new_tt__ReceiverStateInformation(struct soap *soap, int n = -1) { return soap_instantiate_tt__ReceiverStateInformation(soap, n, NULL, NULL, NULL); }

inline tt__ReceiverStateInformation * soap_new_req_tt__ReceiverStateInformation(struct soap *soap, enum tt__ReceiverState State, bool AutoCreated) { tt__ReceiverStateInformation *_p = soap_instantiate_tt__ReceiverStateInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ReceiverStateInformation::State = State; _p->tt__ReceiverStateInformation::AutoCreated = AutoCreated; } return _p; }

inline tt__ReceiverStateInformation * soap_new_set_tt__ReceiverStateInformation(struct soap *soap, enum tt__ReceiverState State, bool AutoCreated) { tt__ReceiverStateInformation *_p = soap_instantiate_tt__ReceiverStateInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ReceiverStateInformation::State = State; _p->tt__ReceiverStateInformation::AutoCreated = AutoCreated; } return _p; }

inline void soap_delete_tt__ReceiverStateInformation(struct soap *soap, tt__ReceiverStateInformation *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ReceiverStateInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ReceiverConfiguration
#define SOAP_TYPE_tt__ReceiverConfiguration (626)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ReceiverConfiguration(struct soap*, const char*, int, const tt__ReceiverConfiguration *, const char*);
SOAP_FMAC3 tt__ReceiverConfiguration * SOAP_FMAC4 soap_in_tt__ReceiverConfiguration(struct soap*, const char*, tt__ReceiverConfiguration *, const char*);

#ifndef soap_write_tt__ReceiverConfiguration
#define soap_write_tt__ReceiverConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ReceiverConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ReceiverConfiguration * SOAP_FMAC4 soap_get_tt__ReceiverConfiguration(struct soap*, tt__ReceiverConfiguration *, const char*, const char*);

#ifndef soap_read_tt__ReceiverConfiguration
#define soap_read_tt__ReceiverConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ReceiverConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ReceiverConfiguration * SOAP_FMAC2 soap_instantiate_tt__ReceiverConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__ReceiverConfiguration * soap_new_tt__ReceiverConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__ReceiverConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__ReceiverConfiguration * soap_new_req_tt__ReceiverConfiguration(struct soap *soap, enum tt__ReceiverMode Mode, std::string& MediaUri, tt__StreamSetup *StreamSetup) { tt__ReceiverConfiguration *_p = soap_instantiate_tt__ReceiverConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ReceiverConfiguration::Mode = Mode; _p->tt__ReceiverConfiguration::MediaUri = MediaUri; _p->tt__ReceiverConfiguration::StreamSetup = StreamSetup; } return _p; }

inline tt__ReceiverConfiguration * soap_new_set_tt__ReceiverConfiguration(struct soap *soap, enum tt__ReceiverMode Mode, std::string& MediaUri, tt__StreamSetup *StreamSetup) { tt__ReceiverConfiguration *_p = soap_instantiate_tt__ReceiverConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ReceiverConfiguration::Mode = Mode; _p->tt__ReceiverConfiguration::MediaUri = MediaUri; _p->tt__ReceiverConfiguration::StreamSetup = StreamSetup; } return _p; }

inline void soap_delete_tt__ReceiverConfiguration(struct soap *soap, tt__ReceiverConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ReceiverConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Receiver
#define SOAP_TYPE_tt__Receiver (625)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Receiver(struct soap*, const char*, int, const tt__Receiver *, const char*);
SOAP_FMAC3 tt__Receiver * SOAP_FMAC4 soap_in_tt__Receiver(struct soap*, const char*, tt__Receiver *, const char*);

#ifndef soap_write_tt__Receiver
#define soap_write_tt__Receiver(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Receiver", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Receiver * SOAP_FMAC4 soap_get_tt__Receiver(struct soap*, tt__Receiver *, const char*, const char*);

#ifndef soap_read_tt__Receiver
#define soap_read_tt__Receiver(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Receiver(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Receiver * SOAP_FMAC2 soap_instantiate_tt__Receiver(struct soap*, int, const char*, const char*, size_t*);

inline tt__Receiver * soap_new_tt__Receiver(struct soap *soap, int n = -1) { return soap_instantiate_tt__Receiver(soap, n, NULL, NULL, NULL); }

inline tt__Receiver * soap_new_req_tt__Receiver(struct soap *soap, std::string& Token, tt__ReceiverConfiguration *Configuration) { tt__Receiver *_p = soap_instantiate_tt__Receiver(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Receiver::Token = Token; _p->tt__Receiver::Configuration = Configuration; } return _p; }

inline tt__Receiver * soap_new_set_tt__Receiver(struct soap *soap, std::string& Token, tt__ReceiverConfiguration *Configuration) { tt__Receiver *_p = soap_instantiate_tt__Receiver(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Receiver::Token = Token; _p->tt__Receiver::Configuration = Configuration; } return _p; }

inline void soap_delete_tt__Receiver(struct soap *soap, tt__Receiver *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Receiver(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PaneOptionExtension
#define SOAP_TYPE_tt__PaneOptionExtension (624)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PaneOptionExtension(struct soap*, const char*, int, const tt__PaneOptionExtension *, const char*);
SOAP_FMAC3 tt__PaneOptionExtension * SOAP_FMAC4 soap_in_tt__PaneOptionExtension(struct soap*, const char*, tt__PaneOptionExtension *, const char*);

#ifndef soap_write_tt__PaneOptionExtension
#define soap_write_tt__PaneOptionExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PaneOptionExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PaneOptionExtension * SOAP_FMAC4 soap_get_tt__PaneOptionExtension(struct soap*, tt__PaneOptionExtension *, const char*, const char*);

#ifndef soap_read_tt__PaneOptionExtension
#define soap_read_tt__PaneOptionExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PaneOptionExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PaneOptionExtension * SOAP_FMAC2 soap_instantiate_tt__PaneOptionExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PaneOptionExtension * soap_new_tt__PaneOptionExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PaneOptionExtension(soap, n, NULL, NULL, NULL); }

inline tt__PaneOptionExtension * soap_new_req_tt__PaneOptionExtension(struct soap *soap) { tt__PaneOptionExtension *_p = soap_instantiate_tt__PaneOptionExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PaneOptionExtension * soap_new_set_tt__PaneOptionExtension(struct soap *soap) { tt__PaneOptionExtension *_p = soap_instantiate_tt__PaneOptionExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__PaneOptionExtension(struct soap *soap, tt__PaneOptionExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PaneOptionExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PaneLayoutOptions
#define SOAP_TYPE_tt__PaneLayoutOptions (623)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PaneLayoutOptions(struct soap*, const char*, int, const tt__PaneLayoutOptions *, const char*);
SOAP_FMAC3 tt__PaneLayoutOptions * SOAP_FMAC4 soap_in_tt__PaneLayoutOptions(struct soap*, const char*, tt__PaneLayoutOptions *, const char*);

#ifndef soap_write_tt__PaneLayoutOptions
#define soap_write_tt__PaneLayoutOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PaneLayoutOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PaneLayoutOptions * SOAP_FMAC4 soap_get_tt__PaneLayoutOptions(struct soap*, tt__PaneLayoutOptions *, const char*, const char*);

#ifndef soap_read_tt__PaneLayoutOptions
#define soap_read_tt__PaneLayoutOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PaneLayoutOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PaneLayoutOptions * SOAP_FMAC2 soap_instantiate_tt__PaneLayoutOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__PaneLayoutOptions * soap_new_tt__PaneLayoutOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__PaneLayoutOptions(soap, n, NULL, NULL, NULL); }

inline tt__PaneLayoutOptions * soap_new_req_tt__PaneLayoutOptions(struct soap *soap, std::vector<tt__Rectangle * >& Area) { tt__PaneLayoutOptions *_p = soap_instantiate_tt__PaneLayoutOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PaneLayoutOptions::Area = Area; } return _p; }

inline tt__PaneLayoutOptions * soap_new_set_tt__PaneLayoutOptions(struct soap *soap, std::vector<tt__Rectangle * >& Area, tt__PaneOptionExtension *Extension) { tt__PaneLayoutOptions *_p = soap_instantiate_tt__PaneLayoutOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PaneLayoutOptions::Area = Area; _p->tt__PaneLayoutOptions::Extension = Extension; } return _p; }

inline void soap_delete_tt__PaneLayoutOptions(struct soap *soap, tt__PaneLayoutOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PaneLayoutOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__LayoutOptionsExtension
#define SOAP_TYPE_tt__LayoutOptionsExtension (622)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__LayoutOptionsExtension(struct soap*, const char*, int, const tt__LayoutOptionsExtension *, const char*);
SOAP_FMAC3 tt__LayoutOptionsExtension * SOAP_FMAC4 soap_in_tt__LayoutOptionsExtension(struct soap*, const char*, tt__LayoutOptionsExtension *, const char*);

#ifndef soap_write_tt__LayoutOptionsExtension
#define soap_write_tt__LayoutOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:LayoutOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__LayoutOptionsExtension * SOAP_FMAC4 soap_get_tt__LayoutOptionsExtension(struct soap*, tt__LayoutOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__LayoutOptionsExtension
#define soap_read_tt__LayoutOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__LayoutOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__LayoutOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__LayoutOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__LayoutOptionsExtension * soap_new_tt__LayoutOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__LayoutOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__LayoutOptionsExtension * soap_new_req_tt__LayoutOptionsExtension(struct soap *soap) { tt__LayoutOptionsExtension *_p = soap_instantiate_tt__LayoutOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__LayoutOptionsExtension * soap_new_set_tt__LayoutOptionsExtension(struct soap *soap) { tt__LayoutOptionsExtension *_p = soap_instantiate_tt__LayoutOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__LayoutOptionsExtension(struct soap *soap, tt__LayoutOptionsExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__LayoutOptionsExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__LayoutOptions
#define SOAP_TYPE_tt__LayoutOptions (621)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__LayoutOptions(struct soap*, const char*, int, const tt__LayoutOptions *, const char*);
SOAP_FMAC3 tt__LayoutOptions * SOAP_FMAC4 soap_in_tt__LayoutOptions(struct soap*, const char*, tt__LayoutOptions *, const char*);

#ifndef soap_write_tt__LayoutOptions
#define soap_write_tt__LayoutOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:LayoutOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__LayoutOptions * SOAP_FMAC4 soap_get_tt__LayoutOptions(struct soap*, tt__LayoutOptions *, const char*, const char*);

#ifndef soap_read_tt__LayoutOptions
#define soap_read_tt__LayoutOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__LayoutOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__LayoutOptions * SOAP_FMAC2 soap_instantiate_tt__LayoutOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__LayoutOptions * soap_new_tt__LayoutOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__LayoutOptions(soap, n, NULL, NULL, NULL); }

inline tt__LayoutOptions * soap_new_req_tt__LayoutOptions(struct soap *soap, std::vector<tt__PaneLayoutOptions * >& PaneLayoutOptions) { tt__LayoutOptions *_p = soap_instantiate_tt__LayoutOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__LayoutOptions::PaneLayoutOptions = PaneLayoutOptions; } return _p; }

inline tt__LayoutOptions * soap_new_set_tt__LayoutOptions(struct soap *soap, std::vector<tt__PaneLayoutOptions * >& PaneLayoutOptions, tt__LayoutOptionsExtension *Extension) { tt__LayoutOptions *_p = soap_instantiate_tt__LayoutOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__LayoutOptions::PaneLayoutOptions = PaneLayoutOptions; _p->tt__LayoutOptions::Extension = Extension; } return _p; }

inline void soap_delete_tt__LayoutOptions(struct soap *soap, tt__LayoutOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__LayoutOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__CodingCapabilities
#define SOAP_TYPE_tt__CodingCapabilities (620)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__CodingCapabilities(struct soap*, const char*, int, const tt__CodingCapabilities *, const char*);
SOAP_FMAC3 tt__CodingCapabilities * SOAP_FMAC4 soap_in_tt__CodingCapabilities(struct soap*, const char*, tt__CodingCapabilities *, const char*);

#ifndef soap_write_tt__CodingCapabilities
#define soap_write_tt__CodingCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:CodingCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CodingCapabilities * SOAP_FMAC4 soap_get_tt__CodingCapabilities(struct soap*, tt__CodingCapabilities *, const char*, const char*);

#ifndef soap_read_tt__CodingCapabilities
#define soap_read_tt__CodingCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__CodingCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__CodingCapabilities * SOAP_FMAC2 soap_instantiate_tt__CodingCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__CodingCapabilities * soap_new_tt__CodingCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__CodingCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__CodingCapabilities * soap_new_req_tt__CodingCapabilities(struct soap *soap, tt__VideoDecoderConfigurationOptions *VideoDecodingCapabilities) { tt__CodingCapabilities *_p = soap_instantiate_tt__CodingCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__CodingCapabilities::VideoDecodingCapabilities = VideoDecodingCapabilities; } return _p; }

inline tt__CodingCapabilities * soap_new_set_tt__CodingCapabilities(struct soap *soap, tt__AudioEncoderConfigurationOptions *AudioEncodingCapabilities, tt__AudioDecoderConfigurationOptions *AudioDecodingCapabilities, tt__VideoDecoderConfigurationOptions *VideoDecodingCapabilities) { tt__CodingCapabilities *_p = soap_instantiate_tt__CodingCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__CodingCapabilities::AudioEncodingCapabilities = AudioEncodingCapabilities; _p->tt__CodingCapabilities::AudioDecodingCapabilities = AudioDecodingCapabilities; _p->tt__CodingCapabilities::VideoDecodingCapabilities = VideoDecodingCapabilities; } return _p; }

inline void soap_delete_tt__CodingCapabilities(struct soap *soap, tt__CodingCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__CodingCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__LayoutExtension
#define SOAP_TYPE_tt__LayoutExtension (619)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__LayoutExtension(struct soap*, const char*, int, const tt__LayoutExtension *, const char*);
SOAP_FMAC3 tt__LayoutExtension * SOAP_FMAC4 soap_in_tt__LayoutExtension(struct soap*, const char*, tt__LayoutExtension *, const char*);

#ifndef soap_write_tt__LayoutExtension
#define soap_write_tt__LayoutExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:LayoutExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__LayoutExtension * SOAP_FMAC4 soap_get_tt__LayoutExtension(struct soap*, tt__LayoutExtension *, const char*, const char*);

#ifndef soap_read_tt__LayoutExtension
#define soap_read_tt__LayoutExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__LayoutExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__LayoutExtension * SOAP_FMAC2 soap_instantiate_tt__LayoutExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__LayoutExtension * soap_new_tt__LayoutExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__LayoutExtension(soap, n, NULL, NULL, NULL); }

inline tt__LayoutExtension * soap_new_req_tt__LayoutExtension(struct soap *soap) { tt__LayoutExtension *_p = soap_instantiate_tt__LayoutExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__LayoutExtension * soap_new_set_tt__LayoutExtension(struct soap *soap) { tt__LayoutExtension *_p = soap_instantiate_tt__LayoutExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__LayoutExtension(struct soap *soap, tt__LayoutExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__LayoutExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Layout
#define SOAP_TYPE_tt__Layout (618)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Layout(struct soap*, const char*, int, const tt__Layout *, const char*);
SOAP_FMAC3 tt__Layout * SOAP_FMAC4 soap_in_tt__Layout(struct soap*, const char*, tt__Layout *, const char*);

#ifndef soap_write_tt__Layout
#define soap_write_tt__Layout(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Layout", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Layout * SOAP_FMAC4 soap_get_tt__Layout(struct soap*, tt__Layout *, const char*, const char*);

#ifndef soap_read_tt__Layout
#define soap_read_tt__Layout(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Layout(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Layout * SOAP_FMAC2 soap_instantiate_tt__Layout(struct soap*, int, const char*, const char*, size_t*);

inline tt__Layout * soap_new_tt__Layout(struct soap *soap, int n = -1) { return soap_instantiate_tt__Layout(soap, n, NULL, NULL, NULL); }

inline tt__Layout * soap_new_req_tt__Layout(struct soap *soap, std::vector<tt__PaneLayout * >& PaneLayout) { tt__Layout *_p = soap_instantiate_tt__Layout(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Layout::PaneLayout = PaneLayout; } return _p; }

inline tt__Layout * soap_new_set_tt__Layout(struct soap *soap, std::vector<tt__PaneLayout * >& PaneLayout, tt__LayoutExtension *Extension) { tt__Layout *_p = soap_instantiate_tt__Layout(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Layout::PaneLayout = PaneLayout; _p->tt__Layout::Extension = Extension; } return _p; }

inline void soap_delete_tt__Layout(struct soap *soap, tt__Layout *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Layout(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PaneLayout
#define SOAP_TYPE_tt__PaneLayout (617)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PaneLayout(struct soap*, const char*, int, const tt__PaneLayout *, const char*);
SOAP_FMAC3 tt__PaneLayout * SOAP_FMAC4 soap_in_tt__PaneLayout(struct soap*, const char*, tt__PaneLayout *, const char*);

#ifndef soap_write_tt__PaneLayout
#define soap_write_tt__PaneLayout(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PaneLayout", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PaneLayout * SOAP_FMAC4 soap_get_tt__PaneLayout(struct soap*, tt__PaneLayout *, const char*, const char*);

#ifndef soap_read_tt__PaneLayout
#define soap_read_tt__PaneLayout(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PaneLayout(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PaneLayout * SOAP_FMAC2 soap_instantiate_tt__PaneLayout(struct soap*, int, const char*, const char*, size_t*);

inline tt__PaneLayout * soap_new_tt__PaneLayout(struct soap *soap, int n = -1) { return soap_instantiate_tt__PaneLayout(soap, n, NULL, NULL, NULL); }

inline tt__PaneLayout * soap_new_req_tt__PaneLayout(struct soap *soap, std::string& Pane, tt__Rectangle *Area) { tt__PaneLayout *_p = soap_instantiate_tt__PaneLayout(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PaneLayout::Pane = Pane; _p->tt__PaneLayout::Area = Area; } return _p; }

inline tt__PaneLayout * soap_new_set_tt__PaneLayout(struct soap *soap, std::string& Pane, tt__Rectangle *Area) { tt__PaneLayout *_p = soap_instantiate_tt__PaneLayout(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PaneLayout::Pane = Pane; _p->tt__PaneLayout::Area = Area; } return _p; }

inline void soap_delete_tt__PaneLayout(struct soap *soap, tt__PaneLayout *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PaneLayout(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PaneConfiguration
#define SOAP_TYPE_tt__PaneConfiguration (616)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PaneConfiguration(struct soap*, const char*, int, const tt__PaneConfiguration *, const char*);
SOAP_FMAC3 tt__PaneConfiguration * SOAP_FMAC4 soap_in_tt__PaneConfiguration(struct soap*, const char*, tt__PaneConfiguration *, const char*);

#ifndef soap_write_tt__PaneConfiguration
#define soap_write_tt__PaneConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PaneConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PaneConfiguration * SOAP_FMAC4 soap_get_tt__PaneConfiguration(struct soap*, tt__PaneConfiguration *, const char*, const char*);

#ifndef soap_read_tt__PaneConfiguration
#define soap_read_tt__PaneConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PaneConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PaneConfiguration * SOAP_FMAC2 soap_instantiate_tt__PaneConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__PaneConfiguration * soap_new_tt__PaneConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__PaneConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__PaneConfiguration * soap_new_req_tt__PaneConfiguration(struct soap *soap, std::string& Token) { tt__PaneConfiguration *_p = soap_instantiate_tt__PaneConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PaneConfiguration::Token = Token; } return _p; }

inline tt__PaneConfiguration * soap_new_set_tt__PaneConfiguration(struct soap *soap, std::string *PaneName, std::string *AudioOutputToken, std::string *AudioSourceToken, tt__AudioEncoderConfiguration *AudioEncoderConfiguration, std::string *ReceiverToken, std::string& Token) { tt__PaneConfiguration *_p = soap_instantiate_tt__PaneConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PaneConfiguration::PaneName = PaneName; _p->tt__PaneConfiguration::AudioOutputToken = AudioOutputToken; _p->tt__PaneConfiguration::AudioSourceToken = AudioSourceToken; _p->tt__PaneConfiguration::AudioEncoderConfiguration = AudioEncoderConfiguration; _p->tt__PaneConfiguration::ReceiverToken = ReceiverToken; _p->tt__PaneConfiguration::Token = Token; } return _p; }

inline void soap_delete_tt__PaneConfiguration(struct soap *soap, tt__PaneConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PaneConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__EventStreamExtension
#define SOAP_TYPE_tt__EventStreamExtension (615)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__EventStreamExtension(struct soap*, const char*, int, const tt__EventStreamExtension *, const char*);
SOAP_FMAC3 tt__EventStreamExtension * SOAP_FMAC4 soap_in_tt__EventStreamExtension(struct soap*, const char*, tt__EventStreamExtension *, const char*);

#ifndef soap_write_tt__EventStreamExtension
#define soap_write_tt__EventStreamExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:EventStreamExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EventStreamExtension * SOAP_FMAC4 soap_get_tt__EventStreamExtension(struct soap*, tt__EventStreamExtension *, const char*, const char*);

#ifndef soap_read_tt__EventStreamExtension
#define soap_read_tt__EventStreamExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__EventStreamExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__EventStreamExtension * SOAP_FMAC2 soap_instantiate_tt__EventStreamExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__EventStreamExtension * soap_new_tt__EventStreamExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__EventStreamExtension(soap, n, NULL, NULL, NULL); }

inline tt__EventStreamExtension * soap_new_req_tt__EventStreamExtension(struct soap *soap) { tt__EventStreamExtension *_p = soap_instantiate_tt__EventStreamExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__EventStreamExtension * soap_new_set_tt__EventStreamExtension(struct soap *soap) { tt__EventStreamExtension *_p = soap_instantiate_tt__EventStreamExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__EventStreamExtension(struct soap *soap, tt__EventStreamExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__EventStreamExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__EventStream
#define SOAP_TYPE_tt__EventStream (614)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__EventStream(struct soap*, const char*, int, const tt__EventStream *, const char*);
SOAP_FMAC3 tt__EventStream * SOAP_FMAC4 soap_in_tt__EventStream(struct soap*, const char*, tt__EventStream *, const char*);

#ifndef soap_write_tt__EventStream
#define soap_write_tt__EventStream(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:EventStream", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EventStream * SOAP_FMAC4 soap_get_tt__EventStream(struct soap*, tt__EventStream *, const char*, const char*);

#ifndef soap_read_tt__EventStream
#define soap_read_tt__EventStream(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__EventStream(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__EventStream * SOAP_FMAC2 soap_instantiate_tt__EventStream(struct soap*, int, const char*, const char*, size_t*);

inline tt__EventStream * soap_new_tt__EventStream(struct soap *soap, int n = -1) { return soap_instantiate_tt__EventStream(soap, n, NULL, NULL, NULL); }

inline tt__EventStream * soap_new_req_tt__EventStream(struct soap *soap, int __size_EventStream, __tt__union_EventStream *__union_EventStream) { tt__EventStream *_p = soap_instantiate_tt__EventStream(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__EventStream::__size_EventStream = __size_EventStream; _p->tt__EventStream::__union_EventStream = __union_EventStream; } return _p; }

inline tt__EventStream * soap_new_set_tt__EventStream(struct soap *soap, int __size_EventStream, __tt__union_EventStream *__union_EventStream) { tt__EventStream *_p = soap_instantiate_tt__EventStream(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__EventStream::__size_EventStream = __size_EventStream; _p->tt__EventStream::__union_EventStream = __union_EventStream; } return _p; }

inline void soap_delete_tt__EventStream(struct soap *soap, tt__EventStream *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__EventStream(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZStreamExtension
#define SOAP_TYPE_tt__PTZStreamExtension (613)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZStreamExtension(struct soap*, const char*, int, const tt__PTZStreamExtension *, const char*);
SOAP_FMAC3 tt__PTZStreamExtension * SOAP_FMAC4 soap_in_tt__PTZStreamExtension(struct soap*, const char*, tt__PTZStreamExtension *, const char*);

#ifndef soap_write_tt__PTZStreamExtension
#define soap_write_tt__PTZStreamExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZStreamExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZStreamExtension * SOAP_FMAC4 soap_get_tt__PTZStreamExtension(struct soap*, tt__PTZStreamExtension *, const char*, const char*);

#ifndef soap_read_tt__PTZStreamExtension
#define soap_read_tt__PTZStreamExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZStreamExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZStreamExtension * SOAP_FMAC2 soap_instantiate_tt__PTZStreamExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZStreamExtension * soap_new_tt__PTZStreamExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZStreamExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTZStreamExtension * soap_new_req_tt__PTZStreamExtension(struct soap *soap) { tt__PTZStreamExtension *_p = soap_instantiate_tt__PTZStreamExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTZStreamExtension * soap_new_set_tt__PTZStreamExtension(struct soap *soap) { tt__PTZStreamExtension *_p = soap_instantiate_tt__PTZStreamExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__PTZStreamExtension(struct soap *soap, tt__PTZStreamExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZStreamExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZStream
#define SOAP_TYPE_tt__PTZStream (612)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZStream(struct soap*, const char*, int, const tt__PTZStream *, const char*);
SOAP_FMAC3 tt__PTZStream * SOAP_FMAC4 soap_in_tt__PTZStream(struct soap*, const char*, tt__PTZStream *, const char*);

#ifndef soap_write_tt__PTZStream
#define soap_write_tt__PTZStream(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZStream", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZStream * SOAP_FMAC4 soap_get_tt__PTZStream(struct soap*, tt__PTZStream *, const char*, const char*);

#ifndef soap_read_tt__PTZStream
#define soap_read_tt__PTZStream(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZStream(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZStream * SOAP_FMAC2 soap_instantiate_tt__PTZStream(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZStream * soap_new_tt__PTZStream(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZStream(soap, n, NULL, NULL, NULL); }

inline tt__PTZStream * soap_new_req_tt__PTZStream(struct soap *soap, int __size_PTZStream, __tt__union_PTZStream *__union_PTZStream) { tt__PTZStream *_p = soap_instantiate_tt__PTZStream(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZStream::__size_PTZStream = __size_PTZStream; _p->tt__PTZStream::__union_PTZStream = __union_PTZStream; } return _p; }

inline tt__PTZStream * soap_new_set_tt__PTZStream(struct soap *soap, int __size_PTZStream, __tt__union_PTZStream *__union_PTZStream) { tt__PTZStream *_p = soap_instantiate_tt__PTZStream(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZStream::__size_PTZStream = __size_PTZStream; _p->tt__PTZStream::__union_PTZStream = __union_PTZStream; } return _p; }

inline void soap_delete_tt__PTZStream(struct soap *soap, tt__PTZStream *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZStream(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__VideoAnalyticsStreamExtension
#define SOAP_TYPE_tt__VideoAnalyticsStreamExtension (611)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoAnalyticsStreamExtension(struct soap*, const char*, int, const tt__VideoAnalyticsStreamExtension *, const char*);
SOAP_FMAC3 tt__VideoAnalyticsStreamExtension * SOAP_FMAC4 soap_in_tt__VideoAnalyticsStreamExtension(struct soap*, const char*, tt__VideoAnalyticsStreamExtension *, const char*);

#ifndef soap_write_tt__VideoAnalyticsStreamExtension
#define soap_write_tt__VideoAnalyticsStreamExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:VideoAnalyticsStreamExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoAnalyticsStreamExtension * SOAP_FMAC4 soap_get_tt__VideoAnalyticsStreamExtension(struct soap*, tt__VideoAnalyticsStreamExtension *, const char*, const char*);

#ifndef soap_read_tt__VideoAnalyticsStreamExtension
#define soap_read_tt__VideoAnalyticsStreamExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoAnalyticsStreamExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__VideoAnalyticsStreamExtension * SOAP_FMAC2 soap_instantiate_tt__VideoAnalyticsStreamExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoAnalyticsStreamExtension * soap_new_tt__VideoAnalyticsStreamExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoAnalyticsStreamExtension(soap, n, NULL, NULL, NULL); }

inline tt__VideoAnalyticsStreamExtension * soap_new_req_tt__VideoAnalyticsStreamExtension(struct soap *soap) { tt__VideoAnalyticsStreamExtension *_p = soap_instantiate_tt__VideoAnalyticsStreamExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__VideoAnalyticsStreamExtension * soap_new_set_tt__VideoAnalyticsStreamExtension(struct soap *soap) { tt__VideoAnalyticsStreamExtension *_p = soap_instantiate_tt__VideoAnalyticsStreamExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__VideoAnalyticsStreamExtension(struct soap *soap, tt__VideoAnalyticsStreamExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__VideoAnalyticsStreamExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__VideoAnalyticsStream
#define SOAP_TYPE_tt__VideoAnalyticsStream (610)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoAnalyticsStream(struct soap*, const char*, int, const tt__VideoAnalyticsStream *, const char*);
SOAP_FMAC3 tt__VideoAnalyticsStream * SOAP_FMAC4 soap_in_tt__VideoAnalyticsStream(struct soap*, const char*, tt__VideoAnalyticsStream *, const char*);

#ifndef soap_write_tt__VideoAnalyticsStream
#define soap_write_tt__VideoAnalyticsStream(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:VideoAnalyticsStream", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoAnalyticsStream * SOAP_FMAC4 soap_get_tt__VideoAnalyticsStream(struct soap*, tt__VideoAnalyticsStream *, const char*, const char*);

#ifndef soap_read_tt__VideoAnalyticsStream
#define soap_read_tt__VideoAnalyticsStream(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoAnalyticsStream(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__VideoAnalyticsStream * SOAP_FMAC2 soap_instantiate_tt__VideoAnalyticsStream(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoAnalyticsStream * soap_new_tt__VideoAnalyticsStream(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoAnalyticsStream(soap, n, NULL, NULL, NULL); }

inline tt__VideoAnalyticsStream * soap_new_req_tt__VideoAnalyticsStream(struct soap *soap, int __size_VideoAnalyticsStream, __tt__union_VideoAnalyticsStream *__union_VideoAnalyticsStream) { tt__VideoAnalyticsStream *_p = soap_instantiate_tt__VideoAnalyticsStream(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoAnalyticsStream::__size_VideoAnalyticsStream = __size_VideoAnalyticsStream; _p->tt__VideoAnalyticsStream::__union_VideoAnalyticsStream = __union_VideoAnalyticsStream; } return _p; }

inline tt__VideoAnalyticsStream * soap_new_set_tt__VideoAnalyticsStream(struct soap *soap, int __size_VideoAnalyticsStream, __tt__union_VideoAnalyticsStream *__union_VideoAnalyticsStream) { tt__VideoAnalyticsStream *_p = soap_instantiate_tt__VideoAnalyticsStream(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoAnalyticsStream::__size_VideoAnalyticsStream = __size_VideoAnalyticsStream; _p->tt__VideoAnalyticsStream::__union_VideoAnalyticsStream = __union_VideoAnalyticsStream; } return _p; }

inline void soap_delete_tt__VideoAnalyticsStream(struct soap *soap, tt__VideoAnalyticsStream *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__VideoAnalyticsStream(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AudioAnalyticsStreamExtension
#define SOAP_TYPE_tt__AudioAnalyticsStreamExtension (609)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioAnalyticsStreamExtension(struct soap*, const char*, int, const tt__AudioAnalyticsStreamExtension *, const char*);
SOAP_FMAC3 tt__AudioAnalyticsStreamExtension * SOAP_FMAC4 soap_in_tt__AudioAnalyticsStreamExtension(struct soap*, const char*, tt__AudioAnalyticsStreamExtension *, const char*);

#ifndef soap_write_tt__AudioAnalyticsStreamExtension
#define soap_write_tt__AudioAnalyticsStreamExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AudioAnalyticsStreamExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioAnalyticsStreamExtension * SOAP_FMAC4 soap_get_tt__AudioAnalyticsStreamExtension(struct soap*, tt__AudioAnalyticsStreamExtension *, const char*, const char*);

#ifndef soap_read_tt__AudioAnalyticsStreamExtension
#define soap_read_tt__AudioAnalyticsStreamExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AudioAnalyticsStreamExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AudioAnalyticsStreamExtension * SOAP_FMAC2 soap_instantiate_tt__AudioAnalyticsStreamExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioAnalyticsStreamExtension * soap_new_tt__AudioAnalyticsStreamExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioAnalyticsStreamExtension(soap, n, NULL, NULL, NULL); }

inline tt__AudioAnalyticsStreamExtension * soap_new_req_tt__AudioAnalyticsStreamExtension(struct soap *soap) { tt__AudioAnalyticsStreamExtension *_p = soap_instantiate_tt__AudioAnalyticsStreamExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__AudioAnalyticsStreamExtension * soap_new_set_tt__AudioAnalyticsStreamExtension(struct soap *soap) { tt__AudioAnalyticsStreamExtension *_p = soap_instantiate_tt__AudioAnalyticsStreamExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__AudioAnalyticsStreamExtension(struct soap *soap, tt__AudioAnalyticsStreamExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AudioAnalyticsStreamExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AudioDescriptor
#define SOAP_TYPE_tt__AudioDescriptor (608)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioDescriptor(struct soap*, const char*, int, const tt__AudioDescriptor *, const char*);
SOAP_FMAC3 tt__AudioDescriptor * SOAP_FMAC4 soap_in_tt__AudioDescriptor(struct soap*, const char*, tt__AudioDescriptor *, const char*);

#ifndef soap_write_tt__AudioDescriptor
#define soap_write_tt__AudioDescriptor(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AudioDescriptor", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioDescriptor * SOAP_FMAC4 soap_get_tt__AudioDescriptor(struct soap*, tt__AudioDescriptor *, const char*, const char*);

#ifndef soap_read_tt__AudioDescriptor
#define soap_read_tt__AudioDescriptor(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AudioDescriptor(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AudioDescriptor * SOAP_FMAC2 soap_instantiate_tt__AudioDescriptor(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioDescriptor * soap_new_tt__AudioDescriptor(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioDescriptor(soap, n, NULL, NULL, NULL); }

inline tt__AudioDescriptor * soap_new_req_tt__AudioDescriptor(struct soap *soap, time_t UtcTime) { tt__AudioDescriptor *_p = soap_instantiate_tt__AudioDescriptor(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AudioDescriptor::UtcTime = UtcTime; } return _p; }

inline tt__AudioDescriptor * soap_new_set_tt__AudioDescriptor(struct soap *soap, time_t UtcTime) { tt__AudioDescriptor *_p = soap_instantiate_tt__AudioDescriptor(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AudioDescriptor::UtcTime = UtcTime; } return _p; }

inline void soap_delete_tt__AudioDescriptor(struct soap *soap, tt__AudioDescriptor *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AudioDescriptor(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AudioAnalyticsStream
#define SOAP_TYPE_tt__AudioAnalyticsStream (607)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioAnalyticsStream(struct soap*, const char*, int, const tt__AudioAnalyticsStream *, const char*);
SOAP_FMAC3 tt__AudioAnalyticsStream * SOAP_FMAC4 soap_in_tt__AudioAnalyticsStream(struct soap*, const char*, tt__AudioAnalyticsStream *, const char*);

#ifndef soap_write_tt__AudioAnalyticsStream
#define soap_write_tt__AudioAnalyticsStream(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AudioAnalyticsStream", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioAnalyticsStream * SOAP_FMAC4 soap_get_tt__AudioAnalyticsStream(struct soap*, tt__AudioAnalyticsStream *, const char*, const char*);

#ifndef soap_read_tt__AudioAnalyticsStream
#define soap_read_tt__AudioAnalyticsStream(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AudioAnalyticsStream(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AudioAnalyticsStream * SOAP_FMAC2 soap_instantiate_tt__AudioAnalyticsStream(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioAnalyticsStream * soap_new_tt__AudioAnalyticsStream(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioAnalyticsStream(soap, n, NULL, NULL, NULL); }

inline tt__AudioAnalyticsStream * soap_new_req_tt__AudioAnalyticsStream(struct soap *soap) { tt__AudioAnalyticsStream *_p = soap_instantiate_tt__AudioAnalyticsStream(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__AudioAnalyticsStream * soap_new_set_tt__AudioAnalyticsStream(struct soap *soap, std::vector<tt__AudioDescriptor * >& AudioDescriptor, tt__AudioAnalyticsStreamExtension *Extension) { tt__AudioAnalyticsStream *_p = soap_instantiate_tt__AudioAnalyticsStream(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AudioAnalyticsStream::AudioDescriptor = AudioDescriptor; _p->tt__AudioAnalyticsStream::Extension = Extension; } return _p; }

inline void soap_delete_tt__AudioAnalyticsStream(struct soap *soap, tt__AudioAnalyticsStream *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AudioAnalyticsStream(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__MetadataStreamExtension2
#define SOAP_TYPE_tt__MetadataStreamExtension2 (606)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MetadataStreamExtension2(struct soap*, const char*, int, const tt__MetadataStreamExtension2 *, const char*);
SOAP_FMAC3 tt__MetadataStreamExtension2 * SOAP_FMAC4 soap_in_tt__MetadataStreamExtension2(struct soap*, const char*, tt__MetadataStreamExtension2 *, const char*);

#ifndef soap_write_tt__MetadataStreamExtension2
#define soap_write_tt__MetadataStreamExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:MetadataStreamExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataStreamExtension2 * SOAP_FMAC4 soap_get_tt__MetadataStreamExtension2(struct soap*, tt__MetadataStreamExtension2 *, const char*, const char*);

#ifndef soap_read_tt__MetadataStreamExtension2
#define soap_read_tt__MetadataStreamExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__MetadataStreamExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__MetadataStreamExtension2 * SOAP_FMAC2 soap_instantiate_tt__MetadataStreamExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__MetadataStreamExtension2 * soap_new_tt__MetadataStreamExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__MetadataStreamExtension2(soap, n, NULL, NULL, NULL); }

inline tt__MetadataStreamExtension2 * soap_new_req_tt__MetadataStreamExtension2(struct soap *soap) { tt__MetadataStreamExtension2 *_p = soap_instantiate_tt__MetadataStreamExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__MetadataStreamExtension2 * soap_new_set_tt__MetadataStreamExtension2(struct soap *soap) { tt__MetadataStreamExtension2 *_p = soap_instantiate_tt__MetadataStreamExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__MetadataStreamExtension2(struct soap *soap, tt__MetadataStreamExtension2 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__MetadataStreamExtension2(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__MetadataStreamExtension
#define SOAP_TYPE_tt__MetadataStreamExtension (605)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MetadataStreamExtension(struct soap*, const char*, int, const tt__MetadataStreamExtension *, const char*);
SOAP_FMAC3 tt__MetadataStreamExtension * SOAP_FMAC4 soap_in_tt__MetadataStreamExtension(struct soap*, const char*, tt__MetadataStreamExtension *, const char*);

#ifndef soap_write_tt__MetadataStreamExtension
#define soap_write_tt__MetadataStreamExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:MetadataStreamExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataStreamExtension * SOAP_FMAC4 soap_get_tt__MetadataStreamExtension(struct soap*, tt__MetadataStreamExtension *, const char*, const char*);

#ifndef soap_read_tt__MetadataStreamExtension
#define soap_read_tt__MetadataStreamExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__MetadataStreamExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__MetadataStreamExtension * SOAP_FMAC2 soap_instantiate_tt__MetadataStreamExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__MetadataStreamExtension * soap_new_tt__MetadataStreamExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__MetadataStreamExtension(soap, n, NULL, NULL, NULL); }

inline tt__MetadataStreamExtension * soap_new_req_tt__MetadataStreamExtension(struct soap *soap) { tt__MetadataStreamExtension *_p = soap_instantiate_tt__MetadataStreamExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__MetadataStreamExtension * soap_new_set_tt__MetadataStreamExtension(struct soap *soap, tt__AudioAnalyticsStream *AudioAnalyticsStream, tt__MetadataStreamExtension2 *Extension) { tt__MetadataStreamExtension *_p = soap_instantiate_tt__MetadataStreamExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MetadataStreamExtension::AudioAnalyticsStream = AudioAnalyticsStream; _p->tt__MetadataStreamExtension::Extension = Extension; } return _p; }

inline void soap_delete_tt__MetadataStreamExtension(struct soap *soap, tt__MetadataStreamExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__MetadataStreamExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__MetadataStream
#define SOAP_TYPE_tt__MetadataStream (604)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MetadataStream(struct soap*, const char*, int, const tt__MetadataStream *, const char*);
SOAP_FMAC3 tt__MetadataStream * SOAP_FMAC4 soap_in_tt__MetadataStream(struct soap*, const char*, tt__MetadataStream *, const char*);

#ifndef soap_write_tt__MetadataStream
#define soap_write_tt__MetadataStream(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:MetadataStream", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataStream * SOAP_FMAC4 soap_get_tt__MetadataStream(struct soap*, tt__MetadataStream *, const char*, const char*);

#ifndef soap_read_tt__MetadataStream
#define soap_read_tt__MetadataStream(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__MetadataStream(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__MetadataStream * SOAP_FMAC2 soap_instantiate_tt__MetadataStream(struct soap*, int, const char*, const char*, size_t*);

inline tt__MetadataStream * soap_new_tt__MetadataStream(struct soap *soap, int n = -1) { return soap_instantiate_tt__MetadataStream(soap, n, NULL, NULL, NULL); }

inline tt__MetadataStream * soap_new_req_tt__MetadataStream(struct soap *soap, int __size_MetadataStream, __tt__union_MetadataStream *__union_MetadataStream) { tt__MetadataStream *_p = soap_instantiate_tt__MetadataStream(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MetadataStream::__size_MetadataStream = __size_MetadataStream; _p->tt__MetadataStream::__union_MetadataStream = __union_MetadataStream; } return _p; }

inline tt__MetadataStream * soap_new_set_tt__MetadataStream(struct soap *soap, int __size_MetadataStream, __tt__union_MetadataStream *__union_MetadataStream) { tt__MetadataStream *_p = soap_instantiate_tt__MetadataStream(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MetadataStream::__size_MetadataStream = __size_MetadataStream; _p->tt__MetadataStream::__union_MetadataStream = __union_MetadataStream; } return _p; }

inline void soap_delete_tt__MetadataStream(struct soap *soap, tt__MetadataStream *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__MetadataStream(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__CellLayout
#define SOAP_TYPE_tt__CellLayout (603)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__CellLayout(struct soap*, const char*, int, const tt__CellLayout *, const char*);
SOAP_FMAC3 tt__CellLayout * SOAP_FMAC4 soap_in_tt__CellLayout(struct soap*, const char*, tt__CellLayout *, const char*);

#ifndef soap_write_tt__CellLayout
#define soap_write_tt__CellLayout(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:CellLayout", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CellLayout * SOAP_FMAC4 soap_get_tt__CellLayout(struct soap*, tt__CellLayout *, const char*, const char*);

#ifndef soap_read_tt__CellLayout
#define soap_read_tt__CellLayout(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__CellLayout(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__CellLayout * SOAP_FMAC2 soap_instantiate_tt__CellLayout(struct soap*, int, const char*, const char*, size_t*);

inline tt__CellLayout * soap_new_tt__CellLayout(struct soap *soap, int n = -1) { return soap_instantiate_tt__CellLayout(soap, n, NULL, NULL, NULL); }

inline tt__CellLayout * soap_new_req_tt__CellLayout(struct soap *soap, tt__Transformation *Transformation, std::string& Columns, std::string& Rows) { tt__CellLayout *_p = soap_instantiate_tt__CellLayout(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__CellLayout::Transformation = Transformation; _p->tt__CellLayout::Columns = Columns; _p->tt__CellLayout::Rows = Rows; } return _p; }

inline tt__CellLayout * soap_new_set_tt__CellLayout(struct soap *soap, tt__Transformation *Transformation, std::string& Columns, std::string& Rows) { tt__CellLayout *_p = soap_instantiate_tt__CellLayout(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__CellLayout::Transformation = Transformation; _p->tt__CellLayout::Columns = Columns; _p->tt__CellLayout::Rows = Rows; } return _p; }

inline void soap_delete_tt__CellLayout(struct soap *soap, tt__CellLayout *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__CellLayout(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__MotionExpressionConfiguration
#define SOAP_TYPE_tt__MotionExpressionConfiguration (602)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MotionExpressionConfiguration(struct soap*, const char*, int, const tt__MotionExpressionConfiguration *, const char*);
SOAP_FMAC3 tt__MotionExpressionConfiguration * SOAP_FMAC4 soap_in_tt__MotionExpressionConfiguration(struct soap*, const char*, tt__MotionExpressionConfiguration *, const char*);

#ifndef soap_write_tt__MotionExpressionConfiguration
#define soap_write_tt__MotionExpressionConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:MotionExpressionConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MotionExpressionConfiguration * SOAP_FMAC4 soap_get_tt__MotionExpressionConfiguration(struct soap*, tt__MotionExpressionConfiguration *, const char*, const char*);

#ifndef soap_read_tt__MotionExpressionConfiguration
#define soap_read_tt__MotionExpressionConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__MotionExpressionConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__MotionExpressionConfiguration * SOAP_FMAC2 soap_instantiate_tt__MotionExpressionConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__MotionExpressionConfiguration * soap_new_tt__MotionExpressionConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__MotionExpressionConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__MotionExpressionConfiguration * soap_new_req_tt__MotionExpressionConfiguration(struct soap *soap, tt__MotionExpression *MotionExpression) { tt__MotionExpressionConfiguration *_p = soap_instantiate_tt__MotionExpressionConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MotionExpressionConfiguration::MotionExpression = MotionExpression; } return _p; }

inline tt__MotionExpressionConfiguration * soap_new_set_tt__MotionExpressionConfiguration(struct soap *soap, tt__MotionExpression *MotionExpression) { tt__MotionExpressionConfiguration *_p = soap_instantiate_tt__MotionExpressionConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MotionExpressionConfiguration::MotionExpression = MotionExpression; } return _p; }

inline void soap_delete_tt__MotionExpressionConfiguration(struct soap *soap, tt__MotionExpressionConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__MotionExpressionConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__MotionExpression
#define SOAP_TYPE_tt__MotionExpression (601)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MotionExpression(struct soap*, const char*, int, const tt__MotionExpression *, const char*);
SOAP_FMAC3 tt__MotionExpression * SOAP_FMAC4 soap_in_tt__MotionExpression(struct soap*, const char*, tt__MotionExpression *, const char*);

#ifndef soap_write_tt__MotionExpression
#define soap_write_tt__MotionExpression(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:MotionExpression", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MotionExpression * SOAP_FMAC4 soap_get_tt__MotionExpression(struct soap*, tt__MotionExpression *, const char*, const char*);

#ifndef soap_read_tt__MotionExpression
#define soap_read_tt__MotionExpression(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__MotionExpression(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__MotionExpression * SOAP_FMAC2 soap_instantiate_tt__MotionExpression(struct soap*, int, const char*, const char*, size_t*);

inline tt__MotionExpression * soap_new_tt__MotionExpression(struct soap *soap, int n = -1) { return soap_instantiate_tt__MotionExpression(soap, n, NULL, NULL, NULL); }

inline tt__MotionExpression * soap_new_req_tt__MotionExpression(struct soap *soap, std::string& Expression) { tt__MotionExpression *_p = soap_instantiate_tt__MotionExpression(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MotionExpression::Expression = Expression; } return _p; }

inline tt__MotionExpression * soap_new_set_tt__MotionExpression(struct soap *soap, std::string& Expression, std::string *Type) { tt__MotionExpression *_p = soap_instantiate_tt__MotionExpression(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MotionExpression::Expression = Expression; _p->tt__MotionExpression::Type = Type; } return _p; }

inline void soap_delete_tt__MotionExpression(struct soap *soap, tt__MotionExpression *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__MotionExpression(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PolylineArrayConfiguration
#define SOAP_TYPE_tt__PolylineArrayConfiguration (600)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PolylineArrayConfiguration(struct soap*, const char*, int, const tt__PolylineArrayConfiguration *, const char*);
SOAP_FMAC3 tt__PolylineArrayConfiguration * SOAP_FMAC4 soap_in_tt__PolylineArrayConfiguration(struct soap*, const char*, tt__PolylineArrayConfiguration *, const char*);

#ifndef soap_write_tt__PolylineArrayConfiguration
#define soap_write_tt__PolylineArrayConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PolylineArrayConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PolylineArrayConfiguration * SOAP_FMAC4 soap_get_tt__PolylineArrayConfiguration(struct soap*, tt__PolylineArrayConfiguration *, const char*, const char*);

#ifndef soap_read_tt__PolylineArrayConfiguration
#define soap_read_tt__PolylineArrayConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PolylineArrayConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PolylineArrayConfiguration * SOAP_FMAC2 soap_instantiate_tt__PolylineArrayConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__PolylineArrayConfiguration * soap_new_tt__PolylineArrayConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__PolylineArrayConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__PolylineArrayConfiguration * soap_new_req_tt__PolylineArrayConfiguration(struct soap *soap, tt__PolylineArray *PolylineArray) { tt__PolylineArrayConfiguration *_p = soap_instantiate_tt__PolylineArrayConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PolylineArrayConfiguration::PolylineArray = PolylineArray; } return _p; }

inline tt__PolylineArrayConfiguration * soap_new_set_tt__PolylineArrayConfiguration(struct soap *soap, tt__PolylineArray *PolylineArray) { tt__PolylineArrayConfiguration *_p = soap_instantiate_tt__PolylineArrayConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PolylineArrayConfiguration::PolylineArray = PolylineArray; } return _p; }

inline void soap_delete_tt__PolylineArrayConfiguration(struct soap *soap, tt__PolylineArrayConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PolylineArrayConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PolylineArrayExtension
#define SOAP_TYPE_tt__PolylineArrayExtension (599)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PolylineArrayExtension(struct soap*, const char*, int, const tt__PolylineArrayExtension *, const char*);
SOAP_FMAC3 tt__PolylineArrayExtension * SOAP_FMAC4 soap_in_tt__PolylineArrayExtension(struct soap*, const char*, tt__PolylineArrayExtension *, const char*);

#ifndef soap_write_tt__PolylineArrayExtension
#define soap_write_tt__PolylineArrayExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PolylineArrayExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PolylineArrayExtension * SOAP_FMAC4 soap_get_tt__PolylineArrayExtension(struct soap*, tt__PolylineArrayExtension *, const char*, const char*);

#ifndef soap_read_tt__PolylineArrayExtension
#define soap_read_tt__PolylineArrayExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PolylineArrayExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PolylineArrayExtension * SOAP_FMAC2 soap_instantiate_tt__PolylineArrayExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PolylineArrayExtension * soap_new_tt__PolylineArrayExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PolylineArrayExtension(soap, n, NULL, NULL, NULL); }

inline tt__PolylineArrayExtension * soap_new_req_tt__PolylineArrayExtension(struct soap *soap) { tt__PolylineArrayExtension *_p = soap_instantiate_tt__PolylineArrayExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PolylineArrayExtension * soap_new_set_tt__PolylineArrayExtension(struct soap *soap) { tt__PolylineArrayExtension *_p = soap_instantiate_tt__PolylineArrayExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__PolylineArrayExtension(struct soap *soap, tt__PolylineArrayExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PolylineArrayExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PolylineArray
#define SOAP_TYPE_tt__PolylineArray (598)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PolylineArray(struct soap*, const char*, int, const tt__PolylineArray *, const char*);
SOAP_FMAC3 tt__PolylineArray * SOAP_FMAC4 soap_in_tt__PolylineArray(struct soap*, const char*, tt__PolylineArray *, const char*);

#ifndef soap_write_tt__PolylineArray
#define soap_write_tt__PolylineArray(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PolylineArray", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PolylineArray * SOAP_FMAC4 soap_get_tt__PolylineArray(struct soap*, tt__PolylineArray *, const char*, const char*);

#ifndef soap_read_tt__PolylineArray
#define soap_read_tt__PolylineArray(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PolylineArray(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PolylineArray * SOAP_FMAC2 soap_instantiate_tt__PolylineArray(struct soap*, int, const char*, const char*, size_t*);

inline tt__PolylineArray * soap_new_tt__PolylineArray(struct soap *soap, int n = -1) { return soap_instantiate_tt__PolylineArray(soap, n, NULL, NULL, NULL); }

inline tt__PolylineArray * soap_new_req_tt__PolylineArray(struct soap *soap, std::vector<tt__Polyline * >& Segment) { tt__PolylineArray *_p = soap_instantiate_tt__PolylineArray(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PolylineArray::Segment = Segment; } return _p; }

inline tt__PolylineArray * soap_new_set_tt__PolylineArray(struct soap *soap, std::vector<tt__Polyline * >& Segment, tt__PolylineArrayExtension *Extension) { tt__PolylineArray *_p = soap_instantiate_tt__PolylineArray(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PolylineArray::Segment = Segment; _p->tt__PolylineArray::Extension = Extension; } return _p; }

inline void soap_delete_tt__PolylineArray(struct soap *soap, tt__PolylineArray *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PolylineArray(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PolygonConfiguration
#define SOAP_TYPE_tt__PolygonConfiguration (597)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PolygonConfiguration(struct soap*, const char*, int, const tt__PolygonConfiguration *, const char*);
SOAP_FMAC3 tt__PolygonConfiguration * SOAP_FMAC4 soap_in_tt__PolygonConfiguration(struct soap*, const char*, tt__PolygonConfiguration *, const char*);

#ifndef soap_write_tt__PolygonConfiguration
#define soap_write_tt__PolygonConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PolygonConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PolygonConfiguration * SOAP_FMAC4 soap_get_tt__PolygonConfiguration(struct soap*, tt__PolygonConfiguration *, const char*, const char*);

#ifndef soap_read_tt__PolygonConfiguration
#define soap_read_tt__PolygonConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PolygonConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PolygonConfiguration * SOAP_FMAC2 soap_instantiate_tt__PolygonConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__PolygonConfiguration * soap_new_tt__PolygonConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__PolygonConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__PolygonConfiguration * soap_new_req_tt__PolygonConfiguration(struct soap *soap, tt__Polygon *Polygon) { tt__PolygonConfiguration *_p = soap_instantiate_tt__PolygonConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PolygonConfiguration::Polygon = Polygon; } return _p; }

inline tt__PolygonConfiguration * soap_new_set_tt__PolygonConfiguration(struct soap *soap, tt__Polygon *Polygon) { tt__PolygonConfiguration *_p = soap_instantiate_tt__PolygonConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PolygonConfiguration::Polygon = Polygon; } return _p; }

inline void soap_delete_tt__PolygonConfiguration(struct soap *soap, tt__PolygonConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PolygonConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__SupportedAnalyticsModulesExtension
#define SOAP_TYPE_tt__SupportedAnalyticsModulesExtension (596)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SupportedAnalyticsModulesExtension(struct soap*, const char*, int, const tt__SupportedAnalyticsModulesExtension *, const char*);
SOAP_FMAC3 tt__SupportedAnalyticsModulesExtension * SOAP_FMAC4 soap_in_tt__SupportedAnalyticsModulesExtension(struct soap*, const char*, tt__SupportedAnalyticsModulesExtension *, const char*);

#ifndef soap_write_tt__SupportedAnalyticsModulesExtension
#define soap_write_tt__SupportedAnalyticsModulesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:SupportedAnalyticsModulesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SupportedAnalyticsModulesExtension * SOAP_FMAC4 soap_get_tt__SupportedAnalyticsModulesExtension(struct soap*, tt__SupportedAnalyticsModulesExtension *, const char*, const char*);

#ifndef soap_read_tt__SupportedAnalyticsModulesExtension
#define soap_read_tt__SupportedAnalyticsModulesExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__SupportedAnalyticsModulesExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__SupportedAnalyticsModulesExtension * SOAP_FMAC2 soap_instantiate_tt__SupportedAnalyticsModulesExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__SupportedAnalyticsModulesExtension * soap_new_tt__SupportedAnalyticsModulesExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__SupportedAnalyticsModulesExtension(soap, n, NULL, NULL, NULL); }

inline tt__SupportedAnalyticsModulesExtension * soap_new_req_tt__SupportedAnalyticsModulesExtension(struct soap *soap) { tt__SupportedAnalyticsModulesExtension *_p = soap_instantiate_tt__SupportedAnalyticsModulesExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__SupportedAnalyticsModulesExtension * soap_new_set_tt__SupportedAnalyticsModulesExtension(struct soap *soap) { tt__SupportedAnalyticsModulesExtension *_p = soap_instantiate_tt__SupportedAnalyticsModulesExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__SupportedAnalyticsModulesExtension(struct soap *soap, tt__SupportedAnalyticsModulesExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__SupportedAnalyticsModulesExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__SupportedAnalyticsModules
#define SOAP_TYPE_tt__SupportedAnalyticsModules (595)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SupportedAnalyticsModules(struct soap*, const char*, int, const tt__SupportedAnalyticsModules *, const char*);
SOAP_FMAC3 tt__SupportedAnalyticsModules * SOAP_FMAC4 soap_in_tt__SupportedAnalyticsModules(struct soap*, const char*, tt__SupportedAnalyticsModules *, const char*);

#ifndef soap_write_tt__SupportedAnalyticsModules
#define soap_write_tt__SupportedAnalyticsModules(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:SupportedAnalyticsModules", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SupportedAnalyticsModules * SOAP_FMAC4 soap_get_tt__SupportedAnalyticsModules(struct soap*, tt__SupportedAnalyticsModules *, const char*, const char*);

#ifndef soap_read_tt__SupportedAnalyticsModules
#define soap_read_tt__SupportedAnalyticsModules(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__SupportedAnalyticsModules(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__SupportedAnalyticsModules * SOAP_FMAC2 soap_instantiate_tt__SupportedAnalyticsModules(struct soap*, int, const char*, const char*, size_t*);

inline tt__SupportedAnalyticsModules * soap_new_tt__SupportedAnalyticsModules(struct soap *soap, int n = -1) { return soap_instantiate_tt__SupportedAnalyticsModules(soap, n, NULL, NULL, NULL); }

inline tt__SupportedAnalyticsModules * soap_new_req_tt__SupportedAnalyticsModules(struct soap *soap) { tt__SupportedAnalyticsModules *_p = soap_instantiate_tt__SupportedAnalyticsModules(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__SupportedAnalyticsModules * soap_new_set_tt__SupportedAnalyticsModules(struct soap *soap, std::vector<std::string >& AnalyticsModuleContentSchemaLocation, std::vector<tt__ConfigDescription * >& AnalyticsModuleDescription, tt__SupportedAnalyticsModulesExtension *Extension) { tt__SupportedAnalyticsModules *_p = soap_instantiate_tt__SupportedAnalyticsModules(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__SupportedAnalyticsModules::AnalyticsModuleContentSchemaLocation = AnalyticsModuleContentSchemaLocation; _p->tt__SupportedAnalyticsModules::AnalyticsModuleDescription = AnalyticsModuleDescription; _p->tt__SupportedAnalyticsModules::Extension = Extension; } return _p; }

inline void soap_delete_tt__SupportedAnalyticsModules(struct soap *soap, tt__SupportedAnalyticsModules *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__SupportedAnalyticsModules(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__SupportedRulesExtension
#define SOAP_TYPE_tt__SupportedRulesExtension (594)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SupportedRulesExtension(struct soap*, const char*, int, const tt__SupportedRulesExtension *, const char*);
SOAP_FMAC3 tt__SupportedRulesExtension * SOAP_FMAC4 soap_in_tt__SupportedRulesExtension(struct soap*, const char*, tt__SupportedRulesExtension *, const char*);

#ifndef soap_write_tt__SupportedRulesExtension
#define soap_write_tt__SupportedRulesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:SupportedRulesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SupportedRulesExtension * SOAP_FMAC4 soap_get_tt__SupportedRulesExtension(struct soap*, tt__SupportedRulesExtension *, const char*, const char*);

#ifndef soap_read_tt__SupportedRulesExtension
#define soap_read_tt__SupportedRulesExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__SupportedRulesExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__SupportedRulesExtension * SOAP_FMAC2 soap_instantiate_tt__SupportedRulesExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__SupportedRulesExtension * soap_new_tt__SupportedRulesExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__SupportedRulesExtension(soap, n, NULL, NULL, NULL); }

inline tt__SupportedRulesExtension * soap_new_req_tt__SupportedRulesExtension(struct soap *soap) { tt__SupportedRulesExtension *_p = soap_instantiate_tt__SupportedRulesExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__SupportedRulesExtension * soap_new_set_tt__SupportedRulesExtension(struct soap *soap) { tt__SupportedRulesExtension *_p = soap_instantiate_tt__SupportedRulesExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__SupportedRulesExtension(struct soap *soap, tt__SupportedRulesExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__SupportedRulesExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__SupportedRules
#define SOAP_TYPE_tt__SupportedRules (593)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SupportedRules(struct soap*, const char*, int, const tt__SupportedRules *, const char*);
SOAP_FMAC3 tt__SupportedRules * SOAP_FMAC4 soap_in_tt__SupportedRules(struct soap*, const char*, tt__SupportedRules *, const char*);

#ifndef soap_write_tt__SupportedRules
#define soap_write_tt__SupportedRules(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:SupportedRules", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SupportedRules * SOAP_FMAC4 soap_get_tt__SupportedRules(struct soap*, tt__SupportedRules *, const char*, const char*);

#ifndef soap_read_tt__SupportedRules
#define soap_read_tt__SupportedRules(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__SupportedRules(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__SupportedRules * SOAP_FMAC2 soap_instantiate_tt__SupportedRules(struct soap*, int, const char*, const char*, size_t*);

inline tt__SupportedRules * soap_new_tt__SupportedRules(struct soap *soap, int n = -1) { return soap_instantiate_tt__SupportedRules(soap, n, NULL, NULL, NULL); }

inline tt__SupportedRules * soap_new_req_tt__SupportedRules(struct soap *soap) { tt__SupportedRules *_p = soap_instantiate_tt__SupportedRules(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__SupportedRules * soap_new_set_tt__SupportedRules(struct soap *soap, std::vector<std::string >& RuleContentSchemaLocation, std::vector<tt__ConfigDescription * >& RuleDescription, tt__SupportedRulesExtension *Extension) { tt__SupportedRules *_p = soap_instantiate_tt__SupportedRules(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__SupportedRules::RuleContentSchemaLocation = RuleContentSchemaLocation; _p->tt__SupportedRules::RuleDescription = RuleDescription; _p->tt__SupportedRules::Extension = Extension; } return _p; }

inline void soap_delete_tt__SupportedRules(struct soap *soap, tt__SupportedRules *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__SupportedRules(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ConfigDescriptionExtension
#define SOAP_TYPE_tt__ConfigDescriptionExtension (592)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ConfigDescriptionExtension(struct soap*, const char*, int, const tt__ConfigDescriptionExtension *, const char*);
SOAP_FMAC3 tt__ConfigDescriptionExtension * SOAP_FMAC4 soap_in_tt__ConfigDescriptionExtension(struct soap*, const char*, tt__ConfigDescriptionExtension *, const char*);

#ifndef soap_write_tt__ConfigDescriptionExtension
#define soap_write_tt__ConfigDescriptionExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ConfigDescriptionExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ConfigDescriptionExtension * SOAP_FMAC4 soap_get_tt__ConfigDescriptionExtension(struct soap*, tt__ConfigDescriptionExtension *, const char*, const char*);

#ifndef soap_read_tt__ConfigDescriptionExtension
#define soap_read_tt__ConfigDescriptionExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ConfigDescriptionExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ConfigDescriptionExtension * SOAP_FMAC2 soap_instantiate_tt__ConfigDescriptionExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ConfigDescriptionExtension * soap_new_tt__ConfigDescriptionExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ConfigDescriptionExtension(soap, n, NULL, NULL, NULL); }

inline tt__ConfigDescriptionExtension * soap_new_req_tt__ConfigDescriptionExtension(struct soap *soap) { tt__ConfigDescriptionExtension *_p = soap_instantiate_tt__ConfigDescriptionExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ConfigDescriptionExtension * soap_new_set_tt__ConfigDescriptionExtension(struct soap *soap) { tt__ConfigDescriptionExtension *_p = soap_instantiate_tt__ConfigDescriptionExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__ConfigDescriptionExtension(struct soap *soap, tt__ConfigDescriptionExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ConfigDescriptionExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ConfigDescription
#define SOAP_TYPE_tt__ConfigDescription (591)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ConfigDescription(struct soap*, const char*, int, const tt__ConfigDescription *, const char*);
SOAP_FMAC3 tt__ConfigDescription * SOAP_FMAC4 soap_in_tt__ConfigDescription(struct soap*, const char*, tt__ConfigDescription *, const char*);

#ifndef soap_write_tt__ConfigDescription
#define soap_write_tt__ConfigDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ConfigDescription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ConfigDescription * SOAP_FMAC4 soap_get_tt__ConfigDescription(struct soap*, tt__ConfigDescription *, const char*, const char*);

#ifndef soap_read_tt__ConfigDescription
#define soap_read_tt__ConfigDescription(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ConfigDescription(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ConfigDescription * SOAP_FMAC2 soap_instantiate_tt__ConfigDescription(struct soap*, int, const char*, const char*, size_t*);

inline tt__ConfigDescription * soap_new_tt__ConfigDescription(struct soap *soap, int n = -1) { return soap_instantiate_tt__ConfigDescription(soap, n, NULL, NULL, NULL); }

inline tt__ConfigDescription * soap_new_req_tt__ConfigDescription(struct soap *soap, tt__ItemListDescription *Parameters, std::string& Name) { tt__ConfigDescription *_p = soap_instantiate_tt__ConfigDescription(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ConfigDescription::Parameters = Parameters; _p->tt__ConfigDescription::Name = Name; } return _p; }

inline tt__ConfigDescription * soap_new_set_tt__ConfigDescription(struct soap *soap, tt__ItemListDescription *Parameters, std::vector<_tt__ConfigDescription_Messages >*Messages, tt__ConfigDescriptionExtension *Extension, std::string& Name) { tt__ConfigDescription *_p = soap_instantiate_tt__ConfigDescription(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ConfigDescription::Parameters = Parameters; _p->tt__ConfigDescription::Messages = Messages; _p->tt__ConfigDescription::Extension = Extension; _p->tt__ConfigDescription::Name = Name; } return _p; }

inline void soap_delete_tt__ConfigDescription(struct soap *soap, tt__ConfigDescription *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ConfigDescription(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Config
#define SOAP_TYPE_tt__Config (590)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Config(struct soap*, const char*, int, const tt__Config *, const char*);
SOAP_FMAC3 tt__Config * SOAP_FMAC4 soap_in_tt__Config(struct soap*, const char*, tt__Config *, const char*);

#ifndef soap_write_tt__Config
#define soap_write_tt__Config(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Config", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Config * SOAP_FMAC4 soap_get_tt__Config(struct soap*, tt__Config *, const char*, const char*);

#ifndef soap_read_tt__Config
#define soap_read_tt__Config(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Config(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Config * SOAP_FMAC2 soap_instantiate_tt__Config(struct soap*, int, const char*, const char*, size_t*);

inline tt__Config * soap_new_tt__Config(struct soap *soap, int n = -1) { return soap_instantiate_tt__Config(soap, n, NULL, NULL, NULL); }

inline tt__Config * soap_new_req_tt__Config(struct soap *soap, tt__ItemList *Parameters, std::string& Name, std::string& Type) { tt__Config *_p = soap_instantiate_tt__Config(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Config::Parameters = Parameters; _p->tt__Config::Name = Name; _p->tt__Config::Type = Type; } return _p; }

inline tt__Config * soap_new_set_tt__Config(struct soap *soap, tt__ItemList *Parameters, std::string& Name, std::string& Type) { tt__Config *_p = soap_instantiate_tt__Config(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Config::Parameters = Parameters; _p->tt__Config::Name = Name; _p->tt__Config::Type = Type; } return _p; }

inline void soap_delete_tt__Config(struct soap *soap, tt__Config *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Config(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RuleEngineConfigurationExtension
#define SOAP_TYPE_tt__RuleEngineConfigurationExtension (589)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RuleEngineConfigurationExtension(struct soap*, const char*, int, const tt__RuleEngineConfigurationExtension *, const char*);
SOAP_FMAC3 tt__RuleEngineConfigurationExtension * SOAP_FMAC4 soap_in_tt__RuleEngineConfigurationExtension(struct soap*, const char*, tt__RuleEngineConfigurationExtension *, const char*);

#ifndef soap_write_tt__RuleEngineConfigurationExtension
#define soap_write_tt__RuleEngineConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RuleEngineConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RuleEngineConfigurationExtension * SOAP_FMAC4 soap_get_tt__RuleEngineConfigurationExtension(struct soap*, tt__RuleEngineConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__RuleEngineConfigurationExtension
#define soap_read_tt__RuleEngineConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RuleEngineConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RuleEngineConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__RuleEngineConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__RuleEngineConfigurationExtension * soap_new_tt__RuleEngineConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__RuleEngineConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__RuleEngineConfigurationExtension * soap_new_req_tt__RuleEngineConfigurationExtension(struct soap *soap) { tt__RuleEngineConfigurationExtension *_p = soap_instantiate_tt__RuleEngineConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__RuleEngineConfigurationExtension * soap_new_set_tt__RuleEngineConfigurationExtension(struct soap *soap) { tt__RuleEngineConfigurationExtension *_p = soap_instantiate_tt__RuleEngineConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__RuleEngineConfigurationExtension(struct soap *soap, tt__RuleEngineConfigurationExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RuleEngineConfigurationExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RuleEngineConfiguration
#define SOAP_TYPE_tt__RuleEngineConfiguration (588)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RuleEngineConfiguration(struct soap*, const char*, int, const tt__RuleEngineConfiguration *, const char*);
SOAP_FMAC3 tt__RuleEngineConfiguration * SOAP_FMAC4 soap_in_tt__RuleEngineConfiguration(struct soap*, const char*, tt__RuleEngineConfiguration *, const char*);

#ifndef soap_write_tt__RuleEngineConfiguration
#define soap_write_tt__RuleEngineConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RuleEngineConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RuleEngineConfiguration * SOAP_FMAC4 soap_get_tt__RuleEngineConfiguration(struct soap*, tt__RuleEngineConfiguration *, const char*, const char*);

#ifndef soap_read_tt__RuleEngineConfiguration
#define soap_read_tt__RuleEngineConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RuleEngineConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RuleEngineConfiguration * SOAP_FMAC2 soap_instantiate_tt__RuleEngineConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__RuleEngineConfiguration * soap_new_tt__RuleEngineConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__RuleEngineConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__RuleEngineConfiguration * soap_new_req_tt__RuleEngineConfiguration(struct soap *soap) { tt__RuleEngineConfiguration *_p = soap_instantiate_tt__RuleEngineConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__RuleEngineConfiguration * soap_new_set_tt__RuleEngineConfiguration(struct soap *soap, std::vector<tt__Config * >& Rule, tt__RuleEngineConfigurationExtension *Extension) { tt__RuleEngineConfiguration *_p = soap_instantiate_tt__RuleEngineConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RuleEngineConfiguration::Rule = Rule; _p->tt__RuleEngineConfiguration::Extension = Extension; } return _p; }

inline void soap_delete_tt__RuleEngineConfiguration(struct soap *soap, tt__RuleEngineConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RuleEngineConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AnalyticsEngineConfigurationExtension
#define SOAP_TYPE_tt__AnalyticsEngineConfigurationExtension (587)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsEngineConfigurationExtension(struct soap*, const char*, int, const tt__AnalyticsEngineConfigurationExtension *, const char*);
SOAP_FMAC3 tt__AnalyticsEngineConfigurationExtension * SOAP_FMAC4 soap_in_tt__AnalyticsEngineConfigurationExtension(struct soap*, const char*, tt__AnalyticsEngineConfigurationExtension *, const char*);

#ifndef soap_write_tt__AnalyticsEngineConfigurationExtension
#define soap_write_tt__AnalyticsEngineConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AnalyticsEngineConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsEngineConfigurationExtension * SOAP_FMAC4 soap_get_tt__AnalyticsEngineConfigurationExtension(struct soap*, tt__AnalyticsEngineConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsEngineConfigurationExtension
#define soap_read_tt__AnalyticsEngineConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AnalyticsEngineConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AnalyticsEngineConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__AnalyticsEngineConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsEngineConfigurationExtension * soap_new_tt__AnalyticsEngineConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsEngineConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsEngineConfigurationExtension * soap_new_req_tt__AnalyticsEngineConfigurationExtension(struct soap *soap) { tt__AnalyticsEngineConfigurationExtension *_p = soap_instantiate_tt__AnalyticsEngineConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__AnalyticsEngineConfigurationExtension * soap_new_set_tt__AnalyticsEngineConfigurationExtension(struct soap *soap) { tt__AnalyticsEngineConfigurationExtension *_p = soap_instantiate_tt__AnalyticsEngineConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__AnalyticsEngineConfigurationExtension(struct soap *soap, tt__AnalyticsEngineConfigurationExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AnalyticsEngineConfigurationExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AnalyticsEngineConfiguration
#define SOAP_TYPE_tt__AnalyticsEngineConfiguration (586)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsEngineConfiguration(struct soap*, const char*, int, const tt__AnalyticsEngineConfiguration *, const char*);
SOAP_FMAC3 tt__AnalyticsEngineConfiguration * SOAP_FMAC4 soap_in_tt__AnalyticsEngineConfiguration(struct soap*, const char*, tt__AnalyticsEngineConfiguration *, const char*);

#ifndef soap_write_tt__AnalyticsEngineConfiguration
#define soap_write_tt__AnalyticsEngineConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AnalyticsEngineConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsEngineConfiguration * SOAP_FMAC4 soap_get_tt__AnalyticsEngineConfiguration(struct soap*, tt__AnalyticsEngineConfiguration *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsEngineConfiguration
#define soap_read_tt__AnalyticsEngineConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AnalyticsEngineConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AnalyticsEngineConfiguration * SOAP_FMAC2 soap_instantiate_tt__AnalyticsEngineConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsEngineConfiguration * soap_new_tt__AnalyticsEngineConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsEngineConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsEngineConfiguration * soap_new_req_tt__AnalyticsEngineConfiguration(struct soap *soap) { tt__AnalyticsEngineConfiguration *_p = soap_instantiate_tt__AnalyticsEngineConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__AnalyticsEngineConfiguration * soap_new_set_tt__AnalyticsEngineConfiguration(struct soap *soap, std::vector<tt__Config * >& AnalyticsModule, tt__AnalyticsEngineConfigurationExtension *Extension) { tt__AnalyticsEngineConfiguration *_p = soap_instantiate_tt__AnalyticsEngineConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AnalyticsEngineConfiguration::AnalyticsModule = AnalyticsModule; _p->tt__AnalyticsEngineConfiguration::Extension = Extension; } return _p; }

inline void soap_delete_tt__AnalyticsEngineConfiguration(struct soap *soap, tt__AnalyticsEngineConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AnalyticsEngineConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__MotionInCells
#define SOAP_TYPE_tt__MotionInCells (585)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MotionInCells(struct soap*, const char*, int, const tt__MotionInCells *, const char*);
SOAP_FMAC3 tt__MotionInCells * SOAP_FMAC4 soap_in_tt__MotionInCells(struct soap*, const char*, tt__MotionInCells *, const char*);

#ifndef soap_write_tt__MotionInCells
#define soap_write_tt__MotionInCells(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:MotionInCells", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MotionInCells * SOAP_FMAC4 soap_get_tt__MotionInCells(struct soap*, tt__MotionInCells *, const char*, const char*);

#ifndef soap_read_tt__MotionInCells
#define soap_read_tt__MotionInCells(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__MotionInCells(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__MotionInCells * SOAP_FMAC2 soap_instantiate_tt__MotionInCells(struct soap*, int, const char*, const char*, size_t*);

inline tt__MotionInCells * soap_new_tt__MotionInCells(struct soap *soap, int n = -1) { return soap_instantiate_tt__MotionInCells(soap, n, NULL, NULL, NULL); }

inline tt__MotionInCells * soap_new_req_tt__MotionInCells(struct soap *soap, std::string& Columns, std::string& Rows, xsd__base64Binary& Cells) { tt__MotionInCells *_p = soap_instantiate_tt__MotionInCells(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MotionInCells::Columns = Columns; _p->tt__MotionInCells::Rows = Rows; _p->tt__MotionInCells::Cells = Cells; } return _p; }

inline tt__MotionInCells * soap_new_set_tt__MotionInCells(struct soap *soap, std::string& Columns, std::string& Rows, xsd__base64Binary& Cells) { tt__MotionInCells *_p = soap_instantiate_tt__MotionInCells(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MotionInCells::Columns = Columns; _p->tt__MotionInCells::Rows = Rows; _p->tt__MotionInCells::Cells = Cells; } return _p; }

inline void soap_delete_tt__MotionInCells(struct soap *soap, tt__MotionInCells *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__MotionInCells(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ObjectTreeExtension
#define SOAP_TYPE_tt__ObjectTreeExtension (584)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ObjectTreeExtension(struct soap*, const char*, int, const tt__ObjectTreeExtension *, const char*);
SOAP_FMAC3 tt__ObjectTreeExtension * SOAP_FMAC4 soap_in_tt__ObjectTreeExtension(struct soap*, const char*, tt__ObjectTreeExtension *, const char*);

#ifndef soap_write_tt__ObjectTreeExtension
#define soap_write_tt__ObjectTreeExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ObjectTreeExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ObjectTreeExtension * SOAP_FMAC4 soap_get_tt__ObjectTreeExtension(struct soap*, tt__ObjectTreeExtension *, const char*, const char*);

#ifndef soap_read_tt__ObjectTreeExtension
#define soap_read_tt__ObjectTreeExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ObjectTreeExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ObjectTreeExtension * SOAP_FMAC2 soap_instantiate_tt__ObjectTreeExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ObjectTreeExtension * soap_new_tt__ObjectTreeExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ObjectTreeExtension(soap, n, NULL, NULL, NULL); }

inline tt__ObjectTreeExtension * soap_new_req_tt__ObjectTreeExtension(struct soap *soap) { tt__ObjectTreeExtension *_p = soap_instantiate_tt__ObjectTreeExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ObjectTreeExtension * soap_new_set_tt__ObjectTreeExtension(struct soap *soap) { tt__ObjectTreeExtension *_p = soap_instantiate_tt__ObjectTreeExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__ObjectTreeExtension(struct soap *soap, tt__ObjectTreeExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ObjectTreeExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ObjectTree
#define SOAP_TYPE_tt__ObjectTree (583)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ObjectTree(struct soap*, const char*, int, const tt__ObjectTree *, const char*);
SOAP_FMAC3 tt__ObjectTree * SOAP_FMAC4 soap_in_tt__ObjectTree(struct soap*, const char*, tt__ObjectTree *, const char*);

#ifndef soap_write_tt__ObjectTree
#define soap_write_tt__ObjectTree(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ObjectTree", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ObjectTree * SOAP_FMAC4 soap_get_tt__ObjectTree(struct soap*, tt__ObjectTree *, const char*, const char*);

#ifndef soap_read_tt__ObjectTree
#define soap_read_tt__ObjectTree(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ObjectTree(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ObjectTree * SOAP_FMAC2 soap_instantiate_tt__ObjectTree(struct soap*, int, const char*, const char*, size_t*);

inline tt__ObjectTree * soap_new_tt__ObjectTree(struct soap *soap, int n = -1) { return soap_instantiate_tt__ObjectTree(soap, n, NULL, NULL, NULL); }

inline tt__ObjectTree * soap_new_req_tt__ObjectTree(struct soap *soap) { tt__ObjectTree *_p = soap_instantiate_tt__ObjectTree(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ObjectTree * soap_new_set_tt__ObjectTree(struct soap *soap, std::vector<tt__Rename * >& Rename, std::vector<tt__Split * >& Split, std::vector<tt__Merge * >& Merge, std::vector<tt__ObjectId * >& Delete, tt__ObjectTreeExtension *Extension) { tt__ObjectTree *_p = soap_instantiate_tt__ObjectTree(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ObjectTree::Rename = Rename; _p->tt__ObjectTree::Split = Split; _p->tt__ObjectTree::Merge = Merge; _p->tt__ObjectTree::Delete = Delete; _p->tt__ObjectTree::Extension = Extension; } return _p; }

inline void soap_delete_tt__ObjectTree(struct soap *soap, tt__ObjectTree *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ObjectTree(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__BehaviourExtension
#define SOAP_TYPE_tt__BehaviourExtension (582)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__BehaviourExtension(struct soap*, const char*, int, const tt__BehaviourExtension *, const char*);
SOAP_FMAC3 tt__BehaviourExtension * SOAP_FMAC4 soap_in_tt__BehaviourExtension(struct soap*, const char*, tt__BehaviourExtension *, const char*);

#ifndef soap_write_tt__BehaviourExtension
#define soap_write_tt__BehaviourExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:BehaviourExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__BehaviourExtension * SOAP_FMAC4 soap_get_tt__BehaviourExtension(struct soap*, tt__BehaviourExtension *, const char*, const char*);

#ifndef soap_read_tt__BehaviourExtension
#define soap_read_tt__BehaviourExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__BehaviourExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__BehaviourExtension * SOAP_FMAC2 soap_instantiate_tt__BehaviourExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__BehaviourExtension * soap_new_tt__BehaviourExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__BehaviourExtension(soap, n, NULL, NULL, NULL); }

inline tt__BehaviourExtension * soap_new_req_tt__BehaviourExtension(struct soap *soap) { tt__BehaviourExtension *_p = soap_instantiate_tt__BehaviourExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__BehaviourExtension * soap_new_set_tt__BehaviourExtension(struct soap *soap) { tt__BehaviourExtension *_p = soap_instantiate_tt__BehaviourExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__BehaviourExtension(struct soap *soap, tt__BehaviourExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__BehaviourExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Behaviour
#define SOAP_TYPE_tt__Behaviour (581)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Behaviour(struct soap*, const char*, int, const tt__Behaviour *, const char*);
SOAP_FMAC3 tt__Behaviour * SOAP_FMAC4 soap_in_tt__Behaviour(struct soap*, const char*, tt__Behaviour *, const char*);

#ifndef soap_write_tt__Behaviour
#define soap_write_tt__Behaviour(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Behaviour", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Behaviour * SOAP_FMAC4 soap_get_tt__Behaviour(struct soap*, tt__Behaviour *, const char*, const char*);

#ifndef soap_read_tt__Behaviour
#define soap_read_tt__Behaviour(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Behaviour(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Behaviour * SOAP_FMAC2 soap_instantiate_tt__Behaviour(struct soap*, int, const char*, const char*, size_t*);

inline tt__Behaviour * soap_new_tt__Behaviour(struct soap *soap, int n = -1) { return soap_instantiate_tt__Behaviour(soap, n, NULL, NULL, NULL); }

inline tt__Behaviour * soap_new_req_tt__Behaviour(struct soap *soap) { tt__Behaviour *_p = soap_instantiate_tt__Behaviour(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__Behaviour * soap_new_set_tt__Behaviour(struct soap *soap, _tt__Behaviour_Removed *Removed, _tt__Behaviour_Idle *Idle, tt__BehaviourExtension *Extension) { tt__Behaviour *_p = soap_instantiate_tt__Behaviour(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Behaviour::Removed = Removed; _p->tt__Behaviour::Idle = Idle; _p->tt__Behaviour::Extension = Extension; } return _p; }

inline void soap_delete_tt__Behaviour(struct soap *soap, tt__Behaviour *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Behaviour(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ObjectId
#define SOAP_TYPE_tt__ObjectId (580)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ObjectId(struct soap*, const char*, int, const tt__ObjectId *, const char*);
SOAP_FMAC3 tt__ObjectId * SOAP_FMAC4 soap_in_tt__ObjectId(struct soap*, const char*, tt__ObjectId *, const char*);

#ifndef soap_write_tt__ObjectId
#define soap_write_tt__ObjectId(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ObjectId", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ObjectId * SOAP_FMAC4 soap_get_tt__ObjectId(struct soap*, tt__ObjectId *, const char*, const char*);

#ifndef soap_read_tt__ObjectId
#define soap_read_tt__ObjectId(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ObjectId(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ObjectId * SOAP_FMAC2 soap_instantiate_tt__ObjectId(struct soap*, int, const char*, const char*, size_t*);

inline tt__ObjectId * soap_new_tt__ObjectId(struct soap *soap, int n = -1) { return soap_instantiate_tt__ObjectId(soap, n, NULL, NULL, NULL); }

inline tt__ObjectId * soap_new_req_tt__ObjectId(struct soap *soap) { tt__ObjectId *_p = soap_instantiate_tt__ObjectId(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ObjectId * soap_new_set_tt__ObjectId(struct soap *soap, std::string *ObjectId) { tt__ObjectId *_p = soap_instantiate_tt__ObjectId(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ObjectId::ObjectId = ObjectId; } return _p; }

inline void soap_delete_tt__ObjectId(struct soap *soap, tt__ObjectId *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ObjectId(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Rename
#define SOAP_TYPE_tt__Rename (579)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Rename(struct soap*, const char*, int, const tt__Rename *, const char*);
SOAP_FMAC3 tt__Rename * SOAP_FMAC4 soap_in_tt__Rename(struct soap*, const char*, tt__Rename *, const char*);

#ifndef soap_write_tt__Rename
#define soap_write_tt__Rename(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Rename", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Rename * SOAP_FMAC4 soap_get_tt__Rename(struct soap*, tt__Rename *, const char*, const char*);

#ifndef soap_read_tt__Rename
#define soap_read_tt__Rename(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Rename(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Rename * SOAP_FMAC2 soap_instantiate_tt__Rename(struct soap*, int, const char*, const char*, size_t*);

inline tt__Rename * soap_new_tt__Rename(struct soap *soap, int n = -1) { return soap_instantiate_tt__Rename(soap, n, NULL, NULL, NULL); }

inline tt__Rename * soap_new_req_tt__Rename(struct soap *soap, tt__ObjectId *from, tt__ObjectId *to) { tt__Rename *_p = soap_instantiate_tt__Rename(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Rename::from = from; _p->tt__Rename::to = to; } return _p; }

inline tt__Rename * soap_new_set_tt__Rename(struct soap *soap, tt__ObjectId *from, tt__ObjectId *to) { tt__Rename *_p = soap_instantiate_tt__Rename(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Rename::from = from; _p->tt__Rename::to = to; } return _p; }

inline void soap_delete_tt__Rename(struct soap *soap, tt__Rename *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Rename(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Split
#define SOAP_TYPE_tt__Split (578)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Split(struct soap*, const char*, int, const tt__Split *, const char*);
SOAP_FMAC3 tt__Split * SOAP_FMAC4 soap_in_tt__Split(struct soap*, const char*, tt__Split *, const char*);

#ifndef soap_write_tt__Split
#define soap_write_tt__Split(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Split", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Split * SOAP_FMAC4 soap_get_tt__Split(struct soap*, tt__Split *, const char*, const char*);

#ifndef soap_read_tt__Split
#define soap_read_tt__Split(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Split(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Split * SOAP_FMAC2 soap_instantiate_tt__Split(struct soap*, int, const char*, const char*, size_t*);

inline tt__Split * soap_new_tt__Split(struct soap *soap, int n = -1) { return soap_instantiate_tt__Split(soap, n, NULL, NULL, NULL); }

inline tt__Split * soap_new_req_tt__Split(struct soap *soap, tt__ObjectId *from, std::vector<tt__ObjectId * >& to) { tt__Split *_p = soap_instantiate_tt__Split(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Split::from = from; _p->tt__Split::to = to; } return _p; }

inline tt__Split * soap_new_set_tt__Split(struct soap *soap, tt__ObjectId *from, std::vector<tt__ObjectId * >& to) { tt__Split *_p = soap_instantiate_tt__Split(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Split::from = from; _p->tt__Split::to = to; } return _p; }

inline void soap_delete_tt__Split(struct soap *soap, tt__Split *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Split(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Merge
#define SOAP_TYPE_tt__Merge (577)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Merge(struct soap*, const char*, int, const tt__Merge *, const char*);
SOAP_FMAC3 tt__Merge * SOAP_FMAC4 soap_in_tt__Merge(struct soap*, const char*, tt__Merge *, const char*);

#ifndef soap_write_tt__Merge
#define soap_write_tt__Merge(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Merge", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Merge * SOAP_FMAC4 soap_get_tt__Merge(struct soap*, tt__Merge *, const char*, const char*);

#ifndef soap_read_tt__Merge
#define soap_read_tt__Merge(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Merge(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Merge * SOAP_FMAC2 soap_instantiate_tt__Merge(struct soap*, int, const char*, const char*, size_t*);

inline tt__Merge * soap_new_tt__Merge(struct soap *soap, int n = -1) { return soap_instantiate_tt__Merge(soap, n, NULL, NULL, NULL); }

inline tt__Merge * soap_new_req_tt__Merge(struct soap *soap, std::vector<tt__ObjectId * >& from, tt__ObjectId *to) { tt__Merge *_p = soap_instantiate_tt__Merge(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Merge::from = from; _p->tt__Merge::to = to; } return _p; }

inline tt__Merge * soap_new_set_tt__Merge(struct soap *soap, std::vector<tt__ObjectId * >& from, tt__ObjectId *to) { tt__Merge *_p = soap_instantiate_tt__Merge(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Merge::from = from; _p->tt__Merge::to = to; } return _p; }

inline void soap_delete_tt__Merge(struct soap *soap, tt__Merge *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Merge(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__FrameExtension2
#define SOAP_TYPE_tt__FrameExtension2 (576)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FrameExtension2(struct soap*, const char*, int, const tt__FrameExtension2 *, const char*);
SOAP_FMAC3 tt__FrameExtension2 * SOAP_FMAC4 soap_in_tt__FrameExtension2(struct soap*, const char*, tt__FrameExtension2 *, const char*);

#ifndef soap_write_tt__FrameExtension2
#define soap_write_tt__FrameExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:FrameExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FrameExtension2 * SOAP_FMAC4 soap_get_tt__FrameExtension2(struct soap*, tt__FrameExtension2 *, const char*, const char*);

#ifndef soap_read_tt__FrameExtension2
#define soap_read_tt__FrameExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__FrameExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__FrameExtension2 * SOAP_FMAC2 soap_instantiate_tt__FrameExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__FrameExtension2 * soap_new_tt__FrameExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__FrameExtension2(soap, n, NULL, NULL, NULL); }

inline tt__FrameExtension2 * soap_new_req_tt__FrameExtension2(struct soap *soap) { tt__FrameExtension2 *_p = soap_instantiate_tt__FrameExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__FrameExtension2 * soap_new_set_tt__FrameExtension2(struct soap *soap) { tt__FrameExtension2 *_p = soap_instantiate_tt__FrameExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__FrameExtension2(struct soap *soap, tt__FrameExtension2 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__FrameExtension2(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__FrameExtension
#define SOAP_TYPE_tt__FrameExtension (575)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FrameExtension(struct soap*, const char*, int, const tt__FrameExtension *, const char*);
SOAP_FMAC3 tt__FrameExtension * SOAP_FMAC4 soap_in_tt__FrameExtension(struct soap*, const char*, tt__FrameExtension *, const char*);

#ifndef soap_write_tt__FrameExtension
#define soap_write_tt__FrameExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:FrameExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FrameExtension * SOAP_FMAC4 soap_get_tt__FrameExtension(struct soap*, tt__FrameExtension *, const char*, const char*);

#ifndef soap_read_tt__FrameExtension
#define soap_read_tt__FrameExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__FrameExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__FrameExtension * SOAP_FMAC2 soap_instantiate_tt__FrameExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__FrameExtension * soap_new_tt__FrameExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__FrameExtension(soap, n, NULL, NULL, NULL); }

inline tt__FrameExtension * soap_new_req_tt__FrameExtension(struct soap *soap) { tt__FrameExtension *_p = soap_instantiate_tt__FrameExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__FrameExtension * soap_new_set_tt__FrameExtension(struct soap *soap, tt__MotionInCells *MotionInCells, tt__FrameExtension2 *Extension) { tt__FrameExtension *_p = soap_instantiate_tt__FrameExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FrameExtension::MotionInCells = MotionInCells; _p->tt__FrameExtension::Extension = Extension; } return _p; }

inline void soap_delete_tt__FrameExtension(struct soap *soap, tt__FrameExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__FrameExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Frame
#define SOAP_TYPE_tt__Frame (574)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Frame(struct soap*, const char*, int, const tt__Frame *, const char*);
SOAP_FMAC3 tt__Frame * SOAP_FMAC4 soap_in_tt__Frame(struct soap*, const char*, tt__Frame *, const char*);

#ifndef soap_write_tt__Frame
#define soap_write_tt__Frame(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Frame", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Frame * SOAP_FMAC4 soap_get_tt__Frame(struct soap*, tt__Frame *, const char*, const char*);

#ifndef soap_read_tt__Frame
#define soap_read_tt__Frame(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Frame(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Frame * SOAP_FMAC2 soap_instantiate_tt__Frame(struct soap*, int, const char*, const char*, size_t*);

inline tt__Frame * soap_new_tt__Frame(struct soap *soap, int n = -1) { return soap_instantiate_tt__Frame(soap, n, NULL, NULL, NULL); }

inline tt__Frame * soap_new_req_tt__Frame(struct soap *soap, time_t UtcTime) { tt__Frame *_p = soap_instantiate_tt__Frame(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Frame::UtcTime = UtcTime; } return _p; }

inline tt__Frame * soap_new_set_tt__Frame(struct soap *soap, tt__PTZStatus *PTZStatus, tt__Transformation *Transformation, std::vector<tt__Object * >& Object, tt__ObjectTree *ObjectTree, tt__FrameExtension *Extension, time_t UtcTime) { tt__Frame *_p = soap_instantiate_tt__Frame(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Frame::PTZStatus = PTZStatus; _p->tt__Frame::Transformation = Transformation; _p->tt__Frame::Object = Object; _p->tt__Frame::ObjectTree = ObjectTree; _p->tt__Frame::Extension = Extension; _p->tt__Frame::UtcTime = UtcTime; } return _p; }

inline void soap_delete_tt__Frame(struct soap *soap, tt__Frame *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Frame(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__TransformationExtension
#define SOAP_TYPE_tt__TransformationExtension (573)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__TransformationExtension(struct soap*, const char*, int, const tt__TransformationExtension *, const char*);
SOAP_FMAC3 tt__TransformationExtension * SOAP_FMAC4 soap_in_tt__TransformationExtension(struct soap*, const char*, tt__TransformationExtension *, const char*);

#ifndef soap_write_tt__TransformationExtension
#define soap_write_tt__TransformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:TransformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TransformationExtension * SOAP_FMAC4 soap_get_tt__TransformationExtension(struct soap*, tt__TransformationExtension *, const char*, const char*);

#ifndef soap_read_tt__TransformationExtension
#define soap_read_tt__TransformationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__TransformationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__TransformationExtension * SOAP_FMAC2 soap_instantiate_tt__TransformationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__TransformationExtension * soap_new_tt__TransformationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__TransformationExtension(soap, n, NULL, NULL, NULL); }

inline tt__TransformationExtension * soap_new_req_tt__TransformationExtension(struct soap *soap) { tt__TransformationExtension *_p = soap_instantiate_tt__TransformationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__TransformationExtension * soap_new_set_tt__TransformationExtension(struct soap *soap) { tt__TransformationExtension *_p = soap_instantiate_tt__TransformationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__TransformationExtension(struct soap *soap, tt__TransformationExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__TransformationExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Transformation
#define SOAP_TYPE_tt__Transformation (572)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Transformation(struct soap*, const char*, int, const tt__Transformation *, const char*);
SOAP_FMAC3 tt__Transformation * SOAP_FMAC4 soap_in_tt__Transformation(struct soap*, const char*, tt__Transformation *, const char*);

#ifndef soap_write_tt__Transformation
#define soap_write_tt__Transformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Transformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Transformation * SOAP_FMAC4 soap_get_tt__Transformation(struct soap*, tt__Transformation *, const char*, const char*);

#ifndef soap_read_tt__Transformation
#define soap_read_tt__Transformation(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Transformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Transformation * SOAP_FMAC2 soap_instantiate_tt__Transformation(struct soap*, int, const char*, const char*, size_t*);

inline tt__Transformation * soap_new_tt__Transformation(struct soap *soap, int n = -1) { return soap_instantiate_tt__Transformation(soap, n, NULL, NULL, NULL); }

inline tt__Transformation * soap_new_req_tt__Transformation(struct soap *soap) { tt__Transformation *_p = soap_instantiate_tt__Transformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__Transformation * soap_new_set_tt__Transformation(struct soap *soap, tt__Vector *Translate, tt__Vector *Scale, tt__TransformationExtension *Extension) { tt__Transformation *_p = soap_instantiate_tt__Transformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Transformation::Translate = Translate; _p->tt__Transformation::Scale = Scale; _p->tt__Transformation::Extension = Extension; } return _p; }

inline void soap_delete_tt__Transformation(struct soap *soap, tt__Transformation *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Transformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ObjectExtension
#define SOAP_TYPE_tt__ObjectExtension (571)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ObjectExtension(struct soap*, const char*, int, const tt__ObjectExtension *, const char*);
SOAP_FMAC3 tt__ObjectExtension * SOAP_FMAC4 soap_in_tt__ObjectExtension(struct soap*, const char*, tt__ObjectExtension *, const char*);

#ifndef soap_write_tt__ObjectExtension
#define soap_write_tt__ObjectExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ObjectExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ObjectExtension * SOAP_FMAC4 soap_get_tt__ObjectExtension(struct soap*, tt__ObjectExtension *, const char*, const char*);

#ifndef soap_read_tt__ObjectExtension
#define soap_read_tt__ObjectExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ObjectExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ObjectExtension * SOAP_FMAC2 soap_instantiate_tt__ObjectExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ObjectExtension * soap_new_tt__ObjectExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ObjectExtension(soap, n, NULL, NULL, NULL); }

inline tt__ObjectExtension * soap_new_req_tt__ObjectExtension(struct soap *soap) { tt__ObjectExtension *_p = soap_instantiate_tt__ObjectExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ObjectExtension * soap_new_set_tt__ObjectExtension(struct soap *soap) { tt__ObjectExtension *_p = soap_instantiate_tt__ObjectExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__ObjectExtension(struct soap *soap, tt__ObjectExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ObjectExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Object
#define SOAP_TYPE_tt__Object (570)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Object(struct soap*, const char*, int, const tt__Object *, const char*);
SOAP_FMAC3 tt__Object * SOAP_FMAC4 soap_in_tt__Object(struct soap*, const char*, tt__Object *, const char*);

#ifndef soap_write_tt__Object
#define soap_write_tt__Object(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Object", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Object * SOAP_FMAC4 soap_get_tt__Object(struct soap*, tt__Object *, const char*, const char*);

#ifndef soap_read_tt__Object
#define soap_read_tt__Object(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Object(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Object * SOAP_FMAC2 soap_instantiate_tt__Object(struct soap*, int, const char*, const char*, size_t*);

inline tt__Object * soap_new_tt__Object(struct soap *soap, int n = -1) { return soap_instantiate_tt__Object(soap, n, NULL, NULL, NULL); }

inline tt__Object * soap_new_req_tt__Object(struct soap *soap) { tt__Object *_p = soap_instantiate_tt__Object(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__Object * soap_new_set_tt__Object(struct soap *soap, tt__Appearance *Appearance, tt__Behaviour *Behaviour, tt__ObjectExtension *Extension, std::string *ObjectId1) { tt__Object *_p = soap_instantiate_tt__Object(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Object::Appearance = Appearance; _p->tt__Object::Behaviour = Behaviour; _p->tt__Object::Extension = Extension; _p->tt__ObjectId::ObjectId = ObjectId1; } return _p; }

inline void soap_delete_tt__Object(struct soap *soap, tt__Object *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Object(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__OtherType
#define SOAP_TYPE_tt__OtherType (569)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OtherType(struct soap*, const char*, int, const tt__OtherType *, const char*);
SOAP_FMAC3 tt__OtherType * SOAP_FMAC4 soap_in_tt__OtherType(struct soap*, const char*, tt__OtherType *, const char*);

#ifndef soap_write_tt__OtherType
#define soap_write_tt__OtherType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:OtherType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OtherType * SOAP_FMAC4 soap_get_tt__OtherType(struct soap*, tt__OtherType *, const char*, const char*);

#ifndef soap_read_tt__OtherType
#define soap_read_tt__OtherType(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__OtherType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__OtherType * SOAP_FMAC2 soap_instantiate_tt__OtherType(struct soap*, int, const char*, const char*, size_t*);

inline tt__OtherType * soap_new_tt__OtherType(struct soap *soap, int n = -1) { return soap_instantiate_tt__OtherType(soap, n, NULL, NULL, NULL); }

inline tt__OtherType * soap_new_req_tt__OtherType(struct soap *soap, std::string& Type, float Likelihood) { tt__OtherType *_p = soap_instantiate_tt__OtherType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__OtherType::Type = Type; _p->tt__OtherType::Likelihood = Likelihood; } return _p; }

inline tt__OtherType * soap_new_set_tt__OtherType(struct soap *soap, std::string& Type, float Likelihood) { tt__OtherType *_p = soap_instantiate_tt__OtherType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__OtherType::Type = Type; _p->tt__OtherType::Likelihood = Likelihood; } return _p; }

inline void soap_delete_tt__OtherType(struct soap *soap, tt__OtherType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__OtherType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ClassDescriptorExtension2
#define SOAP_TYPE_tt__ClassDescriptorExtension2 (568)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ClassDescriptorExtension2(struct soap*, const char*, int, const tt__ClassDescriptorExtension2 *, const char*);
SOAP_FMAC3 tt__ClassDescriptorExtension2 * SOAP_FMAC4 soap_in_tt__ClassDescriptorExtension2(struct soap*, const char*, tt__ClassDescriptorExtension2 *, const char*);

#ifndef soap_write_tt__ClassDescriptorExtension2
#define soap_write_tt__ClassDescriptorExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ClassDescriptorExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ClassDescriptorExtension2 * SOAP_FMAC4 soap_get_tt__ClassDescriptorExtension2(struct soap*, tt__ClassDescriptorExtension2 *, const char*, const char*);

#ifndef soap_read_tt__ClassDescriptorExtension2
#define soap_read_tt__ClassDescriptorExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ClassDescriptorExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ClassDescriptorExtension2 * SOAP_FMAC2 soap_instantiate_tt__ClassDescriptorExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__ClassDescriptorExtension2 * soap_new_tt__ClassDescriptorExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__ClassDescriptorExtension2(soap, n, NULL, NULL, NULL); }

inline tt__ClassDescriptorExtension2 * soap_new_req_tt__ClassDescriptorExtension2(struct soap *soap) { tt__ClassDescriptorExtension2 *_p = soap_instantiate_tt__ClassDescriptorExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ClassDescriptorExtension2 * soap_new_set_tt__ClassDescriptorExtension2(struct soap *soap) { tt__ClassDescriptorExtension2 *_p = soap_instantiate_tt__ClassDescriptorExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__ClassDescriptorExtension2(struct soap *soap, tt__ClassDescriptorExtension2 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ClassDescriptorExtension2(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ClassDescriptorExtension
#define SOAP_TYPE_tt__ClassDescriptorExtension (567)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ClassDescriptorExtension(struct soap*, const char*, int, const tt__ClassDescriptorExtension *, const char*);
SOAP_FMAC3 tt__ClassDescriptorExtension * SOAP_FMAC4 soap_in_tt__ClassDescriptorExtension(struct soap*, const char*, tt__ClassDescriptorExtension *, const char*);

#ifndef soap_write_tt__ClassDescriptorExtension
#define soap_write_tt__ClassDescriptorExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ClassDescriptorExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ClassDescriptorExtension * SOAP_FMAC4 soap_get_tt__ClassDescriptorExtension(struct soap*, tt__ClassDescriptorExtension *, const char*, const char*);

#ifndef soap_read_tt__ClassDescriptorExtension
#define soap_read_tt__ClassDescriptorExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ClassDescriptorExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ClassDescriptorExtension * SOAP_FMAC2 soap_instantiate_tt__ClassDescriptorExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ClassDescriptorExtension * soap_new_tt__ClassDescriptorExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ClassDescriptorExtension(soap, n, NULL, NULL, NULL); }

inline tt__ClassDescriptorExtension * soap_new_req_tt__ClassDescriptorExtension(struct soap *soap, std::vector<tt__OtherType * >& OtherTypes) { tt__ClassDescriptorExtension *_p = soap_instantiate_tt__ClassDescriptorExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ClassDescriptorExtension::OtherTypes = OtherTypes; } return _p; }

inline tt__ClassDescriptorExtension * soap_new_set_tt__ClassDescriptorExtension(struct soap *soap, std::vector<tt__OtherType * >& OtherTypes, tt__ClassDescriptorExtension2 *Extension) { tt__ClassDescriptorExtension *_p = soap_instantiate_tt__ClassDescriptorExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ClassDescriptorExtension::OtherTypes = OtherTypes; _p->tt__ClassDescriptorExtension::Extension = Extension; } return _p; }

inline void soap_delete_tt__ClassDescriptorExtension(struct soap *soap, tt__ClassDescriptorExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ClassDescriptorExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ClassDescriptor
#define SOAP_TYPE_tt__ClassDescriptor (566)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ClassDescriptor(struct soap*, const char*, int, const tt__ClassDescriptor *, const char*);
SOAP_FMAC3 tt__ClassDescriptor * SOAP_FMAC4 soap_in_tt__ClassDescriptor(struct soap*, const char*, tt__ClassDescriptor *, const char*);

#ifndef soap_write_tt__ClassDescriptor
#define soap_write_tt__ClassDescriptor(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ClassDescriptor", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ClassDescriptor * SOAP_FMAC4 soap_get_tt__ClassDescriptor(struct soap*, tt__ClassDescriptor *, const char*, const char*);

#ifndef soap_read_tt__ClassDescriptor
#define soap_read_tt__ClassDescriptor(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ClassDescriptor(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ClassDescriptor * SOAP_FMAC2 soap_instantiate_tt__ClassDescriptor(struct soap*, int, const char*, const char*, size_t*);

inline tt__ClassDescriptor * soap_new_tt__ClassDescriptor(struct soap *soap, int n = -1) { return soap_instantiate_tt__ClassDescriptor(soap, n, NULL, NULL, NULL); }

inline tt__ClassDescriptor * soap_new_req_tt__ClassDescriptor(struct soap *soap) { tt__ClassDescriptor *_p = soap_instantiate_tt__ClassDescriptor(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ClassDescriptor * soap_new_set_tt__ClassDescriptor(struct soap *soap, std::vector<_tt__ClassDescriptor_ClassCandidate >*ClassCandidate, tt__ClassDescriptorExtension *Extension) { tt__ClassDescriptor *_p = soap_instantiate_tt__ClassDescriptor(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ClassDescriptor::ClassCandidate = ClassCandidate; _p->tt__ClassDescriptor::Extension = Extension; } return _p; }

inline void soap_delete_tt__ClassDescriptor(struct soap *soap, tt__ClassDescriptor *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ClassDescriptor(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ColorDescriptorExtension
#define SOAP_TYPE_tt__ColorDescriptorExtension (565)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ColorDescriptorExtension(struct soap*, const char*, int, const tt__ColorDescriptorExtension *, const char*);
SOAP_FMAC3 tt__ColorDescriptorExtension * SOAP_FMAC4 soap_in_tt__ColorDescriptorExtension(struct soap*, const char*, tt__ColorDescriptorExtension *, const char*);

#ifndef soap_write_tt__ColorDescriptorExtension
#define soap_write_tt__ColorDescriptorExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ColorDescriptorExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ColorDescriptorExtension * SOAP_FMAC4 soap_get_tt__ColorDescriptorExtension(struct soap*, tt__ColorDescriptorExtension *, const char*, const char*);

#ifndef soap_read_tt__ColorDescriptorExtension
#define soap_read_tt__ColorDescriptorExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ColorDescriptorExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ColorDescriptorExtension * SOAP_FMAC2 soap_instantiate_tt__ColorDescriptorExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ColorDescriptorExtension * soap_new_tt__ColorDescriptorExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ColorDescriptorExtension(soap, n, NULL, NULL, NULL); }

inline tt__ColorDescriptorExtension * soap_new_req_tt__ColorDescriptorExtension(struct soap *soap) { tt__ColorDescriptorExtension *_p = soap_instantiate_tt__ColorDescriptorExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ColorDescriptorExtension * soap_new_set_tt__ColorDescriptorExtension(struct soap *soap) { tt__ColorDescriptorExtension *_p = soap_instantiate_tt__ColorDescriptorExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__ColorDescriptorExtension(struct soap *soap, tt__ColorDescriptorExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ColorDescriptorExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ColorDescriptor
#define SOAP_TYPE_tt__ColorDescriptor (564)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ColorDescriptor(struct soap*, const char*, int, const tt__ColorDescriptor *, const char*);
SOAP_FMAC3 tt__ColorDescriptor * SOAP_FMAC4 soap_in_tt__ColorDescriptor(struct soap*, const char*, tt__ColorDescriptor *, const char*);

#ifndef soap_write_tt__ColorDescriptor
#define soap_write_tt__ColorDescriptor(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ColorDescriptor", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ColorDescriptor * SOAP_FMAC4 soap_get_tt__ColorDescriptor(struct soap*, tt__ColorDescriptor *, const char*, const char*);

#ifndef soap_read_tt__ColorDescriptor
#define soap_read_tt__ColorDescriptor(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ColorDescriptor(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ColorDescriptor * SOAP_FMAC2 soap_instantiate_tt__ColorDescriptor(struct soap*, int, const char*, const char*, size_t*);

inline tt__ColorDescriptor * soap_new_tt__ColorDescriptor(struct soap *soap, int n = -1) { return soap_instantiate_tt__ColorDescriptor(soap, n, NULL, NULL, NULL); }

inline tt__ColorDescriptor * soap_new_req_tt__ColorDescriptor(struct soap *soap) { tt__ColorDescriptor *_p = soap_instantiate_tt__ColorDescriptor(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ColorDescriptor * soap_new_set_tt__ColorDescriptor(struct soap *soap, std::vector<_tt__ColorDescriptor_ColorCluster >*ColorCluster, tt__ColorDescriptorExtension *Extension) { tt__ColorDescriptor *_p = soap_instantiate_tt__ColorDescriptor(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ColorDescriptor::ColorCluster = ColorCluster; _p->tt__ColorDescriptor::Extension = Extension; } return _p; }

inline void soap_delete_tt__ColorDescriptor(struct soap *soap, tt__ColorDescriptor *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ColorDescriptor(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ShapeDescriptorExtension
#define SOAP_TYPE_tt__ShapeDescriptorExtension (563)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ShapeDescriptorExtension(struct soap*, const char*, int, const tt__ShapeDescriptorExtension *, const char*);
SOAP_FMAC3 tt__ShapeDescriptorExtension * SOAP_FMAC4 soap_in_tt__ShapeDescriptorExtension(struct soap*, const char*, tt__ShapeDescriptorExtension *, const char*);

#ifndef soap_write_tt__ShapeDescriptorExtension
#define soap_write_tt__ShapeDescriptorExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ShapeDescriptorExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ShapeDescriptorExtension * SOAP_FMAC4 soap_get_tt__ShapeDescriptorExtension(struct soap*, tt__ShapeDescriptorExtension *, const char*, const char*);

#ifndef soap_read_tt__ShapeDescriptorExtension
#define soap_read_tt__ShapeDescriptorExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ShapeDescriptorExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ShapeDescriptorExtension * SOAP_FMAC2 soap_instantiate_tt__ShapeDescriptorExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ShapeDescriptorExtension * soap_new_tt__ShapeDescriptorExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ShapeDescriptorExtension(soap, n, NULL, NULL, NULL); }

inline tt__ShapeDescriptorExtension * soap_new_req_tt__ShapeDescriptorExtension(struct soap *soap) { tt__ShapeDescriptorExtension *_p = soap_instantiate_tt__ShapeDescriptorExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ShapeDescriptorExtension * soap_new_set_tt__ShapeDescriptorExtension(struct soap *soap) { tt__ShapeDescriptorExtension *_p = soap_instantiate_tt__ShapeDescriptorExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__ShapeDescriptorExtension(struct soap *soap, tt__ShapeDescriptorExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ShapeDescriptorExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ShapeDescriptor
#define SOAP_TYPE_tt__ShapeDescriptor (562)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ShapeDescriptor(struct soap*, const char*, int, const tt__ShapeDescriptor *, const char*);
SOAP_FMAC3 tt__ShapeDescriptor * SOAP_FMAC4 soap_in_tt__ShapeDescriptor(struct soap*, const char*, tt__ShapeDescriptor *, const char*);

#ifndef soap_write_tt__ShapeDescriptor
#define soap_write_tt__ShapeDescriptor(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ShapeDescriptor", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ShapeDescriptor * SOAP_FMAC4 soap_get_tt__ShapeDescriptor(struct soap*, tt__ShapeDescriptor *, const char*, const char*);

#ifndef soap_read_tt__ShapeDescriptor
#define soap_read_tt__ShapeDescriptor(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ShapeDescriptor(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ShapeDescriptor * SOAP_FMAC2 soap_instantiate_tt__ShapeDescriptor(struct soap*, int, const char*, const char*, size_t*);

inline tt__ShapeDescriptor * soap_new_tt__ShapeDescriptor(struct soap *soap, int n = -1) { return soap_instantiate_tt__ShapeDescriptor(soap, n, NULL, NULL, NULL); }

inline tt__ShapeDescriptor * soap_new_req_tt__ShapeDescriptor(struct soap *soap, tt__Rectangle *BoundingBox, tt__Vector *CenterOfGravity) { tt__ShapeDescriptor *_p = soap_instantiate_tt__ShapeDescriptor(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ShapeDescriptor::BoundingBox = BoundingBox; _p->tt__ShapeDescriptor::CenterOfGravity = CenterOfGravity; } return _p; }

inline tt__ShapeDescriptor * soap_new_set_tt__ShapeDescriptor(struct soap *soap, tt__Rectangle *BoundingBox, tt__Vector *CenterOfGravity, std::vector<tt__Polygon * >& Polygon, tt__ShapeDescriptorExtension *Extension) { tt__ShapeDescriptor *_p = soap_instantiate_tt__ShapeDescriptor(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ShapeDescriptor::BoundingBox = BoundingBox; _p->tt__ShapeDescriptor::CenterOfGravity = CenterOfGravity; _p->tt__ShapeDescriptor::Polygon = Polygon; _p->tt__ShapeDescriptor::Extension = Extension; } return _p; }

inline void soap_delete_tt__ShapeDescriptor(struct soap *soap, tt__ShapeDescriptor *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ShapeDescriptor(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AppearanceExtension
#define SOAP_TYPE_tt__AppearanceExtension (561)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AppearanceExtension(struct soap*, const char*, int, const tt__AppearanceExtension *, const char*);
SOAP_FMAC3 tt__AppearanceExtension * SOAP_FMAC4 soap_in_tt__AppearanceExtension(struct soap*, const char*, tt__AppearanceExtension *, const char*);

#ifndef soap_write_tt__AppearanceExtension
#define soap_write_tt__AppearanceExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AppearanceExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AppearanceExtension * SOAP_FMAC4 soap_get_tt__AppearanceExtension(struct soap*, tt__AppearanceExtension *, const char*, const char*);

#ifndef soap_read_tt__AppearanceExtension
#define soap_read_tt__AppearanceExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AppearanceExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AppearanceExtension * SOAP_FMAC2 soap_instantiate_tt__AppearanceExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__AppearanceExtension * soap_new_tt__AppearanceExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__AppearanceExtension(soap, n, NULL, NULL, NULL); }

inline tt__AppearanceExtension * soap_new_req_tt__AppearanceExtension(struct soap *soap) { tt__AppearanceExtension *_p = soap_instantiate_tt__AppearanceExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__AppearanceExtension * soap_new_set_tt__AppearanceExtension(struct soap *soap) { tt__AppearanceExtension *_p = soap_instantiate_tt__AppearanceExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__AppearanceExtension(struct soap *soap, tt__AppearanceExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AppearanceExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Appearance
#define SOAP_TYPE_tt__Appearance (560)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Appearance(struct soap*, const char*, int, const tt__Appearance *, const char*);
SOAP_FMAC3 tt__Appearance * SOAP_FMAC4 soap_in_tt__Appearance(struct soap*, const char*, tt__Appearance *, const char*);

#ifndef soap_write_tt__Appearance
#define soap_write_tt__Appearance(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Appearance", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Appearance * SOAP_FMAC4 soap_get_tt__Appearance(struct soap*, tt__Appearance *, const char*, const char*);

#ifndef soap_read_tt__Appearance
#define soap_read_tt__Appearance(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Appearance(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Appearance * SOAP_FMAC2 soap_instantiate_tt__Appearance(struct soap*, int, const char*, const char*, size_t*);

inline tt__Appearance * soap_new_tt__Appearance(struct soap *soap, int n = -1) { return soap_instantiate_tt__Appearance(soap, n, NULL, NULL, NULL); }

inline tt__Appearance * soap_new_req_tt__Appearance(struct soap *soap) { tt__Appearance *_p = soap_instantiate_tt__Appearance(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__Appearance * soap_new_set_tt__Appearance(struct soap *soap, tt__Transformation *Transformation, tt__ShapeDescriptor *Shape, tt__ColorDescriptor *Color, tt__ClassDescriptor *Class, tt__AppearanceExtension *Extension) { tt__Appearance *_p = soap_instantiate_tt__Appearance(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Appearance::Transformation = Transformation; _p->tt__Appearance::Shape = Shape; _p->tt__Appearance::Color = Color; _p->tt__Appearance::Class = Class; _p->tt__Appearance::Extension = Extension; } return _p; }

inline void soap_delete_tt__Appearance(struct soap *soap, tt__Appearance *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Appearance(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ColorCovariance
#define SOAP_TYPE_tt__ColorCovariance (559)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ColorCovariance(struct soap*, const char*, int, const tt__ColorCovariance *, const char*);
SOAP_FMAC3 tt__ColorCovariance * SOAP_FMAC4 soap_in_tt__ColorCovariance(struct soap*, const char*, tt__ColorCovariance *, const char*);

#ifndef soap_write_tt__ColorCovariance
#define soap_write_tt__ColorCovariance(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ColorCovariance", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ColorCovariance * SOAP_FMAC4 soap_get_tt__ColorCovariance(struct soap*, tt__ColorCovariance *, const char*, const char*);

#ifndef soap_read_tt__ColorCovariance
#define soap_read_tt__ColorCovariance(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ColorCovariance(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ColorCovariance * SOAP_FMAC2 soap_instantiate_tt__ColorCovariance(struct soap*, int, const char*, const char*, size_t*);

inline tt__ColorCovariance * soap_new_tt__ColorCovariance(struct soap *soap, int n = -1) { return soap_instantiate_tt__ColorCovariance(soap, n, NULL, NULL, NULL); }

inline tt__ColorCovariance * soap_new_req_tt__ColorCovariance(struct soap *soap, float XX, float YY, float ZZ) { tt__ColorCovariance *_p = soap_instantiate_tt__ColorCovariance(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ColorCovariance::XX = XX; _p->tt__ColorCovariance::YY = YY; _p->tt__ColorCovariance::ZZ = ZZ; } return _p; }

inline tt__ColorCovariance * soap_new_set_tt__ColorCovariance(struct soap *soap, float XX, float YY, float ZZ, float *XY, float *XZ, float *YZ, std::string *Colorspace) { tt__ColorCovariance *_p = soap_instantiate_tt__ColorCovariance(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ColorCovariance::XX = XX; _p->tt__ColorCovariance::YY = YY; _p->tt__ColorCovariance::ZZ = ZZ; _p->tt__ColorCovariance::XY = XY; _p->tt__ColorCovariance::XZ = XZ; _p->tt__ColorCovariance::YZ = YZ; _p->tt__ColorCovariance::Colorspace = Colorspace; } return _p; }

inline void soap_delete_tt__ColorCovariance(struct soap *soap, tt__ColorCovariance *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ColorCovariance(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Color
#define SOAP_TYPE_tt__Color (558)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Color(struct soap*, const char*, int, const tt__Color *, const char*);
SOAP_FMAC3 tt__Color * SOAP_FMAC4 soap_in_tt__Color(struct soap*, const char*, tt__Color *, const char*);

#ifndef soap_write_tt__Color
#define soap_write_tt__Color(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Color", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Color * SOAP_FMAC4 soap_get_tt__Color(struct soap*, tt__Color *, const char*, const char*);

#ifndef soap_read_tt__Color
#define soap_read_tt__Color(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Color(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Color * SOAP_FMAC2 soap_instantiate_tt__Color(struct soap*, int, const char*, const char*, size_t*);

inline tt__Color * soap_new_tt__Color(struct soap *soap, int n = -1) { return soap_instantiate_tt__Color(soap, n, NULL, NULL, NULL); }

inline tt__Color * soap_new_req_tt__Color(struct soap *soap, float X, float Y, float Z) { tt__Color *_p = soap_instantiate_tt__Color(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Color::X = X; _p->tt__Color::Y = Y; _p->tt__Color::Z = Z; } return _p; }

inline tt__Color * soap_new_set_tt__Color(struct soap *soap, float X, float Y, float Z, std::string *Colorspace) { tt__Color *_p = soap_instantiate_tt__Color(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Color::X = X; _p->tt__Color::Y = Y; _p->tt__Color::Z = Z; _p->tt__Color::Colorspace = Colorspace; } return _p; }

inline void soap_delete_tt__Color(struct soap *soap, tt__Color *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Color(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Polyline
#define SOAP_TYPE_tt__Polyline (557)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Polyline(struct soap*, const char*, int, const tt__Polyline *, const char*);
SOAP_FMAC3 tt__Polyline * SOAP_FMAC4 soap_in_tt__Polyline(struct soap*, const char*, tt__Polyline *, const char*);

#ifndef soap_write_tt__Polyline
#define soap_write_tt__Polyline(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Polyline", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Polyline * SOAP_FMAC4 soap_get_tt__Polyline(struct soap*, tt__Polyline *, const char*, const char*);

#ifndef soap_read_tt__Polyline
#define soap_read_tt__Polyline(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Polyline(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Polyline * SOAP_FMAC2 soap_instantiate_tt__Polyline(struct soap*, int, const char*, const char*, size_t*);

inline tt__Polyline * soap_new_tt__Polyline(struct soap *soap, int n = -1) { return soap_instantiate_tt__Polyline(soap, n, NULL, NULL, NULL); }

inline tt__Polyline * soap_new_req_tt__Polyline(struct soap *soap, std::vector<tt__Vector * >& Point) { tt__Polyline *_p = soap_instantiate_tt__Polyline(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Polyline::Point = Point; } return _p; }

inline tt__Polyline * soap_new_set_tt__Polyline(struct soap *soap, std::vector<tt__Vector * >& Point) { tt__Polyline *_p = soap_instantiate_tt__Polyline(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Polyline::Point = Point; } return _p; }

inline void soap_delete_tt__Polyline(struct soap *soap, tt__Polyline *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Polyline(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Polygon
#define SOAP_TYPE_tt__Polygon (556)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Polygon(struct soap*, const char*, int, const tt__Polygon *, const char*);
SOAP_FMAC3 tt__Polygon * SOAP_FMAC4 soap_in_tt__Polygon(struct soap*, const char*, tt__Polygon *, const char*);

#ifndef soap_write_tt__Polygon
#define soap_write_tt__Polygon(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Polygon", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Polygon * SOAP_FMAC4 soap_get_tt__Polygon(struct soap*, tt__Polygon *, const char*, const char*);

#ifndef soap_read_tt__Polygon
#define soap_read_tt__Polygon(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Polygon(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Polygon * SOAP_FMAC2 soap_instantiate_tt__Polygon(struct soap*, int, const char*, const char*, size_t*);

inline tt__Polygon * soap_new_tt__Polygon(struct soap *soap, int n = -1) { return soap_instantiate_tt__Polygon(soap, n, NULL, NULL, NULL); }

inline tt__Polygon * soap_new_req_tt__Polygon(struct soap *soap, std::vector<tt__Vector * >& Point) { tt__Polygon *_p = soap_instantiate_tt__Polygon(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Polygon::Point = Point; } return _p; }

inline tt__Polygon * soap_new_set_tt__Polygon(struct soap *soap, std::vector<tt__Vector * >& Point) { tt__Polygon *_p = soap_instantiate_tt__Polygon(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Polygon::Point = Point; } return _p; }

inline void soap_delete_tt__Polygon(struct soap *soap, tt__Polygon *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Polygon(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Rectangle
#define SOAP_TYPE_tt__Rectangle (555)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Rectangle(struct soap*, const char*, int, const tt__Rectangle *, const char*);
SOAP_FMAC3 tt__Rectangle * SOAP_FMAC4 soap_in_tt__Rectangle(struct soap*, const char*, tt__Rectangle *, const char*);

#ifndef soap_write_tt__Rectangle
#define soap_write_tt__Rectangle(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Rectangle", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Rectangle * SOAP_FMAC4 soap_get_tt__Rectangle(struct soap*, tt__Rectangle *, const char*, const char*);

#ifndef soap_read_tt__Rectangle
#define soap_read_tt__Rectangle(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Rectangle(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Rectangle * SOAP_FMAC2 soap_instantiate_tt__Rectangle(struct soap*, int, const char*, const char*, size_t*);

inline tt__Rectangle * soap_new_tt__Rectangle(struct soap *soap, int n = -1) { return soap_instantiate_tt__Rectangle(soap, n, NULL, NULL, NULL); }

inline tt__Rectangle * soap_new_req_tt__Rectangle(struct soap *soap) { tt__Rectangle *_p = soap_instantiate_tt__Rectangle(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__Rectangle * soap_new_set_tt__Rectangle(struct soap *soap, float *bottom, float *top, float *right, float *left) { tt__Rectangle *_p = soap_instantiate_tt__Rectangle(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Rectangle::bottom = bottom; _p->tt__Rectangle::top = top; _p->tt__Rectangle::right = right; _p->tt__Rectangle::left = left; } return _p; }

inline void soap_delete_tt__Rectangle(struct soap *soap, tt__Rectangle *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Rectangle(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Vector
#define SOAP_TYPE_tt__Vector (554)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Vector(struct soap*, const char*, int, const tt__Vector *, const char*);
SOAP_FMAC3 tt__Vector * SOAP_FMAC4 soap_in_tt__Vector(struct soap*, const char*, tt__Vector *, const char*);

#ifndef soap_write_tt__Vector
#define soap_write_tt__Vector(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Vector", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Vector * SOAP_FMAC4 soap_get_tt__Vector(struct soap*, tt__Vector *, const char*, const char*);

#ifndef soap_read_tt__Vector
#define soap_read_tt__Vector(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Vector(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Vector * SOAP_FMAC2 soap_instantiate_tt__Vector(struct soap*, int, const char*, const char*, size_t*);

inline tt__Vector * soap_new_tt__Vector(struct soap *soap, int n = -1) { return soap_instantiate_tt__Vector(soap, n, NULL, NULL, NULL); }

inline tt__Vector * soap_new_req_tt__Vector(struct soap *soap) { tt__Vector *_p = soap_instantiate_tt__Vector(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__Vector * soap_new_set_tt__Vector(struct soap *soap, float *x, float *y) { tt__Vector *_p = soap_instantiate_tt__Vector(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Vector::x = x; _p->tt__Vector::y = y; } return _p; }

inline void soap_delete_tt__Vector(struct soap *soap, tt__Vector *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Vector(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ItemListDescriptionExtension
#define SOAP_TYPE_tt__ItemListDescriptionExtension (553)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ItemListDescriptionExtension(struct soap*, const char*, int, const tt__ItemListDescriptionExtension *, const char*);
SOAP_FMAC3 tt__ItemListDescriptionExtension * SOAP_FMAC4 soap_in_tt__ItemListDescriptionExtension(struct soap*, const char*, tt__ItemListDescriptionExtension *, const char*);

#ifndef soap_write_tt__ItemListDescriptionExtension
#define soap_write_tt__ItemListDescriptionExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ItemListDescriptionExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ItemListDescriptionExtension * SOAP_FMAC4 soap_get_tt__ItemListDescriptionExtension(struct soap*, tt__ItemListDescriptionExtension *, const char*, const char*);

#ifndef soap_read_tt__ItemListDescriptionExtension
#define soap_read_tt__ItemListDescriptionExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ItemListDescriptionExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ItemListDescriptionExtension * SOAP_FMAC2 soap_instantiate_tt__ItemListDescriptionExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ItemListDescriptionExtension * soap_new_tt__ItemListDescriptionExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ItemListDescriptionExtension(soap, n, NULL, NULL, NULL); }

inline tt__ItemListDescriptionExtension * soap_new_req_tt__ItemListDescriptionExtension(struct soap *soap) { tt__ItemListDescriptionExtension *_p = soap_instantiate_tt__ItemListDescriptionExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ItemListDescriptionExtension * soap_new_set_tt__ItemListDescriptionExtension(struct soap *soap) { tt__ItemListDescriptionExtension *_p = soap_instantiate_tt__ItemListDescriptionExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__ItemListDescriptionExtension(struct soap *soap, tt__ItemListDescriptionExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ItemListDescriptionExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ItemListDescription
#define SOAP_TYPE_tt__ItemListDescription (552)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ItemListDescription(struct soap*, const char*, int, const tt__ItemListDescription *, const char*);
SOAP_FMAC3 tt__ItemListDescription * SOAP_FMAC4 soap_in_tt__ItemListDescription(struct soap*, const char*, tt__ItemListDescription *, const char*);

#ifndef soap_write_tt__ItemListDescription
#define soap_write_tt__ItemListDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ItemListDescription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ItemListDescription * SOAP_FMAC4 soap_get_tt__ItemListDescription(struct soap*, tt__ItemListDescription *, const char*, const char*);

#ifndef soap_read_tt__ItemListDescription
#define soap_read_tt__ItemListDescription(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ItemListDescription(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ItemListDescription * SOAP_FMAC2 soap_instantiate_tt__ItemListDescription(struct soap*, int, const char*, const char*, size_t*);

inline tt__ItemListDescription * soap_new_tt__ItemListDescription(struct soap *soap, int n = -1) { return soap_instantiate_tt__ItemListDescription(soap, n, NULL, NULL, NULL); }

inline tt__ItemListDescription * soap_new_req_tt__ItemListDescription(struct soap *soap) { tt__ItemListDescription *_p = soap_instantiate_tt__ItemListDescription(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ItemListDescription * soap_new_set_tt__ItemListDescription(struct soap *soap, std::vector<_tt__ItemListDescription_SimpleItemDescription >*SimpleItemDescription, std::vector<_tt__ItemListDescription_ElementItemDescription >*ElementItemDescription, tt__ItemListDescriptionExtension *Extension) { tt__ItemListDescription *_p = soap_instantiate_tt__ItemListDescription(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ItemListDescription::SimpleItemDescription = SimpleItemDescription; _p->tt__ItemListDescription::ElementItemDescription = ElementItemDescription; _p->tt__ItemListDescription::Extension = Extension; } return _p; }

inline void soap_delete_tt__ItemListDescription(struct soap *soap, tt__ItemListDescription *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ItemListDescription(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__MessageDescriptionExtension
#define SOAP_TYPE_tt__MessageDescriptionExtension (551)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MessageDescriptionExtension(struct soap*, const char*, int, const tt__MessageDescriptionExtension *, const char*);
SOAP_FMAC3 tt__MessageDescriptionExtension * SOAP_FMAC4 soap_in_tt__MessageDescriptionExtension(struct soap*, const char*, tt__MessageDescriptionExtension *, const char*);

#ifndef soap_write_tt__MessageDescriptionExtension
#define soap_write_tt__MessageDescriptionExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:MessageDescriptionExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MessageDescriptionExtension * SOAP_FMAC4 soap_get_tt__MessageDescriptionExtension(struct soap*, tt__MessageDescriptionExtension *, const char*, const char*);

#ifndef soap_read_tt__MessageDescriptionExtension
#define soap_read_tt__MessageDescriptionExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__MessageDescriptionExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__MessageDescriptionExtension * SOAP_FMAC2 soap_instantiate_tt__MessageDescriptionExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__MessageDescriptionExtension * soap_new_tt__MessageDescriptionExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__MessageDescriptionExtension(soap, n, NULL, NULL, NULL); }

inline tt__MessageDescriptionExtension * soap_new_req_tt__MessageDescriptionExtension(struct soap *soap) { tt__MessageDescriptionExtension *_p = soap_instantiate_tt__MessageDescriptionExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__MessageDescriptionExtension * soap_new_set_tt__MessageDescriptionExtension(struct soap *soap) { tt__MessageDescriptionExtension *_p = soap_instantiate_tt__MessageDescriptionExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__MessageDescriptionExtension(struct soap *soap, tt__MessageDescriptionExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__MessageDescriptionExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__MessageDescription
#define SOAP_TYPE_tt__MessageDescription (550)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MessageDescription(struct soap*, const char*, int, const tt__MessageDescription *, const char*);
SOAP_FMAC3 tt__MessageDescription * SOAP_FMAC4 soap_in_tt__MessageDescription(struct soap*, const char*, tt__MessageDescription *, const char*);

#ifndef soap_write_tt__MessageDescription
#define soap_write_tt__MessageDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:MessageDescription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MessageDescription * SOAP_FMAC4 soap_get_tt__MessageDescription(struct soap*, tt__MessageDescription *, const char*, const char*);

#ifndef soap_read_tt__MessageDescription
#define soap_read_tt__MessageDescription(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__MessageDescription(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__MessageDescription * SOAP_FMAC2 soap_instantiate_tt__MessageDescription(struct soap*, int, const char*, const char*, size_t*);

inline tt__MessageDescription * soap_new_tt__MessageDescription(struct soap *soap, int n = -1) { return soap_instantiate_tt__MessageDescription(soap, n, NULL, NULL, NULL); }

inline tt__MessageDescription * soap_new_req_tt__MessageDescription(struct soap *soap) { tt__MessageDescription *_p = soap_instantiate_tt__MessageDescription(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__MessageDescription * soap_new_set_tt__MessageDescription(struct soap *soap, tt__ItemListDescription *Source, tt__ItemListDescription *Key, tt__ItemListDescription *Data, tt__MessageDescriptionExtension *Extension, bool *IsProperty) { tt__MessageDescription *_p = soap_instantiate_tt__MessageDescription(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MessageDescription::Source = Source; _p->tt__MessageDescription::Key = Key; _p->tt__MessageDescription::Data = Data; _p->tt__MessageDescription::Extension = Extension; _p->tt__MessageDescription::IsProperty = IsProperty; } return _p; }

inline void soap_delete_tt__MessageDescription(struct soap *soap, tt__MessageDescription *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__MessageDescription(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ItemListExtension
#define SOAP_TYPE_tt__ItemListExtension (549)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ItemListExtension(struct soap*, const char*, int, const tt__ItemListExtension *, const char*);
SOAP_FMAC3 tt__ItemListExtension * SOAP_FMAC4 soap_in_tt__ItemListExtension(struct soap*, const char*, tt__ItemListExtension *, const char*);

#ifndef soap_write_tt__ItemListExtension
#define soap_write_tt__ItemListExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ItemListExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ItemListExtension * SOAP_FMAC4 soap_get_tt__ItemListExtension(struct soap*, tt__ItemListExtension *, const char*, const char*);

#ifndef soap_read_tt__ItemListExtension
#define soap_read_tt__ItemListExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ItemListExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ItemListExtension * SOAP_FMAC2 soap_instantiate_tt__ItemListExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ItemListExtension * soap_new_tt__ItemListExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ItemListExtension(soap, n, NULL, NULL, NULL); }

inline tt__ItemListExtension * soap_new_req_tt__ItemListExtension(struct soap *soap) { tt__ItemListExtension *_p = soap_instantiate_tt__ItemListExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ItemListExtension * soap_new_set_tt__ItemListExtension(struct soap *soap) { tt__ItemListExtension *_p = soap_instantiate_tt__ItemListExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__ItemListExtension(struct soap *soap, tt__ItemListExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ItemListExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ItemList
#define SOAP_TYPE_tt__ItemList (548)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ItemList(struct soap*, const char*, int, const tt__ItemList *, const char*);
SOAP_FMAC3 tt__ItemList * SOAP_FMAC4 soap_in_tt__ItemList(struct soap*, const char*, tt__ItemList *, const char*);

#ifndef soap_write_tt__ItemList
#define soap_write_tt__ItemList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ItemList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ItemList * SOAP_FMAC4 soap_get_tt__ItemList(struct soap*, tt__ItemList *, const char*, const char*);

#ifndef soap_read_tt__ItemList
#define soap_read_tt__ItemList(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ItemList(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ItemList * SOAP_FMAC2 soap_instantiate_tt__ItemList(struct soap*, int, const char*, const char*, size_t*);

inline tt__ItemList * soap_new_tt__ItemList(struct soap *soap, int n = -1) { return soap_instantiate_tt__ItemList(soap, n, NULL, NULL, NULL); }

inline tt__ItemList * soap_new_req_tt__ItemList(struct soap *soap) { tt__ItemList *_p = soap_instantiate_tt__ItemList(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ItemList * soap_new_set_tt__ItemList(struct soap *soap, std::vector<_tt__ItemList_SimpleItem >*SimpleItem, std::vector<_tt__ItemList_ElementItem >*ElementItem, tt__ItemListExtension *Extension) { tt__ItemList *_p = soap_instantiate_tt__ItemList(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ItemList::SimpleItem = SimpleItem; _p->tt__ItemList::ElementItem = ElementItem; _p->tt__ItemList::Extension = Extension; } return _p; }

inline void soap_delete_tt__ItemList(struct soap *soap, tt__ItemList *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ItemList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__MessageExtension
#define SOAP_TYPE_tt__MessageExtension (547)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MessageExtension(struct soap*, const char*, int, const tt__MessageExtension *, const char*);
SOAP_FMAC3 tt__MessageExtension * SOAP_FMAC4 soap_in_tt__MessageExtension(struct soap*, const char*, tt__MessageExtension *, const char*);

#ifndef soap_write_tt__MessageExtension
#define soap_write_tt__MessageExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:MessageExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MessageExtension * SOAP_FMAC4 soap_get_tt__MessageExtension(struct soap*, tt__MessageExtension *, const char*, const char*);

#ifndef soap_read_tt__MessageExtension
#define soap_read_tt__MessageExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__MessageExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__MessageExtension * SOAP_FMAC2 soap_instantiate_tt__MessageExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__MessageExtension * soap_new_tt__MessageExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__MessageExtension(soap, n, NULL, NULL, NULL); }

inline tt__MessageExtension * soap_new_req_tt__MessageExtension(struct soap *soap) { tt__MessageExtension *_p = soap_instantiate_tt__MessageExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__MessageExtension * soap_new_set_tt__MessageExtension(struct soap *soap) { tt__MessageExtension *_p = soap_instantiate_tt__MessageExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__MessageExtension(struct soap *soap, tt__MessageExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__MessageExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__FocusOptions20Extension
#define SOAP_TYPE_tt__FocusOptions20Extension (546)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FocusOptions20Extension(struct soap*, const char*, int, const tt__FocusOptions20Extension *, const char*);
SOAP_FMAC3 tt__FocusOptions20Extension * SOAP_FMAC4 soap_in_tt__FocusOptions20Extension(struct soap*, const char*, tt__FocusOptions20Extension *, const char*);

#ifndef soap_write_tt__FocusOptions20Extension
#define soap_write_tt__FocusOptions20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:FocusOptions20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusOptions20Extension * SOAP_FMAC4 soap_get_tt__FocusOptions20Extension(struct soap*, tt__FocusOptions20Extension *, const char*, const char*);

#ifndef soap_read_tt__FocusOptions20Extension
#define soap_read_tt__FocusOptions20Extension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__FocusOptions20Extension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__FocusOptions20Extension * SOAP_FMAC2 soap_instantiate_tt__FocusOptions20Extension(struct soap*, int, const char*, const char*, size_t*);

inline tt__FocusOptions20Extension * soap_new_tt__FocusOptions20Extension(struct soap *soap, int n = -1) { return soap_instantiate_tt__FocusOptions20Extension(soap, n, NULL, NULL, NULL); }

inline tt__FocusOptions20Extension * soap_new_req_tt__FocusOptions20Extension(struct soap *soap) { tt__FocusOptions20Extension *_p = soap_instantiate_tt__FocusOptions20Extension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__FocusOptions20Extension * soap_new_set_tt__FocusOptions20Extension(struct soap *soap) { tt__FocusOptions20Extension *_p = soap_instantiate_tt__FocusOptions20Extension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__FocusOptions20Extension(struct soap *soap, tt__FocusOptions20Extension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__FocusOptions20Extension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__FocusOptions20
#define SOAP_TYPE_tt__FocusOptions20 (545)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FocusOptions20(struct soap*, const char*, int, const tt__FocusOptions20 *, const char*);
SOAP_FMAC3 tt__FocusOptions20 * SOAP_FMAC4 soap_in_tt__FocusOptions20(struct soap*, const char*, tt__FocusOptions20 *, const char*);

#ifndef soap_write_tt__FocusOptions20
#define soap_write_tt__FocusOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:FocusOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusOptions20 * SOAP_FMAC4 soap_get_tt__FocusOptions20(struct soap*, tt__FocusOptions20 *, const char*, const char*);

#ifndef soap_read_tt__FocusOptions20
#define soap_read_tt__FocusOptions20(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__FocusOptions20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__FocusOptions20 * SOAP_FMAC2 soap_instantiate_tt__FocusOptions20(struct soap*, int, const char*, const char*, size_t*);

inline tt__FocusOptions20 * soap_new_tt__FocusOptions20(struct soap *soap, int n = -1) { return soap_instantiate_tt__FocusOptions20(soap, n, NULL, NULL, NULL); }

inline tt__FocusOptions20 * soap_new_req_tt__FocusOptions20(struct soap *soap) { tt__FocusOptions20 *_p = soap_instantiate_tt__FocusOptions20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__FocusOptions20 * soap_new_set_tt__FocusOptions20(struct soap *soap, std::vector<enum tt__AutoFocusMode >& AutoFocusModes, tt__FloatRange *DefaultSpeed, tt__FloatRange *NearLimit, tt__FloatRange *FarLimit, tt__FocusOptions20Extension *Extension) { tt__FocusOptions20 *_p = soap_instantiate_tt__FocusOptions20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FocusOptions20::AutoFocusModes = AutoFocusModes; _p->tt__FocusOptions20::DefaultSpeed = DefaultSpeed; _p->tt__FocusOptions20::NearLimit = NearLimit; _p->tt__FocusOptions20::FarLimit = FarLimit; _p->tt__FocusOptions20::Extension = Extension; } return _p; }

inline void soap_delete_tt__FocusOptions20(struct soap *soap, tt__FocusOptions20 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__FocusOptions20(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__WhiteBalanceOptions20Extension
#define SOAP_TYPE_tt__WhiteBalanceOptions20Extension (544)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__WhiteBalanceOptions20Extension(struct soap*, const char*, int, const tt__WhiteBalanceOptions20Extension *, const char*);
SOAP_FMAC3 tt__WhiteBalanceOptions20Extension * SOAP_FMAC4 soap_in_tt__WhiteBalanceOptions20Extension(struct soap*, const char*, tt__WhiteBalanceOptions20Extension *, const char*);

#ifndef soap_write_tt__WhiteBalanceOptions20Extension
#define soap_write_tt__WhiteBalanceOptions20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:WhiteBalanceOptions20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WhiteBalanceOptions20Extension * SOAP_FMAC4 soap_get_tt__WhiteBalanceOptions20Extension(struct soap*, tt__WhiteBalanceOptions20Extension *, const char*, const char*);

#ifndef soap_read_tt__WhiteBalanceOptions20Extension
#define soap_read_tt__WhiteBalanceOptions20Extension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__WhiteBalanceOptions20Extension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__WhiteBalanceOptions20Extension * SOAP_FMAC2 soap_instantiate_tt__WhiteBalanceOptions20Extension(struct soap*, int, const char*, const char*, size_t*);

inline tt__WhiteBalanceOptions20Extension * soap_new_tt__WhiteBalanceOptions20Extension(struct soap *soap, int n = -1) { return soap_instantiate_tt__WhiteBalanceOptions20Extension(soap, n, NULL, NULL, NULL); }

inline tt__WhiteBalanceOptions20Extension * soap_new_req_tt__WhiteBalanceOptions20Extension(struct soap *soap) { tt__WhiteBalanceOptions20Extension *_p = soap_instantiate_tt__WhiteBalanceOptions20Extension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__WhiteBalanceOptions20Extension * soap_new_set_tt__WhiteBalanceOptions20Extension(struct soap *soap) { tt__WhiteBalanceOptions20Extension *_p = soap_instantiate_tt__WhiteBalanceOptions20Extension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__WhiteBalanceOptions20Extension(struct soap *soap, tt__WhiteBalanceOptions20Extension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__WhiteBalanceOptions20Extension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__WhiteBalanceOptions20
#define SOAP_TYPE_tt__WhiteBalanceOptions20 (543)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__WhiteBalanceOptions20(struct soap*, const char*, int, const tt__WhiteBalanceOptions20 *, const char*);
SOAP_FMAC3 tt__WhiteBalanceOptions20 * SOAP_FMAC4 soap_in_tt__WhiteBalanceOptions20(struct soap*, const char*, tt__WhiteBalanceOptions20 *, const char*);

#ifndef soap_write_tt__WhiteBalanceOptions20
#define soap_write_tt__WhiteBalanceOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:WhiteBalanceOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WhiteBalanceOptions20 * SOAP_FMAC4 soap_get_tt__WhiteBalanceOptions20(struct soap*, tt__WhiteBalanceOptions20 *, const char*, const char*);

#ifndef soap_read_tt__WhiteBalanceOptions20
#define soap_read_tt__WhiteBalanceOptions20(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__WhiteBalanceOptions20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__WhiteBalanceOptions20 * SOAP_FMAC2 soap_instantiate_tt__WhiteBalanceOptions20(struct soap*, int, const char*, const char*, size_t*);

inline tt__WhiteBalanceOptions20 * soap_new_tt__WhiteBalanceOptions20(struct soap *soap, int n = -1) { return soap_instantiate_tt__WhiteBalanceOptions20(soap, n, NULL, NULL, NULL); }

inline tt__WhiteBalanceOptions20 * soap_new_req_tt__WhiteBalanceOptions20(struct soap *soap, std::vector<enum tt__WhiteBalanceMode >& Mode) { tt__WhiteBalanceOptions20 *_p = soap_instantiate_tt__WhiteBalanceOptions20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__WhiteBalanceOptions20::Mode = Mode; } return _p; }

inline tt__WhiteBalanceOptions20 * soap_new_set_tt__WhiteBalanceOptions20(struct soap *soap, std::vector<enum tt__WhiteBalanceMode >& Mode, tt__FloatRange *YrGain, tt__FloatRange *YbGain, tt__WhiteBalanceOptions20Extension *Extension) { tt__WhiteBalanceOptions20 *_p = soap_instantiate_tt__WhiteBalanceOptions20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__WhiteBalanceOptions20::Mode = Mode; _p->tt__WhiteBalanceOptions20::YrGain = YrGain; _p->tt__WhiteBalanceOptions20::YbGain = YbGain; _p->tt__WhiteBalanceOptions20::Extension = Extension; } return _p; }

inline void soap_delete_tt__WhiteBalanceOptions20(struct soap *soap, tt__WhiteBalanceOptions20 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__WhiteBalanceOptions20(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__FocusConfiguration20Extension
#define SOAP_TYPE_tt__FocusConfiguration20Extension (542)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FocusConfiguration20Extension(struct soap*, const char*, int, const tt__FocusConfiguration20Extension *, const char*);
SOAP_FMAC3 tt__FocusConfiguration20Extension * SOAP_FMAC4 soap_in_tt__FocusConfiguration20Extension(struct soap*, const char*, tt__FocusConfiguration20Extension *, const char*);

#ifndef soap_write_tt__FocusConfiguration20Extension
#define soap_write_tt__FocusConfiguration20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:FocusConfiguration20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusConfiguration20Extension * SOAP_FMAC4 soap_get_tt__FocusConfiguration20Extension(struct soap*, tt__FocusConfiguration20Extension *, const char*, const char*);

#ifndef soap_read_tt__FocusConfiguration20Extension
#define soap_read_tt__FocusConfiguration20Extension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__FocusConfiguration20Extension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__FocusConfiguration20Extension * SOAP_FMAC2 soap_instantiate_tt__FocusConfiguration20Extension(struct soap*, int, const char*, const char*, size_t*);

inline tt__FocusConfiguration20Extension * soap_new_tt__FocusConfiguration20Extension(struct soap *soap, int n = -1) { return soap_instantiate_tt__FocusConfiguration20Extension(soap, n, NULL, NULL, NULL); }

inline tt__FocusConfiguration20Extension * soap_new_req_tt__FocusConfiguration20Extension(struct soap *soap) { tt__FocusConfiguration20Extension *_p = soap_instantiate_tt__FocusConfiguration20Extension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__FocusConfiguration20Extension * soap_new_set_tt__FocusConfiguration20Extension(struct soap *soap) { tt__FocusConfiguration20Extension *_p = soap_instantiate_tt__FocusConfiguration20Extension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__FocusConfiguration20Extension(struct soap *soap, tt__FocusConfiguration20Extension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__FocusConfiguration20Extension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__FocusConfiguration20
#define SOAP_TYPE_tt__FocusConfiguration20 (541)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FocusConfiguration20(struct soap*, const char*, int, const tt__FocusConfiguration20 *, const char*);
SOAP_FMAC3 tt__FocusConfiguration20 * SOAP_FMAC4 soap_in_tt__FocusConfiguration20(struct soap*, const char*, tt__FocusConfiguration20 *, const char*);

#ifndef soap_write_tt__FocusConfiguration20
#define soap_write_tt__FocusConfiguration20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:FocusConfiguration20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusConfiguration20 * SOAP_FMAC4 soap_get_tt__FocusConfiguration20(struct soap*, tt__FocusConfiguration20 *, const char*, const char*);

#ifndef soap_read_tt__FocusConfiguration20
#define soap_read_tt__FocusConfiguration20(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__FocusConfiguration20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__FocusConfiguration20 * SOAP_FMAC2 soap_instantiate_tt__FocusConfiguration20(struct soap*, int, const char*, const char*, size_t*);

inline tt__FocusConfiguration20 * soap_new_tt__FocusConfiguration20(struct soap *soap, int n = -1) { return soap_instantiate_tt__FocusConfiguration20(soap, n, NULL, NULL, NULL); }

inline tt__FocusConfiguration20 * soap_new_req_tt__FocusConfiguration20(struct soap *soap, enum tt__AutoFocusMode AutoFocusMode) { tt__FocusConfiguration20 *_p = soap_instantiate_tt__FocusConfiguration20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FocusConfiguration20::AutoFocusMode = AutoFocusMode; } return _p; }

inline tt__FocusConfiguration20 * soap_new_set_tt__FocusConfiguration20(struct soap *soap, enum tt__AutoFocusMode AutoFocusMode, float *DefaultSpeed, float *NearLimit, float *FarLimit, tt__FocusConfiguration20Extension *Extension) { tt__FocusConfiguration20 *_p = soap_instantiate_tt__FocusConfiguration20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FocusConfiguration20::AutoFocusMode = AutoFocusMode; _p->tt__FocusConfiguration20::DefaultSpeed = DefaultSpeed; _p->tt__FocusConfiguration20::NearLimit = NearLimit; _p->tt__FocusConfiguration20::FarLimit = FarLimit; _p->tt__FocusConfiguration20::Extension = Extension; } return _p; }

inline void soap_delete_tt__FocusConfiguration20(struct soap *soap, tt__FocusConfiguration20 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__FocusConfiguration20(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__WhiteBalance20Extension
#define SOAP_TYPE_tt__WhiteBalance20Extension (540)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__WhiteBalance20Extension(struct soap*, const char*, int, const tt__WhiteBalance20Extension *, const char*);
SOAP_FMAC3 tt__WhiteBalance20Extension * SOAP_FMAC4 soap_in_tt__WhiteBalance20Extension(struct soap*, const char*, tt__WhiteBalance20Extension *, const char*);

#ifndef soap_write_tt__WhiteBalance20Extension
#define soap_write_tt__WhiteBalance20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:WhiteBalance20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WhiteBalance20Extension * SOAP_FMAC4 soap_get_tt__WhiteBalance20Extension(struct soap*, tt__WhiteBalance20Extension *, const char*, const char*);

#ifndef soap_read_tt__WhiteBalance20Extension
#define soap_read_tt__WhiteBalance20Extension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__WhiteBalance20Extension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__WhiteBalance20Extension * SOAP_FMAC2 soap_instantiate_tt__WhiteBalance20Extension(struct soap*, int, const char*, const char*, size_t*);

inline tt__WhiteBalance20Extension * soap_new_tt__WhiteBalance20Extension(struct soap *soap, int n = -1) { return soap_instantiate_tt__WhiteBalance20Extension(soap, n, NULL, NULL, NULL); }

inline tt__WhiteBalance20Extension * soap_new_req_tt__WhiteBalance20Extension(struct soap *soap) { tt__WhiteBalance20Extension *_p = soap_instantiate_tt__WhiteBalance20Extension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__WhiteBalance20Extension * soap_new_set_tt__WhiteBalance20Extension(struct soap *soap) { tt__WhiteBalance20Extension *_p = soap_instantiate_tt__WhiteBalance20Extension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__WhiteBalance20Extension(struct soap *soap, tt__WhiteBalance20Extension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__WhiteBalance20Extension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__WhiteBalance20
#define SOAP_TYPE_tt__WhiteBalance20 (539)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__WhiteBalance20(struct soap*, const char*, int, const tt__WhiteBalance20 *, const char*);
SOAP_FMAC3 tt__WhiteBalance20 * SOAP_FMAC4 soap_in_tt__WhiteBalance20(struct soap*, const char*, tt__WhiteBalance20 *, const char*);

#ifndef soap_write_tt__WhiteBalance20
#define soap_write_tt__WhiteBalance20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:WhiteBalance20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WhiteBalance20 * SOAP_FMAC4 soap_get_tt__WhiteBalance20(struct soap*, tt__WhiteBalance20 *, const char*, const char*);

#ifndef soap_read_tt__WhiteBalance20
#define soap_read_tt__WhiteBalance20(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__WhiteBalance20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__WhiteBalance20 * SOAP_FMAC2 soap_instantiate_tt__WhiteBalance20(struct soap*, int, const char*, const char*, size_t*);

inline tt__WhiteBalance20 * soap_new_tt__WhiteBalance20(struct soap *soap, int n = -1) { return soap_instantiate_tt__WhiteBalance20(soap, n, NULL, NULL, NULL); }

inline tt__WhiteBalance20 * soap_new_req_tt__WhiteBalance20(struct soap *soap, enum tt__WhiteBalanceMode Mode) { tt__WhiteBalance20 *_p = soap_instantiate_tt__WhiteBalance20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__WhiteBalance20::Mode = Mode; } return _p; }

inline tt__WhiteBalance20 * soap_new_set_tt__WhiteBalance20(struct soap *soap, enum tt__WhiteBalanceMode Mode, float *CrGain, float *CbGain, tt__WhiteBalance20Extension *Extension) { tt__WhiteBalance20 *_p = soap_instantiate_tt__WhiteBalance20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__WhiteBalance20::Mode = Mode; _p->tt__WhiteBalance20::CrGain = CrGain; _p->tt__WhiteBalance20::CbGain = CbGain; _p->tt__WhiteBalance20::Extension = Extension; } return _p; }

inline void soap_delete_tt__WhiteBalance20(struct soap *soap, tt__WhiteBalance20 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__WhiteBalance20(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RelativeFocusOptions20
#define SOAP_TYPE_tt__RelativeFocusOptions20 (538)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RelativeFocusOptions20(struct soap*, const char*, int, const tt__RelativeFocusOptions20 *, const char*);
SOAP_FMAC3 tt__RelativeFocusOptions20 * SOAP_FMAC4 soap_in_tt__RelativeFocusOptions20(struct soap*, const char*, tt__RelativeFocusOptions20 *, const char*);

#ifndef soap_write_tt__RelativeFocusOptions20
#define soap_write_tt__RelativeFocusOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RelativeFocusOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RelativeFocusOptions20 * SOAP_FMAC4 soap_get_tt__RelativeFocusOptions20(struct soap*, tt__RelativeFocusOptions20 *, const char*, const char*);

#ifndef soap_read_tt__RelativeFocusOptions20
#define soap_read_tt__RelativeFocusOptions20(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RelativeFocusOptions20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RelativeFocusOptions20 * SOAP_FMAC2 soap_instantiate_tt__RelativeFocusOptions20(struct soap*, int, const char*, const char*, size_t*);

inline tt__RelativeFocusOptions20 * soap_new_tt__RelativeFocusOptions20(struct soap *soap, int n = -1) { return soap_instantiate_tt__RelativeFocusOptions20(soap, n, NULL, NULL, NULL); }

inline tt__RelativeFocusOptions20 * soap_new_req_tt__RelativeFocusOptions20(struct soap *soap, tt__FloatRange *Distance) { tt__RelativeFocusOptions20 *_p = soap_instantiate_tt__RelativeFocusOptions20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RelativeFocusOptions20::Distance = Distance; } return _p; }

inline tt__RelativeFocusOptions20 * soap_new_set_tt__RelativeFocusOptions20(struct soap *soap, tt__FloatRange *Distance, tt__FloatRange *Speed) { tt__RelativeFocusOptions20 *_p = soap_instantiate_tt__RelativeFocusOptions20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RelativeFocusOptions20::Distance = Distance; _p->tt__RelativeFocusOptions20::Speed = Speed; } return _p; }

inline void soap_delete_tt__RelativeFocusOptions20(struct soap *soap, tt__RelativeFocusOptions20 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RelativeFocusOptions20(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__MoveOptions20
#define SOAP_TYPE_tt__MoveOptions20 (537)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MoveOptions20(struct soap*, const char*, int, const tt__MoveOptions20 *, const char*);
SOAP_FMAC3 tt__MoveOptions20 * SOAP_FMAC4 soap_in_tt__MoveOptions20(struct soap*, const char*, tt__MoveOptions20 *, const char*);

#ifndef soap_write_tt__MoveOptions20
#define soap_write_tt__MoveOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:MoveOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MoveOptions20 * SOAP_FMAC4 soap_get_tt__MoveOptions20(struct soap*, tt__MoveOptions20 *, const char*, const char*);

#ifndef soap_read_tt__MoveOptions20
#define soap_read_tt__MoveOptions20(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__MoveOptions20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__MoveOptions20 * SOAP_FMAC2 soap_instantiate_tt__MoveOptions20(struct soap*, int, const char*, const char*, size_t*);

inline tt__MoveOptions20 * soap_new_tt__MoveOptions20(struct soap *soap, int n = -1) { return soap_instantiate_tt__MoveOptions20(soap, n, NULL, NULL, NULL); }

inline tt__MoveOptions20 * soap_new_req_tt__MoveOptions20(struct soap *soap) { tt__MoveOptions20 *_p = soap_instantiate_tt__MoveOptions20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__MoveOptions20 * soap_new_set_tt__MoveOptions20(struct soap *soap, tt__AbsoluteFocusOptions *Absolute, tt__RelativeFocusOptions20 *Relative, tt__ContinuousFocusOptions *Continuous) { tt__MoveOptions20 *_p = soap_instantiate_tt__MoveOptions20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MoveOptions20::Absolute = Absolute; _p->tt__MoveOptions20::Relative = Relative; _p->tt__MoveOptions20::Continuous = Continuous; } return _p; }

inline void soap_delete_tt__MoveOptions20(struct soap *soap, tt__MoveOptions20 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__MoveOptions20(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ExposureOptions20
#define SOAP_TYPE_tt__ExposureOptions20 (536)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ExposureOptions20(struct soap*, const char*, int, const tt__ExposureOptions20 *, const char*);
SOAP_FMAC3 tt__ExposureOptions20 * SOAP_FMAC4 soap_in_tt__ExposureOptions20(struct soap*, const char*, tt__ExposureOptions20 *, const char*);

#ifndef soap_write_tt__ExposureOptions20
#define soap_write_tt__ExposureOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ExposureOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ExposureOptions20 * SOAP_FMAC4 soap_get_tt__ExposureOptions20(struct soap*, tt__ExposureOptions20 *, const char*, const char*);

#ifndef soap_read_tt__ExposureOptions20
#define soap_read_tt__ExposureOptions20(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ExposureOptions20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ExposureOptions20 * SOAP_FMAC2 soap_instantiate_tt__ExposureOptions20(struct soap*, int, const char*, const char*, size_t*);

inline tt__ExposureOptions20 * soap_new_tt__ExposureOptions20(struct soap *soap, int n = -1) { return soap_instantiate_tt__ExposureOptions20(soap, n, NULL, NULL, NULL); }

inline tt__ExposureOptions20 * soap_new_req_tt__ExposureOptions20(struct soap *soap, std::vector<enum tt__ExposureMode >& Mode) { tt__ExposureOptions20 *_p = soap_instantiate_tt__ExposureOptions20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ExposureOptions20::Mode = Mode; } return _p; }

inline tt__ExposureOptions20 * soap_new_set_tt__ExposureOptions20(struct soap *soap, std::vector<enum tt__ExposureMode >& Mode, std::vector<enum tt__ExposurePriority >& Priority, tt__FloatRange *MinExposureTime, tt__FloatRange *MaxExposureTime, tt__FloatRange *MinGain, tt__FloatRange *MaxGain, tt__FloatRange *MinIris, tt__FloatRange *MaxIris, tt__FloatRange *ExposureTime, tt__FloatRange *Gain, tt__FloatRange *Iris) { tt__ExposureOptions20 *_p = soap_instantiate_tt__ExposureOptions20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ExposureOptions20::Mode = Mode; _p->tt__ExposureOptions20::Priority = Priority; _p->tt__ExposureOptions20::MinExposureTime = MinExposureTime; _p->tt__ExposureOptions20::MaxExposureTime = MaxExposureTime; _p->tt__ExposureOptions20::MinGain = MinGain; _p->tt__ExposureOptions20::MaxGain = MaxGain; _p->tt__ExposureOptions20::MinIris = MinIris; _p->tt__ExposureOptions20::MaxIris = MaxIris; _p->tt__ExposureOptions20::ExposureTime = ExposureTime; _p->tt__ExposureOptions20::Gain = Gain; _p->tt__ExposureOptions20::Iris = Iris; } return _p; }

inline void soap_delete_tt__ExposureOptions20(struct soap *soap, tt__ExposureOptions20 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ExposureOptions20(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__BacklightCompensationOptions20
#define SOAP_TYPE_tt__BacklightCompensationOptions20 (535)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__BacklightCompensationOptions20(struct soap*, const char*, int, const tt__BacklightCompensationOptions20 *, const char*);
SOAP_FMAC3 tt__BacklightCompensationOptions20 * SOAP_FMAC4 soap_in_tt__BacklightCompensationOptions20(struct soap*, const char*, tt__BacklightCompensationOptions20 *, const char*);

#ifndef soap_write_tt__BacklightCompensationOptions20
#define soap_write_tt__BacklightCompensationOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:BacklightCompensationOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__BacklightCompensationOptions20 * SOAP_FMAC4 soap_get_tt__BacklightCompensationOptions20(struct soap*, tt__BacklightCompensationOptions20 *, const char*, const char*);

#ifndef soap_read_tt__BacklightCompensationOptions20
#define soap_read_tt__BacklightCompensationOptions20(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__BacklightCompensationOptions20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__BacklightCompensationOptions20 * SOAP_FMAC2 soap_instantiate_tt__BacklightCompensationOptions20(struct soap*, int, const char*, const char*, size_t*);

inline tt__BacklightCompensationOptions20 * soap_new_tt__BacklightCompensationOptions20(struct soap *soap, int n = -1) { return soap_instantiate_tt__BacklightCompensationOptions20(soap, n, NULL, NULL, NULL); }

inline tt__BacklightCompensationOptions20 * soap_new_req_tt__BacklightCompensationOptions20(struct soap *soap, std::vector<enum tt__BacklightCompensationMode >& Mode) { tt__BacklightCompensationOptions20 *_p = soap_instantiate_tt__BacklightCompensationOptions20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__BacklightCompensationOptions20::Mode = Mode; } return _p; }

inline tt__BacklightCompensationOptions20 * soap_new_set_tt__BacklightCompensationOptions20(struct soap *soap, std::vector<enum tt__BacklightCompensationMode >& Mode, tt__FloatRange *Level) { tt__BacklightCompensationOptions20 *_p = soap_instantiate_tt__BacklightCompensationOptions20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__BacklightCompensationOptions20::Mode = Mode; _p->tt__BacklightCompensationOptions20::Level = Level; } return _p; }

inline void soap_delete_tt__BacklightCompensationOptions20(struct soap *soap, tt__BacklightCompensationOptions20 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__BacklightCompensationOptions20(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__WideDynamicRangeOptions20
#define SOAP_TYPE_tt__WideDynamicRangeOptions20 (534)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__WideDynamicRangeOptions20(struct soap*, const char*, int, const tt__WideDynamicRangeOptions20 *, const char*);
SOAP_FMAC3 tt__WideDynamicRangeOptions20 * SOAP_FMAC4 soap_in_tt__WideDynamicRangeOptions20(struct soap*, const char*, tt__WideDynamicRangeOptions20 *, const char*);

#ifndef soap_write_tt__WideDynamicRangeOptions20
#define soap_write_tt__WideDynamicRangeOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:WideDynamicRangeOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WideDynamicRangeOptions20 * SOAP_FMAC4 soap_get_tt__WideDynamicRangeOptions20(struct soap*, tt__WideDynamicRangeOptions20 *, const char*, const char*);

#ifndef soap_read_tt__WideDynamicRangeOptions20
#define soap_read_tt__WideDynamicRangeOptions20(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__WideDynamicRangeOptions20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__WideDynamicRangeOptions20 * SOAP_FMAC2 soap_instantiate_tt__WideDynamicRangeOptions20(struct soap*, int, const char*, const char*, size_t*);

inline tt__WideDynamicRangeOptions20 * soap_new_tt__WideDynamicRangeOptions20(struct soap *soap, int n = -1) { return soap_instantiate_tt__WideDynamicRangeOptions20(soap, n, NULL, NULL, NULL); }

inline tt__WideDynamicRangeOptions20 * soap_new_req_tt__WideDynamicRangeOptions20(struct soap *soap, std::vector<enum tt__WideDynamicMode >& Mode) { tt__WideDynamicRangeOptions20 *_p = soap_instantiate_tt__WideDynamicRangeOptions20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__WideDynamicRangeOptions20::Mode = Mode; } return _p; }

inline tt__WideDynamicRangeOptions20 * soap_new_set_tt__WideDynamicRangeOptions20(struct soap *soap, std::vector<enum tt__WideDynamicMode >& Mode, tt__FloatRange *Level) { tt__WideDynamicRangeOptions20 *_p = soap_instantiate_tt__WideDynamicRangeOptions20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__WideDynamicRangeOptions20::Mode = Mode; _p->tt__WideDynamicRangeOptions20::Level = Level; } return _p; }

inline void soap_delete_tt__WideDynamicRangeOptions20(struct soap *soap, tt__WideDynamicRangeOptions20 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__WideDynamicRangeOptions20(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__IrCutFilterAutoAdjustmentOptionsExtension
#define SOAP_TYPE_tt__IrCutFilterAutoAdjustmentOptionsExtension (533)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IrCutFilterAutoAdjustmentOptionsExtension(struct soap*, const char*, int, const tt__IrCutFilterAutoAdjustmentOptionsExtension *, const char*);
SOAP_FMAC3 tt__IrCutFilterAutoAdjustmentOptionsExtension * SOAP_FMAC4 soap_in_tt__IrCutFilterAutoAdjustmentOptionsExtension(struct soap*, const char*, tt__IrCutFilterAutoAdjustmentOptionsExtension *, const char*);

#ifndef soap_write_tt__IrCutFilterAutoAdjustmentOptionsExtension
#define soap_write_tt__IrCutFilterAutoAdjustmentOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:IrCutFilterAutoAdjustmentOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IrCutFilterAutoAdjustmentOptionsExtension * SOAP_FMAC4 soap_get_tt__IrCutFilterAutoAdjustmentOptionsExtension(struct soap*, tt__IrCutFilterAutoAdjustmentOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__IrCutFilterAutoAdjustmentOptionsExtension
#define soap_read_tt__IrCutFilterAutoAdjustmentOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IrCutFilterAutoAdjustmentOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__IrCutFilterAutoAdjustmentOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__IrCutFilterAutoAdjustmentOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__IrCutFilterAutoAdjustmentOptionsExtension * soap_new_tt__IrCutFilterAutoAdjustmentOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__IrCutFilterAutoAdjustmentOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__IrCutFilterAutoAdjustmentOptionsExtension * soap_new_req_tt__IrCutFilterAutoAdjustmentOptionsExtension(struct soap *soap) { tt__IrCutFilterAutoAdjustmentOptionsExtension *_p = soap_instantiate_tt__IrCutFilterAutoAdjustmentOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__IrCutFilterAutoAdjustmentOptionsExtension * soap_new_set_tt__IrCutFilterAutoAdjustmentOptionsExtension(struct soap *soap) { tt__IrCutFilterAutoAdjustmentOptionsExtension *_p = soap_instantiate_tt__IrCutFilterAutoAdjustmentOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__IrCutFilterAutoAdjustmentOptionsExtension(struct soap *soap, tt__IrCutFilterAutoAdjustmentOptionsExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__IrCutFilterAutoAdjustmentOptionsExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__IrCutFilterAutoAdjustmentOptions
#define SOAP_TYPE_tt__IrCutFilterAutoAdjustmentOptions (532)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IrCutFilterAutoAdjustmentOptions(struct soap*, const char*, int, const tt__IrCutFilterAutoAdjustmentOptions *, const char*);
SOAP_FMAC3 tt__IrCutFilterAutoAdjustmentOptions * SOAP_FMAC4 soap_in_tt__IrCutFilterAutoAdjustmentOptions(struct soap*, const char*, tt__IrCutFilterAutoAdjustmentOptions *, const char*);

#ifndef soap_write_tt__IrCutFilterAutoAdjustmentOptions
#define soap_write_tt__IrCutFilterAutoAdjustmentOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:IrCutFilterAutoAdjustmentOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IrCutFilterAutoAdjustmentOptions * SOAP_FMAC4 soap_get_tt__IrCutFilterAutoAdjustmentOptions(struct soap*, tt__IrCutFilterAutoAdjustmentOptions *, const char*, const char*);

#ifndef soap_read_tt__IrCutFilterAutoAdjustmentOptions
#define soap_read_tt__IrCutFilterAutoAdjustmentOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IrCutFilterAutoAdjustmentOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__IrCutFilterAutoAdjustmentOptions * SOAP_FMAC2 soap_instantiate_tt__IrCutFilterAutoAdjustmentOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__IrCutFilterAutoAdjustmentOptions * soap_new_tt__IrCutFilterAutoAdjustmentOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__IrCutFilterAutoAdjustmentOptions(soap, n, NULL, NULL, NULL); }

inline tt__IrCutFilterAutoAdjustmentOptions * soap_new_req_tt__IrCutFilterAutoAdjustmentOptions(struct soap *soap, std::vector<std::string >& BoundaryType) { tt__IrCutFilterAutoAdjustmentOptions *_p = soap_instantiate_tt__IrCutFilterAutoAdjustmentOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IrCutFilterAutoAdjustmentOptions::BoundaryType = BoundaryType; } return _p; }

inline tt__IrCutFilterAutoAdjustmentOptions * soap_new_set_tt__IrCutFilterAutoAdjustmentOptions(struct soap *soap, std::vector<std::string >& BoundaryType, bool *BoundaryOffset, tt__DurationRange *ResponseTimeRange, tt__IrCutFilterAutoAdjustmentOptionsExtension *Extension) { tt__IrCutFilterAutoAdjustmentOptions *_p = soap_instantiate_tt__IrCutFilterAutoAdjustmentOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IrCutFilterAutoAdjustmentOptions::BoundaryType = BoundaryType; _p->tt__IrCutFilterAutoAdjustmentOptions::BoundaryOffset = BoundaryOffset; _p->tt__IrCutFilterAutoAdjustmentOptions::ResponseTimeRange = ResponseTimeRange; _p->tt__IrCutFilterAutoAdjustmentOptions::Extension = Extension; } return _p; }

inline void soap_delete_tt__IrCutFilterAutoAdjustmentOptions(struct soap *soap, tt__IrCutFilterAutoAdjustmentOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__IrCutFilterAutoAdjustmentOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ImageStabilizationOptionsExtension
#define SOAP_TYPE_tt__ImageStabilizationOptionsExtension (531)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImageStabilizationOptionsExtension(struct soap*, const char*, int, const tt__ImageStabilizationOptionsExtension *, const char*);
SOAP_FMAC3 tt__ImageStabilizationOptionsExtension * SOAP_FMAC4 soap_in_tt__ImageStabilizationOptionsExtension(struct soap*, const char*, tt__ImageStabilizationOptionsExtension *, const char*);

#ifndef soap_write_tt__ImageStabilizationOptionsExtension
#define soap_write_tt__ImageStabilizationOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ImageStabilizationOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImageStabilizationOptionsExtension * SOAP_FMAC4 soap_get_tt__ImageStabilizationOptionsExtension(struct soap*, tt__ImageStabilizationOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__ImageStabilizationOptionsExtension
#define soap_read_tt__ImageStabilizationOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ImageStabilizationOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ImageStabilizationOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__ImageStabilizationOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImageStabilizationOptionsExtension * soap_new_tt__ImageStabilizationOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImageStabilizationOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__ImageStabilizationOptionsExtension * soap_new_req_tt__ImageStabilizationOptionsExtension(struct soap *soap) { tt__ImageStabilizationOptionsExtension *_p = soap_instantiate_tt__ImageStabilizationOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ImageStabilizationOptionsExtension * soap_new_set_tt__ImageStabilizationOptionsExtension(struct soap *soap) { tt__ImageStabilizationOptionsExtension *_p = soap_instantiate_tt__ImageStabilizationOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__ImageStabilizationOptionsExtension(struct soap *soap, tt__ImageStabilizationOptionsExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ImageStabilizationOptionsExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ImageStabilizationOptions
#define SOAP_TYPE_tt__ImageStabilizationOptions (530)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImageStabilizationOptions(struct soap*, const char*, int, const tt__ImageStabilizationOptions *, const char*);
SOAP_FMAC3 tt__ImageStabilizationOptions * SOAP_FMAC4 soap_in_tt__ImageStabilizationOptions(struct soap*, const char*, tt__ImageStabilizationOptions *, const char*);

#ifndef soap_write_tt__ImageStabilizationOptions
#define soap_write_tt__ImageStabilizationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ImageStabilizationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImageStabilizationOptions * SOAP_FMAC4 soap_get_tt__ImageStabilizationOptions(struct soap*, tt__ImageStabilizationOptions *, const char*, const char*);

#ifndef soap_read_tt__ImageStabilizationOptions
#define soap_read_tt__ImageStabilizationOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ImageStabilizationOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ImageStabilizationOptions * SOAP_FMAC2 soap_instantiate_tt__ImageStabilizationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImageStabilizationOptions * soap_new_tt__ImageStabilizationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImageStabilizationOptions(soap, n, NULL, NULL, NULL); }

inline tt__ImageStabilizationOptions * soap_new_req_tt__ImageStabilizationOptions(struct soap *soap, std::vector<enum tt__ImageStabilizationMode >& Mode) { tt__ImageStabilizationOptions *_p = soap_instantiate_tt__ImageStabilizationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ImageStabilizationOptions::Mode = Mode; } return _p; }

inline tt__ImageStabilizationOptions * soap_new_set_tt__ImageStabilizationOptions(struct soap *soap, std::vector<enum tt__ImageStabilizationMode >& Mode, tt__FloatRange *Level, tt__ImageStabilizationOptionsExtension *Extension) { tt__ImageStabilizationOptions *_p = soap_instantiate_tt__ImageStabilizationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ImageStabilizationOptions::Mode = Mode; _p->tt__ImageStabilizationOptions::Level = Level; _p->tt__ImageStabilizationOptions::Extension = Extension; } return _p; }

inline void soap_delete_tt__ImageStabilizationOptions(struct soap *soap, tt__ImageStabilizationOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ImageStabilizationOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ImagingOptions20Extension3
#define SOAP_TYPE_tt__ImagingOptions20Extension3 (529)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingOptions20Extension3(struct soap*, const char*, int, const tt__ImagingOptions20Extension3 *, const char*);
SOAP_FMAC3 tt__ImagingOptions20Extension3 * SOAP_FMAC4 soap_in_tt__ImagingOptions20Extension3(struct soap*, const char*, tt__ImagingOptions20Extension3 *, const char*);

#ifndef soap_write_tt__ImagingOptions20Extension3
#define soap_write_tt__ImagingOptions20Extension3(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ImagingOptions20Extension3", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingOptions20Extension3 * SOAP_FMAC4 soap_get_tt__ImagingOptions20Extension3(struct soap*, tt__ImagingOptions20Extension3 *, const char*, const char*);

#ifndef soap_read_tt__ImagingOptions20Extension3
#define soap_read_tt__ImagingOptions20Extension3(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ImagingOptions20Extension3(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ImagingOptions20Extension3 * SOAP_FMAC2 soap_instantiate_tt__ImagingOptions20Extension3(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingOptions20Extension3 * soap_new_tt__ImagingOptions20Extension3(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingOptions20Extension3(soap, n, NULL, NULL, NULL); }

inline tt__ImagingOptions20Extension3 * soap_new_req_tt__ImagingOptions20Extension3(struct soap *soap) { tt__ImagingOptions20Extension3 *_p = soap_instantiate_tt__ImagingOptions20Extension3(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ImagingOptions20Extension3 * soap_new_set_tt__ImagingOptions20Extension3(struct soap *soap) { tt__ImagingOptions20Extension3 *_p = soap_instantiate_tt__ImagingOptions20Extension3(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__ImagingOptions20Extension3(struct soap *soap, tt__ImagingOptions20Extension3 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ImagingOptions20Extension3(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ImagingOptions20Extension2
#define SOAP_TYPE_tt__ImagingOptions20Extension2 (528)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingOptions20Extension2(struct soap*, const char*, int, const tt__ImagingOptions20Extension2 *, const char*);
SOAP_FMAC3 tt__ImagingOptions20Extension2 * SOAP_FMAC4 soap_in_tt__ImagingOptions20Extension2(struct soap*, const char*, tt__ImagingOptions20Extension2 *, const char*);

#ifndef soap_write_tt__ImagingOptions20Extension2
#define soap_write_tt__ImagingOptions20Extension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ImagingOptions20Extension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingOptions20Extension2 * SOAP_FMAC4 soap_get_tt__ImagingOptions20Extension2(struct soap*, tt__ImagingOptions20Extension2 *, const char*, const char*);

#ifndef soap_read_tt__ImagingOptions20Extension2
#define soap_read_tt__ImagingOptions20Extension2(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ImagingOptions20Extension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ImagingOptions20Extension2 * SOAP_FMAC2 soap_instantiate_tt__ImagingOptions20Extension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingOptions20Extension2 * soap_new_tt__ImagingOptions20Extension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingOptions20Extension2(soap, n, NULL, NULL, NULL); }

inline tt__ImagingOptions20Extension2 * soap_new_req_tt__ImagingOptions20Extension2(struct soap *soap) { tt__ImagingOptions20Extension2 *_p = soap_instantiate_tt__ImagingOptions20Extension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ImagingOptions20Extension2 * soap_new_set_tt__ImagingOptions20Extension2(struct soap *soap, tt__IrCutFilterAutoAdjustmentOptions *IrCutFilterAutoAdjustment, tt__ImagingOptions20Extension3 *Extension) { tt__ImagingOptions20Extension2 *_p = soap_instantiate_tt__ImagingOptions20Extension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ImagingOptions20Extension2::IrCutFilterAutoAdjustment = IrCutFilterAutoAdjustment; _p->tt__ImagingOptions20Extension2::Extension = Extension; } return _p; }

inline void soap_delete_tt__ImagingOptions20Extension2(struct soap *soap, tt__ImagingOptions20Extension2 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ImagingOptions20Extension2(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ImagingOptions20Extension
#define SOAP_TYPE_tt__ImagingOptions20Extension (527)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingOptions20Extension(struct soap*, const char*, int, const tt__ImagingOptions20Extension *, const char*);
SOAP_FMAC3 tt__ImagingOptions20Extension * SOAP_FMAC4 soap_in_tt__ImagingOptions20Extension(struct soap*, const char*, tt__ImagingOptions20Extension *, const char*);

#ifndef soap_write_tt__ImagingOptions20Extension
#define soap_write_tt__ImagingOptions20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ImagingOptions20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingOptions20Extension * SOAP_FMAC4 soap_get_tt__ImagingOptions20Extension(struct soap*, tt__ImagingOptions20Extension *, const char*, const char*);

#ifndef soap_read_tt__ImagingOptions20Extension
#define soap_read_tt__ImagingOptions20Extension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ImagingOptions20Extension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ImagingOptions20Extension * SOAP_FMAC2 soap_instantiate_tt__ImagingOptions20Extension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingOptions20Extension * soap_new_tt__ImagingOptions20Extension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingOptions20Extension(soap, n, NULL, NULL, NULL); }

inline tt__ImagingOptions20Extension * soap_new_req_tt__ImagingOptions20Extension(struct soap *soap) { tt__ImagingOptions20Extension *_p = soap_instantiate_tt__ImagingOptions20Extension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ImagingOptions20Extension * soap_new_set_tt__ImagingOptions20Extension(struct soap *soap, tt__ImageStabilizationOptions *ImageStabilization, tt__ImagingOptions20Extension2 *Extension) { tt__ImagingOptions20Extension *_p = soap_instantiate_tt__ImagingOptions20Extension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ImagingOptions20Extension::ImageStabilization = ImageStabilization; _p->tt__ImagingOptions20Extension::Extension = Extension; } return _p; }

inline void soap_delete_tt__ImagingOptions20Extension(struct soap *soap, tt__ImagingOptions20Extension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ImagingOptions20Extension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ImagingOptions20
#define SOAP_TYPE_tt__ImagingOptions20 (526)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingOptions20(struct soap*, const char*, int, const tt__ImagingOptions20 *, const char*);
SOAP_FMAC3 tt__ImagingOptions20 * SOAP_FMAC4 soap_in_tt__ImagingOptions20(struct soap*, const char*, tt__ImagingOptions20 *, const char*);

#ifndef soap_write_tt__ImagingOptions20
#define soap_write_tt__ImagingOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ImagingOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingOptions20 * SOAP_FMAC4 soap_get_tt__ImagingOptions20(struct soap*, tt__ImagingOptions20 *, const char*, const char*);

#ifndef soap_read_tt__ImagingOptions20
#define soap_read_tt__ImagingOptions20(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ImagingOptions20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ImagingOptions20 * SOAP_FMAC2 soap_instantiate_tt__ImagingOptions20(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingOptions20 * soap_new_tt__ImagingOptions20(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingOptions20(soap, n, NULL, NULL, NULL); }

inline tt__ImagingOptions20 * soap_new_req_tt__ImagingOptions20(struct soap *soap) { tt__ImagingOptions20 *_p = soap_instantiate_tt__ImagingOptions20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ImagingOptions20 * soap_new_set_tt__ImagingOptions20(struct soap *soap, tt__BacklightCompensationOptions20 *BacklightCompensation, tt__FloatRange *Brightness, tt__FloatRange *ColorSaturation, tt__FloatRange *Contrast, tt__ExposureOptions20 *Exposure, tt__FocusOptions20 *Focus, std::vector<enum tt__IrCutFilterMode >& IrCutFilterModes, tt__FloatRange *Sharpness, tt__WideDynamicRangeOptions20 *WideDynamicRange, tt__WhiteBalanceOptions20 *WhiteBalance, tt__ImagingOptions20Extension *Extension) { tt__ImagingOptions20 *_p = soap_instantiate_tt__ImagingOptions20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ImagingOptions20::BacklightCompensation = BacklightCompensation; _p->tt__ImagingOptions20::Brightness = Brightness; _p->tt__ImagingOptions20::ColorSaturation = ColorSaturation; _p->tt__ImagingOptions20::Contrast = Contrast; _p->tt__ImagingOptions20::Exposure = Exposure; _p->tt__ImagingOptions20::Focus = Focus; _p->tt__ImagingOptions20::IrCutFilterModes = IrCutFilterModes; _p->tt__ImagingOptions20::Sharpness = Sharpness; _p->tt__ImagingOptions20::WideDynamicRange = WideDynamicRange; _p->tt__ImagingOptions20::WhiteBalance = WhiteBalance; _p->tt__ImagingOptions20::Extension = Extension; } return _p; }

inline void soap_delete_tt__ImagingOptions20(struct soap *soap, tt__ImagingOptions20 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ImagingOptions20(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Exposure20
#define SOAP_TYPE_tt__Exposure20 (525)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Exposure20(struct soap*, const char*, int, const tt__Exposure20 *, const char*);
SOAP_FMAC3 tt__Exposure20 * SOAP_FMAC4 soap_in_tt__Exposure20(struct soap*, const char*, tt__Exposure20 *, const char*);

#ifndef soap_write_tt__Exposure20
#define soap_write_tt__Exposure20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Exposure20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Exposure20 * SOAP_FMAC4 soap_get_tt__Exposure20(struct soap*, tt__Exposure20 *, const char*, const char*);

#ifndef soap_read_tt__Exposure20
#define soap_read_tt__Exposure20(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Exposure20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Exposure20 * SOAP_FMAC2 soap_instantiate_tt__Exposure20(struct soap*, int, const char*, const char*, size_t*);

inline tt__Exposure20 * soap_new_tt__Exposure20(struct soap *soap, int n = -1) { return soap_instantiate_tt__Exposure20(soap, n, NULL, NULL, NULL); }

inline tt__Exposure20 * soap_new_req_tt__Exposure20(struct soap *soap, enum tt__ExposureMode Mode) { tt__Exposure20 *_p = soap_instantiate_tt__Exposure20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Exposure20::Mode = Mode; } return _p; }

inline tt__Exposure20 * soap_new_set_tt__Exposure20(struct soap *soap, enum tt__ExposureMode Mode, enum tt__ExposurePriority *Priority, tt__Rectangle *Window, float *MinExposureTime, float *MaxExposureTime, float *MinGain, float *MaxGain, float *MinIris, float *MaxIris, float *ExposureTime, float *Gain, float *Iris) { tt__Exposure20 *_p = soap_instantiate_tt__Exposure20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Exposure20::Mode = Mode; _p->tt__Exposure20::Priority = Priority; _p->tt__Exposure20::Window = Window; _p->tt__Exposure20::MinExposureTime = MinExposureTime; _p->tt__Exposure20::MaxExposureTime = MaxExposureTime; _p->tt__Exposure20::MinGain = MinGain; _p->tt__Exposure20::MaxGain = MaxGain; _p->tt__Exposure20::MinIris = MinIris; _p->tt__Exposure20::MaxIris = MaxIris; _p->tt__Exposure20::ExposureTime = ExposureTime; _p->tt__Exposure20::Gain = Gain; _p->tt__Exposure20::Iris = Iris; } return _p; }

inline void soap_delete_tt__Exposure20(struct soap *soap, tt__Exposure20 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Exposure20(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__BacklightCompensation20
#define SOAP_TYPE_tt__BacklightCompensation20 (524)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__BacklightCompensation20(struct soap*, const char*, int, const tt__BacklightCompensation20 *, const char*);
SOAP_FMAC3 tt__BacklightCompensation20 * SOAP_FMAC4 soap_in_tt__BacklightCompensation20(struct soap*, const char*, tt__BacklightCompensation20 *, const char*);

#ifndef soap_write_tt__BacklightCompensation20
#define soap_write_tt__BacklightCompensation20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:BacklightCompensation20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__BacklightCompensation20 * SOAP_FMAC4 soap_get_tt__BacklightCompensation20(struct soap*, tt__BacklightCompensation20 *, const char*, const char*);

#ifndef soap_read_tt__BacklightCompensation20
#define soap_read_tt__BacklightCompensation20(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__BacklightCompensation20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__BacklightCompensation20 * SOAP_FMAC2 soap_instantiate_tt__BacklightCompensation20(struct soap*, int, const char*, const char*, size_t*);

inline tt__BacklightCompensation20 * soap_new_tt__BacklightCompensation20(struct soap *soap, int n = -1) { return soap_instantiate_tt__BacklightCompensation20(soap, n, NULL, NULL, NULL); }

inline tt__BacklightCompensation20 * soap_new_req_tt__BacklightCompensation20(struct soap *soap, enum tt__BacklightCompensationMode Mode) { tt__BacklightCompensation20 *_p = soap_instantiate_tt__BacklightCompensation20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__BacklightCompensation20::Mode = Mode; } return _p; }

inline tt__BacklightCompensation20 * soap_new_set_tt__BacklightCompensation20(struct soap *soap, enum tt__BacklightCompensationMode Mode, float *Level) { tt__BacklightCompensation20 *_p = soap_instantiate_tt__BacklightCompensation20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__BacklightCompensation20::Mode = Mode; _p->tt__BacklightCompensation20::Level = Level; } return _p; }

inline void soap_delete_tt__BacklightCompensation20(struct soap *soap, tt__BacklightCompensation20 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__BacklightCompensation20(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__WideDynamicRange20
#define SOAP_TYPE_tt__WideDynamicRange20 (523)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__WideDynamicRange20(struct soap*, const char*, int, const tt__WideDynamicRange20 *, const char*);
SOAP_FMAC3 tt__WideDynamicRange20 * SOAP_FMAC4 soap_in_tt__WideDynamicRange20(struct soap*, const char*, tt__WideDynamicRange20 *, const char*);

#ifndef soap_write_tt__WideDynamicRange20
#define soap_write_tt__WideDynamicRange20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:WideDynamicRange20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WideDynamicRange20 * SOAP_FMAC4 soap_get_tt__WideDynamicRange20(struct soap*, tt__WideDynamicRange20 *, const char*, const char*);

#ifndef soap_read_tt__WideDynamicRange20
#define soap_read_tt__WideDynamicRange20(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__WideDynamicRange20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__WideDynamicRange20 * SOAP_FMAC2 soap_instantiate_tt__WideDynamicRange20(struct soap*, int, const char*, const char*, size_t*);

inline tt__WideDynamicRange20 * soap_new_tt__WideDynamicRange20(struct soap *soap, int n = -1) { return soap_instantiate_tt__WideDynamicRange20(soap, n, NULL, NULL, NULL); }

inline tt__WideDynamicRange20 * soap_new_req_tt__WideDynamicRange20(struct soap *soap, enum tt__WideDynamicMode Mode) { tt__WideDynamicRange20 *_p = soap_instantiate_tt__WideDynamicRange20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__WideDynamicRange20::Mode = Mode; } return _p; }

inline tt__WideDynamicRange20 * soap_new_set_tt__WideDynamicRange20(struct soap *soap, enum tt__WideDynamicMode Mode, float *Level) { tt__WideDynamicRange20 *_p = soap_instantiate_tt__WideDynamicRange20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__WideDynamicRange20::Mode = Mode; _p->tt__WideDynamicRange20::Level = Level; } return _p; }

inline void soap_delete_tt__WideDynamicRange20(struct soap *soap, tt__WideDynamicRange20 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__WideDynamicRange20(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__IrCutFilterAutoAdjustmentExtension
#define SOAP_TYPE_tt__IrCutFilterAutoAdjustmentExtension (522)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IrCutFilterAutoAdjustmentExtension(struct soap*, const char*, int, const tt__IrCutFilterAutoAdjustmentExtension *, const char*);
SOAP_FMAC3 tt__IrCutFilterAutoAdjustmentExtension * SOAP_FMAC4 soap_in_tt__IrCutFilterAutoAdjustmentExtension(struct soap*, const char*, tt__IrCutFilterAutoAdjustmentExtension *, const char*);

#ifndef soap_write_tt__IrCutFilterAutoAdjustmentExtension
#define soap_write_tt__IrCutFilterAutoAdjustmentExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:IrCutFilterAutoAdjustmentExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IrCutFilterAutoAdjustmentExtension * SOAP_FMAC4 soap_get_tt__IrCutFilterAutoAdjustmentExtension(struct soap*, tt__IrCutFilterAutoAdjustmentExtension *, const char*, const char*);

#ifndef soap_read_tt__IrCutFilterAutoAdjustmentExtension
#define soap_read_tt__IrCutFilterAutoAdjustmentExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IrCutFilterAutoAdjustmentExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__IrCutFilterAutoAdjustmentExtension * SOAP_FMAC2 soap_instantiate_tt__IrCutFilterAutoAdjustmentExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__IrCutFilterAutoAdjustmentExtension * soap_new_tt__IrCutFilterAutoAdjustmentExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__IrCutFilterAutoAdjustmentExtension(soap, n, NULL, NULL, NULL); }

inline tt__IrCutFilterAutoAdjustmentExtension * soap_new_req_tt__IrCutFilterAutoAdjustmentExtension(struct soap *soap) { tt__IrCutFilterAutoAdjustmentExtension *_p = soap_instantiate_tt__IrCutFilterAutoAdjustmentExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__IrCutFilterAutoAdjustmentExtension * soap_new_set_tt__IrCutFilterAutoAdjustmentExtension(struct soap *soap) { tt__IrCutFilterAutoAdjustmentExtension *_p = soap_instantiate_tt__IrCutFilterAutoAdjustmentExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__IrCutFilterAutoAdjustmentExtension(struct soap *soap, tt__IrCutFilterAutoAdjustmentExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__IrCutFilterAutoAdjustmentExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__IrCutFilterAutoAdjustment
#define SOAP_TYPE_tt__IrCutFilterAutoAdjustment (521)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IrCutFilterAutoAdjustment(struct soap*, const char*, int, const tt__IrCutFilterAutoAdjustment *, const char*);
SOAP_FMAC3 tt__IrCutFilterAutoAdjustment * SOAP_FMAC4 soap_in_tt__IrCutFilterAutoAdjustment(struct soap*, const char*, tt__IrCutFilterAutoAdjustment *, const char*);

#ifndef soap_write_tt__IrCutFilterAutoAdjustment
#define soap_write_tt__IrCutFilterAutoAdjustment(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:IrCutFilterAutoAdjustment", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IrCutFilterAutoAdjustment * SOAP_FMAC4 soap_get_tt__IrCutFilterAutoAdjustment(struct soap*, tt__IrCutFilterAutoAdjustment *, const char*, const char*);

#ifndef soap_read_tt__IrCutFilterAutoAdjustment
#define soap_read_tt__IrCutFilterAutoAdjustment(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IrCutFilterAutoAdjustment(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__IrCutFilterAutoAdjustment * SOAP_FMAC2 soap_instantiate_tt__IrCutFilterAutoAdjustment(struct soap*, int, const char*, const char*, size_t*);

inline tt__IrCutFilterAutoAdjustment * soap_new_tt__IrCutFilterAutoAdjustment(struct soap *soap, int n = -1) { return soap_instantiate_tt__IrCutFilterAutoAdjustment(soap, n, NULL, NULL, NULL); }

inline tt__IrCutFilterAutoAdjustment * soap_new_req_tt__IrCutFilterAutoAdjustment(struct soap *soap, std::string& BoundaryType) { tt__IrCutFilterAutoAdjustment *_p = soap_instantiate_tt__IrCutFilterAutoAdjustment(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IrCutFilterAutoAdjustment::BoundaryType = BoundaryType; } return _p; }

inline tt__IrCutFilterAutoAdjustment * soap_new_set_tt__IrCutFilterAutoAdjustment(struct soap *soap, std::string& BoundaryType, float *BoundaryOffset, LONG64 *ResponseTime, tt__IrCutFilterAutoAdjustmentExtension *Extension) { tt__IrCutFilterAutoAdjustment *_p = soap_instantiate_tt__IrCutFilterAutoAdjustment(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IrCutFilterAutoAdjustment::BoundaryType = BoundaryType; _p->tt__IrCutFilterAutoAdjustment::BoundaryOffset = BoundaryOffset; _p->tt__IrCutFilterAutoAdjustment::ResponseTime = ResponseTime; _p->tt__IrCutFilterAutoAdjustment::Extension = Extension; } return _p; }

inline void soap_delete_tt__IrCutFilterAutoAdjustment(struct soap *soap, tt__IrCutFilterAutoAdjustment *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__IrCutFilterAutoAdjustment(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ImageStabilizationExtension
#define SOAP_TYPE_tt__ImageStabilizationExtension (520)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImageStabilizationExtension(struct soap*, const char*, int, const tt__ImageStabilizationExtension *, const char*);
SOAP_FMAC3 tt__ImageStabilizationExtension * SOAP_FMAC4 soap_in_tt__ImageStabilizationExtension(struct soap*, const char*, tt__ImageStabilizationExtension *, const char*);

#ifndef soap_write_tt__ImageStabilizationExtension
#define soap_write_tt__ImageStabilizationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ImageStabilizationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImageStabilizationExtension * SOAP_FMAC4 soap_get_tt__ImageStabilizationExtension(struct soap*, tt__ImageStabilizationExtension *, const char*, const char*);

#ifndef soap_read_tt__ImageStabilizationExtension
#define soap_read_tt__ImageStabilizationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ImageStabilizationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ImageStabilizationExtension * SOAP_FMAC2 soap_instantiate_tt__ImageStabilizationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImageStabilizationExtension * soap_new_tt__ImageStabilizationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImageStabilizationExtension(soap, n, NULL, NULL, NULL); }

inline tt__ImageStabilizationExtension * soap_new_req_tt__ImageStabilizationExtension(struct soap *soap) { tt__ImageStabilizationExtension *_p = soap_instantiate_tt__ImageStabilizationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ImageStabilizationExtension * soap_new_set_tt__ImageStabilizationExtension(struct soap *soap) { tt__ImageStabilizationExtension *_p = soap_instantiate_tt__ImageStabilizationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__ImageStabilizationExtension(struct soap *soap, tt__ImageStabilizationExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ImageStabilizationExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ImageStabilization
#define SOAP_TYPE_tt__ImageStabilization (519)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImageStabilization(struct soap*, const char*, int, const tt__ImageStabilization *, const char*);
SOAP_FMAC3 tt__ImageStabilization * SOAP_FMAC4 soap_in_tt__ImageStabilization(struct soap*, const char*, tt__ImageStabilization *, const char*);

#ifndef soap_write_tt__ImageStabilization
#define soap_write_tt__ImageStabilization(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ImageStabilization", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImageStabilization * SOAP_FMAC4 soap_get_tt__ImageStabilization(struct soap*, tt__ImageStabilization *, const char*, const char*);

#ifndef soap_read_tt__ImageStabilization
#define soap_read_tt__ImageStabilization(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ImageStabilization(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ImageStabilization * SOAP_FMAC2 soap_instantiate_tt__ImageStabilization(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImageStabilization * soap_new_tt__ImageStabilization(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImageStabilization(soap, n, NULL, NULL, NULL); }

inline tt__ImageStabilization * soap_new_req_tt__ImageStabilization(struct soap *soap, enum tt__ImageStabilizationMode Mode) { tt__ImageStabilization *_p = soap_instantiate_tt__ImageStabilization(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ImageStabilization::Mode = Mode; } return _p; }

inline tt__ImageStabilization * soap_new_set_tt__ImageStabilization(struct soap *soap, enum tt__ImageStabilizationMode Mode, float *Level, tt__ImageStabilizationExtension *Extension) { tt__ImageStabilization *_p = soap_instantiate_tt__ImageStabilization(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ImageStabilization::Mode = Mode; _p->tt__ImageStabilization::Level = Level; _p->tt__ImageStabilization::Extension = Extension; } return _p; }

inline void soap_delete_tt__ImageStabilization(struct soap *soap, tt__ImageStabilization *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ImageStabilization(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ImagingSettingsExtension203
#define SOAP_TYPE_tt__ImagingSettingsExtension203 (518)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingSettingsExtension203(struct soap*, const char*, int, const tt__ImagingSettingsExtension203 *, const char*);
SOAP_FMAC3 tt__ImagingSettingsExtension203 * SOAP_FMAC4 soap_in_tt__ImagingSettingsExtension203(struct soap*, const char*, tt__ImagingSettingsExtension203 *, const char*);

#ifndef soap_write_tt__ImagingSettingsExtension203
#define soap_write_tt__ImagingSettingsExtension203(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ImagingSettingsExtension203", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingSettingsExtension203 * SOAP_FMAC4 soap_get_tt__ImagingSettingsExtension203(struct soap*, tt__ImagingSettingsExtension203 *, const char*, const char*);

#ifndef soap_read_tt__ImagingSettingsExtension203
#define soap_read_tt__ImagingSettingsExtension203(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ImagingSettingsExtension203(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ImagingSettingsExtension203 * SOAP_FMAC2 soap_instantiate_tt__ImagingSettingsExtension203(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingSettingsExtension203 * soap_new_tt__ImagingSettingsExtension203(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingSettingsExtension203(soap, n, NULL, NULL, NULL); }

inline tt__ImagingSettingsExtension203 * soap_new_req_tt__ImagingSettingsExtension203(struct soap *soap) { tt__ImagingSettingsExtension203 *_p = soap_instantiate_tt__ImagingSettingsExtension203(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ImagingSettingsExtension203 * soap_new_set_tt__ImagingSettingsExtension203(struct soap *soap) { tt__ImagingSettingsExtension203 *_p = soap_instantiate_tt__ImagingSettingsExtension203(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__ImagingSettingsExtension203(struct soap *soap, tt__ImagingSettingsExtension203 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ImagingSettingsExtension203(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ImagingSettingsExtension202
#define SOAP_TYPE_tt__ImagingSettingsExtension202 (517)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingSettingsExtension202(struct soap*, const char*, int, const tt__ImagingSettingsExtension202 *, const char*);
SOAP_FMAC3 tt__ImagingSettingsExtension202 * SOAP_FMAC4 soap_in_tt__ImagingSettingsExtension202(struct soap*, const char*, tt__ImagingSettingsExtension202 *, const char*);

#ifndef soap_write_tt__ImagingSettingsExtension202
#define soap_write_tt__ImagingSettingsExtension202(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ImagingSettingsExtension202", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingSettingsExtension202 * SOAP_FMAC4 soap_get_tt__ImagingSettingsExtension202(struct soap*, tt__ImagingSettingsExtension202 *, const char*, const char*);

#ifndef soap_read_tt__ImagingSettingsExtension202
#define soap_read_tt__ImagingSettingsExtension202(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ImagingSettingsExtension202(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ImagingSettingsExtension202 * SOAP_FMAC2 soap_instantiate_tt__ImagingSettingsExtension202(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingSettingsExtension202 * soap_new_tt__ImagingSettingsExtension202(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingSettingsExtension202(soap, n, NULL, NULL, NULL); }

inline tt__ImagingSettingsExtension202 * soap_new_req_tt__ImagingSettingsExtension202(struct soap *soap) { tt__ImagingSettingsExtension202 *_p = soap_instantiate_tt__ImagingSettingsExtension202(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ImagingSettingsExtension202 * soap_new_set_tt__ImagingSettingsExtension202(struct soap *soap, std::vector<tt__IrCutFilterAutoAdjustment * >& IrCutFilterAutoAdjustment, tt__ImagingSettingsExtension203 *Extension) { tt__ImagingSettingsExtension202 *_p = soap_instantiate_tt__ImagingSettingsExtension202(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ImagingSettingsExtension202::IrCutFilterAutoAdjustment = IrCutFilterAutoAdjustment; _p->tt__ImagingSettingsExtension202::Extension = Extension; } return _p; }

inline void soap_delete_tt__ImagingSettingsExtension202(struct soap *soap, tt__ImagingSettingsExtension202 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ImagingSettingsExtension202(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ImagingSettingsExtension20
#define SOAP_TYPE_tt__ImagingSettingsExtension20 (516)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingSettingsExtension20(struct soap*, const char*, int, const tt__ImagingSettingsExtension20 *, const char*);
SOAP_FMAC3 tt__ImagingSettingsExtension20 * SOAP_FMAC4 soap_in_tt__ImagingSettingsExtension20(struct soap*, const char*, tt__ImagingSettingsExtension20 *, const char*);

#ifndef soap_write_tt__ImagingSettingsExtension20
#define soap_write_tt__ImagingSettingsExtension20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ImagingSettingsExtension20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingSettingsExtension20 * SOAP_FMAC4 soap_get_tt__ImagingSettingsExtension20(struct soap*, tt__ImagingSettingsExtension20 *, const char*, const char*);

#ifndef soap_read_tt__ImagingSettingsExtension20
#define soap_read_tt__ImagingSettingsExtension20(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ImagingSettingsExtension20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ImagingSettingsExtension20 * SOAP_FMAC2 soap_instantiate_tt__ImagingSettingsExtension20(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingSettingsExtension20 * soap_new_tt__ImagingSettingsExtension20(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingSettingsExtension20(soap, n, NULL, NULL, NULL); }

inline tt__ImagingSettingsExtension20 * soap_new_req_tt__ImagingSettingsExtension20(struct soap *soap) { tt__ImagingSettingsExtension20 *_p = soap_instantiate_tt__ImagingSettingsExtension20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ImagingSettingsExtension20 * soap_new_set_tt__ImagingSettingsExtension20(struct soap *soap, tt__ImageStabilization *ImageStabilization, tt__ImagingSettingsExtension202 *Extension) { tt__ImagingSettingsExtension20 *_p = soap_instantiate_tt__ImagingSettingsExtension20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ImagingSettingsExtension20::ImageStabilization = ImageStabilization; _p->tt__ImagingSettingsExtension20::Extension = Extension; } return _p; }

inline void soap_delete_tt__ImagingSettingsExtension20(struct soap *soap, tt__ImagingSettingsExtension20 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ImagingSettingsExtension20(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ImagingSettings20
#define SOAP_TYPE_tt__ImagingSettings20 (515)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingSettings20(struct soap*, const char*, int, const tt__ImagingSettings20 *, const char*);
SOAP_FMAC3 tt__ImagingSettings20 * SOAP_FMAC4 soap_in_tt__ImagingSettings20(struct soap*, const char*, tt__ImagingSettings20 *, const char*);

#ifndef soap_write_tt__ImagingSettings20
#define soap_write_tt__ImagingSettings20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ImagingSettings20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingSettings20 * SOAP_FMAC4 soap_get_tt__ImagingSettings20(struct soap*, tt__ImagingSettings20 *, const char*, const char*);

#ifndef soap_read_tt__ImagingSettings20
#define soap_read_tt__ImagingSettings20(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ImagingSettings20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ImagingSettings20 * SOAP_FMAC2 soap_instantiate_tt__ImagingSettings20(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingSettings20 * soap_new_tt__ImagingSettings20(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingSettings20(soap, n, NULL, NULL, NULL); }

inline tt__ImagingSettings20 * soap_new_req_tt__ImagingSettings20(struct soap *soap) { tt__ImagingSettings20 *_p = soap_instantiate_tt__ImagingSettings20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ImagingSettings20 * soap_new_set_tt__ImagingSettings20(struct soap *soap, tt__BacklightCompensation20 *BacklightCompensation, float *Brightness, float *ColorSaturation, float *Contrast, tt__Exposure20 *Exposure, tt__FocusConfiguration20 *Focus, enum tt__IrCutFilterMode *IrCutFilter, float *Sharpness, tt__WideDynamicRange20 *WideDynamicRange, tt__WhiteBalance20 *WhiteBalance, tt__ImagingSettingsExtension20 *Extension) { tt__ImagingSettings20 *_p = soap_instantiate_tt__ImagingSettings20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ImagingSettings20::BacklightCompensation = BacklightCompensation; _p->tt__ImagingSettings20::Brightness = Brightness; _p->tt__ImagingSettings20::ColorSaturation = ColorSaturation; _p->tt__ImagingSettings20::Contrast = Contrast; _p->tt__ImagingSettings20::Exposure = Exposure; _p->tt__ImagingSettings20::Focus = Focus; _p->tt__ImagingSettings20::IrCutFilter = IrCutFilter; _p->tt__ImagingSettings20::Sharpness = Sharpness; _p->tt__ImagingSettings20::WideDynamicRange = WideDynamicRange; _p->tt__ImagingSettings20::WhiteBalance = WhiteBalance; _p->tt__ImagingSettings20::Extension = Extension; } return _p; }

inline void soap_delete_tt__ImagingSettings20(struct soap *soap, tt__ImagingSettings20 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ImagingSettings20(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__FocusStatus20Extension
#define SOAP_TYPE_tt__FocusStatus20Extension (514)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FocusStatus20Extension(struct soap*, const char*, int, const tt__FocusStatus20Extension *, const char*);
SOAP_FMAC3 tt__FocusStatus20Extension * SOAP_FMAC4 soap_in_tt__FocusStatus20Extension(struct soap*, const char*, tt__FocusStatus20Extension *, const char*);

#ifndef soap_write_tt__FocusStatus20Extension
#define soap_write_tt__FocusStatus20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:FocusStatus20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusStatus20Extension * SOAP_FMAC4 soap_get_tt__FocusStatus20Extension(struct soap*, tt__FocusStatus20Extension *, const char*, const char*);

#ifndef soap_read_tt__FocusStatus20Extension
#define soap_read_tt__FocusStatus20Extension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__FocusStatus20Extension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__FocusStatus20Extension * SOAP_FMAC2 soap_instantiate_tt__FocusStatus20Extension(struct soap*, int, const char*, const char*, size_t*);

inline tt__FocusStatus20Extension * soap_new_tt__FocusStatus20Extension(struct soap *soap, int n = -1) { return soap_instantiate_tt__FocusStatus20Extension(soap, n, NULL, NULL, NULL); }

inline tt__FocusStatus20Extension * soap_new_req_tt__FocusStatus20Extension(struct soap *soap) { tt__FocusStatus20Extension *_p = soap_instantiate_tt__FocusStatus20Extension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__FocusStatus20Extension * soap_new_set_tt__FocusStatus20Extension(struct soap *soap) { tt__FocusStatus20Extension *_p = soap_instantiate_tt__FocusStatus20Extension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__FocusStatus20Extension(struct soap *soap, tt__FocusStatus20Extension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__FocusStatus20Extension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__FocusStatus20
#define SOAP_TYPE_tt__FocusStatus20 (513)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FocusStatus20(struct soap*, const char*, int, const tt__FocusStatus20 *, const char*);
SOAP_FMAC3 tt__FocusStatus20 * SOAP_FMAC4 soap_in_tt__FocusStatus20(struct soap*, const char*, tt__FocusStatus20 *, const char*);

#ifndef soap_write_tt__FocusStatus20
#define soap_write_tt__FocusStatus20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:FocusStatus20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusStatus20 * SOAP_FMAC4 soap_get_tt__FocusStatus20(struct soap*, tt__FocusStatus20 *, const char*, const char*);

#ifndef soap_read_tt__FocusStatus20
#define soap_read_tt__FocusStatus20(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__FocusStatus20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__FocusStatus20 * SOAP_FMAC2 soap_instantiate_tt__FocusStatus20(struct soap*, int, const char*, const char*, size_t*);

inline tt__FocusStatus20 * soap_new_tt__FocusStatus20(struct soap *soap, int n = -1) { return soap_instantiate_tt__FocusStatus20(soap, n, NULL, NULL, NULL); }

inline tt__FocusStatus20 * soap_new_req_tt__FocusStatus20(struct soap *soap, float Position, enum tt__MoveStatus MoveStatus) { tt__FocusStatus20 *_p = soap_instantiate_tt__FocusStatus20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FocusStatus20::Position = Position; _p->tt__FocusStatus20::MoveStatus = MoveStatus; } return _p; }

inline tt__FocusStatus20 * soap_new_set_tt__FocusStatus20(struct soap *soap, float Position, enum tt__MoveStatus MoveStatus, std::string *Error, tt__FocusStatus20Extension *Extension) { tt__FocusStatus20 *_p = soap_instantiate_tt__FocusStatus20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FocusStatus20::Position = Position; _p->tt__FocusStatus20::MoveStatus = MoveStatus; _p->tt__FocusStatus20::Error = Error; _p->tt__FocusStatus20::Extension = Extension; } return _p; }

inline void soap_delete_tt__FocusStatus20(struct soap *soap, tt__FocusStatus20 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__FocusStatus20(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ImagingStatus20Extension
#define SOAP_TYPE_tt__ImagingStatus20Extension (512)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingStatus20Extension(struct soap*, const char*, int, const tt__ImagingStatus20Extension *, const char*);
SOAP_FMAC3 tt__ImagingStatus20Extension * SOAP_FMAC4 soap_in_tt__ImagingStatus20Extension(struct soap*, const char*, tt__ImagingStatus20Extension *, const char*);

#ifndef soap_write_tt__ImagingStatus20Extension
#define soap_write_tt__ImagingStatus20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ImagingStatus20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingStatus20Extension * SOAP_FMAC4 soap_get_tt__ImagingStatus20Extension(struct soap*, tt__ImagingStatus20Extension *, const char*, const char*);

#ifndef soap_read_tt__ImagingStatus20Extension
#define soap_read_tt__ImagingStatus20Extension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ImagingStatus20Extension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ImagingStatus20Extension * SOAP_FMAC2 soap_instantiate_tt__ImagingStatus20Extension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingStatus20Extension * soap_new_tt__ImagingStatus20Extension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingStatus20Extension(soap, n, NULL, NULL, NULL); }

inline tt__ImagingStatus20Extension * soap_new_req_tt__ImagingStatus20Extension(struct soap *soap) { tt__ImagingStatus20Extension *_p = soap_instantiate_tt__ImagingStatus20Extension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ImagingStatus20Extension * soap_new_set_tt__ImagingStatus20Extension(struct soap *soap) { tt__ImagingStatus20Extension *_p = soap_instantiate_tt__ImagingStatus20Extension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__ImagingStatus20Extension(struct soap *soap, tt__ImagingStatus20Extension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ImagingStatus20Extension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ImagingStatus20
#define SOAP_TYPE_tt__ImagingStatus20 (511)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingStatus20(struct soap*, const char*, int, const tt__ImagingStatus20 *, const char*);
SOAP_FMAC3 tt__ImagingStatus20 * SOAP_FMAC4 soap_in_tt__ImagingStatus20(struct soap*, const char*, tt__ImagingStatus20 *, const char*);

#ifndef soap_write_tt__ImagingStatus20
#define soap_write_tt__ImagingStatus20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ImagingStatus20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingStatus20 * SOAP_FMAC4 soap_get_tt__ImagingStatus20(struct soap*, tt__ImagingStatus20 *, const char*, const char*);

#ifndef soap_read_tt__ImagingStatus20
#define soap_read_tt__ImagingStatus20(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ImagingStatus20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ImagingStatus20 * SOAP_FMAC2 soap_instantiate_tt__ImagingStatus20(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingStatus20 * soap_new_tt__ImagingStatus20(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingStatus20(soap, n, NULL, NULL, NULL); }

inline tt__ImagingStatus20 * soap_new_req_tt__ImagingStatus20(struct soap *soap) { tt__ImagingStatus20 *_p = soap_instantiate_tt__ImagingStatus20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ImagingStatus20 * soap_new_set_tt__ImagingStatus20(struct soap *soap, tt__FocusStatus20 *FocusStatus20, tt__ImagingStatus20Extension *Extension) { tt__ImagingStatus20 *_p = soap_instantiate_tt__ImagingStatus20(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ImagingStatus20::FocusStatus20 = FocusStatus20; _p->tt__ImagingStatus20::Extension = Extension; } return _p; }

inline void soap_delete_tt__ImagingStatus20(struct soap *soap, tt__ImagingStatus20 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ImagingStatus20(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__WhiteBalance
#define SOAP_TYPE_tt__WhiteBalance (510)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__WhiteBalance(struct soap*, const char*, int, const tt__WhiteBalance *, const char*);
SOAP_FMAC3 tt__WhiteBalance * SOAP_FMAC4 soap_in_tt__WhiteBalance(struct soap*, const char*, tt__WhiteBalance *, const char*);

#ifndef soap_write_tt__WhiteBalance
#define soap_write_tt__WhiteBalance(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:WhiteBalance", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WhiteBalance * SOAP_FMAC4 soap_get_tt__WhiteBalance(struct soap*, tt__WhiteBalance *, const char*, const char*);

#ifndef soap_read_tt__WhiteBalance
#define soap_read_tt__WhiteBalance(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__WhiteBalance(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__WhiteBalance * SOAP_FMAC2 soap_instantiate_tt__WhiteBalance(struct soap*, int, const char*, const char*, size_t*);

inline tt__WhiteBalance * soap_new_tt__WhiteBalance(struct soap *soap, int n = -1) { return soap_instantiate_tt__WhiteBalance(soap, n, NULL, NULL, NULL); }

inline tt__WhiteBalance * soap_new_req_tt__WhiteBalance(struct soap *soap, enum tt__WhiteBalanceMode Mode, float CrGain, float CbGain) { tt__WhiteBalance *_p = soap_instantiate_tt__WhiteBalance(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__WhiteBalance::Mode = Mode; _p->tt__WhiteBalance::CrGain = CrGain; _p->tt__WhiteBalance::CbGain = CbGain; } return _p; }

inline tt__WhiteBalance * soap_new_set_tt__WhiteBalance(struct soap *soap, enum tt__WhiteBalanceMode Mode, float CrGain, float CbGain) { tt__WhiteBalance *_p = soap_instantiate_tt__WhiteBalance(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__WhiteBalance::Mode = Mode; _p->tt__WhiteBalance::CrGain = CrGain; _p->tt__WhiteBalance::CbGain = CbGain; } return _p; }

inline void soap_delete_tt__WhiteBalance(struct soap *soap, tt__WhiteBalance *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__WhiteBalance(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ContinuousFocusOptions
#define SOAP_TYPE_tt__ContinuousFocusOptions (509)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ContinuousFocusOptions(struct soap*, const char*, int, const tt__ContinuousFocusOptions *, const char*);
SOAP_FMAC3 tt__ContinuousFocusOptions * SOAP_FMAC4 soap_in_tt__ContinuousFocusOptions(struct soap*, const char*, tt__ContinuousFocusOptions *, const char*);

#ifndef soap_write_tt__ContinuousFocusOptions
#define soap_write_tt__ContinuousFocusOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ContinuousFocusOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ContinuousFocusOptions * SOAP_FMAC4 soap_get_tt__ContinuousFocusOptions(struct soap*, tt__ContinuousFocusOptions *, const char*, const char*);

#ifndef soap_read_tt__ContinuousFocusOptions
#define soap_read_tt__ContinuousFocusOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ContinuousFocusOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ContinuousFocusOptions * SOAP_FMAC2 soap_instantiate_tt__ContinuousFocusOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__ContinuousFocusOptions * soap_new_tt__ContinuousFocusOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__ContinuousFocusOptions(soap, n, NULL, NULL, NULL); }

inline tt__ContinuousFocusOptions * soap_new_req_tt__ContinuousFocusOptions(struct soap *soap, tt__FloatRange *Speed) { tt__ContinuousFocusOptions *_p = soap_instantiate_tt__ContinuousFocusOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ContinuousFocusOptions::Speed = Speed; } return _p; }

inline tt__ContinuousFocusOptions * soap_new_set_tt__ContinuousFocusOptions(struct soap *soap, tt__FloatRange *Speed) { tt__ContinuousFocusOptions *_p = soap_instantiate_tt__ContinuousFocusOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ContinuousFocusOptions::Speed = Speed; } return _p; }

inline void soap_delete_tt__ContinuousFocusOptions(struct soap *soap, tt__ContinuousFocusOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ContinuousFocusOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RelativeFocusOptions
#define SOAP_TYPE_tt__RelativeFocusOptions (508)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RelativeFocusOptions(struct soap*, const char*, int, const tt__RelativeFocusOptions *, const char*);
SOAP_FMAC3 tt__RelativeFocusOptions * SOAP_FMAC4 soap_in_tt__RelativeFocusOptions(struct soap*, const char*, tt__RelativeFocusOptions *, const char*);

#ifndef soap_write_tt__RelativeFocusOptions
#define soap_write_tt__RelativeFocusOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RelativeFocusOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RelativeFocusOptions * SOAP_FMAC4 soap_get_tt__RelativeFocusOptions(struct soap*, tt__RelativeFocusOptions *, const char*, const char*);

#ifndef soap_read_tt__RelativeFocusOptions
#define soap_read_tt__RelativeFocusOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RelativeFocusOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RelativeFocusOptions * SOAP_FMAC2 soap_instantiate_tt__RelativeFocusOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__RelativeFocusOptions * soap_new_tt__RelativeFocusOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__RelativeFocusOptions(soap, n, NULL, NULL, NULL); }

inline tt__RelativeFocusOptions * soap_new_req_tt__RelativeFocusOptions(struct soap *soap, tt__FloatRange *Distance, tt__FloatRange *Speed) { tt__RelativeFocusOptions *_p = soap_instantiate_tt__RelativeFocusOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RelativeFocusOptions::Distance = Distance; _p->tt__RelativeFocusOptions::Speed = Speed; } return _p; }

inline tt__RelativeFocusOptions * soap_new_set_tt__RelativeFocusOptions(struct soap *soap, tt__FloatRange *Distance, tt__FloatRange *Speed) { tt__RelativeFocusOptions *_p = soap_instantiate_tt__RelativeFocusOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RelativeFocusOptions::Distance = Distance; _p->tt__RelativeFocusOptions::Speed = Speed; } return _p; }

inline void soap_delete_tt__RelativeFocusOptions(struct soap *soap, tt__RelativeFocusOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RelativeFocusOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AbsoluteFocusOptions
#define SOAP_TYPE_tt__AbsoluteFocusOptions (507)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AbsoluteFocusOptions(struct soap*, const char*, int, const tt__AbsoluteFocusOptions *, const char*);
SOAP_FMAC3 tt__AbsoluteFocusOptions * SOAP_FMAC4 soap_in_tt__AbsoluteFocusOptions(struct soap*, const char*, tt__AbsoluteFocusOptions *, const char*);

#ifndef soap_write_tt__AbsoluteFocusOptions
#define soap_write_tt__AbsoluteFocusOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AbsoluteFocusOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AbsoluteFocusOptions * SOAP_FMAC4 soap_get_tt__AbsoluteFocusOptions(struct soap*, tt__AbsoluteFocusOptions *, const char*, const char*);

#ifndef soap_read_tt__AbsoluteFocusOptions
#define soap_read_tt__AbsoluteFocusOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AbsoluteFocusOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AbsoluteFocusOptions * SOAP_FMAC2 soap_instantiate_tt__AbsoluteFocusOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__AbsoluteFocusOptions * soap_new_tt__AbsoluteFocusOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__AbsoluteFocusOptions(soap, n, NULL, NULL, NULL); }

inline tt__AbsoluteFocusOptions * soap_new_req_tt__AbsoluteFocusOptions(struct soap *soap, tt__FloatRange *Position) { tt__AbsoluteFocusOptions *_p = soap_instantiate_tt__AbsoluteFocusOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AbsoluteFocusOptions::Position = Position; } return _p; }

inline tt__AbsoluteFocusOptions * soap_new_set_tt__AbsoluteFocusOptions(struct soap *soap, tt__FloatRange *Position, tt__FloatRange *Speed) { tt__AbsoluteFocusOptions *_p = soap_instantiate_tt__AbsoluteFocusOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AbsoluteFocusOptions::Position = Position; _p->tt__AbsoluteFocusOptions::Speed = Speed; } return _p; }

inline void soap_delete_tt__AbsoluteFocusOptions(struct soap *soap, tt__AbsoluteFocusOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AbsoluteFocusOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__MoveOptions
#define SOAP_TYPE_tt__MoveOptions (506)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MoveOptions(struct soap*, const char*, int, const tt__MoveOptions *, const char*);
SOAP_FMAC3 tt__MoveOptions * SOAP_FMAC4 soap_in_tt__MoveOptions(struct soap*, const char*, tt__MoveOptions *, const char*);

#ifndef soap_write_tt__MoveOptions
#define soap_write_tt__MoveOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:MoveOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MoveOptions * SOAP_FMAC4 soap_get_tt__MoveOptions(struct soap*, tt__MoveOptions *, const char*, const char*);

#ifndef soap_read_tt__MoveOptions
#define soap_read_tt__MoveOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__MoveOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__MoveOptions * SOAP_FMAC2 soap_instantiate_tt__MoveOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__MoveOptions * soap_new_tt__MoveOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__MoveOptions(soap, n, NULL, NULL, NULL); }

inline tt__MoveOptions * soap_new_req_tt__MoveOptions(struct soap *soap) { tt__MoveOptions *_p = soap_instantiate_tt__MoveOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__MoveOptions * soap_new_set_tt__MoveOptions(struct soap *soap, tt__AbsoluteFocusOptions *Absolute, tt__RelativeFocusOptions *Relative, tt__ContinuousFocusOptions *Continuous) { tt__MoveOptions *_p = soap_instantiate_tt__MoveOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MoveOptions::Absolute = Absolute; _p->tt__MoveOptions::Relative = Relative; _p->tt__MoveOptions::Continuous = Continuous; } return _p; }

inline void soap_delete_tt__MoveOptions(struct soap *soap, tt__MoveOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__MoveOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ContinuousFocus
#define SOAP_TYPE_tt__ContinuousFocus (505)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ContinuousFocus(struct soap*, const char*, int, const tt__ContinuousFocus *, const char*);
SOAP_FMAC3 tt__ContinuousFocus * SOAP_FMAC4 soap_in_tt__ContinuousFocus(struct soap*, const char*, tt__ContinuousFocus *, const char*);

#ifndef soap_write_tt__ContinuousFocus
#define soap_write_tt__ContinuousFocus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ContinuousFocus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ContinuousFocus * SOAP_FMAC4 soap_get_tt__ContinuousFocus(struct soap*, tt__ContinuousFocus *, const char*, const char*);

#ifndef soap_read_tt__ContinuousFocus
#define soap_read_tt__ContinuousFocus(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ContinuousFocus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ContinuousFocus * SOAP_FMAC2 soap_instantiate_tt__ContinuousFocus(struct soap*, int, const char*, const char*, size_t*);

inline tt__ContinuousFocus * soap_new_tt__ContinuousFocus(struct soap *soap, int n = -1) { return soap_instantiate_tt__ContinuousFocus(soap, n, NULL, NULL, NULL); }

inline tt__ContinuousFocus * soap_new_req_tt__ContinuousFocus(struct soap *soap, float Speed) { tt__ContinuousFocus *_p = soap_instantiate_tt__ContinuousFocus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ContinuousFocus::Speed = Speed; } return _p; }

inline tt__ContinuousFocus * soap_new_set_tt__ContinuousFocus(struct soap *soap, float Speed) { tt__ContinuousFocus *_p = soap_instantiate_tt__ContinuousFocus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ContinuousFocus::Speed = Speed; } return _p; }

inline void soap_delete_tt__ContinuousFocus(struct soap *soap, tt__ContinuousFocus *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ContinuousFocus(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RelativeFocus
#define SOAP_TYPE_tt__RelativeFocus (504)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RelativeFocus(struct soap*, const char*, int, const tt__RelativeFocus *, const char*);
SOAP_FMAC3 tt__RelativeFocus * SOAP_FMAC4 soap_in_tt__RelativeFocus(struct soap*, const char*, tt__RelativeFocus *, const char*);

#ifndef soap_write_tt__RelativeFocus
#define soap_write_tt__RelativeFocus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RelativeFocus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RelativeFocus * SOAP_FMAC4 soap_get_tt__RelativeFocus(struct soap*, tt__RelativeFocus *, const char*, const char*);

#ifndef soap_read_tt__RelativeFocus
#define soap_read_tt__RelativeFocus(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RelativeFocus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RelativeFocus * SOAP_FMAC2 soap_instantiate_tt__RelativeFocus(struct soap*, int, const char*, const char*, size_t*);

inline tt__RelativeFocus * soap_new_tt__RelativeFocus(struct soap *soap, int n = -1) { return soap_instantiate_tt__RelativeFocus(soap, n, NULL, NULL, NULL); }

inline tt__RelativeFocus * soap_new_req_tt__RelativeFocus(struct soap *soap, float Distance) { tt__RelativeFocus *_p = soap_instantiate_tt__RelativeFocus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RelativeFocus::Distance = Distance; } return _p; }

inline tt__RelativeFocus * soap_new_set_tt__RelativeFocus(struct soap *soap, float Distance, float *Speed) { tt__RelativeFocus *_p = soap_instantiate_tt__RelativeFocus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RelativeFocus::Distance = Distance; _p->tt__RelativeFocus::Speed = Speed; } return _p; }

inline void soap_delete_tt__RelativeFocus(struct soap *soap, tt__RelativeFocus *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RelativeFocus(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AbsoluteFocus
#define SOAP_TYPE_tt__AbsoluteFocus (503)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AbsoluteFocus(struct soap*, const char*, int, const tt__AbsoluteFocus *, const char*);
SOAP_FMAC3 tt__AbsoluteFocus * SOAP_FMAC4 soap_in_tt__AbsoluteFocus(struct soap*, const char*, tt__AbsoluteFocus *, const char*);

#ifndef soap_write_tt__AbsoluteFocus
#define soap_write_tt__AbsoluteFocus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AbsoluteFocus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AbsoluteFocus * SOAP_FMAC4 soap_get_tt__AbsoluteFocus(struct soap*, tt__AbsoluteFocus *, const char*, const char*);

#ifndef soap_read_tt__AbsoluteFocus
#define soap_read_tt__AbsoluteFocus(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AbsoluteFocus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AbsoluteFocus * SOAP_FMAC2 soap_instantiate_tt__AbsoluteFocus(struct soap*, int, const char*, const char*, size_t*);

inline tt__AbsoluteFocus * soap_new_tt__AbsoluteFocus(struct soap *soap, int n = -1) { return soap_instantiate_tt__AbsoluteFocus(soap, n, NULL, NULL, NULL); }

inline tt__AbsoluteFocus * soap_new_req_tt__AbsoluteFocus(struct soap *soap, float Position) { tt__AbsoluteFocus *_p = soap_instantiate_tt__AbsoluteFocus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AbsoluteFocus::Position = Position; } return _p; }

inline tt__AbsoluteFocus * soap_new_set_tt__AbsoluteFocus(struct soap *soap, float Position, float *Speed) { tt__AbsoluteFocus *_p = soap_instantiate_tt__AbsoluteFocus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AbsoluteFocus::Position = Position; _p->tt__AbsoluteFocus::Speed = Speed; } return _p; }

inline void soap_delete_tt__AbsoluteFocus(struct soap *soap, tt__AbsoluteFocus *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AbsoluteFocus(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__FocusMove
#define SOAP_TYPE_tt__FocusMove (502)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FocusMove(struct soap*, const char*, int, const tt__FocusMove *, const char*);
SOAP_FMAC3 tt__FocusMove * SOAP_FMAC4 soap_in_tt__FocusMove(struct soap*, const char*, tt__FocusMove *, const char*);

#ifndef soap_write_tt__FocusMove
#define soap_write_tt__FocusMove(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:FocusMove", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusMove * SOAP_FMAC4 soap_get_tt__FocusMove(struct soap*, tt__FocusMove *, const char*, const char*);

#ifndef soap_read_tt__FocusMove
#define soap_read_tt__FocusMove(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__FocusMove(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__FocusMove * SOAP_FMAC2 soap_instantiate_tt__FocusMove(struct soap*, int, const char*, const char*, size_t*);

inline tt__FocusMove * soap_new_tt__FocusMove(struct soap *soap, int n = -1) { return soap_instantiate_tt__FocusMove(soap, n, NULL, NULL, NULL); }

inline tt__FocusMove * soap_new_req_tt__FocusMove(struct soap *soap) { tt__FocusMove *_p = soap_instantiate_tt__FocusMove(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__FocusMove * soap_new_set_tt__FocusMove(struct soap *soap, tt__AbsoluteFocus *Absolute, tt__RelativeFocus *Relative, tt__ContinuousFocus *Continuous) { tt__FocusMove *_p = soap_instantiate_tt__FocusMove(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FocusMove::Absolute = Absolute; _p->tt__FocusMove::Relative = Relative; _p->tt__FocusMove::Continuous = Continuous; } return _p; }

inline void soap_delete_tt__FocusMove(struct soap *soap, tt__FocusMove *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__FocusMove(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__WhiteBalanceOptions
#define SOAP_TYPE_tt__WhiteBalanceOptions (501)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__WhiteBalanceOptions(struct soap*, const char*, int, const tt__WhiteBalanceOptions *, const char*);
SOAP_FMAC3 tt__WhiteBalanceOptions * SOAP_FMAC4 soap_in_tt__WhiteBalanceOptions(struct soap*, const char*, tt__WhiteBalanceOptions *, const char*);

#ifndef soap_write_tt__WhiteBalanceOptions
#define soap_write_tt__WhiteBalanceOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:WhiteBalanceOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WhiteBalanceOptions * SOAP_FMAC4 soap_get_tt__WhiteBalanceOptions(struct soap*, tt__WhiteBalanceOptions *, const char*, const char*);

#ifndef soap_read_tt__WhiteBalanceOptions
#define soap_read_tt__WhiteBalanceOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__WhiteBalanceOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__WhiteBalanceOptions * SOAP_FMAC2 soap_instantiate_tt__WhiteBalanceOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__WhiteBalanceOptions * soap_new_tt__WhiteBalanceOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__WhiteBalanceOptions(soap, n, NULL, NULL, NULL); }

inline tt__WhiteBalanceOptions * soap_new_req_tt__WhiteBalanceOptions(struct soap *soap, std::vector<enum tt__WhiteBalanceMode >& Mode, tt__FloatRange *YrGain, tt__FloatRange *YbGain) { tt__WhiteBalanceOptions *_p = soap_instantiate_tt__WhiteBalanceOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__WhiteBalanceOptions::Mode = Mode; _p->tt__WhiteBalanceOptions::YrGain = YrGain; _p->tt__WhiteBalanceOptions::YbGain = YbGain; } return _p; }

inline tt__WhiteBalanceOptions * soap_new_set_tt__WhiteBalanceOptions(struct soap *soap, std::vector<enum tt__WhiteBalanceMode >& Mode, tt__FloatRange *YrGain, tt__FloatRange *YbGain) { tt__WhiteBalanceOptions *_p = soap_instantiate_tt__WhiteBalanceOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__WhiteBalanceOptions::Mode = Mode; _p->tt__WhiteBalanceOptions::YrGain = YrGain; _p->tt__WhiteBalanceOptions::YbGain = YbGain; } return _p; }

inline void soap_delete_tt__WhiteBalanceOptions(struct soap *soap, tt__WhiteBalanceOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__WhiteBalanceOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ExposureOptions
#define SOAP_TYPE_tt__ExposureOptions (500)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ExposureOptions(struct soap*, const char*, int, const tt__ExposureOptions *, const char*);
SOAP_FMAC3 tt__ExposureOptions * SOAP_FMAC4 soap_in_tt__ExposureOptions(struct soap*, const char*, tt__ExposureOptions *, const char*);

#ifndef soap_write_tt__ExposureOptions
#define soap_write_tt__ExposureOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ExposureOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ExposureOptions * SOAP_FMAC4 soap_get_tt__ExposureOptions(struct soap*, tt__ExposureOptions *, const char*, const char*);

#ifndef soap_read_tt__ExposureOptions
#define soap_read_tt__ExposureOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ExposureOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ExposureOptions * SOAP_FMAC2 soap_instantiate_tt__ExposureOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__ExposureOptions * soap_new_tt__ExposureOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__ExposureOptions(soap, n, NULL, NULL, NULL); }

inline tt__ExposureOptions * soap_new_req_tt__ExposureOptions(struct soap *soap, std::vector<enum tt__ExposureMode >& Mode, std::vector<enum tt__ExposurePriority >& Priority, tt__FloatRange *MinExposureTime, tt__FloatRange *MaxExposureTime, tt__FloatRange *MinGain, tt__FloatRange *MaxGain, tt__FloatRange *MinIris, tt__FloatRange *MaxIris, tt__FloatRange *ExposureTime, tt__FloatRange *Gain, tt__FloatRange *Iris) { tt__ExposureOptions *_p = soap_instantiate_tt__ExposureOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ExposureOptions::Mode = Mode; _p->tt__ExposureOptions::Priority = Priority; _p->tt__ExposureOptions::MinExposureTime = MinExposureTime; _p->tt__ExposureOptions::MaxExposureTime = MaxExposureTime; _p->tt__ExposureOptions::MinGain = MinGain; _p->tt__ExposureOptions::MaxGain = MaxGain; _p->tt__ExposureOptions::MinIris = MinIris; _p->tt__ExposureOptions::MaxIris = MaxIris; _p->tt__ExposureOptions::ExposureTime = ExposureTime; _p->tt__ExposureOptions::Gain = Gain; _p->tt__ExposureOptions::Iris = Iris; } return _p; }

inline tt__ExposureOptions * soap_new_set_tt__ExposureOptions(struct soap *soap, std::vector<enum tt__ExposureMode >& Mode, std::vector<enum tt__ExposurePriority >& Priority, tt__FloatRange *MinExposureTime, tt__FloatRange *MaxExposureTime, tt__FloatRange *MinGain, tt__FloatRange *MaxGain, tt__FloatRange *MinIris, tt__FloatRange *MaxIris, tt__FloatRange *ExposureTime, tt__FloatRange *Gain, tt__FloatRange *Iris) { tt__ExposureOptions *_p = soap_instantiate_tt__ExposureOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ExposureOptions::Mode = Mode; _p->tt__ExposureOptions::Priority = Priority; _p->tt__ExposureOptions::MinExposureTime = MinExposureTime; _p->tt__ExposureOptions::MaxExposureTime = MaxExposureTime; _p->tt__ExposureOptions::MinGain = MinGain; _p->tt__ExposureOptions::MaxGain = MaxGain; _p->tt__ExposureOptions::MinIris = MinIris; _p->tt__ExposureOptions::MaxIris = MaxIris; _p->tt__ExposureOptions::ExposureTime = ExposureTime; _p->tt__ExposureOptions::Gain = Gain; _p->tt__ExposureOptions::Iris = Iris; } return _p; }

inline void soap_delete_tt__ExposureOptions(struct soap *soap, tt__ExposureOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ExposureOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__FocusOptions
#define SOAP_TYPE_tt__FocusOptions (499)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FocusOptions(struct soap*, const char*, int, const tt__FocusOptions *, const char*);
SOAP_FMAC3 tt__FocusOptions * SOAP_FMAC4 soap_in_tt__FocusOptions(struct soap*, const char*, tt__FocusOptions *, const char*);

#ifndef soap_write_tt__FocusOptions
#define soap_write_tt__FocusOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:FocusOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusOptions * SOAP_FMAC4 soap_get_tt__FocusOptions(struct soap*, tt__FocusOptions *, const char*, const char*);

#ifndef soap_read_tt__FocusOptions
#define soap_read_tt__FocusOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__FocusOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__FocusOptions * SOAP_FMAC2 soap_instantiate_tt__FocusOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__FocusOptions * soap_new_tt__FocusOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__FocusOptions(soap, n, NULL, NULL, NULL); }

inline tt__FocusOptions * soap_new_req_tt__FocusOptions(struct soap *soap, tt__FloatRange *DefaultSpeed, tt__FloatRange *NearLimit, tt__FloatRange *FarLimit) { tt__FocusOptions *_p = soap_instantiate_tt__FocusOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FocusOptions::DefaultSpeed = DefaultSpeed; _p->tt__FocusOptions::NearLimit = NearLimit; _p->tt__FocusOptions::FarLimit = FarLimit; } return _p; }

inline tt__FocusOptions * soap_new_set_tt__FocusOptions(struct soap *soap, std::vector<enum tt__AutoFocusMode >& AutoFocusModes, tt__FloatRange *DefaultSpeed, tt__FloatRange *NearLimit, tt__FloatRange *FarLimit) { tt__FocusOptions *_p = soap_instantiate_tt__FocusOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FocusOptions::AutoFocusModes = AutoFocusModes; _p->tt__FocusOptions::DefaultSpeed = DefaultSpeed; _p->tt__FocusOptions::NearLimit = NearLimit; _p->tt__FocusOptions::FarLimit = FarLimit; } return _p; }

inline void soap_delete_tt__FocusOptions(struct soap *soap, tt__FocusOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__FocusOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__BacklightCompensationOptions
#define SOAP_TYPE_tt__BacklightCompensationOptions (498)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__BacklightCompensationOptions(struct soap*, const char*, int, const tt__BacklightCompensationOptions *, const char*);
SOAP_FMAC3 tt__BacklightCompensationOptions * SOAP_FMAC4 soap_in_tt__BacklightCompensationOptions(struct soap*, const char*, tt__BacklightCompensationOptions *, const char*);

#ifndef soap_write_tt__BacklightCompensationOptions
#define soap_write_tt__BacklightCompensationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:BacklightCompensationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__BacklightCompensationOptions * SOAP_FMAC4 soap_get_tt__BacklightCompensationOptions(struct soap*, tt__BacklightCompensationOptions *, const char*, const char*);

#ifndef soap_read_tt__BacklightCompensationOptions
#define soap_read_tt__BacklightCompensationOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__BacklightCompensationOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__BacklightCompensationOptions * SOAP_FMAC2 soap_instantiate_tt__BacklightCompensationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__BacklightCompensationOptions * soap_new_tt__BacklightCompensationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__BacklightCompensationOptions(soap, n, NULL, NULL, NULL); }

inline tt__BacklightCompensationOptions * soap_new_req_tt__BacklightCompensationOptions(struct soap *soap, std::vector<enum tt__WideDynamicMode >& Mode, tt__FloatRange *Level) { tt__BacklightCompensationOptions *_p = soap_instantiate_tt__BacklightCompensationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__BacklightCompensationOptions::Mode = Mode; _p->tt__BacklightCompensationOptions::Level = Level; } return _p; }

inline tt__BacklightCompensationOptions * soap_new_set_tt__BacklightCompensationOptions(struct soap *soap, std::vector<enum tt__WideDynamicMode >& Mode, tt__FloatRange *Level) { tt__BacklightCompensationOptions *_p = soap_instantiate_tt__BacklightCompensationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__BacklightCompensationOptions::Mode = Mode; _p->tt__BacklightCompensationOptions::Level = Level; } return _p; }

inline void soap_delete_tt__BacklightCompensationOptions(struct soap *soap, tt__BacklightCompensationOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__BacklightCompensationOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__WideDynamicRangeOptions
#define SOAP_TYPE_tt__WideDynamicRangeOptions (497)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__WideDynamicRangeOptions(struct soap*, const char*, int, const tt__WideDynamicRangeOptions *, const char*);
SOAP_FMAC3 tt__WideDynamicRangeOptions * SOAP_FMAC4 soap_in_tt__WideDynamicRangeOptions(struct soap*, const char*, tt__WideDynamicRangeOptions *, const char*);

#ifndef soap_write_tt__WideDynamicRangeOptions
#define soap_write_tt__WideDynamicRangeOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:WideDynamicRangeOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WideDynamicRangeOptions * SOAP_FMAC4 soap_get_tt__WideDynamicRangeOptions(struct soap*, tt__WideDynamicRangeOptions *, const char*, const char*);

#ifndef soap_read_tt__WideDynamicRangeOptions
#define soap_read_tt__WideDynamicRangeOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__WideDynamicRangeOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__WideDynamicRangeOptions * SOAP_FMAC2 soap_instantiate_tt__WideDynamicRangeOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__WideDynamicRangeOptions * soap_new_tt__WideDynamicRangeOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__WideDynamicRangeOptions(soap, n, NULL, NULL, NULL); }

inline tt__WideDynamicRangeOptions * soap_new_req_tt__WideDynamicRangeOptions(struct soap *soap, std::vector<enum tt__WideDynamicMode >& Mode, tt__FloatRange *Level) { tt__WideDynamicRangeOptions *_p = soap_instantiate_tt__WideDynamicRangeOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__WideDynamicRangeOptions::Mode = Mode; _p->tt__WideDynamicRangeOptions::Level = Level; } return _p; }

inline tt__WideDynamicRangeOptions * soap_new_set_tt__WideDynamicRangeOptions(struct soap *soap, std::vector<enum tt__WideDynamicMode >& Mode, tt__FloatRange *Level) { tt__WideDynamicRangeOptions *_p = soap_instantiate_tt__WideDynamicRangeOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__WideDynamicRangeOptions::Mode = Mode; _p->tt__WideDynamicRangeOptions::Level = Level; } return _p; }

inline void soap_delete_tt__WideDynamicRangeOptions(struct soap *soap, tt__WideDynamicRangeOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__WideDynamicRangeOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ImagingOptions
#define SOAP_TYPE_tt__ImagingOptions (496)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingOptions(struct soap*, const char*, int, const tt__ImagingOptions *, const char*);
SOAP_FMAC3 tt__ImagingOptions * SOAP_FMAC4 soap_in_tt__ImagingOptions(struct soap*, const char*, tt__ImagingOptions *, const char*);

#ifndef soap_write_tt__ImagingOptions
#define soap_write_tt__ImagingOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ImagingOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingOptions * SOAP_FMAC4 soap_get_tt__ImagingOptions(struct soap*, tt__ImagingOptions *, const char*, const char*);

#ifndef soap_read_tt__ImagingOptions
#define soap_read_tt__ImagingOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ImagingOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ImagingOptions * SOAP_FMAC2 soap_instantiate_tt__ImagingOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingOptions * soap_new_tt__ImagingOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingOptions(soap, n, NULL, NULL, NULL); }

inline tt__ImagingOptions * soap_new_req_tt__ImagingOptions(struct soap *soap, tt__BacklightCompensationOptions *BacklightCompensation, tt__FloatRange *Brightness, tt__FloatRange *ColorSaturation, tt__FloatRange *Contrast, tt__ExposureOptions *Exposure, tt__FocusOptions *Focus, std::vector<enum tt__IrCutFilterMode >& IrCutFilterModes, tt__FloatRange *Sharpness, tt__WideDynamicRangeOptions *WideDynamicRange, tt__WhiteBalanceOptions *WhiteBalance) { tt__ImagingOptions *_p = soap_instantiate_tt__ImagingOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ImagingOptions::BacklightCompensation = BacklightCompensation; _p->tt__ImagingOptions::Brightness = Brightness; _p->tt__ImagingOptions::ColorSaturation = ColorSaturation; _p->tt__ImagingOptions::Contrast = Contrast; _p->tt__ImagingOptions::Exposure = Exposure; _p->tt__ImagingOptions::Focus = Focus; _p->tt__ImagingOptions::IrCutFilterModes = IrCutFilterModes; _p->tt__ImagingOptions::Sharpness = Sharpness; _p->tt__ImagingOptions::WideDynamicRange = WideDynamicRange; _p->tt__ImagingOptions::WhiteBalance = WhiteBalance; } return _p; }

inline tt__ImagingOptions * soap_new_set_tt__ImagingOptions(struct soap *soap, tt__BacklightCompensationOptions *BacklightCompensation, tt__FloatRange *Brightness, tt__FloatRange *ColorSaturation, tt__FloatRange *Contrast, tt__ExposureOptions *Exposure, tt__FocusOptions *Focus, std::vector<enum tt__IrCutFilterMode >& IrCutFilterModes, tt__FloatRange *Sharpness, tt__WideDynamicRangeOptions *WideDynamicRange, tt__WhiteBalanceOptions *WhiteBalance) { tt__ImagingOptions *_p = soap_instantiate_tt__ImagingOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ImagingOptions::BacklightCompensation = BacklightCompensation; _p->tt__ImagingOptions::Brightness = Brightness; _p->tt__ImagingOptions::ColorSaturation = ColorSaturation; _p->tt__ImagingOptions::Contrast = Contrast; _p->tt__ImagingOptions::Exposure = Exposure; _p->tt__ImagingOptions::Focus = Focus; _p->tt__ImagingOptions::IrCutFilterModes = IrCutFilterModes; _p->tt__ImagingOptions::Sharpness = Sharpness; _p->tt__ImagingOptions::WideDynamicRange = WideDynamicRange; _p->tt__ImagingOptions::WhiteBalance = WhiteBalance; } return _p; }

inline void soap_delete_tt__ImagingOptions(struct soap *soap, tt__ImagingOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ImagingOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__BacklightCompensation
#define SOAP_TYPE_tt__BacklightCompensation (495)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__BacklightCompensation(struct soap*, const char*, int, const tt__BacklightCompensation *, const char*);
SOAP_FMAC3 tt__BacklightCompensation * SOAP_FMAC4 soap_in_tt__BacklightCompensation(struct soap*, const char*, tt__BacklightCompensation *, const char*);

#ifndef soap_write_tt__BacklightCompensation
#define soap_write_tt__BacklightCompensation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:BacklightCompensation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__BacklightCompensation * SOAP_FMAC4 soap_get_tt__BacklightCompensation(struct soap*, tt__BacklightCompensation *, const char*, const char*);

#ifndef soap_read_tt__BacklightCompensation
#define soap_read_tt__BacklightCompensation(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__BacklightCompensation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__BacklightCompensation * SOAP_FMAC2 soap_instantiate_tt__BacklightCompensation(struct soap*, int, const char*, const char*, size_t*);

inline tt__BacklightCompensation * soap_new_tt__BacklightCompensation(struct soap *soap, int n = -1) { return soap_instantiate_tt__BacklightCompensation(soap, n, NULL, NULL, NULL); }

inline tt__BacklightCompensation * soap_new_req_tt__BacklightCompensation(struct soap *soap, enum tt__BacklightCompensationMode Mode, float Level) { tt__BacklightCompensation *_p = soap_instantiate_tt__BacklightCompensation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__BacklightCompensation::Mode = Mode; _p->tt__BacklightCompensation::Level = Level; } return _p; }

inline tt__BacklightCompensation * soap_new_set_tt__BacklightCompensation(struct soap *soap, enum tt__BacklightCompensationMode Mode, float Level) { tt__BacklightCompensation *_p = soap_instantiate_tt__BacklightCompensation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__BacklightCompensation::Mode = Mode; _p->tt__BacklightCompensation::Level = Level; } return _p; }

inline void soap_delete_tt__BacklightCompensation(struct soap *soap, tt__BacklightCompensation *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__BacklightCompensation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__WideDynamicRange
#define SOAP_TYPE_tt__WideDynamicRange (494)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__WideDynamicRange(struct soap*, const char*, int, const tt__WideDynamicRange *, const char*);
SOAP_FMAC3 tt__WideDynamicRange * SOAP_FMAC4 soap_in_tt__WideDynamicRange(struct soap*, const char*, tt__WideDynamicRange *, const char*);

#ifndef soap_write_tt__WideDynamicRange
#define soap_write_tt__WideDynamicRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:WideDynamicRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WideDynamicRange * SOAP_FMAC4 soap_get_tt__WideDynamicRange(struct soap*, tt__WideDynamicRange *, const char*, const char*);

#ifndef soap_read_tt__WideDynamicRange
#define soap_read_tt__WideDynamicRange(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__WideDynamicRange(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__WideDynamicRange * SOAP_FMAC2 soap_instantiate_tt__WideDynamicRange(struct soap*, int, const char*, const char*, size_t*);

inline tt__WideDynamicRange * soap_new_tt__WideDynamicRange(struct soap *soap, int n = -1) { return soap_instantiate_tt__WideDynamicRange(soap, n, NULL, NULL, NULL); }

inline tt__WideDynamicRange * soap_new_req_tt__WideDynamicRange(struct soap *soap, enum tt__WideDynamicMode Mode, float Level) { tt__WideDynamicRange *_p = soap_instantiate_tt__WideDynamicRange(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__WideDynamicRange::Mode = Mode; _p->tt__WideDynamicRange::Level = Level; } return _p; }

inline tt__WideDynamicRange * soap_new_set_tt__WideDynamicRange(struct soap *soap, enum tt__WideDynamicMode Mode, float Level) { tt__WideDynamicRange *_p = soap_instantiate_tt__WideDynamicRange(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__WideDynamicRange::Mode = Mode; _p->tt__WideDynamicRange::Level = Level; } return _p; }

inline void soap_delete_tt__WideDynamicRange(struct soap *soap, tt__WideDynamicRange *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__WideDynamicRange(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Exposure
#define SOAP_TYPE_tt__Exposure (493)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Exposure(struct soap*, const char*, int, const tt__Exposure *, const char*);
SOAP_FMAC3 tt__Exposure * SOAP_FMAC4 soap_in_tt__Exposure(struct soap*, const char*, tt__Exposure *, const char*);

#ifndef soap_write_tt__Exposure
#define soap_write_tt__Exposure(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Exposure", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Exposure * SOAP_FMAC4 soap_get_tt__Exposure(struct soap*, tt__Exposure *, const char*, const char*);

#ifndef soap_read_tt__Exposure
#define soap_read_tt__Exposure(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Exposure(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Exposure * SOAP_FMAC2 soap_instantiate_tt__Exposure(struct soap*, int, const char*, const char*, size_t*);

inline tt__Exposure * soap_new_tt__Exposure(struct soap *soap, int n = -1) { return soap_instantiate_tt__Exposure(soap, n, NULL, NULL, NULL); }

inline tt__Exposure * soap_new_req_tt__Exposure(struct soap *soap, enum tt__ExposureMode Mode, enum tt__ExposurePriority Priority, tt__Rectangle *Window, float MinExposureTime, float MaxExposureTime, float MinGain, float MaxGain, float MinIris, float MaxIris, float ExposureTime, float Gain, float Iris) { tt__Exposure *_p = soap_instantiate_tt__Exposure(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Exposure::Mode = Mode; _p->tt__Exposure::Priority = Priority; _p->tt__Exposure::Window = Window; _p->tt__Exposure::MinExposureTime = MinExposureTime; _p->tt__Exposure::MaxExposureTime = MaxExposureTime; _p->tt__Exposure::MinGain = MinGain; _p->tt__Exposure::MaxGain = MaxGain; _p->tt__Exposure::MinIris = MinIris; _p->tt__Exposure::MaxIris = MaxIris; _p->tt__Exposure::ExposureTime = ExposureTime; _p->tt__Exposure::Gain = Gain; _p->tt__Exposure::Iris = Iris; } return _p; }

inline tt__Exposure * soap_new_set_tt__Exposure(struct soap *soap, enum tt__ExposureMode Mode, enum tt__ExposurePriority Priority, tt__Rectangle *Window, float MinExposureTime, float MaxExposureTime, float MinGain, float MaxGain, float MinIris, float MaxIris, float ExposureTime, float Gain, float Iris) { tt__Exposure *_p = soap_instantiate_tt__Exposure(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Exposure::Mode = Mode; _p->tt__Exposure::Priority = Priority; _p->tt__Exposure::Window = Window; _p->tt__Exposure::MinExposureTime = MinExposureTime; _p->tt__Exposure::MaxExposureTime = MaxExposureTime; _p->tt__Exposure::MinGain = MinGain; _p->tt__Exposure::MaxGain = MaxGain; _p->tt__Exposure::MinIris = MinIris; _p->tt__Exposure::MaxIris = MaxIris; _p->tt__Exposure::ExposureTime = ExposureTime; _p->tt__Exposure::Gain = Gain; _p->tt__Exposure::Iris = Iris; } return _p; }

inline void soap_delete_tt__Exposure(struct soap *soap, tt__Exposure *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Exposure(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ImagingSettingsExtension
#define SOAP_TYPE_tt__ImagingSettingsExtension (492)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingSettingsExtension(struct soap*, const char*, int, const tt__ImagingSettingsExtension *, const char*);
SOAP_FMAC3 tt__ImagingSettingsExtension * SOAP_FMAC4 soap_in_tt__ImagingSettingsExtension(struct soap*, const char*, tt__ImagingSettingsExtension *, const char*);

#ifndef soap_write_tt__ImagingSettingsExtension
#define soap_write_tt__ImagingSettingsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ImagingSettingsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingSettingsExtension * SOAP_FMAC4 soap_get_tt__ImagingSettingsExtension(struct soap*, tt__ImagingSettingsExtension *, const char*, const char*);

#ifndef soap_read_tt__ImagingSettingsExtension
#define soap_read_tt__ImagingSettingsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ImagingSettingsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ImagingSettingsExtension * SOAP_FMAC2 soap_instantiate_tt__ImagingSettingsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingSettingsExtension * soap_new_tt__ImagingSettingsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingSettingsExtension(soap, n, NULL, NULL, NULL); }

inline tt__ImagingSettingsExtension * soap_new_req_tt__ImagingSettingsExtension(struct soap *soap) { tt__ImagingSettingsExtension *_p = soap_instantiate_tt__ImagingSettingsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ImagingSettingsExtension * soap_new_set_tt__ImagingSettingsExtension(struct soap *soap) { tt__ImagingSettingsExtension *_p = soap_instantiate_tt__ImagingSettingsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__ImagingSettingsExtension(struct soap *soap, tt__ImagingSettingsExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ImagingSettingsExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ImagingSettings
#define SOAP_TYPE_tt__ImagingSettings (491)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingSettings(struct soap*, const char*, int, const tt__ImagingSettings *, const char*);
SOAP_FMAC3 tt__ImagingSettings * SOAP_FMAC4 soap_in_tt__ImagingSettings(struct soap*, const char*, tt__ImagingSettings *, const char*);

#ifndef soap_write_tt__ImagingSettings
#define soap_write_tt__ImagingSettings(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ImagingSettings", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingSettings * SOAP_FMAC4 soap_get_tt__ImagingSettings(struct soap*, tt__ImagingSettings *, const char*, const char*);

#ifndef soap_read_tt__ImagingSettings
#define soap_read_tt__ImagingSettings(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ImagingSettings(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ImagingSettings * SOAP_FMAC2 soap_instantiate_tt__ImagingSettings(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingSettings * soap_new_tt__ImagingSettings(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingSettings(soap, n, NULL, NULL, NULL); }

inline tt__ImagingSettings * soap_new_req_tt__ImagingSettings(struct soap *soap) { tt__ImagingSettings *_p = soap_instantiate_tt__ImagingSettings(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ImagingSettings * soap_new_set_tt__ImagingSettings(struct soap *soap, tt__BacklightCompensation *BacklightCompensation, float *Brightness, float *ColorSaturation, float *Contrast, tt__Exposure *Exposure, tt__FocusConfiguration *Focus, enum tt__IrCutFilterMode *IrCutFilter, float *Sharpness, tt__WideDynamicRange *WideDynamicRange, tt__WhiteBalance *WhiteBalance, tt__ImagingSettingsExtension *Extension) { tt__ImagingSettings *_p = soap_instantiate_tt__ImagingSettings(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ImagingSettings::BacklightCompensation = BacklightCompensation; _p->tt__ImagingSettings::Brightness = Brightness; _p->tt__ImagingSettings::ColorSaturation = ColorSaturation; _p->tt__ImagingSettings::Contrast = Contrast; _p->tt__ImagingSettings::Exposure = Exposure; _p->tt__ImagingSettings::Focus = Focus; _p->tt__ImagingSettings::IrCutFilter = IrCutFilter; _p->tt__ImagingSettings::Sharpness = Sharpness; _p->tt__ImagingSettings::WideDynamicRange = WideDynamicRange; _p->tt__ImagingSettings::WhiteBalance = WhiteBalance; _p->tt__ImagingSettings::Extension = Extension; } return _p; }

inline void soap_delete_tt__ImagingSettings(struct soap *soap, tt__ImagingSettings *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ImagingSettings(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__FocusConfiguration
#define SOAP_TYPE_tt__FocusConfiguration (490)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FocusConfiguration(struct soap*, const char*, int, const tt__FocusConfiguration *, const char*);
SOAP_FMAC3 tt__FocusConfiguration * SOAP_FMAC4 soap_in_tt__FocusConfiguration(struct soap*, const char*, tt__FocusConfiguration *, const char*);

#ifndef soap_write_tt__FocusConfiguration
#define soap_write_tt__FocusConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:FocusConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusConfiguration * SOAP_FMAC4 soap_get_tt__FocusConfiguration(struct soap*, tt__FocusConfiguration *, const char*, const char*);

#ifndef soap_read_tt__FocusConfiguration
#define soap_read_tt__FocusConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__FocusConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__FocusConfiguration * SOAP_FMAC2 soap_instantiate_tt__FocusConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__FocusConfiguration * soap_new_tt__FocusConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__FocusConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__FocusConfiguration * soap_new_req_tt__FocusConfiguration(struct soap *soap, enum tt__AutoFocusMode AutoFocusMode, float DefaultSpeed, float NearLimit, float FarLimit) { tt__FocusConfiguration *_p = soap_instantiate_tt__FocusConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FocusConfiguration::AutoFocusMode = AutoFocusMode; _p->tt__FocusConfiguration::DefaultSpeed = DefaultSpeed; _p->tt__FocusConfiguration::NearLimit = NearLimit; _p->tt__FocusConfiguration::FarLimit = FarLimit; } return _p; }

inline tt__FocusConfiguration * soap_new_set_tt__FocusConfiguration(struct soap *soap, enum tt__AutoFocusMode AutoFocusMode, float DefaultSpeed, float NearLimit, float FarLimit) { tt__FocusConfiguration *_p = soap_instantiate_tt__FocusConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FocusConfiguration::AutoFocusMode = AutoFocusMode; _p->tt__FocusConfiguration::DefaultSpeed = DefaultSpeed; _p->tt__FocusConfiguration::NearLimit = NearLimit; _p->tt__FocusConfiguration::FarLimit = FarLimit; } return _p; }

inline void soap_delete_tt__FocusConfiguration(struct soap *soap, tt__FocusConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__FocusConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__FocusStatus
#define SOAP_TYPE_tt__FocusStatus (489)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FocusStatus(struct soap*, const char*, int, const tt__FocusStatus *, const char*);
SOAP_FMAC3 tt__FocusStatus * SOAP_FMAC4 soap_in_tt__FocusStatus(struct soap*, const char*, tt__FocusStatus *, const char*);

#ifndef soap_write_tt__FocusStatus
#define soap_write_tt__FocusStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:FocusStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusStatus * SOAP_FMAC4 soap_get_tt__FocusStatus(struct soap*, tt__FocusStatus *, const char*, const char*);

#ifndef soap_read_tt__FocusStatus
#define soap_read_tt__FocusStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__FocusStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__FocusStatus * SOAP_FMAC2 soap_instantiate_tt__FocusStatus(struct soap*, int, const char*, const char*, size_t*);

inline tt__FocusStatus * soap_new_tt__FocusStatus(struct soap *soap, int n = -1) { return soap_instantiate_tt__FocusStatus(soap, n, NULL, NULL, NULL); }

inline tt__FocusStatus * soap_new_req_tt__FocusStatus(struct soap *soap, float Position, enum tt__MoveStatus MoveStatus, std::string& Error) { tt__FocusStatus *_p = soap_instantiate_tt__FocusStatus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FocusStatus::Position = Position; _p->tt__FocusStatus::MoveStatus = MoveStatus; _p->tt__FocusStatus::Error = Error; } return _p; }

inline tt__FocusStatus * soap_new_set_tt__FocusStatus(struct soap *soap, float Position, enum tt__MoveStatus MoveStatus, std::string& Error) { tt__FocusStatus *_p = soap_instantiate_tt__FocusStatus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FocusStatus::Position = Position; _p->tt__FocusStatus::MoveStatus = MoveStatus; _p->tt__FocusStatus::Error = Error; } return _p; }

inline void soap_delete_tt__FocusStatus(struct soap *soap, tt__FocusStatus *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__FocusStatus(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ImagingStatus
#define SOAP_TYPE_tt__ImagingStatus (488)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingStatus(struct soap*, const char*, int, const tt__ImagingStatus *, const char*);
SOAP_FMAC3 tt__ImagingStatus * SOAP_FMAC4 soap_in_tt__ImagingStatus(struct soap*, const char*, tt__ImagingStatus *, const char*);

#ifndef soap_write_tt__ImagingStatus
#define soap_write_tt__ImagingStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ImagingStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingStatus * SOAP_FMAC4 soap_get_tt__ImagingStatus(struct soap*, tt__ImagingStatus *, const char*, const char*);

#ifndef soap_read_tt__ImagingStatus
#define soap_read_tt__ImagingStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ImagingStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ImagingStatus * SOAP_FMAC2 soap_instantiate_tt__ImagingStatus(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingStatus * soap_new_tt__ImagingStatus(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingStatus(soap, n, NULL, NULL, NULL); }

inline tt__ImagingStatus * soap_new_req_tt__ImagingStatus(struct soap *soap, tt__FocusStatus *FocusStatus) { tt__ImagingStatus *_p = soap_instantiate_tt__ImagingStatus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ImagingStatus::FocusStatus = FocusStatus; } return _p; }

inline tt__ImagingStatus * soap_new_set_tt__ImagingStatus(struct soap *soap, tt__FocusStatus *FocusStatus) { tt__ImagingStatus *_p = soap_instantiate_tt__ImagingStatus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ImagingStatus::FocusStatus = FocusStatus; } return _p; }

inline void soap_delete_tt__ImagingStatus(struct soap *soap, tt__ImagingStatus *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ImagingStatus(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZPresetTourStartingConditionOptionsExtension
#define SOAP_TYPE_tt__PTZPresetTourStartingConditionOptionsExtension (487)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourStartingConditionOptionsExtension(struct soap*, const char*, int, const tt__PTZPresetTourStartingConditionOptionsExtension *, const char*);
SOAP_FMAC3 tt__PTZPresetTourStartingConditionOptionsExtension * SOAP_FMAC4 soap_in_tt__PTZPresetTourStartingConditionOptionsExtension(struct soap*, const char*, tt__PTZPresetTourStartingConditionOptionsExtension *, const char*);

#ifndef soap_write_tt__PTZPresetTourStartingConditionOptionsExtension
#define soap_write_tt__PTZPresetTourStartingConditionOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZPresetTourStartingConditionOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourStartingConditionOptionsExtension * SOAP_FMAC4 soap_get_tt__PTZPresetTourStartingConditionOptionsExtension(struct soap*, tt__PTZPresetTourStartingConditionOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourStartingConditionOptionsExtension
#define soap_read_tt__PTZPresetTourStartingConditionOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourStartingConditionOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZPresetTourStartingConditionOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourStartingConditionOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourStartingConditionOptionsExtension * soap_new_tt__PTZPresetTourStartingConditionOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourStartingConditionOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourStartingConditionOptionsExtension * soap_new_req_tt__PTZPresetTourStartingConditionOptionsExtension(struct soap *soap) { tt__PTZPresetTourStartingConditionOptionsExtension *_p = soap_instantiate_tt__PTZPresetTourStartingConditionOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTZPresetTourStartingConditionOptionsExtension * soap_new_set_tt__PTZPresetTourStartingConditionOptionsExtension(struct soap *soap) { tt__PTZPresetTourStartingConditionOptionsExtension *_p = soap_instantiate_tt__PTZPresetTourStartingConditionOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__PTZPresetTourStartingConditionOptionsExtension(struct soap *soap, tt__PTZPresetTourStartingConditionOptionsExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZPresetTourStartingConditionOptionsExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZPresetTourStartingConditionOptions
#define SOAP_TYPE_tt__PTZPresetTourStartingConditionOptions (486)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourStartingConditionOptions(struct soap*, const char*, int, const tt__PTZPresetTourStartingConditionOptions *, const char*);
SOAP_FMAC3 tt__PTZPresetTourStartingConditionOptions * SOAP_FMAC4 soap_in_tt__PTZPresetTourStartingConditionOptions(struct soap*, const char*, tt__PTZPresetTourStartingConditionOptions *, const char*);

#ifndef soap_write_tt__PTZPresetTourStartingConditionOptions
#define soap_write_tt__PTZPresetTourStartingConditionOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZPresetTourStartingConditionOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourStartingConditionOptions * SOAP_FMAC4 soap_get_tt__PTZPresetTourStartingConditionOptions(struct soap*, tt__PTZPresetTourStartingConditionOptions *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourStartingConditionOptions
#define soap_read_tt__PTZPresetTourStartingConditionOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourStartingConditionOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZPresetTourStartingConditionOptions * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourStartingConditionOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourStartingConditionOptions * soap_new_tt__PTZPresetTourStartingConditionOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourStartingConditionOptions(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourStartingConditionOptions * soap_new_req_tt__PTZPresetTourStartingConditionOptions(struct soap *soap) { tt__PTZPresetTourStartingConditionOptions *_p = soap_instantiate_tt__PTZPresetTourStartingConditionOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTZPresetTourStartingConditionOptions * soap_new_set_tt__PTZPresetTourStartingConditionOptions(struct soap *soap, tt__IntRange *RecurringTime, tt__DurationRange *RecurringDuration, std::vector<enum tt__PTZPresetTourDirection >& Direction, tt__PTZPresetTourStartingConditionOptionsExtension *Extension) { tt__PTZPresetTourStartingConditionOptions *_p = soap_instantiate_tt__PTZPresetTourStartingConditionOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZPresetTourStartingConditionOptions::RecurringTime = RecurringTime; _p->tt__PTZPresetTourStartingConditionOptions::RecurringDuration = RecurringDuration; _p->tt__PTZPresetTourStartingConditionOptions::Direction = Direction; _p->tt__PTZPresetTourStartingConditionOptions::Extension = Extension; } return _p; }

inline void soap_delete_tt__PTZPresetTourStartingConditionOptions(struct soap *soap, tt__PTZPresetTourStartingConditionOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZPresetTourStartingConditionOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZPresetTourPresetDetailOptionsExtension
#define SOAP_TYPE_tt__PTZPresetTourPresetDetailOptionsExtension (485)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourPresetDetailOptionsExtension(struct soap*, const char*, int, const tt__PTZPresetTourPresetDetailOptionsExtension *, const char*);
SOAP_FMAC3 tt__PTZPresetTourPresetDetailOptionsExtension * SOAP_FMAC4 soap_in_tt__PTZPresetTourPresetDetailOptionsExtension(struct soap*, const char*, tt__PTZPresetTourPresetDetailOptionsExtension *, const char*);

#ifndef soap_write_tt__PTZPresetTourPresetDetailOptionsExtension
#define soap_write_tt__PTZPresetTourPresetDetailOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZPresetTourPresetDetailOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourPresetDetailOptionsExtension * SOAP_FMAC4 soap_get_tt__PTZPresetTourPresetDetailOptionsExtension(struct soap*, tt__PTZPresetTourPresetDetailOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourPresetDetailOptionsExtension
#define soap_read_tt__PTZPresetTourPresetDetailOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourPresetDetailOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZPresetTourPresetDetailOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourPresetDetailOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourPresetDetailOptionsExtension * soap_new_tt__PTZPresetTourPresetDetailOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourPresetDetailOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourPresetDetailOptionsExtension * soap_new_req_tt__PTZPresetTourPresetDetailOptionsExtension(struct soap *soap) { tt__PTZPresetTourPresetDetailOptionsExtension *_p = soap_instantiate_tt__PTZPresetTourPresetDetailOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTZPresetTourPresetDetailOptionsExtension * soap_new_set_tt__PTZPresetTourPresetDetailOptionsExtension(struct soap *soap) { tt__PTZPresetTourPresetDetailOptionsExtension *_p = soap_instantiate_tt__PTZPresetTourPresetDetailOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__PTZPresetTourPresetDetailOptionsExtension(struct soap *soap, tt__PTZPresetTourPresetDetailOptionsExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZPresetTourPresetDetailOptionsExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZPresetTourPresetDetailOptions
#define SOAP_TYPE_tt__PTZPresetTourPresetDetailOptions (484)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourPresetDetailOptions(struct soap*, const char*, int, const tt__PTZPresetTourPresetDetailOptions *, const char*);
SOAP_FMAC3 tt__PTZPresetTourPresetDetailOptions * SOAP_FMAC4 soap_in_tt__PTZPresetTourPresetDetailOptions(struct soap*, const char*, tt__PTZPresetTourPresetDetailOptions *, const char*);

#ifndef soap_write_tt__PTZPresetTourPresetDetailOptions
#define soap_write_tt__PTZPresetTourPresetDetailOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZPresetTourPresetDetailOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourPresetDetailOptions * SOAP_FMAC4 soap_get_tt__PTZPresetTourPresetDetailOptions(struct soap*, tt__PTZPresetTourPresetDetailOptions *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourPresetDetailOptions
#define soap_read_tt__PTZPresetTourPresetDetailOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourPresetDetailOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZPresetTourPresetDetailOptions * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourPresetDetailOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourPresetDetailOptions * soap_new_tt__PTZPresetTourPresetDetailOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourPresetDetailOptions(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourPresetDetailOptions * soap_new_req_tt__PTZPresetTourPresetDetailOptions(struct soap *soap) { tt__PTZPresetTourPresetDetailOptions *_p = soap_instantiate_tt__PTZPresetTourPresetDetailOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTZPresetTourPresetDetailOptions * soap_new_set_tt__PTZPresetTourPresetDetailOptions(struct soap *soap, std::vector<std::string >& PresetToken, bool *Home, tt__Space2DDescription *PanTiltPositionSpace, tt__Space1DDescription *ZoomPositionSpace, tt__PTZPresetTourPresetDetailOptionsExtension *Extension) { tt__PTZPresetTourPresetDetailOptions *_p = soap_instantiate_tt__PTZPresetTourPresetDetailOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZPresetTourPresetDetailOptions::PresetToken = PresetToken; _p->tt__PTZPresetTourPresetDetailOptions::Home = Home; _p->tt__PTZPresetTourPresetDetailOptions::PanTiltPositionSpace = PanTiltPositionSpace; _p->tt__PTZPresetTourPresetDetailOptions::ZoomPositionSpace = ZoomPositionSpace; _p->tt__PTZPresetTourPresetDetailOptions::Extension = Extension; } return _p; }

inline void soap_delete_tt__PTZPresetTourPresetDetailOptions(struct soap *soap, tt__PTZPresetTourPresetDetailOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZPresetTourPresetDetailOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZPresetTourSpotOptions
#define SOAP_TYPE_tt__PTZPresetTourSpotOptions (483)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourSpotOptions(struct soap*, const char*, int, const tt__PTZPresetTourSpotOptions *, const char*);
SOAP_FMAC3 tt__PTZPresetTourSpotOptions * SOAP_FMAC4 soap_in_tt__PTZPresetTourSpotOptions(struct soap*, const char*, tt__PTZPresetTourSpotOptions *, const char*);

#ifndef soap_write_tt__PTZPresetTourSpotOptions
#define soap_write_tt__PTZPresetTourSpotOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZPresetTourSpotOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourSpotOptions * SOAP_FMAC4 soap_get_tt__PTZPresetTourSpotOptions(struct soap*, tt__PTZPresetTourSpotOptions *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourSpotOptions
#define soap_read_tt__PTZPresetTourSpotOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourSpotOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZPresetTourSpotOptions * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourSpotOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourSpotOptions * soap_new_tt__PTZPresetTourSpotOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourSpotOptions(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourSpotOptions * soap_new_req_tt__PTZPresetTourSpotOptions(struct soap *soap, tt__PTZPresetTourPresetDetailOptions *PresetDetail, tt__DurationRange *StayTime) { tt__PTZPresetTourSpotOptions *_p = soap_instantiate_tt__PTZPresetTourSpotOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZPresetTourSpotOptions::PresetDetail = PresetDetail; _p->tt__PTZPresetTourSpotOptions::StayTime = StayTime; } return _p; }

inline tt__PTZPresetTourSpotOptions * soap_new_set_tt__PTZPresetTourSpotOptions(struct soap *soap, tt__PTZPresetTourPresetDetailOptions *PresetDetail, tt__DurationRange *StayTime) { tt__PTZPresetTourSpotOptions *_p = soap_instantiate_tt__PTZPresetTourSpotOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZPresetTourSpotOptions::PresetDetail = PresetDetail; _p->tt__PTZPresetTourSpotOptions::StayTime = StayTime; } return _p; }

inline void soap_delete_tt__PTZPresetTourSpotOptions(struct soap *soap, tt__PTZPresetTourSpotOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZPresetTourSpotOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZPresetTourOptions
#define SOAP_TYPE_tt__PTZPresetTourOptions (482)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourOptions(struct soap*, const char*, int, const tt__PTZPresetTourOptions *, const char*);
SOAP_FMAC3 tt__PTZPresetTourOptions * SOAP_FMAC4 soap_in_tt__PTZPresetTourOptions(struct soap*, const char*, tt__PTZPresetTourOptions *, const char*);

#ifndef soap_write_tt__PTZPresetTourOptions
#define soap_write_tt__PTZPresetTourOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZPresetTourOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourOptions * SOAP_FMAC4 soap_get_tt__PTZPresetTourOptions(struct soap*, tt__PTZPresetTourOptions *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourOptions
#define soap_read_tt__PTZPresetTourOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZPresetTourOptions * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourOptions * soap_new_tt__PTZPresetTourOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourOptions(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourOptions * soap_new_req_tt__PTZPresetTourOptions(struct soap *soap, bool AutoStart, tt__PTZPresetTourStartingConditionOptions *StartingCondition, tt__PTZPresetTourSpotOptions *TourSpot) { tt__PTZPresetTourOptions *_p = soap_instantiate_tt__PTZPresetTourOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZPresetTourOptions::AutoStart = AutoStart; _p->tt__PTZPresetTourOptions::StartingCondition = StartingCondition; _p->tt__PTZPresetTourOptions::TourSpot = TourSpot; } return _p; }

inline tt__PTZPresetTourOptions * soap_new_set_tt__PTZPresetTourOptions(struct soap *soap, bool AutoStart, tt__PTZPresetTourStartingConditionOptions *StartingCondition, tt__PTZPresetTourSpotOptions *TourSpot) { tt__PTZPresetTourOptions *_p = soap_instantiate_tt__PTZPresetTourOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZPresetTourOptions::AutoStart = AutoStart; _p->tt__PTZPresetTourOptions::StartingCondition = StartingCondition; _p->tt__PTZPresetTourOptions::TourSpot = TourSpot; } return _p; }

inline void soap_delete_tt__PTZPresetTourOptions(struct soap *soap, tt__PTZPresetTourOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZPresetTourOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZPresetTourStartingConditionExtension
#define SOAP_TYPE_tt__PTZPresetTourStartingConditionExtension (481)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourStartingConditionExtension(struct soap*, const char*, int, const tt__PTZPresetTourStartingConditionExtension *, const char*);
SOAP_FMAC3 tt__PTZPresetTourStartingConditionExtension * SOAP_FMAC4 soap_in_tt__PTZPresetTourStartingConditionExtension(struct soap*, const char*, tt__PTZPresetTourStartingConditionExtension *, const char*);

#ifndef soap_write_tt__PTZPresetTourStartingConditionExtension
#define soap_write_tt__PTZPresetTourStartingConditionExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZPresetTourStartingConditionExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourStartingConditionExtension * SOAP_FMAC4 soap_get_tt__PTZPresetTourStartingConditionExtension(struct soap*, tt__PTZPresetTourStartingConditionExtension *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourStartingConditionExtension
#define soap_read_tt__PTZPresetTourStartingConditionExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourStartingConditionExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZPresetTourStartingConditionExtension * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourStartingConditionExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourStartingConditionExtension * soap_new_tt__PTZPresetTourStartingConditionExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourStartingConditionExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourStartingConditionExtension * soap_new_req_tt__PTZPresetTourStartingConditionExtension(struct soap *soap) { tt__PTZPresetTourStartingConditionExtension *_p = soap_instantiate_tt__PTZPresetTourStartingConditionExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTZPresetTourStartingConditionExtension * soap_new_set_tt__PTZPresetTourStartingConditionExtension(struct soap *soap) { tt__PTZPresetTourStartingConditionExtension *_p = soap_instantiate_tt__PTZPresetTourStartingConditionExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__PTZPresetTourStartingConditionExtension(struct soap *soap, tt__PTZPresetTourStartingConditionExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZPresetTourStartingConditionExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZPresetTourStartingCondition
#define SOAP_TYPE_tt__PTZPresetTourStartingCondition (480)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourStartingCondition(struct soap*, const char*, int, const tt__PTZPresetTourStartingCondition *, const char*);
SOAP_FMAC3 tt__PTZPresetTourStartingCondition * SOAP_FMAC4 soap_in_tt__PTZPresetTourStartingCondition(struct soap*, const char*, tt__PTZPresetTourStartingCondition *, const char*);

#ifndef soap_write_tt__PTZPresetTourStartingCondition
#define soap_write_tt__PTZPresetTourStartingCondition(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZPresetTourStartingCondition", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourStartingCondition * SOAP_FMAC4 soap_get_tt__PTZPresetTourStartingCondition(struct soap*, tt__PTZPresetTourStartingCondition *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourStartingCondition
#define soap_read_tt__PTZPresetTourStartingCondition(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourStartingCondition(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZPresetTourStartingCondition * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourStartingCondition(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourStartingCondition * soap_new_tt__PTZPresetTourStartingCondition(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourStartingCondition(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourStartingCondition * soap_new_req_tt__PTZPresetTourStartingCondition(struct soap *soap) { tt__PTZPresetTourStartingCondition *_p = soap_instantiate_tt__PTZPresetTourStartingCondition(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTZPresetTourStartingCondition * soap_new_set_tt__PTZPresetTourStartingCondition(struct soap *soap, int *RecurringTime, LONG64 *RecurringDuration, enum tt__PTZPresetTourDirection *Direction, tt__PTZPresetTourStartingConditionExtension *Extension) { tt__PTZPresetTourStartingCondition *_p = soap_instantiate_tt__PTZPresetTourStartingCondition(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZPresetTourStartingCondition::RecurringTime = RecurringTime; _p->tt__PTZPresetTourStartingCondition::RecurringDuration = RecurringDuration; _p->tt__PTZPresetTourStartingCondition::Direction = Direction; _p->tt__PTZPresetTourStartingCondition::Extension = Extension; } return _p; }

inline void soap_delete_tt__PTZPresetTourStartingCondition(struct soap *soap, tt__PTZPresetTourStartingCondition *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZPresetTourStartingCondition(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZPresetTourStatusExtension
#define SOAP_TYPE_tt__PTZPresetTourStatusExtension (479)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourStatusExtension(struct soap*, const char*, int, const tt__PTZPresetTourStatusExtension *, const char*);
SOAP_FMAC3 tt__PTZPresetTourStatusExtension * SOAP_FMAC4 soap_in_tt__PTZPresetTourStatusExtension(struct soap*, const char*, tt__PTZPresetTourStatusExtension *, const char*);

#ifndef soap_write_tt__PTZPresetTourStatusExtension
#define soap_write_tt__PTZPresetTourStatusExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZPresetTourStatusExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourStatusExtension * SOAP_FMAC4 soap_get_tt__PTZPresetTourStatusExtension(struct soap*, tt__PTZPresetTourStatusExtension *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourStatusExtension
#define soap_read_tt__PTZPresetTourStatusExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourStatusExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZPresetTourStatusExtension * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourStatusExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourStatusExtension * soap_new_tt__PTZPresetTourStatusExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourStatusExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourStatusExtension * soap_new_req_tt__PTZPresetTourStatusExtension(struct soap *soap) { tt__PTZPresetTourStatusExtension *_p = soap_instantiate_tt__PTZPresetTourStatusExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTZPresetTourStatusExtension * soap_new_set_tt__PTZPresetTourStatusExtension(struct soap *soap) { tt__PTZPresetTourStatusExtension *_p = soap_instantiate_tt__PTZPresetTourStatusExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__PTZPresetTourStatusExtension(struct soap *soap, tt__PTZPresetTourStatusExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZPresetTourStatusExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZPresetTourStatus
#define SOAP_TYPE_tt__PTZPresetTourStatus (478)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourStatus(struct soap*, const char*, int, const tt__PTZPresetTourStatus *, const char*);
SOAP_FMAC3 tt__PTZPresetTourStatus * SOAP_FMAC4 soap_in_tt__PTZPresetTourStatus(struct soap*, const char*, tt__PTZPresetTourStatus *, const char*);

#ifndef soap_write_tt__PTZPresetTourStatus
#define soap_write_tt__PTZPresetTourStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZPresetTourStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourStatus * SOAP_FMAC4 soap_get_tt__PTZPresetTourStatus(struct soap*, tt__PTZPresetTourStatus *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourStatus
#define soap_read_tt__PTZPresetTourStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZPresetTourStatus * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourStatus(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourStatus * soap_new_tt__PTZPresetTourStatus(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourStatus(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourStatus * soap_new_req_tt__PTZPresetTourStatus(struct soap *soap, enum tt__PTZPresetTourState State) { tt__PTZPresetTourStatus *_p = soap_instantiate_tt__PTZPresetTourStatus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZPresetTourStatus::State = State; } return _p; }

inline tt__PTZPresetTourStatus * soap_new_set_tt__PTZPresetTourStatus(struct soap *soap, enum tt__PTZPresetTourState State, tt__PTZPresetTourSpot *CurrentTourSpot, tt__PTZPresetTourStatusExtension *Extension) { tt__PTZPresetTourStatus *_p = soap_instantiate_tt__PTZPresetTourStatus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZPresetTourStatus::State = State; _p->tt__PTZPresetTourStatus::CurrentTourSpot = CurrentTourSpot; _p->tt__PTZPresetTourStatus::Extension = Extension; } return _p; }

inline void soap_delete_tt__PTZPresetTourStatus(struct soap *soap, tt__PTZPresetTourStatus *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZPresetTourStatus(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZPresetTourTypeExtension
#define SOAP_TYPE_tt__PTZPresetTourTypeExtension (477)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourTypeExtension(struct soap*, const char*, int, const tt__PTZPresetTourTypeExtension *, const char*);
SOAP_FMAC3 tt__PTZPresetTourTypeExtension * SOAP_FMAC4 soap_in_tt__PTZPresetTourTypeExtension(struct soap*, const char*, tt__PTZPresetTourTypeExtension *, const char*);

#ifndef soap_write_tt__PTZPresetTourTypeExtension
#define soap_write_tt__PTZPresetTourTypeExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZPresetTourTypeExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourTypeExtension * SOAP_FMAC4 soap_get_tt__PTZPresetTourTypeExtension(struct soap*, tt__PTZPresetTourTypeExtension *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourTypeExtension
#define soap_read_tt__PTZPresetTourTypeExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourTypeExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZPresetTourTypeExtension * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourTypeExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourTypeExtension * soap_new_tt__PTZPresetTourTypeExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourTypeExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourTypeExtension * soap_new_req_tt__PTZPresetTourTypeExtension(struct soap *soap) { tt__PTZPresetTourTypeExtension *_p = soap_instantiate_tt__PTZPresetTourTypeExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTZPresetTourTypeExtension * soap_new_set_tt__PTZPresetTourTypeExtension(struct soap *soap) { tt__PTZPresetTourTypeExtension *_p = soap_instantiate_tt__PTZPresetTourTypeExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__PTZPresetTourTypeExtension(struct soap *soap, tt__PTZPresetTourTypeExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZPresetTourTypeExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZPresetTourPresetDetail
#define SOAP_TYPE_tt__PTZPresetTourPresetDetail (476)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourPresetDetail(struct soap*, const char*, int, const tt__PTZPresetTourPresetDetail *, const char*);
SOAP_FMAC3 tt__PTZPresetTourPresetDetail * SOAP_FMAC4 soap_in_tt__PTZPresetTourPresetDetail(struct soap*, const char*, tt__PTZPresetTourPresetDetail *, const char*);

#ifndef soap_write_tt__PTZPresetTourPresetDetail
#define soap_write_tt__PTZPresetTourPresetDetail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZPresetTourPresetDetail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourPresetDetail * SOAP_FMAC4 soap_get_tt__PTZPresetTourPresetDetail(struct soap*, tt__PTZPresetTourPresetDetail *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourPresetDetail
#define soap_read_tt__PTZPresetTourPresetDetail(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourPresetDetail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZPresetTourPresetDetail * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourPresetDetail(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourPresetDetail * soap_new_tt__PTZPresetTourPresetDetail(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourPresetDetail(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourPresetDetail * soap_new_req_tt__PTZPresetTourPresetDetail(struct soap *soap, int __union_PTZPresetTourPresetDetail, union _tt__union_PTZPresetTourPresetDetail& union_PTZPresetTourPresetDetail) { tt__PTZPresetTourPresetDetail *_p = soap_instantiate_tt__PTZPresetTourPresetDetail(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZPresetTourPresetDetail::__union_PTZPresetTourPresetDetail = __union_PTZPresetTourPresetDetail; _p->tt__PTZPresetTourPresetDetail::union_PTZPresetTourPresetDetail = union_PTZPresetTourPresetDetail; } return _p; }

inline tt__PTZPresetTourPresetDetail * soap_new_set_tt__PTZPresetTourPresetDetail(struct soap *soap, int __union_PTZPresetTourPresetDetail, union _tt__union_PTZPresetTourPresetDetail& union_PTZPresetTourPresetDetail) { tt__PTZPresetTourPresetDetail *_p = soap_instantiate_tt__PTZPresetTourPresetDetail(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZPresetTourPresetDetail::__union_PTZPresetTourPresetDetail = __union_PTZPresetTourPresetDetail; _p->tt__PTZPresetTourPresetDetail::union_PTZPresetTourPresetDetail = union_PTZPresetTourPresetDetail; } return _p; }

inline void soap_delete_tt__PTZPresetTourPresetDetail(struct soap *soap, tt__PTZPresetTourPresetDetail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZPresetTourPresetDetail(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZPresetTourSpotExtension
#define SOAP_TYPE_tt__PTZPresetTourSpotExtension (475)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourSpotExtension(struct soap*, const char*, int, const tt__PTZPresetTourSpotExtension *, const char*);
SOAP_FMAC3 tt__PTZPresetTourSpotExtension * SOAP_FMAC4 soap_in_tt__PTZPresetTourSpotExtension(struct soap*, const char*, tt__PTZPresetTourSpotExtension *, const char*);

#ifndef soap_write_tt__PTZPresetTourSpotExtension
#define soap_write_tt__PTZPresetTourSpotExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZPresetTourSpotExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourSpotExtension * SOAP_FMAC4 soap_get_tt__PTZPresetTourSpotExtension(struct soap*, tt__PTZPresetTourSpotExtension *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourSpotExtension
#define soap_read_tt__PTZPresetTourSpotExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourSpotExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZPresetTourSpotExtension * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourSpotExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourSpotExtension * soap_new_tt__PTZPresetTourSpotExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourSpotExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourSpotExtension * soap_new_req_tt__PTZPresetTourSpotExtension(struct soap *soap) { tt__PTZPresetTourSpotExtension *_p = soap_instantiate_tt__PTZPresetTourSpotExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTZPresetTourSpotExtension * soap_new_set_tt__PTZPresetTourSpotExtension(struct soap *soap) { tt__PTZPresetTourSpotExtension *_p = soap_instantiate_tt__PTZPresetTourSpotExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__PTZPresetTourSpotExtension(struct soap *soap, tt__PTZPresetTourSpotExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZPresetTourSpotExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZPresetTourSpot
#define SOAP_TYPE_tt__PTZPresetTourSpot (474)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourSpot(struct soap*, const char*, int, const tt__PTZPresetTourSpot *, const char*);
SOAP_FMAC3 tt__PTZPresetTourSpot * SOAP_FMAC4 soap_in_tt__PTZPresetTourSpot(struct soap*, const char*, tt__PTZPresetTourSpot *, const char*);

#ifndef soap_write_tt__PTZPresetTourSpot
#define soap_write_tt__PTZPresetTourSpot(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZPresetTourSpot", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourSpot * SOAP_FMAC4 soap_get_tt__PTZPresetTourSpot(struct soap*, tt__PTZPresetTourSpot *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourSpot
#define soap_read_tt__PTZPresetTourSpot(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourSpot(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZPresetTourSpot * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourSpot(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourSpot * soap_new_tt__PTZPresetTourSpot(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourSpot(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourSpot * soap_new_req_tt__PTZPresetTourSpot(struct soap *soap, tt__PTZPresetTourPresetDetail *PresetDetail) { tt__PTZPresetTourSpot *_p = soap_instantiate_tt__PTZPresetTourSpot(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZPresetTourSpot::PresetDetail = PresetDetail; } return _p; }

inline tt__PTZPresetTourSpot * soap_new_set_tt__PTZPresetTourSpot(struct soap *soap, tt__PTZPresetTourPresetDetail *PresetDetail, tt__PTZSpeed *Speed, LONG64 *StayTime, tt__PTZPresetTourSpotExtension *Extension) { tt__PTZPresetTourSpot *_p = soap_instantiate_tt__PTZPresetTourSpot(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZPresetTourSpot::PresetDetail = PresetDetail; _p->tt__PTZPresetTourSpot::Speed = Speed; _p->tt__PTZPresetTourSpot::StayTime = StayTime; _p->tt__PTZPresetTourSpot::Extension = Extension; } return _p; }

inline void soap_delete_tt__PTZPresetTourSpot(struct soap *soap, tt__PTZPresetTourSpot *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZPresetTourSpot(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZPresetTourExtension
#define SOAP_TYPE_tt__PTZPresetTourExtension (473)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourExtension(struct soap*, const char*, int, const tt__PTZPresetTourExtension *, const char*);
SOAP_FMAC3 tt__PTZPresetTourExtension * SOAP_FMAC4 soap_in_tt__PTZPresetTourExtension(struct soap*, const char*, tt__PTZPresetTourExtension *, const char*);

#ifndef soap_write_tt__PTZPresetTourExtension
#define soap_write_tt__PTZPresetTourExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZPresetTourExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourExtension * SOAP_FMAC4 soap_get_tt__PTZPresetTourExtension(struct soap*, tt__PTZPresetTourExtension *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourExtension
#define soap_read_tt__PTZPresetTourExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZPresetTourExtension * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourExtension * soap_new_tt__PTZPresetTourExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourExtension * soap_new_req_tt__PTZPresetTourExtension(struct soap *soap) { tt__PTZPresetTourExtension *_p = soap_instantiate_tt__PTZPresetTourExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTZPresetTourExtension * soap_new_set_tt__PTZPresetTourExtension(struct soap *soap) { tt__PTZPresetTourExtension *_p = soap_instantiate_tt__PTZPresetTourExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__PTZPresetTourExtension(struct soap *soap, tt__PTZPresetTourExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZPresetTourExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PresetTour
#define SOAP_TYPE_tt__PresetTour (472)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PresetTour(struct soap*, const char*, int, const tt__PresetTour *, const char*);
SOAP_FMAC3 tt__PresetTour * SOAP_FMAC4 soap_in_tt__PresetTour(struct soap*, const char*, tt__PresetTour *, const char*);

#ifndef soap_write_tt__PresetTour
#define soap_write_tt__PresetTour(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PresetTour", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PresetTour * SOAP_FMAC4 soap_get_tt__PresetTour(struct soap*, tt__PresetTour *, const char*, const char*);

#ifndef soap_read_tt__PresetTour
#define soap_read_tt__PresetTour(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PresetTour(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PresetTour * SOAP_FMAC2 soap_instantiate_tt__PresetTour(struct soap*, int, const char*, const char*, size_t*);

inline tt__PresetTour * soap_new_tt__PresetTour(struct soap *soap, int n = -1) { return soap_instantiate_tt__PresetTour(soap, n, NULL, NULL, NULL); }

inline tt__PresetTour * soap_new_req_tt__PresetTour(struct soap *soap, tt__PTZPresetTourStatus *Status, bool AutoStart, tt__PTZPresetTourStartingCondition *StartingCondition) { tt__PresetTour *_p = soap_instantiate_tt__PresetTour(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PresetTour::Status = Status; _p->tt__PresetTour::AutoStart = AutoStart; _p->tt__PresetTour::StartingCondition = StartingCondition; } return _p; }

inline tt__PresetTour * soap_new_set_tt__PresetTour(struct soap *soap, std::string *Name, tt__PTZPresetTourStatus *Status, bool AutoStart, tt__PTZPresetTourStartingCondition *StartingCondition, std::vector<tt__PTZPresetTourSpot * >& TourSpot, tt__PTZPresetTourExtension *Extension, std::string *token) { tt__PresetTour *_p = soap_instantiate_tt__PresetTour(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PresetTour::Name = Name; _p->tt__PresetTour::Status = Status; _p->tt__PresetTour::AutoStart = AutoStart; _p->tt__PresetTour::StartingCondition = StartingCondition; _p->tt__PresetTour::TourSpot = TourSpot; _p->tt__PresetTour::Extension = Extension; _p->tt__PresetTour::token = token; } return _p; }

inline void soap_delete_tt__PresetTour(struct soap *soap, tt__PresetTour *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PresetTour(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZMoveStatus
#define SOAP_TYPE_tt__PTZMoveStatus (471)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZMoveStatus(struct soap*, const char*, int, const tt__PTZMoveStatus *, const char*);
SOAP_FMAC3 tt__PTZMoveStatus * SOAP_FMAC4 soap_in_tt__PTZMoveStatus(struct soap*, const char*, tt__PTZMoveStatus *, const char*);

#ifndef soap_write_tt__PTZMoveStatus
#define soap_write_tt__PTZMoveStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZMoveStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZMoveStatus * SOAP_FMAC4 soap_get_tt__PTZMoveStatus(struct soap*, tt__PTZMoveStatus *, const char*, const char*);

#ifndef soap_read_tt__PTZMoveStatus
#define soap_read_tt__PTZMoveStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZMoveStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZMoveStatus * SOAP_FMAC2 soap_instantiate_tt__PTZMoveStatus(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZMoveStatus * soap_new_tt__PTZMoveStatus(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZMoveStatus(soap, n, NULL, NULL, NULL); }

inline tt__PTZMoveStatus * soap_new_req_tt__PTZMoveStatus(struct soap *soap) { tt__PTZMoveStatus *_p = soap_instantiate_tt__PTZMoveStatus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTZMoveStatus * soap_new_set_tt__PTZMoveStatus(struct soap *soap, enum tt__MoveStatus *PanTilt, enum tt__MoveStatus *Zoom) { tt__PTZMoveStatus *_p = soap_instantiate_tt__PTZMoveStatus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZMoveStatus::PanTilt = PanTilt; _p->tt__PTZMoveStatus::Zoom = Zoom; } return _p; }

inline void soap_delete_tt__PTZMoveStatus(struct soap *soap, tt__PTZMoveStatus *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZMoveStatus(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZPreset
#define SOAP_TYPE_tt__PTZPreset (470)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPreset(struct soap*, const char*, int, const tt__PTZPreset *, const char*);
SOAP_FMAC3 tt__PTZPreset * SOAP_FMAC4 soap_in_tt__PTZPreset(struct soap*, const char*, tt__PTZPreset *, const char*);

#ifndef soap_write_tt__PTZPreset
#define soap_write_tt__PTZPreset(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZPreset", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPreset * SOAP_FMAC4 soap_get_tt__PTZPreset(struct soap*, tt__PTZPreset *, const char*, const char*);

#ifndef soap_read_tt__PTZPreset
#define soap_read_tt__PTZPreset(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZPreset(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZPreset * SOAP_FMAC2 soap_instantiate_tt__PTZPreset(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPreset * soap_new_tt__PTZPreset(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPreset(soap, n, NULL, NULL, NULL); }

inline tt__PTZPreset * soap_new_req_tt__PTZPreset(struct soap *soap) { tt__PTZPreset *_p = soap_instantiate_tt__PTZPreset(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTZPreset * soap_new_set_tt__PTZPreset(struct soap *soap, std::string *Name, tt__PTZVector *PTZPosition, std::string *token) { tt__PTZPreset *_p = soap_instantiate_tt__PTZPreset(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZPreset::Name = Name; _p->tt__PTZPreset::PTZPosition = PTZPosition; _p->tt__PTZPreset::token = token; } return _p; }

inline void soap_delete_tt__PTZPreset(struct soap *soap, tt__PTZPreset *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZPreset(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZStatus
#define SOAP_TYPE_tt__PTZStatus (469)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZStatus(struct soap*, const char*, int, const tt__PTZStatus *, const char*);
SOAP_FMAC3 tt__PTZStatus * SOAP_FMAC4 soap_in_tt__PTZStatus(struct soap*, const char*, tt__PTZStatus *, const char*);

#ifndef soap_write_tt__PTZStatus
#define soap_write_tt__PTZStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZStatus * SOAP_FMAC4 soap_get_tt__PTZStatus(struct soap*, tt__PTZStatus *, const char*, const char*);

#ifndef soap_read_tt__PTZStatus
#define soap_read_tt__PTZStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZStatus * SOAP_FMAC2 soap_instantiate_tt__PTZStatus(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZStatus * soap_new_tt__PTZStatus(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZStatus(soap, n, NULL, NULL, NULL); }

inline tt__PTZStatus * soap_new_req_tt__PTZStatus(struct soap *soap, time_t UtcTime) { tt__PTZStatus *_p = soap_instantiate_tt__PTZStatus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZStatus::UtcTime = UtcTime; } return _p; }

inline tt__PTZStatus * soap_new_set_tt__PTZStatus(struct soap *soap, tt__PTZVector *Position, tt__PTZMoveStatus *MoveStatus, std::string *Error, time_t UtcTime) { tt__PTZStatus *_p = soap_instantiate_tt__PTZStatus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZStatus::Position = Position; _p->tt__PTZStatus::MoveStatus = MoveStatus; _p->tt__PTZStatus::Error = Error; _p->tt__PTZStatus::UtcTime = UtcTime; } return _p; }

inline void soap_delete_tt__PTZStatus(struct soap *soap, tt__PTZStatus *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZStatus(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZSpeed
#define SOAP_TYPE_tt__PTZSpeed (468)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZSpeed(struct soap*, const char*, int, const tt__PTZSpeed *, const char*);
SOAP_FMAC3 tt__PTZSpeed * SOAP_FMAC4 soap_in_tt__PTZSpeed(struct soap*, const char*, tt__PTZSpeed *, const char*);

#ifndef soap_write_tt__PTZSpeed
#define soap_write_tt__PTZSpeed(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZSpeed", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZSpeed * SOAP_FMAC4 soap_get_tt__PTZSpeed(struct soap*, tt__PTZSpeed *, const char*, const char*);

#ifndef soap_read_tt__PTZSpeed
#define soap_read_tt__PTZSpeed(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZSpeed(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZSpeed * SOAP_FMAC2 soap_instantiate_tt__PTZSpeed(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZSpeed * soap_new_tt__PTZSpeed(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZSpeed(soap, n, NULL, NULL, NULL); }

inline tt__PTZSpeed * soap_new_req_tt__PTZSpeed(struct soap *soap) { tt__PTZSpeed *_p = soap_instantiate_tt__PTZSpeed(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTZSpeed * soap_new_set_tt__PTZSpeed(struct soap *soap, tt__Vector2D *PanTilt, tt__Vector1D *Zoom) { tt__PTZSpeed *_p = soap_instantiate_tt__PTZSpeed(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZSpeed::PanTilt = PanTilt; _p->tt__PTZSpeed::Zoom = Zoom; } return _p; }

inline void soap_delete_tt__PTZSpeed(struct soap *soap, tt__PTZSpeed *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZSpeed(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZVector
#define SOAP_TYPE_tt__PTZVector (467)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZVector(struct soap*, const char*, int, const tt__PTZVector *, const char*);
SOAP_FMAC3 tt__PTZVector * SOAP_FMAC4 soap_in_tt__PTZVector(struct soap*, const char*, tt__PTZVector *, const char*);

#ifndef soap_write_tt__PTZVector
#define soap_write_tt__PTZVector(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZVector", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZVector * SOAP_FMAC4 soap_get_tt__PTZVector(struct soap*, tt__PTZVector *, const char*, const char*);

#ifndef soap_read_tt__PTZVector
#define soap_read_tt__PTZVector(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZVector(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZVector * SOAP_FMAC2 soap_instantiate_tt__PTZVector(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZVector * soap_new_tt__PTZVector(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZVector(soap, n, NULL, NULL, NULL); }

inline tt__PTZVector * soap_new_req_tt__PTZVector(struct soap *soap) { tt__PTZVector *_p = soap_instantiate_tt__PTZVector(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTZVector * soap_new_set_tt__PTZVector(struct soap *soap, tt__Vector2D *PanTilt, tt__Vector1D *Zoom) { tt__PTZVector *_p = soap_instantiate_tt__PTZVector(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZVector::PanTilt = PanTilt; _p->tt__PTZVector::Zoom = Zoom; } return _p; }

inline void soap_delete_tt__PTZVector(struct soap *soap, tt__PTZVector *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZVector(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Vector1D
#define SOAP_TYPE_tt__Vector1D (466)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Vector1D(struct soap*, const char*, int, const tt__Vector1D *, const char*);
SOAP_FMAC3 tt__Vector1D * SOAP_FMAC4 soap_in_tt__Vector1D(struct soap*, const char*, tt__Vector1D *, const char*);

#ifndef soap_write_tt__Vector1D
#define soap_write_tt__Vector1D(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Vector1D", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Vector1D * SOAP_FMAC4 soap_get_tt__Vector1D(struct soap*, tt__Vector1D *, const char*, const char*);

#ifndef soap_read_tt__Vector1D
#define soap_read_tt__Vector1D(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Vector1D(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Vector1D * SOAP_FMAC2 soap_instantiate_tt__Vector1D(struct soap*, int, const char*, const char*, size_t*);

inline tt__Vector1D * soap_new_tt__Vector1D(struct soap *soap, int n = -1) { return soap_instantiate_tt__Vector1D(soap, n, NULL, NULL, NULL); }

inline tt__Vector1D * soap_new_req_tt__Vector1D(struct soap *soap, float x) { tt__Vector1D *_p = soap_instantiate_tt__Vector1D(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Vector1D::x = x; } return _p; }

inline tt__Vector1D * soap_new_set_tt__Vector1D(struct soap *soap, float x, std::string *space) { tt__Vector1D *_p = soap_instantiate_tt__Vector1D(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Vector1D::x = x; _p->tt__Vector1D::space = space; } return _p; }

inline void soap_delete_tt__Vector1D(struct soap *soap, tt__Vector1D *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Vector1D(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Vector2D
#define SOAP_TYPE_tt__Vector2D (465)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Vector2D(struct soap*, const char*, int, const tt__Vector2D *, const char*);
SOAP_FMAC3 tt__Vector2D * SOAP_FMAC4 soap_in_tt__Vector2D(struct soap*, const char*, tt__Vector2D *, const char*);

#ifndef soap_write_tt__Vector2D
#define soap_write_tt__Vector2D(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Vector2D", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Vector2D * SOAP_FMAC4 soap_get_tt__Vector2D(struct soap*, tt__Vector2D *, const char*, const char*);

#ifndef soap_read_tt__Vector2D
#define soap_read_tt__Vector2D(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Vector2D(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Vector2D * SOAP_FMAC2 soap_instantiate_tt__Vector2D(struct soap*, int, const char*, const char*, size_t*);

inline tt__Vector2D * soap_new_tt__Vector2D(struct soap *soap, int n = -1) { return soap_instantiate_tt__Vector2D(soap, n, NULL, NULL, NULL); }

inline tt__Vector2D * soap_new_req_tt__Vector2D(struct soap *soap, float x, float y) { tt__Vector2D *_p = soap_instantiate_tt__Vector2D(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Vector2D::x = x; _p->tt__Vector2D::y = y; } return _p; }

inline tt__Vector2D * soap_new_set_tt__Vector2D(struct soap *soap, float x, float y, std::string *space) { tt__Vector2D *_p = soap_instantiate_tt__Vector2D(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Vector2D::x = x; _p->tt__Vector2D::y = y; _p->tt__Vector2D::space = space; } return _p; }

inline void soap_delete_tt__Vector2D(struct soap *soap, tt__Vector2D *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Vector2D(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Space1DDescription
#define SOAP_TYPE_tt__Space1DDescription (464)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Space1DDescription(struct soap*, const char*, int, const tt__Space1DDescription *, const char*);
SOAP_FMAC3 tt__Space1DDescription * SOAP_FMAC4 soap_in_tt__Space1DDescription(struct soap*, const char*, tt__Space1DDescription *, const char*);

#ifndef soap_write_tt__Space1DDescription
#define soap_write_tt__Space1DDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Space1DDescription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Space1DDescription * SOAP_FMAC4 soap_get_tt__Space1DDescription(struct soap*, tt__Space1DDescription *, const char*, const char*);

#ifndef soap_read_tt__Space1DDescription
#define soap_read_tt__Space1DDescription(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Space1DDescription(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Space1DDescription * SOAP_FMAC2 soap_instantiate_tt__Space1DDescription(struct soap*, int, const char*, const char*, size_t*);

inline tt__Space1DDescription * soap_new_tt__Space1DDescription(struct soap *soap, int n = -1) { return soap_instantiate_tt__Space1DDescription(soap, n, NULL, NULL, NULL); }

inline tt__Space1DDescription * soap_new_req_tt__Space1DDescription(struct soap *soap, std::string& URI, tt__FloatRange *XRange) { tt__Space1DDescription *_p = soap_instantiate_tt__Space1DDescription(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Space1DDescription::URI = URI; _p->tt__Space1DDescription::XRange = XRange; } return _p; }

inline tt__Space1DDescription * soap_new_set_tt__Space1DDescription(struct soap *soap, std::string& URI, tt__FloatRange *XRange) { tt__Space1DDescription *_p = soap_instantiate_tt__Space1DDescription(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Space1DDescription::URI = URI; _p->tt__Space1DDescription::XRange = XRange; } return _p; }

inline void soap_delete_tt__Space1DDescription(struct soap *soap, tt__Space1DDescription *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Space1DDescription(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Space2DDescription
#define SOAP_TYPE_tt__Space2DDescription (463)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Space2DDescription(struct soap*, const char*, int, const tt__Space2DDescription *, const char*);
SOAP_FMAC3 tt__Space2DDescription * SOAP_FMAC4 soap_in_tt__Space2DDescription(struct soap*, const char*, tt__Space2DDescription *, const char*);

#ifndef soap_write_tt__Space2DDescription
#define soap_write_tt__Space2DDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Space2DDescription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Space2DDescription * SOAP_FMAC4 soap_get_tt__Space2DDescription(struct soap*, tt__Space2DDescription *, const char*, const char*);

#ifndef soap_read_tt__Space2DDescription
#define soap_read_tt__Space2DDescription(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Space2DDescription(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Space2DDescription * SOAP_FMAC2 soap_instantiate_tt__Space2DDescription(struct soap*, int, const char*, const char*, size_t*);

inline tt__Space2DDescription * soap_new_tt__Space2DDescription(struct soap *soap, int n = -1) { return soap_instantiate_tt__Space2DDescription(soap, n, NULL, NULL, NULL); }

inline tt__Space2DDescription * soap_new_req_tt__Space2DDescription(struct soap *soap, std::string& URI, tt__FloatRange *XRange, tt__FloatRange *YRange) { tt__Space2DDescription *_p = soap_instantiate_tt__Space2DDescription(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Space2DDescription::URI = URI; _p->tt__Space2DDescription::XRange = XRange; _p->tt__Space2DDescription::YRange = YRange; } return _p; }

inline tt__Space2DDescription * soap_new_set_tt__Space2DDescription(struct soap *soap, std::string& URI, tt__FloatRange *XRange, tt__FloatRange *YRange) { tt__Space2DDescription *_p = soap_instantiate_tt__Space2DDescription(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Space2DDescription::URI = URI; _p->tt__Space2DDescription::XRange = XRange; _p->tt__Space2DDescription::YRange = YRange; } return _p; }

inline void soap_delete_tt__Space2DDescription(struct soap *soap, tt__Space2DDescription *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Space2DDescription(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZSpacesExtension
#define SOAP_TYPE_tt__PTZSpacesExtension (462)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZSpacesExtension(struct soap*, const char*, int, const tt__PTZSpacesExtension *, const char*);
SOAP_FMAC3 tt__PTZSpacesExtension * SOAP_FMAC4 soap_in_tt__PTZSpacesExtension(struct soap*, const char*, tt__PTZSpacesExtension *, const char*);

#ifndef soap_write_tt__PTZSpacesExtension
#define soap_write_tt__PTZSpacesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZSpacesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZSpacesExtension * SOAP_FMAC4 soap_get_tt__PTZSpacesExtension(struct soap*, tt__PTZSpacesExtension *, const char*, const char*);

#ifndef soap_read_tt__PTZSpacesExtension
#define soap_read_tt__PTZSpacesExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZSpacesExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZSpacesExtension * SOAP_FMAC2 soap_instantiate_tt__PTZSpacesExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZSpacesExtension * soap_new_tt__PTZSpacesExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZSpacesExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTZSpacesExtension * soap_new_req_tt__PTZSpacesExtension(struct soap *soap) { tt__PTZSpacesExtension *_p = soap_instantiate_tt__PTZSpacesExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTZSpacesExtension * soap_new_set_tt__PTZSpacesExtension(struct soap *soap) { tt__PTZSpacesExtension *_p = soap_instantiate_tt__PTZSpacesExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__PTZSpacesExtension(struct soap *soap, tt__PTZSpacesExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZSpacesExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZSpaces
#define SOAP_TYPE_tt__PTZSpaces (461)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZSpaces(struct soap*, const char*, int, const tt__PTZSpaces *, const char*);
SOAP_FMAC3 tt__PTZSpaces * SOAP_FMAC4 soap_in_tt__PTZSpaces(struct soap*, const char*, tt__PTZSpaces *, const char*);

#ifndef soap_write_tt__PTZSpaces
#define soap_write_tt__PTZSpaces(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZSpaces", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZSpaces * SOAP_FMAC4 soap_get_tt__PTZSpaces(struct soap*, tt__PTZSpaces *, const char*, const char*);

#ifndef soap_read_tt__PTZSpaces
#define soap_read_tt__PTZSpaces(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZSpaces(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZSpaces * SOAP_FMAC2 soap_instantiate_tt__PTZSpaces(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZSpaces * soap_new_tt__PTZSpaces(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZSpaces(soap, n, NULL, NULL, NULL); }

inline tt__PTZSpaces * soap_new_req_tt__PTZSpaces(struct soap *soap) { tt__PTZSpaces *_p = soap_instantiate_tt__PTZSpaces(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTZSpaces * soap_new_set_tt__PTZSpaces(struct soap *soap, std::vector<tt__Space2DDescription * >& AbsolutePanTiltPositionSpace, std::vector<tt__Space1DDescription * >& AbsoluteZoomPositionSpace, std::vector<tt__Space2DDescription * >& RelativePanTiltTranslationSpace, std::vector<tt__Space1DDescription * >& RelativeZoomTranslationSpace, std::vector<tt__Space2DDescription * >& ContinuousPanTiltVelocitySpace, std::vector<tt__Space1DDescription * >& ContinuousZoomVelocitySpace, std::vector<tt__Space1DDescription * >& PanTiltSpeedSpace, std::vector<tt__Space1DDescription * >& ZoomSpeedSpace, tt__PTZSpacesExtension *Extension) { tt__PTZSpaces *_p = soap_instantiate_tt__PTZSpaces(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZSpaces::AbsolutePanTiltPositionSpace = AbsolutePanTiltPositionSpace; _p->tt__PTZSpaces::AbsoluteZoomPositionSpace = AbsoluteZoomPositionSpace; _p->tt__PTZSpaces::RelativePanTiltTranslationSpace = RelativePanTiltTranslationSpace; _p->tt__PTZSpaces::RelativeZoomTranslationSpace = RelativeZoomTranslationSpace; _p->tt__PTZSpaces::ContinuousPanTiltVelocitySpace = ContinuousPanTiltVelocitySpace; _p->tt__PTZSpaces::ContinuousZoomVelocitySpace = ContinuousZoomVelocitySpace; _p->tt__PTZSpaces::PanTiltSpeedSpace = PanTiltSpeedSpace; _p->tt__PTZSpaces::ZoomSpeedSpace = ZoomSpeedSpace; _p->tt__PTZSpaces::Extension = Extension; } return _p; }

inline void soap_delete_tt__PTZSpaces(struct soap *soap, tt__PTZSpaces *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZSpaces(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ZoomLimits
#define SOAP_TYPE_tt__ZoomLimits (460)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ZoomLimits(struct soap*, const char*, int, const tt__ZoomLimits *, const char*);
SOAP_FMAC3 tt__ZoomLimits * SOAP_FMAC4 soap_in_tt__ZoomLimits(struct soap*, const char*, tt__ZoomLimits *, const char*);

#ifndef soap_write_tt__ZoomLimits
#define soap_write_tt__ZoomLimits(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ZoomLimits", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ZoomLimits * SOAP_FMAC4 soap_get_tt__ZoomLimits(struct soap*, tt__ZoomLimits *, const char*, const char*);

#ifndef soap_read_tt__ZoomLimits
#define soap_read_tt__ZoomLimits(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ZoomLimits(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ZoomLimits * SOAP_FMAC2 soap_instantiate_tt__ZoomLimits(struct soap*, int, const char*, const char*, size_t*);

inline tt__ZoomLimits * soap_new_tt__ZoomLimits(struct soap *soap, int n = -1) { return soap_instantiate_tt__ZoomLimits(soap, n, NULL, NULL, NULL); }

inline tt__ZoomLimits * soap_new_req_tt__ZoomLimits(struct soap *soap, tt__Space1DDescription *Range) { tt__ZoomLimits *_p = soap_instantiate_tt__ZoomLimits(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ZoomLimits::Range = Range; } return _p; }

inline tt__ZoomLimits * soap_new_set_tt__ZoomLimits(struct soap *soap, tt__Space1DDescription *Range) { tt__ZoomLimits *_p = soap_instantiate_tt__ZoomLimits(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ZoomLimits::Range = Range; } return _p; }

inline void soap_delete_tt__ZoomLimits(struct soap *soap, tt__ZoomLimits *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ZoomLimits(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PanTiltLimits
#define SOAP_TYPE_tt__PanTiltLimits (459)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PanTiltLimits(struct soap*, const char*, int, const tt__PanTiltLimits *, const char*);
SOAP_FMAC3 tt__PanTiltLimits * SOAP_FMAC4 soap_in_tt__PanTiltLimits(struct soap*, const char*, tt__PanTiltLimits *, const char*);

#ifndef soap_write_tt__PanTiltLimits
#define soap_write_tt__PanTiltLimits(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PanTiltLimits", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PanTiltLimits * SOAP_FMAC4 soap_get_tt__PanTiltLimits(struct soap*, tt__PanTiltLimits *, const char*, const char*);

#ifndef soap_read_tt__PanTiltLimits
#define soap_read_tt__PanTiltLimits(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PanTiltLimits(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PanTiltLimits * SOAP_FMAC2 soap_instantiate_tt__PanTiltLimits(struct soap*, int, const char*, const char*, size_t*);

inline tt__PanTiltLimits * soap_new_tt__PanTiltLimits(struct soap *soap, int n = -1) { return soap_instantiate_tt__PanTiltLimits(soap, n, NULL, NULL, NULL); }

inline tt__PanTiltLimits * soap_new_req_tt__PanTiltLimits(struct soap *soap, tt__Space2DDescription *Range) { tt__PanTiltLimits *_p = soap_instantiate_tt__PanTiltLimits(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PanTiltLimits::Range = Range; } return _p; }

inline tt__PanTiltLimits * soap_new_set_tt__PanTiltLimits(struct soap *soap, tt__Space2DDescription *Range) { tt__PanTiltLimits *_p = soap_instantiate_tt__PanTiltLimits(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PanTiltLimits::Range = Range; } return _p; }

inline void soap_delete_tt__PanTiltLimits(struct soap *soap, tt__PanTiltLimits *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PanTiltLimits(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ReverseOptionsExtension
#define SOAP_TYPE_tt__ReverseOptionsExtension (458)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ReverseOptionsExtension(struct soap*, const char*, int, const tt__ReverseOptionsExtension *, const char*);
SOAP_FMAC3 tt__ReverseOptionsExtension * SOAP_FMAC4 soap_in_tt__ReverseOptionsExtension(struct soap*, const char*, tt__ReverseOptionsExtension *, const char*);

#ifndef soap_write_tt__ReverseOptionsExtension
#define soap_write_tt__ReverseOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ReverseOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ReverseOptionsExtension * SOAP_FMAC4 soap_get_tt__ReverseOptionsExtension(struct soap*, tt__ReverseOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__ReverseOptionsExtension
#define soap_read_tt__ReverseOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ReverseOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ReverseOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__ReverseOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ReverseOptionsExtension * soap_new_tt__ReverseOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ReverseOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__ReverseOptionsExtension * soap_new_req_tt__ReverseOptionsExtension(struct soap *soap) { tt__ReverseOptionsExtension *_p = soap_instantiate_tt__ReverseOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ReverseOptionsExtension * soap_new_set_tt__ReverseOptionsExtension(struct soap *soap) { tt__ReverseOptionsExtension *_p = soap_instantiate_tt__ReverseOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__ReverseOptionsExtension(struct soap *soap, tt__ReverseOptionsExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ReverseOptionsExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ReverseOptions
#define SOAP_TYPE_tt__ReverseOptions (457)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ReverseOptions(struct soap*, const char*, int, const tt__ReverseOptions *, const char*);
SOAP_FMAC3 tt__ReverseOptions * SOAP_FMAC4 soap_in_tt__ReverseOptions(struct soap*, const char*, tt__ReverseOptions *, const char*);

#ifndef soap_write_tt__ReverseOptions
#define soap_write_tt__ReverseOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ReverseOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ReverseOptions * SOAP_FMAC4 soap_get_tt__ReverseOptions(struct soap*, tt__ReverseOptions *, const char*, const char*);

#ifndef soap_read_tt__ReverseOptions
#define soap_read_tt__ReverseOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ReverseOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ReverseOptions * SOAP_FMAC2 soap_instantiate_tt__ReverseOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__ReverseOptions * soap_new_tt__ReverseOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__ReverseOptions(soap, n, NULL, NULL, NULL); }

inline tt__ReverseOptions * soap_new_req_tt__ReverseOptions(struct soap *soap) { tt__ReverseOptions *_p = soap_instantiate_tt__ReverseOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ReverseOptions * soap_new_set_tt__ReverseOptions(struct soap *soap, std::vector<enum tt__ReverseMode >& Mode, tt__ReverseOptionsExtension *Extension) { tt__ReverseOptions *_p = soap_instantiate_tt__ReverseOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ReverseOptions::Mode = Mode; _p->tt__ReverseOptions::Extension = Extension; } return _p; }

inline void soap_delete_tt__ReverseOptions(struct soap *soap, tt__ReverseOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ReverseOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__EFlipOptionsExtension
#define SOAP_TYPE_tt__EFlipOptionsExtension (456)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__EFlipOptionsExtension(struct soap*, const char*, int, const tt__EFlipOptionsExtension *, const char*);
SOAP_FMAC3 tt__EFlipOptionsExtension * SOAP_FMAC4 soap_in_tt__EFlipOptionsExtension(struct soap*, const char*, tt__EFlipOptionsExtension *, const char*);

#ifndef soap_write_tt__EFlipOptionsExtension
#define soap_write_tt__EFlipOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:EFlipOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EFlipOptionsExtension * SOAP_FMAC4 soap_get_tt__EFlipOptionsExtension(struct soap*, tt__EFlipOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__EFlipOptionsExtension
#define soap_read_tt__EFlipOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__EFlipOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__EFlipOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__EFlipOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__EFlipOptionsExtension * soap_new_tt__EFlipOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__EFlipOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__EFlipOptionsExtension * soap_new_req_tt__EFlipOptionsExtension(struct soap *soap) { tt__EFlipOptionsExtension *_p = soap_instantiate_tt__EFlipOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__EFlipOptionsExtension * soap_new_set_tt__EFlipOptionsExtension(struct soap *soap) { tt__EFlipOptionsExtension *_p = soap_instantiate_tt__EFlipOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__EFlipOptionsExtension(struct soap *soap, tt__EFlipOptionsExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__EFlipOptionsExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__EFlipOptions
#define SOAP_TYPE_tt__EFlipOptions (455)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__EFlipOptions(struct soap*, const char*, int, const tt__EFlipOptions *, const char*);
SOAP_FMAC3 tt__EFlipOptions * SOAP_FMAC4 soap_in_tt__EFlipOptions(struct soap*, const char*, tt__EFlipOptions *, const char*);

#ifndef soap_write_tt__EFlipOptions
#define soap_write_tt__EFlipOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:EFlipOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EFlipOptions * SOAP_FMAC4 soap_get_tt__EFlipOptions(struct soap*, tt__EFlipOptions *, const char*, const char*);

#ifndef soap_read_tt__EFlipOptions
#define soap_read_tt__EFlipOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__EFlipOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__EFlipOptions * SOAP_FMAC2 soap_instantiate_tt__EFlipOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__EFlipOptions * soap_new_tt__EFlipOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__EFlipOptions(soap, n, NULL, NULL, NULL); }

inline tt__EFlipOptions * soap_new_req_tt__EFlipOptions(struct soap *soap) { tt__EFlipOptions *_p = soap_instantiate_tt__EFlipOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__EFlipOptions * soap_new_set_tt__EFlipOptions(struct soap *soap, std::vector<enum tt__EFlipMode >& Mode, tt__EFlipOptionsExtension *Extension) { tt__EFlipOptions *_p = soap_instantiate_tt__EFlipOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__EFlipOptions::Mode = Mode; _p->tt__EFlipOptions::Extension = Extension; } return _p; }

inline void soap_delete_tt__EFlipOptions(struct soap *soap, tt__EFlipOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__EFlipOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTControlDirectionOptionsExtension
#define SOAP_TYPE_tt__PTControlDirectionOptionsExtension (454)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTControlDirectionOptionsExtension(struct soap*, const char*, int, const tt__PTControlDirectionOptionsExtension *, const char*);
SOAP_FMAC3 tt__PTControlDirectionOptionsExtension * SOAP_FMAC4 soap_in_tt__PTControlDirectionOptionsExtension(struct soap*, const char*, tt__PTControlDirectionOptionsExtension *, const char*);

#ifndef soap_write_tt__PTControlDirectionOptionsExtension
#define soap_write_tt__PTControlDirectionOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTControlDirectionOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTControlDirectionOptionsExtension * SOAP_FMAC4 soap_get_tt__PTControlDirectionOptionsExtension(struct soap*, tt__PTControlDirectionOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__PTControlDirectionOptionsExtension
#define soap_read_tt__PTControlDirectionOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTControlDirectionOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTControlDirectionOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__PTControlDirectionOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTControlDirectionOptionsExtension * soap_new_tt__PTControlDirectionOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTControlDirectionOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTControlDirectionOptionsExtension * soap_new_req_tt__PTControlDirectionOptionsExtension(struct soap *soap) { tt__PTControlDirectionOptionsExtension *_p = soap_instantiate_tt__PTControlDirectionOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTControlDirectionOptionsExtension * soap_new_set_tt__PTControlDirectionOptionsExtension(struct soap *soap) { tt__PTControlDirectionOptionsExtension *_p = soap_instantiate_tt__PTControlDirectionOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__PTControlDirectionOptionsExtension(struct soap *soap, tt__PTControlDirectionOptionsExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTControlDirectionOptionsExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTControlDirectionOptions
#define SOAP_TYPE_tt__PTControlDirectionOptions (453)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTControlDirectionOptions(struct soap*, const char*, int, const tt__PTControlDirectionOptions *, const char*);
SOAP_FMAC3 tt__PTControlDirectionOptions * SOAP_FMAC4 soap_in_tt__PTControlDirectionOptions(struct soap*, const char*, tt__PTControlDirectionOptions *, const char*);

#ifndef soap_write_tt__PTControlDirectionOptions
#define soap_write_tt__PTControlDirectionOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTControlDirectionOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTControlDirectionOptions * SOAP_FMAC4 soap_get_tt__PTControlDirectionOptions(struct soap*, tt__PTControlDirectionOptions *, const char*, const char*);

#ifndef soap_read_tt__PTControlDirectionOptions
#define soap_read_tt__PTControlDirectionOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTControlDirectionOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTControlDirectionOptions * SOAP_FMAC2 soap_instantiate_tt__PTControlDirectionOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTControlDirectionOptions * soap_new_tt__PTControlDirectionOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTControlDirectionOptions(soap, n, NULL, NULL, NULL); }

inline tt__PTControlDirectionOptions * soap_new_req_tt__PTControlDirectionOptions(struct soap *soap) { tt__PTControlDirectionOptions *_p = soap_instantiate_tt__PTControlDirectionOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTControlDirectionOptions * soap_new_set_tt__PTControlDirectionOptions(struct soap *soap, tt__EFlipOptions *EFlip, tt__ReverseOptions *Reverse, tt__PTControlDirectionOptionsExtension *Extension) { tt__PTControlDirectionOptions *_p = soap_instantiate_tt__PTControlDirectionOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTControlDirectionOptions::EFlip = EFlip; _p->tt__PTControlDirectionOptions::Reverse = Reverse; _p->tt__PTControlDirectionOptions::Extension = Extension; } return _p; }

inline void soap_delete_tt__PTControlDirectionOptions(struct soap *soap, tt__PTControlDirectionOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTControlDirectionOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZConfigurationOptions2
#define SOAP_TYPE_tt__PTZConfigurationOptions2 (452)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZConfigurationOptions2(struct soap*, const char*, int, const tt__PTZConfigurationOptions2 *, const char*);
SOAP_FMAC3 tt__PTZConfigurationOptions2 * SOAP_FMAC4 soap_in_tt__PTZConfigurationOptions2(struct soap*, const char*, tt__PTZConfigurationOptions2 *, const char*);

#ifndef soap_write_tt__PTZConfigurationOptions2
#define soap_write_tt__PTZConfigurationOptions2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZConfigurationOptions2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZConfigurationOptions2 * SOAP_FMAC4 soap_get_tt__PTZConfigurationOptions2(struct soap*, tt__PTZConfigurationOptions2 *, const char*, const char*);

#ifndef soap_read_tt__PTZConfigurationOptions2
#define soap_read_tt__PTZConfigurationOptions2(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZConfigurationOptions2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZConfigurationOptions2 * SOAP_FMAC2 soap_instantiate_tt__PTZConfigurationOptions2(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZConfigurationOptions2 * soap_new_tt__PTZConfigurationOptions2(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZConfigurationOptions2(soap, n, NULL, NULL, NULL); }

inline tt__PTZConfigurationOptions2 * soap_new_req_tt__PTZConfigurationOptions2(struct soap *soap) { tt__PTZConfigurationOptions2 *_p = soap_instantiate_tt__PTZConfigurationOptions2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTZConfigurationOptions2 * soap_new_set_tt__PTZConfigurationOptions2(struct soap *soap) { tt__PTZConfigurationOptions2 *_p = soap_instantiate_tt__PTZConfigurationOptions2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__PTZConfigurationOptions2(struct soap *soap, tt__PTZConfigurationOptions2 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZConfigurationOptions2(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZConfigurationOptions
#define SOAP_TYPE_tt__PTZConfigurationOptions (451)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZConfigurationOptions(struct soap*, const char*, int, const tt__PTZConfigurationOptions *, const char*);
SOAP_FMAC3 tt__PTZConfigurationOptions * SOAP_FMAC4 soap_in_tt__PTZConfigurationOptions(struct soap*, const char*, tt__PTZConfigurationOptions *, const char*);

#ifndef soap_write_tt__PTZConfigurationOptions
#define soap_write_tt__PTZConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZConfigurationOptions * SOAP_FMAC4 soap_get_tt__PTZConfigurationOptions(struct soap*, tt__PTZConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tt__PTZConfigurationOptions
#define soap_read_tt__PTZConfigurationOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZConfigurationOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZConfigurationOptions * SOAP_FMAC2 soap_instantiate_tt__PTZConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZConfigurationOptions * soap_new_tt__PTZConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline tt__PTZConfigurationOptions * soap_new_req_tt__PTZConfigurationOptions(struct soap *soap, tt__PTZSpaces *Spaces, tt__DurationRange *PTZTimeout) { tt__PTZConfigurationOptions *_p = soap_instantiate_tt__PTZConfigurationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZConfigurationOptions::Spaces = Spaces; _p->tt__PTZConfigurationOptions::PTZTimeout = PTZTimeout; } return _p; }

inline tt__PTZConfigurationOptions * soap_new_set_tt__PTZConfigurationOptions(struct soap *soap, tt__PTZSpaces *Spaces, tt__DurationRange *PTZTimeout, tt__PTControlDirectionOptions *PTControlDirection, tt__PTZConfigurationOptions2 *Extension) { tt__PTZConfigurationOptions *_p = soap_instantiate_tt__PTZConfigurationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZConfigurationOptions::Spaces = Spaces; _p->tt__PTZConfigurationOptions::PTZTimeout = PTZTimeout; _p->tt__PTZConfigurationOptions::PTControlDirection = PTControlDirection; _p->tt__PTZConfigurationOptions::Extension = Extension; } return _p; }

inline void soap_delete_tt__PTZConfigurationOptions(struct soap *soap, tt__PTZConfigurationOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZConfigurationOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Reverse
#define SOAP_TYPE_tt__Reverse (450)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Reverse(struct soap*, const char*, int, const tt__Reverse *, const char*);
SOAP_FMAC3 tt__Reverse * SOAP_FMAC4 soap_in_tt__Reverse(struct soap*, const char*, tt__Reverse *, const char*);

#ifndef soap_write_tt__Reverse
#define soap_write_tt__Reverse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Reverse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Reverse * SOAP_FMAC4 soap_get_tt__Reverse(struct soap*, tt__Reverse *, const char*, const char*);

#ifndef soap_read_tt__Reverse
#define soap_read_tt__Reverse(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Reverse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Reverse * SOAP_FMAC2 soap_instantiate_tt__Reverse(struct soap*, int, const char*, const char*, size_t*);

inline tt__Reverse * soap_new_tt__Reverse(struct soap *soap, int n = -1) { return soap_instantiate_tt__Reverse(soap, n, NULL, NULL, NULL); }

inline tt__Reverse * soap_new_req_tt__Reverse(struct soap *soap, enum tt__ReverseMode Mode) { tt__Reverse *_p = soap_instantiate_tt__Reverse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Reverse::Mode = Mode; } return _p; }

inline tt__Reverse * soap_new_set_tt__Reverse(struct soap *soap, enum tt__ReverseMode Mode) { tt__Reverse *_p = soap_instantiate_tt__Reverse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Reverse::Mode = Mode; } return _p; }

inline void soap_delete_tt__Reverse(struct soap *soap, tt__Reverse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Reverse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__EFlip
#define SOAP_TYPE_tt__EFlip (449)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__EFlip(struct soap*, const char*, int, const tt__EFlip *, const char*);
SOAP_FMAC3 tt__EFlip * SOAP_FMAC4 soap_in_tt__EFlip(struct soap*, const char*, tt__EFlip *, const char*);

#ifndef soap_write_tt__EFlip
#define soap_write_tt__EFlip(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:EFlip", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EFlip * SOAP_FMAC4 soap_get_tt__EFlip(struct soap*, tt__EFlip *, const char*, const char*);

#ifndef soap_read_tt__EFlip
#define soap_read_tt__EFlip(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__EFlip(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__EFlip * SOAP_FMAC2 soap_instantiate_tt__EFlip(struct soap*, int, const char*, const char*, size_t*);

inline tt__EFlip * soap_new_tt__EFlip(struct soap *soap, int n = -1) { return soap_instantiate_tt__EFlip(soap, n, NULL, NULL, NULL); }

inline tt__EFlip * soap_new_req_tt__EFlip(struct soap *soap, enum tt__EFlipMode Mode) { tt__EFlip *_p = soap_instantiate_tt__EFlip(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__EFlip::Mode = Mode; } return _p; }

inline tt__EFlip * soap_new_set_tt__EFlip(struct soap *soap, enum tt__EFlipMode Mode) { tt__EFlip *_p = soap_instantiate_tt__EFlip(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__EFlip::Mode = Mode; } return _p; }

inline void soap_delete_tt__EFlip(struct soap *soap, tt__EFlip *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__EFlip(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTControlDirectionExtension
#define SOAP_TYPE_tt__PTControlDirectionExtension (448)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTControlDirectionExtension(struct soap*, const char*, int, const tt__PTControlDirectionExtension *, const char*);
SOAP_FMAC3 tt__PTControlDirectionExtension * SOAP_FMAC4 soap_in_tt__PTControlDirectionExtension(struct soap*, const char*, tt__PTControlDirectionExtension *, const char*);

#ifndef soap_write_tt__PTControlDirectionExtension
#define soap_write_tt__PTControlDirectionExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTControlDirectionExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTControlDirectionExtension * SOAP_FMAC4 soap_get_tt__PTControlDirectionExtension(struct soap*, tt__PTControlDirectionExtension *, const char*, const char*);

#ifndef soap_read_tt__PTControlDirectionExtension
#define soap_read_tt__PTControlDirectionExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTControlDirectionExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTControlDirectionExtension * SOAP_FMAC2 soap_instantiate_tt__PTControlDirectionExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTControlDirectionExtension * soap_new_tt__PTControlDirectionExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTControlDirectionExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTControlDirectionExtension * soap_new_req_tt__PTControlDirectionExtension(struct soap *soap) { tt__PTControlDirectionExtension *_p = soap_instantiate_tt__PTControlDirectionExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTControlDirectionExtension * soap_new_set_tt__PTControlDirectionExtension(struct soap *soap) { tt__PTControlDirectionExtension *_p = soap_instantiate_tt__PTControlDirectionExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__PTControlDirectionExtension(struct soap *soap, tt__PTControlDirectionExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTControlDirectionExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTControlDirection
#define SOAP_TYPE_tt__PTControlDirection (447)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTControlDirection(struct soap*, const char*, int, const tt__PTControlDirection *, const char*);
SOAP_FMAC3 tt__PTControlDirection * SOAP_FMAC4 soap_in_tt__PTControlDirection(struct soap*, const char*, tt__PTControlDirection *, const char*);

#ifndef soap_write_tt__PTControlDirection
#define soap_write_tt__PTControlDirection(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTControlDirection", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTControlDirection * SOAP_FMAC4 soap_get_tt__PTControlDirection(struct soap*, tt__PTControlDirection *, const char*, const char*);

#ifndef soap_read_tt__PTControlDirection
#define soap_read_tt__PTControlDirection(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTControlDirection(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTControlDirection * SOAP_FMAC2 soap_instantiate_tt__PTControlDirection(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTControlDirection * soap_new_tt__PTControlDirection(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTControlDirection(soap, n, NULL, NULL, NULL); }

inline tt__PTControlDirection * soap_new_req_tt__PTControlDirection(struct soap *soap) { tt__PTControlDirection *_p = soap_instantiate_tt__PTControlDirection(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTControlDirection * soap_new_set_tt__PTControlDirection(struct soap *soap, tt__EFlip *EFlip, tt__Reverse *Reverse, tt__PTControlDirectionExtension *Extension) { tt__PTControlDirection *_p = soap_instantiate_tt__PTControlDirection(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTControlDirection::EFlip = EFlip; _p->tt__PTControlDirection::Reverse = Reverse; _p->tt__PTControlDirection::Extension = Extension; } return _p; }

inline void soap_delete_tt__PTControlDirection(struct soap *soap, tt__PTControlDirection *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTControlDirection(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZConfigurationExtension2
#define SOAP_TYPE_tt__PTZConfigurationExtension2 (446)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZConfigurationExtension2(struct soap*, const char*, int, const tt__PTZConfigurationExtension2 *, const char*);
SOAP_FMAC3 tt__PTZConfigurationExtension2 * SOAP_FMAC4 soap_in_tt__PTZConfigurationExtension2(struct soap*, const char*, tt__PTZConfigurationExtension2 *, const char*);

#ifndef soap_write_tt__PTZConfigurationExtension2
#define soap_write_tt__PTZConfigurationExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZConfigurationExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZConfigurationExtension2 * SOAP_FMAC4 soap_get_tt__PTZConfigurationExtension2(struct soap*, tt__PTZConfigurationExtension2 *, const char*, const char*);

#ifndef soap_read_tt__PTZConfigurationExtension2
#define soap_read_tt__PTZConfigurationExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZConfigurationExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZConfigurationExtension2 * SOAP_FMAC2 soap_instantiate_tt__PTZConfigurationExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZConfigurationExtension2 * soap_new_tt__PTZConfigurationExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZConfigurationExtension2(soap, n, NULL, NULL, NULL); }

inline tt__PTZConfigurationExtension2 * soap_new_req_tt__PTZConfigurationExtension2(struct soap *soap) { tt__PTZConfigurationExtension2 *_p = soap_instantiate_tt__PTZConfigurationExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTZConfigurationExtension2 * soap_new_set_tt__PTZConfigurationExtension2(struct soap *soap) { tt__PTZConfigurationExtension2 *_p = soap_instantiate_tt__PTZConfigurationExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__PTZConfigurationExtension2(struct soap *soap, tt__PTZConfigurationExtension2 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZConfigurationExtension2(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZConfigurationExtension
#define SOAP_TYPE_tt__PTZConfigurationExtension (445)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZConfigurationExtension(struct soap*, const char*, int, const tt__PTZConfigurationExtension *, const char*);
SOAP_FMAC3 tt__PTZConfigurationExtension * SOAP_FMAC4 soap_in_tt__PTZConfigurationExtension(struct soap*, const char*, tt__PTZConfigurationExtension *, const char*);

#ifndef soap_write_tt__PTZConfigurationExtension
#define soap_write_tt__PTZConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZConfigurationExtension * SOAP_FMAC4 soap_get_tt__PTZConfigurationExtension(struct soap*, tt__PTZConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__PTZConfigurationExtension
#define soap_read_tt__PTZConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__PTZConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZConfigurationExtension * soap_new_tt__PTZConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTZConfigurationExtension * soap_new_req_tt__PTZConfigurationExtension(struct soap *soap) { tt__PTZConfigurationExtension *_p = soap_instantiate_tt__PTZConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTZConfigurationExtension * soap_new_set_tt__PTZConfigurationExtension(struct soap *soap, tt__PTControlDirection *PTControlDirection, tt__PTZConfigurationExtension2 *Extension) { tt__PTZConfigurationExtension *_p = soap_instantiate_tt__PTZConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZConfigurationExtension::PTControlDirection = PTControlDirection; _p->tt__PTZConfigurationExtension::Extension = Extension; } return _p; }

inline void soap_delete_tt__PTZConfigurationExtension(struct soap *soap, tt__PTZConfigurationExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZConfigurationExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZConfiguration
#define SOAP_TYPE_tt__PTZConfiguration (444)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZConfiguration(struct soap*, const char*, int, const tt__PTZConfiguration *, const char*);
SOAP_FMAC3 tt__PTZConfiguration * SOAP_FMAC4 soap_in_tt__PTZConfiguration(struct soap*, const char*, tt__PTZConfiguration *, const char*);

#ifndef soap_write_tt__PTZConfiguration
#define soap_write_tt__PTZConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZConfiguration * SOAP_FMAC4 soap_get_tt__PTZConfiguration(struct soap*, tt__PTZConfiguration *, const char*, const char*);

#ifndef soap_read_tt__PTZConfiguration
#define soap_read_tt__PTZConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZConfiguration * SOAP_FMAC2 soap_instantiate_tt__PTZConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZConfiguration * soap_new_tt__PTZConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__PTZConfiguration * soap_new_req_tt__PTZConfiguration(struct soap *soap, std::string& NodeToken, std::string& Name1, int UseCount1, std::string& token1) { tt__PTZConfiguration *_p = soap_instantiate_tt__PTZConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZConfiguration::NodeToken = NodeToken; _p->tt__ConfigurationEntity::Name = Name1; _p->tt__ConfigurationEntity::UseCount = UseCount1; _p->tt__ConfigurationEntity::token = token1; } return _p; }

inline tt__PTZConfiguration * soap_new_set_tt__PTZConfiguration(struct soap *soap, std::string& NodeToken, std::string *DefaultAbsolutePantTiltPositionSpace, std::string *DefaultAbsoluteZoomPositionSpace, std::string *DefaultRelativePanTiltTranslationSpace, std::string *DefaultRelativeZoomTranslationSpace, std::string *DefaultContinuousPanTiltVelocitySpace, std::string *DefaultContinuousZoomVelocitySpace, tt__PTZSpeed *DefaultPTZSpeed, LONG64 *DefaultPTZTimeout, tt__PanTiltLimits *PanTiltLimits, tt__ZoomLimits *ZoomLimits, tt__PTZConfigurationExtension *Extension, std::string& Name1, int UseCount1, std::string& token1) { tt__PTZConfiguration *_p = soap_instantiate_tt__PTZConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZConfiguration::NodeToken = NodeToken; _p->tt__PTZConfiguration::DefaultAbsolutePantTiltPositionSpace = DefaultAbsolutePantTiltPositionSpace; _p->tt__PTZConfiguration::DefaultAbsoluteZoomPositionSpace = DefaultAbsoluteZoomPositionSpace; _p->tt__PTZConfiguration::DefaultRelativePanTiltTranslationSpace = DefaultRelativePanTiltTranslationSpace; _p->tt__PTZConfiguration::DefaultRelativeZoomTranslationSpace = DefaultRelativeZoomTranslationSpace; _p->tt__PTZConfiguration::DefaultContinuousPanTiltVelocitySpace = DefaultContinuousPanTiltVelocitySpace; _p->tt__PTZConfiguration::DefaultContinuousZoomVelocitySpace = DefaultContinuousZoomVelocitySpace; _p->tt__PTZConfiguration::DefaultPTZSpeed = DefaultPTZSpeed; _p->tt__PTZConfiguration::DefaultPTZTimeout = DefaultPTZTimeout; _p->tt__PTZConfiguration::PanTiltLimits = PanTiltLimits; _p->tt__PTZConfiguration::ZoomLimits = ZoomLimits; _p->tt__PTZConfiguration::Extension = Extension; _p->tt__ConfigurationEntity::Name = Name1; _p->tt__ConfigurationEntity::UseCount = UseCount1; _p->tt__ConfigurationEntity::token = token1; } return _p; }

inline void soap_delete_tt__PTZConfiguration(struct soap *soap, tt__PTZConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZPresetTourSupportedExtension
#define SOAP_TYPE_tt__PTZPresetTourSupportedExtension (443)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourSupportedExtension(struct soap*, const char*, int, const tt__PTZPresetTourSupportedExtension *, const char*);
SOAP_FMAC3 tt__PTZPresetTourSupportedExtension * SOAP_FMAC4 soap_in_tt__PTZPresetTourSupportedExtension(struct soap*, const char*, tt__PTZPresetTourSupportedExtension *, const char*);

#ifndef soap_write_tt__PTZPresetTourSupportedExtension
#define soap_write_tt__PTZPresetTourSupportedExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZPresetTourSupportedExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourSupportedExtension * SOAP_FMAC4 soap_get_tt__PTZPresetTourSupportedExtension(struct soap*, tt__PTZPresetTourSupportedExtension *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourSupportedExtension
#define soap_read_tt__PTZPresetTourSupportedExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourSupportedExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZPresetTourSupportedExtension * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourSupportedExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourSupportedExtension * soap_new_tt__PTZPresetTourSupportedExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourSupportedExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourSupportedExtension * soap_new_req_tt__PTZPresetTourSupportedExtension(struct soap *soap) { tt__PTZPresetTourSupportedExtension *_p = soap_instantiate_tt__PTZPresetTourSupportedExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTZPresetTourSupportedExtension * soap_new_set_tt__PTZPresetTourSupportedExtension(struct soap *soap) { tt__PTZPresetTourSupportedExtension *_p = soap_instantiate_tt__PTZPresetTourSupportedExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__PTZPresetTourSupportedExtension(struct soap *soap, tt__PTZPresetTourSupportedExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZPresetTourSupportedExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZPresetTourSupported
#define SOAP_TYPE_tt__PTZPresetTourSupported (442)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourSupported(struct soap*, const char*, int, const tt__PTZPresetTourSupported *, const char*);
SOAP_FMAC3 tt__PTZPresetTourSupported * SOAP_FMAC4 soap_in_tt__PTZPresetTourSupported(struct soap*, const char*, tt__PTZPresetTourSupported *, const char*);

#ifndef soap_write_tt__PTZPresetTourSupported
#define soap_write_tt__PTZPresetTourSupported(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZPresetTourSupported", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourSupported * SOAP_FMAC4 soap_get_tt__PTZPresetTourSupported(struct soap*, tt__PTZPresetTourSupported *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourSupported
#define soap_read_tt__PTZPresetTourSupported(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourSupported(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZPresetTourSupported * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourSupported(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourSupported * soap_new_tt__PTZPresetTourSupported(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourSupported(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourSupported * soap_new_req_tt__PTZPresetTourSupported(struct soap *soap, int MaximumNumberOfPresetTours) { tt__PTZPresetTourSupported *_p = soap_instantiate_tt__PTZPresetTourSupported(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZPresetTourSupported::MaximumNumberOfPresetTours = MaximumNumberOfPresetTours; } return _p; }

inline tt__PTZPresetTourSupported * soap_new_set_tt__PTZPresetTourSupported(struct soap *soap, int MaximumNumberOfPresetTours, std::vector<enum tt__PTZPresetTourOperation >& PTZPresetTourOperation, tt__PTZPresetTourSupportedExtension *Extension) { tt__PTZPresetTourSupported *_p = soap_instantiate_tt__PTZPresetTourSupported(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZPresetTourSupported::MaximumNumberOfPresetTours = MaximumNumberOfPresetTours; _p->tt__PTZPresetTourSupported::PTZPresetTourOperation = PTZPresetTourOperation; _p->tt__PTZPresetTourSupported::Extension = Extension; } return _p; }

inline void soap_delete_tt__PTZPresetTourSupported(struct soap *soap, tt__PTZPresetTourSupported *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZPresetTourSupported(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZNodeExtension2
#define SOAP_TYPE_tt__PTZNodeExtension2 (441)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZNodeExtension2(struct soap*, const char*, int, const tt__PTZNodeExtension2 *, const char*);
SOAP_FMAC3 tt__PTZNodeExtension2 * SOAP_FMAC4 soap_in_tt__PTZNodeExtension2(struct soap*, const char*, tt__PTZNodeExtension2 *, const char*);

#ifndef soap_write_tt__PTZNodeExtension2
#define soap_write_tt__PTZNodeExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZNodeExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZNodeExtension2 * SOAP_FMAC4 soap_get_tt__PTZNodeExtension2(struct soap*, tt__PTZNodeExtension2 *, const char*, const char*);

#ifndef soap_read_tt__PTZNodeExtension2
#define soap_read_tt__PTZNodeExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZNodeExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZNodeExtension2 * SOAP_FMAC2 soap_instantiate_tt__PTZNodeExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZNodeExtension2 * soap_new_tt__PTZNodeExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZNodeExtension2(soap, n, NULL, NULL, NULL); }

inline tt__PTZNodeExtension2 * soap_new_req_tt__PTZNodeExtension2(struct soap *soap) { tt__PTZNodeExtension2 *_p = soap_instantiate_tt__PTZNodeExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTZNodeExtension2 * soap_new_set_tt__PTZNodeExtension2(struct soap *soap) { tt__PTZNodeExtension2 *_p = soap_instantiate_tt__PTZNodeExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__PTZNodeExtension2(struct soap *soap, tt__PTZNodeExtension2 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZNodeExtension2(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZNodeExtension
#define SOAP_TYPE_tt__PTZNodeExtension (440)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZNodeExtension(struct soap*, const char*, int, const tt__PTZNodeExtension *, const char*);
SOAP_FMAC3 tt__PTZNodeExtension * SOAP_FMAC4 soap_in_tt__PTZNodeExtension(struct soap*, const char*, tt__PTZNodeExtension *, const char*);

#ifndef soap_write_tt__PTZNodeExtension
#define soap_write_tt__PTZNodeExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZNodeExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZNodeExtension * SOAP_FMAC4 soap_get_tt__PTZNodeExtension(struct soap*, tt__PTZNodeExtension *, const char*, const char*);

#ifndef soap_read_tt__PTZNodeExtension
#define soap_read_tt__PTZNodeExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZNodeExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZNodeExtension * SOAP_FMAC2 soap_instantiate_tt__PTZNodeExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZNodeExtension * soap_new_tt__PTZNodeExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZNodeExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTZNodeExtension * soap_new_req_tt__PTZNodeExtension(struct soap *soap) { tt__PTZNodeExtension *_p = soap_instantiate_tt__PTZNodeExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTZNodeExtension * soap_new_set_tt__PTZNodeExtension(struct soap *soap, tt__PTZPresetTourSupported *SupportedPresetTour, tt__PTZNodeExtension2 *Extension) { tt__PTZNodeExtension *_p = soap_instantiate_tt__PTZNodeExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZNodeExtension::SupportedPresetTour = SupportedPresetTour; _p->tt__PTZNodeExtension::Extension = Extension; } return _p; }

inline void soap_delete_tt__PTZNodeExtension(struct soap *soap, tt__PTZNodeExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZNodeExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZNode
#define SOAP_TYPE_tt__PTZNode (439)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZNode(struct soap*, const char*, int, const tt__PTZNode *, const char*);
SOAP_FMAC3 tt__PTZNode * SOAP_FMAC4 soap_in_tt__PTZNode(struct soap*, const char*, tt__PTZNode *, const char*);

#ifndef soap_write_tt__PTZNode
#define soap_write_tt__PTZNode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZNode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZNode * SOAP_FMAC4 soap_get_tt__PTZNode(struct soap*, tt__PTZNode *, const char*, const char*);

#ifndef soap_read_tt__PTZNode
#define soap_read_tt__PTZNode(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZNode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZNode * SOAP_FMAC2 soap_instantiate_tt__PTZNode(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZNode * soap_new_tt__PTZNode(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZNode(soap, n, NULL, NULL, NULL); }

inline tt__PTZNode * soap_new_req_tt__PTZNode(struct soap *soap, tt__PTZSpaces *SupportedPTZSpaces, int MaximumNumberOfPresets, bool HomeSupported, std::string& token1) { tt__PTZNode *_p = soap_instantiate_tt__PTZNode(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZNode::SupportedPTZSpaces = SupportedPTZSpaces; _p->tt__PTZNode::MaximumNumberOfPresets = MaximumNumberOfPresets; _p->tt__PTZNode::HomeSupported = HomeSupported; _p->tt__DeviceEntity::token = token1; } return _p; }

inline tt__PTZNode * soap_new_set_tt__PTZNode(struct soap *soap, std::string *Name, tt__PTZSpaces *SupportedPTZSpaces, int MaximumNumberOfPresets, bool HomeSupported, std::vector<std::string >& AuxiliaryCommands, tt__PTZNodeExtension *Extension, bool *FixedHomePosition, std::string& token1) { tt__PTZNode *_p = soap_instantiate_tt__PTZNode(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZNode::Name = Name; _p->tt__PTZNode::SupportedPTZSpaces = SupportedPTZSpaces; _p->tt__PTZNode::MaximumNumberOfPresets = MaximumNumberOfPresets; _p->tt__PTZNode::HomeSupported = HomeSupported; _p->tt__PTZNode::AuxiliaryCommands = AuxiliaryCommands; _p->tt__PTZNode::Extension = Extension; _p->tt__PTZNode::FixedHomePosition = FixedHomePosition; _p->tt__DeviceEntity::token = token1; } return _p; }

inline void soap_delete_tt__PTZNode(struct soap *soap, tt__PTZNode *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZNode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__DigitalInput
#define SOAP_TYPE_tt__DigitalInput (438)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DigitalInput(struct soap*, const char*, int, const tt__DigitalInput *, const char*);
SOAP_FMAC3 tt__DigitalInput * SOAP_FMAC4 soap_in_tt__DigitalInput(struct soap*, const char*, tt__DigitalInput *, const char*);

#ifndef soap_write_tt__DigitalInput
#define soap_write_tt__DigitalInput(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:DigitalInput", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DigitalInput * SOAP_FMAC4 soap_get_tt__DigitalInput(struct soap*, tt__DigitalInput *, const char*, const char*);

#ifndef soap_read_tt__DigitalInput
#define soap_read_tt__DigitalInput(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__DigitalInput(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__DigitalInput * SOAP_FMAC2 soap_instantiate_tt__DigitalInput(struct soap*, int, const char*, const char*, size_t*);

inline tt__DigitalInput * soap_new_tt__DigitalInput(struct soap *soap, int n = -1) { return soap_instantiate_tt__DigitalInput(soap, n, NULL, NULL, NULL); }

inline tt__DigitalInput * soap_new_req_tt__DigitalInput(struct soap *soap, std::string& token1) { tt__DigitalInput *_p = soap_instantiate_tt__DigitalInput(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__DeviceEntity::token = token1; } return _p; }

inline tt__DigitalInput * soap_new_set_tt__DigitalInput(struct soap *soap, std::string& token1) { tt__DigitalInput *_p = soap_instantiate_tt__DigitalInput(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__DeviceEntity::token = token1; } return _p; }

inline void soap_delete_tt__DigitalInput(struct soap *soap, tt__DigitalInput *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__DigitalInput(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RelayOutput
#define SOAP_TYPE_tt__RelayOutput (437)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RelayOutput(struct soap*, const char*, int, const tt__RelayOutput *, const char*);
SOAP_FMAC3 tt__RelayOutput * SOAP_FMAC4 soap_in_tt__RelayOutput(struct soap*, const char*, tt__RelayOutput *, const char*);

#ifndef soap_write_tt__RelayOutput
#define soap_write_tt__RelayOutput(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RelayOutput", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RelayOutput * SOAP_FMAC4 soap_get_tt__RelayOutput(struct soap*, tt__RelayOutput *, const char*, const char*);

#ifndef soap_read_tt__RelayOutput
#define soap_read_tt__RelayOutput(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RelayOutput(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RelayOutput * SOAP_FMAC2 soap_instantiate_tt__RelayOutput(struct soap*, int, const char*, const char*, size_t*);

inline tt__RelayOutput * soap_new_tt__RelayOutput(struct soap *soap, int n = -1) { return soap_instantiate_tt__RelayOutput(soap, n, NULL, NULL, NULL); }

inline tt__RelayOutput * soap_new_req_tt__RelayOutput(struct soap *soap, tt__RelayOutputSettings *Properties, std::string& token1) { tt__RelayOutput *_p = soap_instantiate_tt__RelayOutput(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RelayOutput::Properties = Properties; _p->tt__DeviceEntity::token = token1; } return _p; }

inline tt__RelayOutput * soap_new_set_tt__RelayOutput(struct soap *soap, tt__RelayOutputSettings *Properties, std::string& token1) { tt__RelayOutput *_p = soap_instantiate_tt__RelayOutput(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RelayOutput::Properties = Properties; _p->tt__DeviceEntity::token = token1; } return _p; }

inline void soap_delete_tt__RelayOutput(struct soap *soap, tt__RelayOutput *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RelayOutput(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RelayOutputSettings
#define SOAP_TYPE_tt__RelayOutputSettings (436)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RelayOutputSettings(struct soap*, const char*, int, const tt__RelayOutputSettings *, const char*);
SOAP_FMAC3 tt__RelayOutputSettings * SOAP_FMAC4 soap_in_tt__RelayOutputSettings(struct soap*, const char*, tt__RelayOutputSettings *, const char*);

#ifndef soap_write_tt__RelayOutputSettings
#define soap_write_tt__RelayOutputSettings(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RelayOutputSettings", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RelayOutputSettings * SOAP_FMAC4 soap_get_tt__RelayOutputSettings(struct soap*, tt__RelayOutputSettings *, const char*, const char*);

#ifndef soap_read_tt__RelayOutputSettings
#define soap_read_tt__RelayOutputSettings(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RelayOutputSettings(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RelayOutputSettings * SOAP_FMAC2 soap_instantiate_tt__RelayOutputSettings(struct soap*, int, const char*, const char*, size_t*);

inline tt__RelayOutputSettings * soap_new_tt__RelayOutputSettings(struct soap *soap, int n = -1) { return soap_instantiate_tt__RelayOutputSettings(soap, n, NULL, NULL, NULL); }

inline tt__RelayOutputSettings * soap_new_req_tt__RelayOutputSettings(struct soap *soap, enum tt__RelayMode Mode, LONG64 DelayTime, enum tt__RelayIdleState IdleState) { tt__RelayOutputSettings *_p = soap_instantiate_tt__RelayOutputSettings(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RelayOutputSettings::Mode = Mode; _p->tt__RelayOutputSettings::DelayTime = DelayTime; _p->tt__RelayOutputSettings::IdleState = IdleState; } return _p; }

inline tt__RelayOutputSettings * soap_new_set_tt__RelayOutputSettings(struct soap *soap, enum tt__RelayMode Mode, LONG64 DelayTime, enum tt__RelayIdleState IdleState) { tt__RelayOutputSettings *_p = soap_instantiate_tt__RelayOutputSettings(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RelayOutputSettings::Mode = Mode; _p->tt__RelayOutputSettings::DelayTime = DelayTime; _p->tt__RelayOutputSettings::IdleState = IdleState; } return _p; }

inline void soap_delete_tt__RelayOutputSettings(struct soap *soap, tt__RelayOutputSettings *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RelayOutputSettings(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__GenericEapPwdConfigurationExtension
#define SOAP_TYPE_tt__GenericEapPwdConfigurationExtension (435)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__GenericEapPwdConfigurationExtension(struct soap*, const char*, int, const tt__GenericEapPwdConfigurationExtension *, const char*);
SOAP_FMAC3 tt__GenericEapPwdConfigurationExtension * SOAP_FMAC4 soap_in_tt__GenericEapPwdConfigurationExtension(struct soap*, const char*, tt__GenericEapPwdConfigurationExtension *, const char*);

#ifndef soap_write_tt__GenericEapPwdConfigurationExtension
#define soap_write_tt__GenericEapPwdConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:GenericEapPwdConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__GenericEapPwdConfigurationExtension * SOAP_FMAC4 soap_get_tt__GenericEapPwdConfigurationExtension(struct soap*, tt__GenericEapPwdConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__GenericEapPwdConfigurationExtension
#define soap_read_tt__GenericEapPwdConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__GenericEapPwdConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__GenericEapPwdConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__GenericEapPwdConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__GenericEapPwdConfigurationExtension * soap_new_tt__GenericEapPwdConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__GenericEapPwdConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__GenericEapPwdConfigurationExtension * soap_new_req_tt__GenericEapPwdConfigurationExtension(struct soap *soap) { tt__GenericEapPwdConfigurationExtension *_p = soap_instantiate_tt__GenericEapPwdConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__GenericEapPwdConfigurationExtension * soap_new_set_tt__GenericEapPwdConfigurationExtension(struct soap *soap) { tt__GenericEapPwdConfigurationExtension *_p = soap_instantiate_tt__GenericEapPwdConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__GenericEapPwdConfigurationExtension(struct soap *soap, tt__GenericEapPwdConfigurationExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__GenericEapPwdConfigurationExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__TLSConfiguration
#define SOAP_TYPE_tt__TLSConfiguration (434)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__TLSConfiguration(struct soap*, const char*, int, const tt__TLSConfiguration *, const char*);
SOAP_FMAC3 tt__TLSConfiguration * SOAP_FMAC4 soap_in_tt__TLSConfiguration(struct soap*, const char*, tt__TLSConfiguration *, const char*);

#ifndef soap_write_tt__TLSConfiguration
#define soap_write_tt__TLSConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:TLSConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TLSConfiguration * SOAP_FMAC4 soap_get_tt__TLSConfiguration(struct soap*, tt__TLSConfiguration *, const char*, const char*);

#ifndef soap_read_tt__TLSConfiguration
#define soap_read_tt__TLSConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__TLSConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__TLSConfiguration * SOAP_FMAC2 soap_instantiate_tt__TLSConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__TLSConfiguration * soap_new_tt__TLSConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__TLSConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__TLSConfiguration * soap_new_req_tt__TLSConfiguration(struct soap *soap, std::string& CertificateID) { tt__TLSConfiguration *_p = soap_instantiate_tt__TLSConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__TLSConfiguration::CertificateID = CertificateID; } return _p; }

inline tt__TLSConfiguration * soap_new_set_tt__TLSConfiguration(struct soap *soap, std::string& CertificateID) { tt__TLSConfiguration *_p = soap_instantiate_tt__TLSConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__TLSConfiguration::CertificateID = CertificateID; } return _p; }

inline void soap_delete_tt__TLSConfiguration(struct soap *soap, tt__TLSConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__TLSConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__EapMethodExtension
#define SOAP_TYPE_tt__EapMethodExtension (433)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__EapMethodExtension(struct soap*, const char*, int, const tt__EapMethodExtension *, const char*);
SOAP_FMAC3 tt__EapMethodExtension * SOAP_FMAC4 soap_in_tt__EapMethodExtension(struct soap*, const char*, tt__EapMethodExtension *, const char*);

#ifndef soap_write_tt__EapMethodExtension
#define soap_write_tt__EapMethodExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:EapMethodExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EapMethodExtension * SOAP_FMAC4 soap_get_tt__EapMethodExtension(struct soap*, tt__EapMethodExtension *, const char*, const char*);

#ifndef soap_read_tt__EapMethodExtension
#define soap_read_tt__EapMethodExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__EapMethodExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__EapMethodExtension * SOAP_FMAC2 soap_instantiate_tt__EapMethodExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__EapMethodExtension * soap_new_tt__EapMethodExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__EapMethodExtension(soap, n, NULL, NULL, NULL); }

inline tt__EapMethodExtension * soap_new_req_tt__EapMethodExtension(struct soap *soap) { tt__EapMethodExtension *_p = soap_instantiate_tt__EapMethodExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__EapMethodExtension * soap_new_set_tt__EapMethodExtension(struct soap *soap) { tt__EapMethodExtension *_p = soap_instantiate_tt__EapMethodExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__EapMethodExtension(struct soap *soap, tt__EapMethodExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__EapMethodExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__EAPMethodConfiguration
#define SOAP_TYPE_tt__EAPMethodConfiguration (432)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__EAPMethodConfiguration(struct soap*, const char*, int, const tt__EAPMethodConfiguration *, const char*);
SOAP_FMAC3 tt__EAPMethodConfiguration * SOAP_FMAC4 soap_in_tt__EAPMethodConfiguration(struct soap*, const char*, tt__EAPMethodConfiguration *, const char*);

#ifndef soap_write_tt__EAPMethodConfiguration
#define soap_write_tt__EAPMethodConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:EAPMethodConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EAPMethodConfiguration * SOAP_FMAC4 soap_get_tt__EAPMethodConfiguration(struct soap*, tt__EAPMethodConfiguration *, const char*, const char*);

#ifndef soap_read_tt__EAPMethodConfiguration
#define soap_read_tt__EAPMethodConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__EAPMethodConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__EAPMethodConfiguration * SOAP_FMAC2 soap_instantiate_tt__EAPMethodConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__EAPMethodConfiguration * soap_new_tt__EAPMethodConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__EAPMethodConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__EAPMethodConfiguration * soap_new_req_tt__EAPMethodConfiguration(struct soap *soap) { tt__EAPMethodConfiguration *_p = soap_instantiate_tt__EAPMethodConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__EAPMethodConfiguration * soap_new_set_tt__EAPMethodConfiguration(struct soap *soap, tt__TLSConfiguration *TLSConfiguration, std::string *Password, tt__EapMethodExtension *Extension) { tt__EAPMethodConfiguration *_p = soap_instantiate_tt__EAPMethodConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__EAPMethodConfiguration::TLSConfiguration = TLSConfiguration; _p->tt__EAPMethodConfiguration::Password = Password; _p->tt__EAPMethodConfiguration::Extension = Extension; } return _p; }

inline void soap_delete_tt__EAPMethodConfiguration(struct soap *soap, tt__EAPMethodConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__EAPMethodConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Dot1XConfigurationExtension
#define SOAP_TYPE_tt__Dot1XConfigurationExtension (431)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot1XConfigurationExtension(struct soap*, const char*, int, const tt__Dot1XConfigurationExtension *, const char*);
SOAP_FMAC3 tt__Dot1XConfigurationExtension * SOAP_FMAC4 soap_in_tt__Dot1XConfigurationExtension(struct soap*, const char*, tt__Dot1XConfigurationExtension *, const char*);

#ifndef soap_write_tt__Dot1XConfigurationExtension
#define soap_write_tt__Dot1XConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Dot1XConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot1XConfigurationExtension * SOAP_FMAC4 soap_get_tt__Dot1XConfigurationExtension(struct soap*, tt__Dot1XConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__Dot1XConfigurationExtension
#define soap_read_tt__Dot1XConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Dot1XConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Dot1XConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__Dot1XConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__Dot1XConfigurationExtension * soap_new_tt__Dot1XConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__Dot1XConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__Dot1XConfigurationExtension * soap_new_req_tt__Dot1XConfigurationExtension(struct soap *soap) { tt__Dot1XConfigurationExtension *_p = soap_instantiate_tt__Dot1XConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__Dot1XConfigurationExtension * soap_new_set_tt__Dot1XConfigurationExtension(struct soap *soap) { tt__Dot1XConfigurationExtension *_p = soap_instantiate_tt__Dot1XConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__Dot1XConfigurationExtension(struct soap *soap, tt__Dot1XConfigurationExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Dot1XConfigurationExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Dot1XConfiguration
#define SOAP_TYPE_tt__Dot1XConfiguration (430)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot1XConfiguration(struct soap*, const char*, int, const tt__Dot1XConfiguration *, const char*);
SOAP_FMAC3 tt__Dot1XConfiguration * SOAP_FMAC4 soap_in_tt__Dot1XConfiguration(struct soap*, const char*, tt__Dot1XConfiguration *, const char*);

#ifndef soap_write_tt__Dot1XConfiguration
#define soap_write_tt__Dot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Dot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot1XConfiguration * SOAP_FMAC4 soap_get_tt__Dot1XConfiguration(struct soap*, tt__Dot1XConfiguration *, const char*, const char*);

#ifndef soap_read_tt__Dot1XConfiguration
#define soap_read_tt__Dot1XConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Dot1XConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Dot1XConfiguration * SOAP_FMAC2 soap_instantiate_tt__Dot1XConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__Dot1XConfiguration * soap_new_tt__Dot1XConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__Dot1XConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__Dot1XConfiguration * soap_new_req_tt__Dot1XConfiguration(struct soap *soap, std::string& Dot1XConfigurationToken, std::string& Identity, int EAPMethod) { tt__Dot1XConfiguration *_p = soap_instantiate_tt__Dot1XConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Dot1XConfiguration::Dot1XConfigurationToken = Dot1XConfigurationToken; _p->tt__Dot1XConfiguration::Identity = Identity; _p->tt__Dot1XConfiguration::EAPMethod = EAPMethod; } return _p; }

inline tt__Dot1XConfiguration * soap_new_set_tt__Dot1XConfiguration(struct soap *soap, std::string& Dot1XConfigurationToken, std::string& Identity, std::string *AnonymousID, int EAPMethod, std::vector<std::string >& CACertificateID, tt__EAPMethodConfiguration *EAPMethodConfiguration, tt__Dot1XConfigurationExtension *Extension) { tt__Dot1XConfiguration *_p = soap_instantiate_tt__Dot1XConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Dot1XConfiguration::Dot1XConfigurationToken = Dot1XConfigurationToken; _p->tt__Dot1XConfiguration::Identity = Identity; _p->tt__Dot1XConfiguration::AnonymousID = AnonymousID; _p->tt__Dot1XConfiguration::EAPMethod = EAPMethod; _p->tt__Dot1XConfiguration::CACertificateID = CACertificateID; _p->tt__Dot1XConfiguration::EAPMethodConfiguration = EAPMethodConfiguration; _p->tt__Dot1XConfiguration::Extension = Extension; } return _p; }

inline void soap_delete_tt__Dot1XConfiguration(struct soap *soap, tt__Dot1XConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Dot1XConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__CertificateInformationExtension
#define SOAP_TYPE_tt__CertificateInformationExtension (429)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__CertificateInformationExtension(struct soap*, const char*, int, const tt__CertificateInformationExtension *, const char*);
SOAP_FMAC3 tt__CertificateInformationExtension * SOAP_FMAC4 soap_in_tt__CertificateInformationExtension(struct soap*, const char*, tt__CertificateInformationExtension *, const char*);

#ifndef soap_write_tt__CertificateInformationExtension
#define soap_write_tt__CertificateInformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:CertificateInformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CertificateInformationExtension * SOAP_FMAC4 soap_get_tt__CertificateInformationExtension(struct soap*, tt__CertificateInformationExtension *, const char*, const char*);

#ifndef soap_read_tt__CertificateInformationExtension
#define soap_read_tt__CertificateInformationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__CertificateInformationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__CertificateInformationExtension * SOAP_FMAC2 soap_instantiate_tt__CertificateInformationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__CertificateInformationExtension * soap_new_tt__CertificateInformationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__CertificateInformationExtension(soap, n, NULL, NULL, NULL); }

inline tt__CertificateInformationExtension * soap_new_req_tt__CertificateInformationExtension(struct soap *soap) { tt__CertificateInformationExtension *_p = soap_instantiate_tt__CertificateInformationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__CertificateInformationExtension * soap_new_set_tt__CertificateInformationExtension(struct soap *soap) { tt__CertificateInformationExtension *_p = soap_instantiate_tt__CertificateInformationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__CertificateInformationExtension(struct soap *soap, tt__CertificateInformationExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__CertificateInformationExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__CertificateUsage
#define SOAP_TYPE_tt__CertificateUsage (428)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__CertificateUsage(struct soap*, const char*, int, const tt__CertificateUsage *, const char*);
SOAP_FMAC3 tt__CertificateUsage * SOAP_FMAC4 soap_in_tt__CertificateUsage(struct soap*, const char*, tt__CertificateUsage *, const char*);

#ifndef soap_write_tt__CertificateUsage
#define soap_write_tt__CertificateUsage(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:CertificateUsage", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CertificateUsage * SOAP_FMAC4 soap_get_tt__CertificateUsage(struct soap*, tt__CertificateUsage *, const char*, const char*);

#ifndef soap_read_tt__CertificateUsage
#define soap_read_tt__CertificateUsage(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__CertificateUsage(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__CertificateUsage * SOAP_FMAC2 soap_instantiate_tt__CertificateUsage(struct soap*, int, const char*, const char*, size_t*);

inline tt__CertificateUsage * soap_new_tt__CertificateUsage(struct soap *soap, int n = -1) { return soap_instantiate_tt__CertificateUsage(soap, n, NULL, NULL, NULL); }

inline tt__CertificateUsage * soap_new_req_tt__CertificateUsage(struct soap *soap, std::string& __item, bool Critical) { tt__CertificateUsage *_p = soap_instantiate_tt__CertificateUsage(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__CertificateUsage::__item = __item; _p->tt__CertificateUsage::Critical = Critical; } return _p; }

inline tt__CertificateUsage * soap_new_set_tt__CertificateUsage(struct soap *soap, std::string& __item, bool Critical) { tt__CertificateUsage *_p = soap_instantiate_tt__CertificateUsage(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__CertificateUsage::__item = __item; _p->tt__CertificateUsage::Critical = Critical; } return _p; }

inline void soap_delete_tt__CertificateUsage(struct soap *soap, tt__CertificateUsage *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__CertificateUsage(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__CertificateInformation
#define SOAP_TYPE_tt__CertificateInformation (427)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__CertificateInformation(struct soap*, const char*, int, const tt__CertificateInformation *, const char*);
SOAP_FMAC3 tt__CertificateInformation * SOAP_FMAC4 soap_in_tt__CertificateInformation(struct soap*, const char*, tt__CertificateInformation *, const char*);

#ifndef soap_write_tt__CertificateInformation
#define soap_write_tt__CertificateInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:CertificateInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CertificateInformation * SOAP_FMAC4 soap_get_tt__CertificateInformation(struct soap*, tt__CertificateInformation *, const char*, const char*);

#ifndef soap_read_tt__CertificateInformation
#define soap_read_tt__CertificateInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__CertificateInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__CertificateInformation * SOAP_FMAC2 soap_instantiate_tt__CertificateInformation(struct soap*, int, const char*, const char*, size_t*);

inline tt__CertificateInformation * soap_new_tt__CertificateInformation(struct soap *soap, int n = -1) { return soap_instantiate_tt__CertificateInformation(soap, n, NULL, NULL, NULL); }

inline tt__CertificateInformation * soap_new_req_tt__CertificateInformation(struct soap *soap, std::string& CertificateID) { tt__CertificateInformation *_p = soap_instantiate_tt__CertificateInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__CertificateInformation::CertificateID = CertificateID; } return _p; }

inline tt__CertificateInformation * soap_new_set_tt__CertificateInformation(struct soap *soap, std::string& CertificateID, std::string *IssuerDN, std::string *SubjectDN, tt__CertificateUsage *KeyUsage, tt__CertificateUsage *ExtendedKeyUsage, int *KeyLength, std::string *Version, std::string *SerialNum, std::string *SignatureAlgorithm, tt__DateTimeRange *Validity, tt__CertificateInformationExtension *Extension) { tt__CertificateInformation *_p = soap_instantiate_tt__CertificateInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__CertificateInformation::CertificateID = CertificateID; _p->tt__CertificateInformation::IssuerDN = IssuerDN; _p->tt__CertificateInformation::SubjectDN = SubjectDN; _p->tt__CertificateInformation::KeyUsage = KeyUsage; _p->tt__CertificateInformation::ExtendedKeyUsage = ExtendedKeyUsage; _p->tt__CertificateInformation::KeyLength = KeyLength; _p->tt__CertificateInformation::Version = Version; _p->tt__CertificateInformation::SerialNum = SerialNum; _p->tt__CertificateInformation::SignatureAlgorithm = SignatureAlgorithm; _p->tt__CertificateInformation::Validity = Validity; _p->tt__CertificateInformation::Extension = Extension; } return _p; }

inline void soap_delete_tt__CertificateInformation(struct soap *soap, tt__CertificateInformation *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__CertificateInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__CertificateWithPrivateKey
#define SOAP_TYPE_tt__CertificateWithPrivateKey (426)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__CertificateWithPrivateKey(struct soap*, const char*, int, const tt__CertificateWithPrivateKey *, const char*);
SOAP_FMAC3 tt__CertificateWithPrivateKey * SOAP_FMAC4 soap_in_tt__CertificateWithPrivateKey(struct soap*, const char*, tt__CertificateWithPrivateKey *, const char*);

#ifndef soap_write_tt__CertificateWithPrivateKey
#define soap_write_tt__CertificateWithPrivateKey(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:CertificateWithPrivateKey", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CertificateWithPrivateKey * SOAP_FMAC4 soap_get_tt__CertificateWithPrivateKey(struct soap*, tt__CertificateWithPrivateKey *, const char*, const char*);

#ifndef soap_read_tt__CertificateWithPrivateKey
#define soap_read_tt__CertificateWithPrivateKey(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__CertificateWithPrivateKey(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__CertificateWithPrivateKey * SOAP_FMAC2 soap_instantiate_tt__CertificateWithPrivateKey(struct soap*, int, const char*, const char*, size_t*);

inline tt__CertificateWithPrivateKey * soap_new_tt__CertificateWithPrivateKey(struct soap *soap, int n = -1) { return soap_instantiate_tt__CertificateWithPrivateKey(soap, n, NULL, NULL, NULL); }

inline tt__CertificateWithPrivateKey * soap_new_req_tt__CertificateWithPrivateKey(struct soap *soap, tt__BinaryData *Certificate, tt__BinaryData *PrivateKey) { tt__CertificateWithPrivateKey *_p = soap_instantiate_tt__CertificateWithPrivateKey(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__CertificateWithPrivateKey::Certificate = Certificate; _p->tt__CertificateWithPrivateKey::PrivateKey = PrivateKey; } return _p; }

inline tt__CertificateWithPrivateKey * soap_new_set_tt__CertificateWithPrivateKey(struct soap *soap, std::string *CertificateID, tt__BinaryData *Certificate, tt__BinaryData *PrivateKey) { tt__CertificateWithPrivateKey *_p = soap_instantiate_tt__CertificateWithPrivateKey(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__CertificateWithPrivateKey::CertificateID = CertificateID; _p->tt__CertificateWithPrivateKey::Certificate = Certificate; _p->tt__CertificateWithPrivateKey::PrivateKey = PrivateKey; } return _p; }

inline void soap_delete_tt__CertificateWithPrivateKey(struct soap *soap, tt__CertificateWithPrivateKey *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__CertificateWithPrivateKey(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__CertificateStatus
#define SOAP_TYPE_tt__CertificateStatus (425)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__CertificateStatus(struct soap*, const char*, int, const tt__CertificateStatus *, const char*);
SOAP_FMAC3 tt__CertificateStatus * SOAP_FMAC4 soap_in_tt__CertificateStatus(struct soap*, const char*, tt__CertificateStatus *, const char*);

#ifndef soap_write_tt__CertificateStatus
#define soap_write_tt__CertificateStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:CertificateStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CertificateStatus * SOAP_FMAC4 soap_get_tt__CertificateStatus(struct soap*, tt__CertificateStatus *, const char*, const char*);

#ifndef soap_read_tt__CertificateStatus
#define soap_read_tt__CertificateStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__CertificateStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__CertificateStatus * SOAP_FMAC2 soap_instantiate_tt__CertificateStatus(struct soap*, int, const char*, const char*, size_t*);

inline tt__CertificateStatus * soap_new_tt__CertificateStatus(struct soap *soap, int n = -1) { return soap_instantiate_tt__CertificateStatus(soap, n, NULL, NULL, NULL); }

inline tt__CertificateStatus * soap_new_req_tt__CertificateStatus(struct soap *soap, std::string& CertificateID, bool Status) { tt__CertificateStatus *_p = soap_instantiate_tt__CertificateStatus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__CertificateStatus::CertificateID = CertificateID; _p->tt__CertificateStatus::Status = Status; } return _p; }

inline tt__CertificateStatus * soap_new_set_tt__CertificateStatus(struct soap *soap, std::string& CertificateID, bool Status) { tt__CertificateStatus *_p = soap_instantiate_tt__CertificateStatus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__CertificateStatus::CertificateID = CertificateID; _p->tt__CertificateStatus::Status = Status; } return _p; }

inline void soap_delete_tt__CertificateStatus(struct soap *soap, tt__CertificateStatus *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__CertificateStatus(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Certificate
#define SOAP_TYPE_tt__Certificate (424)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Certificate(struct soap*, const char*, int, const tt__Certificate *, const char*);
SOAP_FMAC3 tt__Certificate * SOAP_FMAC4 soap_in_tt__Certificate(struct soap*, const char*, tt__Certificate *, const char*);

#ifndef soap_write_tt__Certificate
#define soap_write_tt__Certificate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Certificate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Certificate * SOAP_FMAC4 soap_get_tt__Certificate(struct soap*, tt__Certificate *, const char*, const char*);

#ifndef soap_read_tt__Certificate
#define soap_read_tt__Certificate(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Certificate(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Certificate * SOAP_FMAC2 soap_instantiate_tt__Certificate(struct soap*, int, const char*, const char*, size_t*);

inline tt__Certificate * soap_new_tt__Certificate(struct soap *soap, int n = -1) { return soap_instantiate_tt__Certificate(soap, n, NULL, NULL, NULL); }

inline tt__Certificate * soap_new_req_tt__Certificate(struct soap *soap, std::string& CertificateID, tt__BinaryData *Certificate) { tt__Certificate *_p = soap_instantiate_tt__Certificate(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Certificate::CertificateID = CertificateID; _p->tt__Certificate::Certificate = Certificate; } return _p; }

inline tt__Certificate * soap_new_set_tt__Certificate(struct soap *soap, std::string& CertificateID, tt__BinaryData *Certificate) { tt__Certificate *_p = soap_instantiate_tt__Certificate(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Certificate::CertificateID = CertificateID; _p->tt__Certificate::Certificate = Certificate; } return _p; }

inline void soap_delete_tt__Certificate(struct soap *soap, tt__Certificate *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Certificate(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__CertificateGenerationParametersExtension
#define SOAP_TYPE_tt__CertificateGenerationParametersExtension (423)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__CertificateGenerationParametersExtension(struct soap*, const char*, int, const tt__CertificateGenerationParametersExtension *, const char*);
SOAP_FMAC3 tt__CertificateGenerationParametersExtension * SOAP_FMAC4 soap_in_tt__CertificateGenerationParametersExtension(struct soap*, const char*, tt__CertificateGenerationParametersExtension *, const char*);

#ifndef soap_write_tt__CertificateGenerationParametersExtension
#define soap_write_tt__CertificateGenerationParametersExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:CertificateGenerationParametersExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CertificateGenerationParametersExtension * SOAP_FMAC4 soap_get_tt__CertificateGenerationParametersExtension(struct soap*, tt__CertificateGenerationParametersExtension *, const char*, const char*);

#ifndef soap_read_tt__CertificateGenerationParametersExtension
#define soap_read_tt__CertificateGenerationParametersExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__CertificateGenerationParametersExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__CertificateGenerationParametersExtension * SOAP_FMAC2 soap_instantiate_tt__CertificateGenerationParametersExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__CertificateGenerationParametersExtension * soap_new_tt__CertificateGenerationParametersExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__CertificateGenerationParametersExtension(soap, n, NULL, NULL, NULL); }

inline tt__CertificateGenerationParametersExtension * soap_new_req_tt__CertificateGenerationParametersExtension(struct soap *soap) { tt__CertificateGenerationParametersExtension *_p = soap_instantiate_tt__CertificateGenerationParametersExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__CertificateGenerationParametersExtension * soap_new_set_tt__CertificateGenerationParametersExtension(struct soap *soap) { tt__CertificateGenerationParametersExtension *_p = soap_instantiate_tt__CertificateGenerationParametersExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__CertificateGenerationParametersExtension(struct soap *soap, tt__CertificateGenerationParametersExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__CertificateGenerationParametersExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__CertificateGenerationParameters
#define SOAP_TYPE_tt__CertificateGenerationParameters (422)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__CertificateGenerationParameters(struct soap*, const char*, int, const tt__CertificateGenerationParameters *, const char*);
SOAP_FMAC3 tt__CertificateGenerationParameters * SOAP_FMAC4 soap_in_tt__CertificateGenerationParameters(struct soap*, const char*, tt__CertificateGenerationParameters *, const char*);

#ifndef soap_write_tt__CertificateGenerationParameters
#define soap_write_tt__CertificateGenerationParameters(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:CertificateGenerationParameters", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CertificateGenerationParameters * SOAP_FMAC4 soap_get_tt__CertificateGenerationParameters(struct soap*, tt__CertificateGenerationParameters *, const char*, const char*);

#ifndef soap_read_tt__CertificateGenerationParameters
#define soap_read_tt__CertificateGenerationParameters(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__CertificateGenerationParameters(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__CertificateGenerationParameters * SOAP_FMAC2 soap_instantiate_tt__CertificateGenerationParameters(struct soap*, int, const char*, const char*, size_t*);

inline tt__CertificateGenerationParameters * soap_new_tt__CertificateGenerationParameters(struct soap *soap, int n = -1) { return soap_instantiate_tt__CertificateGenerationParameters(soap, n, NULL, NULL, NULL); }

inline tt__CertificateGenerationParameters * soap_new_req_tt__CertificateGenerationParameters(struct soap *soap) { tt__CertificateGenerationParameters *_p = soap_instantiate_tt__CertificateGenerationParameters(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__CertificateGenerationParameters * soap_new_set_tt__CertificateGenerationParameters(struct soap *soap, std::string *CertificateID, std::string *Subject, std::string *ValidNotBefore, std::string *ValidNotAfter, tt__CertificateGenerationParametersExtension *Extension) { tt__CertificateGenerationParameters *_p = soap_instantiate_tt__CertificateGenerationParameters(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__CertificateGenerationParameters::CertificateID = CertificateID; _p->tt__CertificateGenerationParameters::Subject = Subject; _p->tt__CertificateGenerationParameters::ValidNotBefore = ValidNotBefore; _p->tt__CertificateGenerationParameters::ValidNotAfter = ValidNotAfter; _p->tt__CertificateGenerationParameters::Extension = Extension; } return _p; }

inline void soap_delete_tt__CertificateGenerationParameters(struct soap *soap, tt__CertificateGenerationParameters *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__CertificateGenerationParameters(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__UserExtension
#define SOAP_TYPE_tt__UserExtension (421)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__UserExtension(struct soap*, const char*, int, const tt__UserExtension *, const char*);
SOAP_FMAC3 tt__UserExtension * SOAP_FMAC4 soap_in_tt__UserExtension(struct soap*, const char*, tt__UserExtension *, const char*);

#ifndef soap_write_tt__UserExtension
#define soap_write_tt__UserExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:UserExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__UserExtension * SOAP_FMAC4 soap_get_tt__UserExtension(struct soap*, tt__UserExtension *, const char*, const char*);

#ifndef soap_read_tt__UserExtension
#define soap_read_tt__UserExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__UserExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__UserExtension * SOAP_FMAC2 soap_instantiate_tt__UserExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__UserExtension * soap_new_tt__UserExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__UserExtension(soap, n, NULL, NULL, NULL); }

inline tt__UserExtension * soap_new_req_tt__UserExtension(struct soap *soap) { tt__UserExtension *_p = soap_instantiate_tt__UserExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__UserExtension * soap_new_set_tt__UserExtension(struct soap *soap) { tt__UserExtension *_p = soap_instantiate_tt__UserExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__UserExtension(struct soap *soap, tt__UserExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__UserExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__User
#define SOAP_TYPE_tt__User (420)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__User(struct soap*, const char*, int, const tt__User *, const char*);
SOAP_FMAC3 tt__User * SOAP_FMAC4 soap_in_tt__User(struct soap*, const char*, tt__User *, const char*);

#ifndef soap_write_tt__User
#define soap_write_tt__User(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:User", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__User * SOAP_FMAC4 soap_get_tt__User(struct soap*, tt__User *, const char*, const char*);

#ifndef soap_read_tt__User
#define soap_read_tt__User(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__User(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__User * SOAP_FMAC2 soap_instantiate_tt__User(struct soap*, int, const char*, const char*, size_t*);

inline tt__User * soap_new_tt__User(struct soap *soap, int n = -1) { return soap_instantiate_tt__User(soap, n, NULL, NULL, NULL); }

inline tt__User * soap_new_req_tt__User(struct soap *soap, std::string& Username, enum tt__UserLevel UserLevel) { tt__User *_p = soap_instantiate_tt__User(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__User::Username = Username; _p->tt__User::UserLevel = UserLevel; } return _p; }

inline tt__User * soap_new_set_tt__User(struct soap *soap, std::string& Username, std::string *Password, enum tt__UserLevel UserLevel, tt__UserExtension *Extension) { tt__User *_p = soap_instantiate_tt__User(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__User::Username = Username; _p->tt__User::Password = Password; _p->tt__User::UserLevel = UserLevel; _p->tt__User::Extension = Extension; } return _p; }

inline void soap_delete_tt__User(struct soap *soap, tt__User *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__User(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RemoteUser
#define SOAP_TYPE_tt__RemoteUser (419)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RemoteUser(struct soap*, const char*, int, const tt__RemoteUser *, const char*);
SOAP_FMAC3 tt__RemoteUser * SOAP_FMAC4 soap_in_tt__RemoteUser(struct soap*, const char*, tt__RemoteUser *, const char*);

#ifndef soap_write_tt__RemoteUser
#define soap_write_tt__RemoteUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RemoteUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RemoteUser * SOAP_FMAC4 soap_get_tt__RemoteUser(struct soap*, tt__RemoteUser *, const char*, const char*);

#ifndef soap_read_tt__RemoteUser
#define soap_read_tt__RemoteUser(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RemoteUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RemoteUser * SOAP_FMAC2 soap_instantiate_tt__RemoteUser(struct soap*, int, const char*, const char*, size_t*);

inline tt__RemoteUser * soap_new_tt__RemoteUser(struct soap *soap, int n = -1) { return soap_instantiate_tt__RemoteUser(soap, n, NULL, NULL, NULL); }

inline tt__RemoteUser * soap_new_req_tt__RemoteUser(struct soap *soap, std::string& Username, bool UseDerivedPassword) { tt__RemoteUser *_p = soap_instantiate_tt__RemoteUser(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RemoteUser::Username = Username; _p->tt__RemoteUser::UseDerivedPassword = UseDerivedPassword; } return _p; }

inline tt__RemoteUser * soap_new_set_tt__RemoteUser(struct soap *soap, std::string& Username, std::string *Password, bool UseDerivedPassword) { tt__RemoteUser *_p = soap_instantiate_tt__RemoteUser(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RemoteUser::Username = Username; _p->tt__RemoteUser::Password = Password; _p->tt__RemoteUser::UseDerivedPassword = UseDerivedPassword; } return _p; }

inline void soap_delete_tt__RemoteUser(struct soap *soap, tt__RemoteUser *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RemoteUser(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__TimeZone
#define SOAP_TYPE_tt__TimeZone (418)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__TimeZone(struct soap*, const char*, int, const tt__TimeZone *, const char*);
SOAP_FMAC3 tt__TimeZone * SOAP_FMAC4 soap_in_tt__TimeZone(struct soap*, const char*, tt__TimeZone *, const char*);

#ifndef soap_write_tt__TimeZone
#define soap_write_tt__TimeZone(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:TimeZone", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TimeZone * SOAP_FMAC4 soap_get_tt__TimeZone(struct soap*, tt__TimeZone *, const char*, const char*);

#ifndef soap_read_tt__TimeZone
#define soap_read_tt__TimeZone(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__TimeZone(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__TimeZone * SOAP_FMAC2 soap_instantiate_tt__TimeZone(struct soap*, int, const char*, const char*, size_t*);

inline tt__TimeZone * soap_new_tt__TimeZone(struct soap *soap, int n = -1) { return soap_instantiate_tt__TimeZone(soap, n, NULL, NULL, NULL); }

inline tt__TimeZone * soap_new_req_tt__TimeZone(struct soap *soap, std::string& TZ) { tt__TimeZone *_p = soap_instantiate_tt__TimeZone(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__TimeZone::TZ = TZ; } return _p; }

inline tt__TimeZone * soap_new_set_tt__TimeZone(struct soap *soap, std::string& TZ) { tt__TimeZone *_p = soap_instantiate_tt__TimeZone(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__TimeZone::TZ = TZ; } return _p; }

inline void soap_delete_tt__TimeZone(struct soap *soap, tt__TimeZone *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__TimeZone(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Time
#define SOAP_TYPE_tt__Time (417)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Time(struct soap*, const char*, int, const tt__Time *, const char*);
SOAP_FMAC3 tt__Time * SOAP_FMAC4 soap_in_tt__Time(struct soap*, const char*, tt__Time *, const char*);

#ifndef soap_write_tt__Time
#define soap_write_tt__Time(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Time", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Time * SOAP_FMAC4 soap_get_tt__Time(struct soap*, tt__Time *, const char*, const char*);

#ifndef soap_read_tt__Time
#define soap_read_tt__Time(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Time(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Time * SOAP_FMAC2 soap_instantiate_tt__Time(struct soap*, int, const char*, const char*, size_t*);

inline tt__Time * soap_new_tt__Time(struct soap *soap, int n = -1) { return soap_instantiate_tt__Time(soap, n, NULL, NULL, NULL); }

inline tt__Time * soap_new_req_tt__Time(struct soap *soap, int Hour, int Minute, int Second) { tt__Time *_p = soap_instantiate_tt__Time(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Time::Hour = Hour; _p->tt__Time::Minute = Minute; _p->tt__Time::Second = Second; } return _p; }

inline tt__Time * soap_new_set_tt__Time(struct soap *soap, int Hour, int Minute, int Second) { tt__Time *_p = soap_instantiate_tt__Time(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Time::Hour = Hour; _p->tt__Time::Minute = Minute; _p->tt__Time::Second = Second; } return _p; }

inline void soap_delete_tt__Time(struct soap *soap, tt__Time *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Time(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Date
#define SOAP_TYPE_tt__Date (416)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Date(struct soap*, const char*, int, const tt__Date *, const char*);
SOAP_FMAC3 tt__Date * SOAP_FMAC4 soap_in_tt__Date(struct soap*, const char*, tt__Date *, const char*);

#ifndef soap_write_tt__Date
#define soap_write_tt__Date(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Date", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Date * SOAP_FMAC4 soap_get_tt__Date(struct soap*, tt__Date *, const char*, const char*);

#ifndef soap_read_tt__Date
#define soap_read_tt__Date(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Date(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Date * SOAP_FMAC2 soap_instantiate_tt__Date(struct soap*, int, const char*, const char*, size_t*);

inline tt__Date * soap_new_tt__Date(struct soap *soap, int n = -1) { return soap_instantiate_tt__Date(soap, n, NULL, NULL, NULL); }

inline tt__Date * soap_new_req_tt__Date(struct soap *soap, int Year, int Month, int Day) { tt__Date *_p = soap_instantiate_tt__Date(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Date::Year = Year; _p->tt__Date::Month = Month; _p->tt__Date::Day = Day; } return _p; }

inline tt__Date * soap_new_set_tt__Date(struct soap *soap, int Year, int Month, int Day) { tt__Date *_p = soap_instantiate_tt__Date(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Date::Year = Year; _p->tt__Date::Month = Month; _p->tt__Date::Day = Day; } return _p; }

inline void soap_delete_tt__Date(struct soap *soap, tt__Date *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Date(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__DateTime
#define SOAP_TYPE_tt__DateTime (415)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DateTime(struct soap*, const char*, int, const tt__DateTime *, const char*);
SOAP_FMAC3 tt__DateTime * SOAP_FMAC4 soap_in_tt__DateTime(struct soap*, const char*, tt__DateTime *, const char*);

#ifndef soap_write_tt__DateTime
#define soap_write_tt__DateTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:DateTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DateTime * SOAP_FMAC4 soap_get_tt__DateTime(struct soap*, tt__DateTime *, const char*, const char*);

#ifndef soap_read_tt__DateTime
#define soap_read_tt__DateTime(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__DateTime(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__DateTime * SOAP_FMAC2 soap_instantiate_tt__DateTime(struct soap*, int, const char*, const char*, size_t*);

inline tt__DateTime * soap_new_tt__DateTime(struct soap *soap, int n = -1) { return soap_instantiate_tt__DateTime(soap, n, NULL, NULL, NULL); }

inline tt__DateTime * soap_new_req_tt__DateTime(struct soap *soap, tt__Time *Time, tt__Date *Date) { tt__DateTime *_p = soap_instantiate_tt__DateTime(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__DateTime::Time = Time; _p->tt__DateTime::Date = Date; } return _p; }

inline tt__DateTime * soap_new_set_tt__DateTime(struct soap *soap, tt__Time *Time, tt__Date *Date) { tt__DateTime *_p = soap_instantiate_tt__DateTime(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__DateTime::Time = Time; _p->tt__DateTime::Date = Date; } return _p; }

inline void soap_delete_tt__DateTime(struct soap *soap, tt__DateTime *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__DateTime(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__SystemDateTimeExtension
#define SOAP_TYPE_tt__SystemDateTimeExtension (414)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SystemDateTimeExtension(struct soap*, const char*, int, const tt__SystemDateTimeExtension *, const char*);
SOAP_FMAC3 tt__SystemDateTimeExtension * SOAP_FMAC4 soap_in_tt__SystemDateTimeExtension(struct soap*, const char*, tt__SystemDateTimeExtension *, const char*);

#ifndef soap_write_tt__SystemDateTimeExtension
#define soap_write_tt__SystemDateTimeExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:SystemDateTimeExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemDateTimeExtension * SOAP_FMAC4 soap_get_tt__SystemDateTimeExtension(struct soap*, tt__SystemDateTimeExtension *, const char*, const char*);

#ifndef soap_read_tt__SystemDateTimeExtension
#define soap_read_tt__SystemDateTimeExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__SystemDateTimeExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__SystemDateTimeExtension * SOAP_FMAC2 soap_instantiate_tt__SystemDateTimeExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__SystemDateTimeExtension * soap_new_tt__SystemDateTimeExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__SystemDateTimeExtension(soap, n, NULL, NULL, NULL); }

inline tt__SystemDateTimeExtension * soap_new_req_tt__SystemDateTimeExtension(struct soap *soap) { tt__SystemDateTimeExtension *_p = soap_instantiate_tt__SystemDateTimeExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__SystemDateTimeExtension * soap_new_set_tt__SystemDateTimeExtension(struct soap *soap) { tt__SystemDateTimeExtension *_p = soap_instantiate_tt__SystemDateTimeExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__SystemDateTimeExtension(struct soap *soap, tt__SystemDateTimeExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__SystemDateTimeExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__SystemDateTime
#define SOAP_TYPE_tt__SystemDateTime (413)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SystemDateTime(struct soap*, const char*, int, const tt__SystemDateTime *, const char*);
SOAP_FMAC3 tt__SystemDateTime * SOAP_FMAC4 soap_in_tt__SystemDateTime(struct soap*, const char*, tt__SystemDateTime *, const char*);

#ifndef soap_write_tt__SystemDateTime
#define soap_write_tt__SystemDateTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:SystemDateTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemDateTime * SOAP_FMAC4 soap_get_tt__SystemDateTime(struct soap*, tt__SystemDateTime *, const char*, const char*);

#ifndef soap_read_tt__SystemDateTime
#define soap_read_tt__SystemDateTime(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__SystemDateTime(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__SystemDateTime * SOAP_FMAC2 soap_instantiate_tt__SystemDateTime(struct soap*, int, const char*, const char*, size_t*);

inline tt__SystemDateTime * soap_new_tt__SystemDateTime(struct soap *soap, int n = -1) { return soap_instantiate_tt__SystemDateTime(soap, n, NULL, NULL, NULL); }

inline tt__SystemDateTime * soap_new_req_tt__SystemDateTime(struct soap *soap, enum tt__SetDateTimeType DateTimeType, bool DaylightSavings) { tt__SystemDateTime *_p = soap_instantiate_tt__SystemDateTime(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__SystemDateTime::DateTimeType = DateTimeType; _p->tt__SystemDateTime::DaylightSavings = DaylightSavings; } return _p; }

inline tt__SystemDateTime * soap_new_set_tt__SystemDateTime(struct soap *soap, enum tt__SetDateTimeType DateTimeType, bool DaylightSavings, tt__TimeZone *TimeZone, tt__DateTime *UTCDateTime, tt__DateTime *LocalDateTime, tt__SystemDateTimeExtension *Extension) { tt__SystemDateTime *_p = soap_instantiate_tt__SystemDateTime(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__SystemDateTime::DateTimeType = DateTimeType; _p->tt__SystemDateTime::DaylightSavings = DaylightSavings; _p->tt__SystemDateTime::TimeZone = TimeZone; _p->tt__SystemDateTime::UTCDateTime = UTCDateTime; _p->tt__SystemDateTime::LocalDateTime = LocalDateTime; _p->tt__SystemDateTime::Extension = Extension; } return _p; }

inline void soap_delete_tt__SystemDateTime(struct soap *soap, tt__SystemDateTime *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__SystemDateTime(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__SystemLogUri
#define SOAP_TYPE_tt__SystemLogUri (412)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SystemLogUri(struct soap*, const char*, int, const tt__SystemLogUri *, const char*);
SOAP_FMAC3 tt__SystemLogUri * SOAP_FMAC4 soap_in_tt__SystemLogUri(struct soap*, const char*, tt__SystemLogUri *, const char*);

#ifndef soap_write_tt__SystemLogUri
#define soap_write_tt__SystemLogUri(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:SystemLogUri", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemLogUri * SOAP_FMAC4 soap_get_tt__SystemLogUri(struct soap*, tt__SystemLogUri *, const char*, const char*);

#ifndef soap_read_tt__SystemLogUri
#define soap_read_tt__SystemLogUri(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__SystemLogUri(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__SystemLogUri * SOAP_FMAC2 soap_instantiate_tt__SystemLogUri(struct soap*, int, const char*, const char*, size_t*);

inline tt__SystemLogUri * soap_new_tt__SystemLogUri(struct soap *soap, int n = -1) { return soap_instantiate_tt__SystemLogUri(soap, n, NULL, NULL, NULL); }

inline tt__SystemLogUri * soap_new_req_tt__SystemLogUri(struct soap *soap, enum tt__SystemLogType Type, std::string& Uri) { tt__SystemLogUri *_p = soap_instantiate_tt__SystemLogUri(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__SystemLogUri::Type = Type; _p->tt__SystemLogUri::Uri = Uri; } return _p; }

inline tt__SystemLogUri * soap_new_set_tt__SystemLogUri(struct soap *soap, enum tt__SystemLogType Type, std::string& Uri) { tt__SystemLogUri *_p = soap_instantiate_tt__SystemLogUri(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__SystemLogUri::Type = Type; _p->tt__SystemLogUri::Uri = Uri; } return _p; }

inline void soap_delete_tt__SystemLogUri(struct soap *soap, tt__SystemLogUri *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__SystemLogUri(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__SystemLogUriList
#define SOAP_TYPE_tt__SystemLogUriList (411)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SystemLogUriList(struct soap*, const char*, int, const tt__SystemLogUriList *, const char*);
SOAP_FMAC3 tt__SystemLogUriList * SOAP_FMAC4 soap_in_tt__SystemLogUriList(struct soap*, const char*, tt__SystemLogUriList *, const char*);

#ifndef soap_write_tt__SystemLogUriList
#define soap_write_tt__SystemLogUriList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:SystemLogUriList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemLogUriList * SOAP_FMAC4 soap_get_tt__SystemLogUriList(struct soap*, tt__SystemLogUriList *, const char*, const char*);

#ifndef soap_read_tt__SystemLogUriList
#define soap_read_tt__SystemLogUriList(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__SystemLogUriList(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__SystemLogUriList * SOAP_FMAC2 soap_instantiate_tt__SystemLogUriList(struct soap*, int, const char*, const char*, size_t*);

inline tt__SystemLogUriList * soap_new_tt__SystemLogUriList(struct soap *soap, int n = -1) { return soap_instantiate_tt__SystemLogUriList(soap, n, NULL, NULL, NULL); }

inline tt__SystemLogUriList * soap_new_req_tt__SystemLogUriList(struct soap *soap) { tt__SystemLogUriList *_p = soap_instantiate_tt__SystemLogUriList(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__SystemLogUriList * soap_new_set_tt__SystemLogUriList(struct soap *soap, std::vector<tt__SystemLogUri * >& SystemLog) { tt__SystemLogUriList *_p = soap_instantiate_tt__SystemLogUriList(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__SystemLogUriList::SystemLog = SystemLog; } return _p; }

inline void soap_delete_tt__SystemLogUriList(struct soap *soap, tt__SystemLogUriList *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__SystemLogUriList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__BackupFile
#define SOAP_TYPE_tt__BackupFile (410)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__BackupFile(struct soap*, const char*, int, const tt__BackupFile *, const char*);
SOAP_FMAC3 tt__BackupFile * SOAP_FMAC4 soap_in_tt__BackupFile(struct soap*, const char*, tt__BackupFile *, const char*);

#ifndef soap_write_tt__BackupFile
#define soap_write_tt__BackupFile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:BackupFile", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__BackupFile * SOAP_FMAC4 soap_get_tt__BackupFile(struct soap*, tt__BackupFile *, const char*, const char*);

#ifndef soap_read_tt__BackupFile
#define soap_read_tt__BackupFile(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__BackupFile(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__BackupFile * SOAP_FMAC2 soap_instantiate_tt__BackupFile(struct soap*, int, const char*, const char*, size_t*);

inline tt__BackupFile * soap_new_tt__BackupFile(struct soap *soap, int n = -1) { return soap_instantiate_tt__BackupFile(soap, n, NULL, NULL, NULL); }

inline tt__BackupFile * soap_new_req_tt__BackupFile(struct soap *soap, std::string& Name, tt__AttachmentData *Data) { tt__BackupFile *_p = soap_instantiate_tt__BackupFile(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__BackupFile::Name = Name; _p->tt__BackupFile::Data = Data; } return _p; }

inline tt__BackupFile * soap_new_set_tt__BackupFile(struct soap *soap, std::string& Name, tt__AttachmentData *Data) { tt__BackupFile *_p = soap_instantiate_tt__BackupFile(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__BackupFile::Name = Name; _p->tt__BackupFile::Data = Data; } return _p; }

inline void soap_delete_tt__BackupFile(struct soap *soap, tt__BackupFile *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__BackupFile(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AttachmentData
#define SOAP_TYPE_tt__AttachmentData (409)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AttachmentData(struct soap*, const char*, int, const tt__AttachmentData *, const char*);
SOAP_FMAC3 tt__AttachmentData * SOAP_FMAC4 soap_in_tt__AttachmentData(struct soap*, const char*, tt__AttachmentData *, const char*);

#ifndef soap_write_tt__AttachmentData
#define soap_write_tt__AttachmentData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AttachmentData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AttachmentData * SOAP_FMAC4 soap_get_tt__AttachmentData(struct soap*, tt__AttachmentData *, const char*, const char*);

#ifndef soap_read_tt__AttachmentData
#define soap_read_tt__AttachmentData(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AttachmentData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AttachmentData * SOAP_FMAC2 soap_instantiate_tt__AttachmentData(struct soap*, int, const char*, const char*, size_t*);

inline tt__AttachmentData * soap_new_tt__AttachmentData(struct soap *soap, int n = -1) { return soap_instantiate_tt__AttachmentData(soap, n, NULL, NULL, NULL); }

inline tt__AttachmentData * soap_new_req_tt__AttachmentData(struct soap *soap, struct _xop__Include& xop__Include) { tt__AttachmentData *_p = soap_instantiate_tt__AttachmentData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AttachmentData::xop__Include = xop__Include; } return _p; }

inline tt__AttachmentData * soap_new_set_tt__AttachmentData(struct soap *soap, struct _xop__Include& xop__Include, char *xmime__contentType) { tt__AttachmentData *_p = soap_instantiate_tt__AttachmentData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AttachmentData::xop__Include = xop__Include; _p->tt__AttachmentData::xmime__contentType = xmime__contentType; } return _p; }

inline void soap_delete_tt__AttachmentData(struct soap *soap, tt__AttachmentData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AttachmentData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__BinaryData
#define SOAP_TYPE_tt__BinaryData (408)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__BinaryData(struct soap*, const char*, int, const tt__BinaryData *, const char*);
SOAP_FMAC3 tt__BinaryData * SOAP_FMAC4 soap_in_tt__BinaryData(struct soap*, const char*, tt__BinaryData *, const char*);

#ifndef soap_write_tt__BinaryData
#define soap_write_tt__BinaryData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:BinaryData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__BinaryData * SOAP_FMAC4 soap_get_tt__BinaryData(struct soap*, tt__BinaryData *, const char*, const char*);

#ifndef soap_read_tt__BinaryData
#define soap_read_tt__BinaryData(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__BinaryData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__BinaryData * SOAP_FMAC2 soap_instantiate_tt__BinaryData(struct soap*, int, const char*, const char*, size_t*);

inline tt__BinaryData * soap_new_tt__BinaryData(struct soap *soap, int n = -1) { return soap_instantiate_tt__BinaryData(soap, n, NULL, NULL, NULL); }

inline tt__BinaryData * soap_new_req_tt__BinaryData(struct soap *soap, xsd__base64Binary& Data) { tt__BinaryData *_p = soap_instantiate_tt__BinaryData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__BinaryData::Data = Data; } return _p; }

inline tt__BinaryData * soap_new_set_tt__BinaryData(struct soap *soap, xsd__base64Binary& Data, char *xmime__contentType) { tt__BinaryData *_p = soap_instantiate_tt__BinaryData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__BinaryData::Data = Data; _p->tt__BinaryData::xmime__contentType = xmime__contentType; } return _p; }

inline void soap_delete_tt__BinaryData(struct soap *soap, tt__BinaryData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__BinaryData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__SupportInformation
#define SOAP_TYPE_tt__SupportInformation (407)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SupportInformation(struct soap*, const char*, int, const tt__SupportInformation *, const char*);
SOAP_FMAC3 tt__SupportInformation * SOAP_FMAC4 soap_in_tt__SupportInformation(struct soap*, const char*, tt__SupportInformation *, const char*);

#ifndef soap_write_tt__SupportInformation
#define soap_write_tt__SupportInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:SupportInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SupportInformation * SOAP_FMAC4 soap_get_tt__SupportInformation(struct soap*, tt__SupportInformation *, const char*, const char*);

#ifndef soap_read_tt__SupportInformation
#define soap_read_tt__SupportInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__SupportInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__SupportInformation * SOAP_FMAC2 soap_instantiate_tt__SupportInformation(struct soap*, int, const char*, const char*, size_t*);

inline tt__SupportInformation * soap_new_tt__SupportInformation(struct soap *soap, int n = -1) { return soap_instantiate_tt__SupportInformation(soap, n, NULL, NULL, NULL); }

inline tt__SupportInformation * soap_new_req_tt__SupportInformation(struct soap *soap) { tt__SupportInformation *_p = soap_instantiate_tt__SupportInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__SupportInformation * soap_new_set_tt__SupportInformation(struct soap *soap, tt__AttachmentData *Binary, std::string *String) { tt__SupportInformation *_p = soap_instantiate_tt__SupportInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__SupportInformation::Binary = Binary; _p->tt__SupportInformation::String = String; } return _p; }

inline void soap_delete_tt__SupportInformation(struct soap *soap, tt__SupportInformation *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__SupportInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__SystemLog
#define SOAP_TYPE_tt__SystemLog (406)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SystemLog(struct soap*, const char*, int, const tt__SystemLog *, const char*);
SOAP_FMAC3 tt__SystemLog * SOAP_FMAC4 soap_in_tt__SystemLog(struct soap*, const char*, tt__SystemLog *, const char*);

#ifndef soap_write_tt__SystemLog
#define soap_write_tt__SystemLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:SystemLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemLog * SOAP_FMAC4 soap_get_tt__SystemLog(struct soap*, tt__SystemLog *, const char*, const char*);

#ifndef soap_read_tt__SystemLog
#define soap_read_tt__SystemLog(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__SystemLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__SystemLog * SOAP_FMAC2 soap_instantiate_tt__SystemLog(struct soap*, int, const char*, const char*, size_t*);

inline tt__SystemLog * soap_new_tt__SystemLog(struct soap *soap, int n = -1) { return soap_instantiate_tt__SystemLog(soap, n, NULL, NULL, NULL); }

inline tt__SystemLog * soap_new_req_tt__SystemLog(struct soap *soap) { tt__SystemLog *_p = soap_instantiate_tt__SystemLog(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__SystemLog * soap_new_set_tt__SystemLog(struct soap *soap, tt__AttachmentData *Binary, std::string *String) { tt__SystemLog *_p = soap_instantiate_tt__SystemLog(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__SystemLog::Binary = Binary; _p->tt__SystemLog::String = String; } return _p; }

inline void soap_delete_tt__SystemLog(struct soap *soap, tt__SystemLog *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__SystemLog(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AnalyticsDeviceExtension
#define SOAP_TYPE_tt__AnalyticsDeviceExtension (405)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsDeviceExtension(struct soap*, const char*, int, const tt__AnalyticsDeviceExtension *, const char*);
SOAP_FMAC3 tt__AnalyticsDeviceExtension * SOAP_FMAC4 soap_in_tt__AnalyticsDeviceExtension(struct soap*, const char*, tt__AnalyticsDeviceExtension *, const char*);

#ifndef soap_write_tt__AnalyticsDeviceExtension
#define soap_write_tt__AnalyticsDeviceExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AnalyticsDeviceExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsDeviceExtension * SOAP_FMAC4 soap_get_tt__AnalyticsDeviceExtension(struct soap*, tt__AnalyticsDeviceExtension *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsDeviceExtension
#define soap_read_tt__AnalyticsDeviceExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AnalyticsDeviceExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AnalyticsDeviceExtension * SOAP_FMAC2 soap_instantiate_tt__AnalyticsDeviceExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsDeviceExtension * soap_new_tt__AnalyticsDeviceExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsDeviceExtension(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsDeviceExtension * soap_new_req_tt__AnalyticsDeviceExtension(struct soap *soap) { tt__AnalyticsDeviceExtension *_p = soap_instantiate_tt__AnalyticsDeviceExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__AnalyticsDeviceExtension * soap_new_set_tt__AnalyticsDeviceExtension(struct soap *soap) { tt__AnalyticsDeviceExtension *_p = soap_instantiate_tt__AnalyticsDeviceExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__AnalyticsDeviceExtension(struct soap *soap, tt__AnalyticsDeviceExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AnalyticsDeviceExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AnalyticsDeviceCapabilities
#define SOAP_TYPE_tt__AnalyticsDeviceCapabilities (404)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsDeviceCapabilities(struct soap*, const char*, int, const tt__AnalyticsDeviceCapabilities *, const char*);
SOAP_FMAC3 tt__AnalyticsDeviceCapabilities * SOAP_FMAC4 soap_in_tt__AnalyticsDeviceCapabilities(struct soap*, const char*, tt__AnalyticsDeviceCapabilities *, const char*);

#ifndef soap_write_tt__AnalyticsDeviceCapabilities
#define soap_write_tt__AnalyticsDeviceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AnalyticsDeviceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsDeviceCapabilities * SOAP_FMAC4 soap_get_tt__AnalyticsDeviceCapabilities(struct soap*, tt__AnalyticsDeviceCapabilities *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsDeviceCapabilities
#define soap_read_tt__AnalyticsDeviceCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AnalyticsDeviceCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AnalyticsDeviceCapabilities * SOAP_FMAC2 soap_instantiate_tt__AnalyticsDeviceCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsDeviceCapabilities * soap_new_tt__AnalyticsDeviceCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsDeviceCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsDeviceCapabilities * soap_new_req_tt__AnalyticsDeviceCapabilities(struct soap *soap, std::string& XAddr) { tt__AnalyticsDeviceCapabilities *_p = soap_instantiate_tt__AnalyticsDeviceCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AnalyticsDeviceCapabilities::XAddr = XAddr; } return _p; }

inline tt__AnalyticsDeviceCapabilities * soap_new_set_tt__AnalyticsDeviceCapabilities(struct soap *soap, std::string& XAddr, bool *RuleSupport, tt__AnalyticsDeviceExtension *Extension) { tt__AnalyticsDeviceCapabilities *_p = soap_instantiate_tt__AnalyticsDeviceCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AnalyticsDeviceCapabilities::XAddr = XAddr; _p->tt__AnalyticsDeviceCapabilities::RuleSupport = RuleSupport; _p->tt__AnalyticsDeviceCapabilities::Extension = Extension; } return _p; }

inline void soap_delete_tt__AnalyticsDeviceCapabilities(struct soap *soap, tt__AnalyticsDeviceCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AnalyticsDeviceCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ReceiverCapabilities
#define SOAP_TYPE_tt__ReceiverCapabilities (403)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ReceiverCapabilities(struct soap*, const char*, int, const tt__ReceiverCapabilities *, const char*);
SOAP_FMAC3 tt__ReceiverCapabilities * SOAP_FMAC4 soap_in_tt__ReceiverCapabilities(struct soap*, const char*, tt__ReceiverCapabilities *, const char*);

#ifndef soap_write_tt__ReceiverCapabilities
#define soap_write_tt__ReceiverCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ReceiverCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ReceiverCapabilities * SOAP_FMAC4 soap_get_tt__ReceiverCapabilities(struct soap*, tt__ReceiverCapabilities *, const char*, const char*);

#ifndef soap_read_tt__ReceiverCapabilities
#define soap_read_tt__ReceiverCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ReceiverCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ReceiverCapabilities * SOAP_FMAC2 soap_instantiate_tt__ReceiverCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__ReceiverCapabilities * soap_new_tt__ReceiverCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__ReceiverCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__ReceiverCapabilities * soap_new_req_tt__ReceiverCapabilities(struct soap *soap, std::string& XAddr, bool RTP_USCOREMulticast, bool RTP_USCORETCP, bool RTP_USCORERTSP_USCORETCP, int SupportedReceivers, int MaximumRTSPURILength) { tt__ReceiverCapabilities *_p = soap_instantiate_tt__ReceiverCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ReceiverCapabilities::XAddr = XAddr; _p->tt__ReceiverCapabilities::RTP_USCOREMulticast = RTP_USCOREMulticast; _p->tt__ReceiverCapabilities::RTP_USCORETCP = RTP_USCORETCP; _p->tt__ReceiverCapabilities::RTP_USCORERTSP_USCORETCP = RTP_USCORERTSP_USCORETCP; _p->tt__ReceiverCapabilities::SupportedReceivers = SupportedReceivers; _p->tt__ReceiverCapabilities::MaximumRTSPURILength = MaximumRTSPURILength; } return _p; }

inline tt__ReceiverCapabilities * soap_new_set_tt__ReceiverCapabilities(struct soap *soap, std::string& XAddr, bool RTP_USCOREMulticast, bool RTP_USCORETCP, bool RTP_USCORERTSP_USCORETCP, int SupportedReceivers, int MaximumRTSPURILength) { tt__ReceiverCapabilities *_p = soap_instantiate_tt__ReceiverCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ReceiverCapabilities::XAddr = XAddr; _p->tt__ReceiverCapabilities::RTP_USCOREMulticast = RTP_USCOREMulticast; _p->tt__ReceiverCapabilities::RTP_USCORETCP = RTP_USCORETCP; _p->tt__ReceiverCapabilities::RTP_USCORERTSP_USCORETCP = RTP_USCORERTSP_USCORETCP; _p->tt__ReceiverCapabilities::SupportedReceivers = SupportedReceivers; _p->tt__ReceiverCapabilities::MaximumRTSPURILength = MaximumRTSPURILength; } return _p; }

inline void soap_delete_tt__ReceiverCapabilities(struct soap *soap, tt__ReceiverCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ReceiverCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ReplayCapabilities
#define SOAP_TYPE_tt__ReplayCapabilities (402)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ReplayCapabilities(struct soap*, const char*, int, const tt__ReplayCapabilities *, const char*);
SOAP_FMAC3 tt__ReplayCapabilities * SOAP_FMAC4 soap_in_tt__ReplayCapabilities(struct soap*, const char*, tt__ReplayCapabilities *, const char*);

#ifndef soap_write_tt__ReplayCapabilities
#define soap_write_tt__ReplayCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ReplayCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ReplayCapabilities * SOAP_FMAC4 soap_get_tt__ReplayCapabilities(struct soap*, tt__ReplayCapabilities *, const char*, const char*);

#ifndef soap_read_tt__ReplayCapabilities
#define soap_read_tt__ReplayCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ReplayCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ReplayCapabilities * SOAP_FMAC2 soap_instantiate_tt__ReplayCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__ReplayCapabilities * soap_new_tt__ReplayCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__ReplayCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__ReplayCapabilities * soap_new_req_tt__ReplayCapabilities(struct soap *soap, std::string& XAddr) { tt__ReplayCapabilities *_p = soap_instantiate_tt__ReplayCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ReplayCapabilities::XAddr = XAddr; } return _p; }

inline tt__ReplayCapabilities * soap_new_set_tt__ReplayCapabilities(struct soap *soap, std::string& XAddr) { tt__ReplayCapabilities *_p = soap_instantiate_tt__ReplayCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ReplayCapabilities::XAddr = XAddr; } return _p; }

inline void soap_delete_tt__ReplayCapabilities(struct soap *soap, tt__ReplayCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ReplayCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__SearchCapabilities
#define SOAP_TYPE_tt__SearchCapabilities (401)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SearchCapabilities(struct soap*, const char*, int, const tt__SearchCapabilities *, const char*);
SOAP_FMAC3 tt__SearchCapabilities * SOAP_FMAC4 soap_in_tt__SearchCapabilities(struct soap*, const char*, tt__SearchCapabilities *, const char*);

#ifndef soap_write_tt__SearchCapabilities
#define soap_write_tt__SearchCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:SearchCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SearchCapabilities * SOAP_FMAC4 soap_get_tt__SearchCapabilities(struct soap*, tt__SearchCapabilities *, const char*, const char*);

#ifndef soap_read_tt__SearchCapabilities
#define soap_read_tt__SearchCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__SearchCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__SearchCapabilities * SOAP_FMAC2 soap_instantiate_tt__SearchCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__SearchCapabilities * soap_new_tt__SearchCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__SearchCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__SearchCapabilities * soap_new_req_tt__SearchCapabilities(struct soap *soap, std::string& XAddr, bool MetadataSearch) { tt__SearchCapabilities *_p = soap_instantiate_tt__SearchCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__SearchCapabilities::XAddr = XAddr; _p->tt__SearchCapabilities::MetadataSearch = MetadataSearch; } return _p; }

inline tt__SearchCapabilities * soap_new_set_tt__SearchCapabilities(struct soap *soap, std::string& XAddr, bool MetadataSearch) { tt__SearchCapabilities *_p = soap_instantiate_tt__SearchCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__SearchCapabilities::XAddr = XAddr; _p->tt__SearchCapabilities::MetadataSearch = MetadataSearch; } return _p; }

inline void soap_delete_tt__SearchCapabilities(struct soap *soap, tt__SearchCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__SearchCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RecordingCapabilities
#define SOAP_TYPE_tt__RecordingCapabilities (400)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingCapabilities(struct soap*, const char*, int, const tt__RecordingCapabilities *, const char*);
SOAP_FMAC3 tt__RecordingCapabilities * SOAP_FMAC4 soap_in_tt__RecordingCapabilities(struct soap*, const char*, tt__RecordingCapabilities *, const char*);

#ifndef soap_write_tt__RecordingCapabilities
#define soap_write_tt__RecordingCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RecordingCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingCapabilities * SOAP_FMAC4 soap_get_tt__RecordingCapabilities(struct soap*, tt__RecordingCapabilities *, const char*, const char*);

#ifndef soap_read_tt__RecordingCapabilities
#define soap_read_tt__RecordingCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RecordingCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RecordingCapabilities * SOAP_FMAC2 soap_instantiate_tt__RecordingCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingCapabilities * soap_new_tt__RecordingCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__RecordingCapabilities * soap_new_req_tt__RecordingCapabilities(struct soap *soap, std::string& XAddr, bool ReceiverSource, bool MediaProfileSource, bool DynamicRecordings, bool DynamicTracks, int MaxStringLength) { tt__RecordingCapabilities *_p = soap_instantiate_tt__RecordingCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RecordingCapabilities::XAddr = XAddr; _p->tt__RecordingCapabilities::ReceiverSource = ReceiverSource; _p->tt__RecordingCapabilities::MediaProfileSource = MediaProfileSource; _p->tt__RecordingCapabilities::DynamicRecordings = DynamicRecordings; _p->tt__RecordingCapabilities::DynamicTracks = DynamicTracks; _p->tt__RecordingCapabilities::MaxStringLength = MaxStringLength; } return _p; }

inline tt__RecordingCapabilities * soap_new_set_tt__RecordingCapabilities(struct soap *soap, std::string& XAddr, bool ReceiverSource, bool MediaProfileSource, bool DynamicRecordings, bool DynamicTracks, int MaxStringLength) { tt__RecordingCapabilities *_p = soap_instantiate_tt__RecordingCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RecordingCapabilities::XAddr = XAddr; _p->tt__RecordingCapabilities::ReceiverSource = ReceiverSource; _p->tt__RecordingCapabilities::MediaProfileSource = MediaProfileSource; _p->tt__RecordingCapabilities::DynamicRecordings = DynamicRecordings; _p->tt__RecordingCapabilities::DynamicTracks = DynamicTracks; _p->tt__RecordingCapabilities::MaxStringLength = MaxStringLength; } return _p; }

inline void soap_delete_tt__RecordingCapabilities(struct soap *soap, tt__RecordingCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RecordingCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__DisplayCapabilities
#define SOAP_TYPE_tt__DisplayCapabilities (399)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DisplayCapabilities(struct soap*, const char*, int, const tt__DisplayCapabilities *, const char*);
SOAP_FMAC3 tt__DisplayCapabilities * SOAP_FMAC4 soap_in_tt__DisplayCapabilities(struct soap*, const char*, tt__DisplayCapabilities *, const char*);

#ifndef soap_write_tt__DisplayCapabilities
#define soap_write_tt__DisplayCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:DisplayCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DisplayCapabilities * SOAP_FMAC4 soap_get_tt__DisplayCapabilities(struct soap*, tt__DisplayCapabilities *, const char*, const char*);

#ifndef soap_read_tt__DisplayCapabilities
#define soap_read_tt__DisplayCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__DisplayCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__DisplayCapabilities * SOAP_FMAC2 soap_instantiate_tt__DisplayCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__DisplayCapabilities * soap_new_tt__DisplayCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__DisplayCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__DisplayCapabilities * soap_new_req_tt__DisplayCapabilities(struct soap *soap, std::string& XAddr, bool FixedLayout) { tt__DisplayCapabilities *_p = soap_instantiate_tt__DisplayCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__DisplayCapabilities::XAddr = XAddr; _p->tt__DisplayCapabilities::FixedLayout = FixedLayout; } return _p; }

inline tt__DisplayCapabilities * soap_new_set_tt__DisplayCapabilities(struct soap *soap, std::string& XAddr, bool FixedLayout) { tt__DisplayCapabilities *_p = soap_instantiate_tt__DisplayCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__DisplayCapabilities::XAddr = XAddr; _p->tt__DisplayCapabilities::FixedLayout = FixedLayout; } return _p; }

inline void soap_delete_tt__DisplayCapabilities(struct soap *soap, tt__DisplayCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__DisplayCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__DeviceIOCapabilities
#define SOAP_TYPE_tt__DeviceIOCapabilities (398)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DeviceIOCapabilities(struct soap*, const char*, int, const tt__DeviceIOCapabilities *, const char*);
SOAP_FMAC3 tt__DeviceIOCapabilities * SOAP_FMAC4 soap_in_tt__DeviceIOCapabilities(struct soap*, const char*, tt__DeviceIOCapabilities *, const char*);

#ifndef soap_write_tt__DeviceIOCapabilities
#define soap_write_tt__DeviceIOCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:DeviceIOCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DeviceIOCapabilities * SOAP_FMAC4 soap_get_tt__DeviceIOCapabilities(struct soap*, tt__DeviceIOCapabilities *, const char*, const char*);

#ifndef soap_read_tt__DeviceIOCapabilities
#define soap_read_tt__DeviceIOCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__DeviceIOCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__DeviceIOCapabilities * SOAP_FMAC2 soap_instantiate_tt__DeviceIOCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__DeviceIOCapabilities * soap_new_tt__DeviceIOCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__DeviceIOCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__DeviceIOCapabilities * soap_new_req_tt__DeviceIOCapabilities(struct soap *soap, std::string& XAddr, int VideoSources, int VideoOutputs, int AudioSources, int AudioOutputs, int RelayOutputs) { tt__DeviceIOCapabilities *_p = soap_instantiate_tt__DeviceIOCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__DeviceIOCapabilities::XAddr = XAddr; _p->tt__DeviceIOCapabilities::VideoSources = VideoSources; _p->tt__DeviceIOCapabilities::VideoOutputs = VideoOutputs; _p->tt__DeviceIOCapabilities::AudioSources = AudioSources; _p->tt__DeviceIOCapabilities::AudioOutputs = AudioOutputs; _p->tt__DeviceIOCapabilities::RelayOutputs = RelayOutputs; } return _p; }

inline tt__DeviceIOCapabilities * soap_new_set_tt__DeviceIOCapabilities(struct soap *soap, std::string& XAddr, int VideoSources, int VideoOutputs, int AudioSources, int AudioOutputs, int RelayOutputs) { tt__DeviceIOCapabilities *_p = soap_instantiate_tt__DeviceIOCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__DeviceIOCapabilities::XAddr = XAddr; _p->tt__DeviceIOCapabilities::VideoSources = VideoSources; _p->tt__DeviceIOCapabilities::VideoOutputs = VideoOutputs; _p->tt__DeviceIOCapabilities::AudioSources = AudioSources; _p->tt__DeviceIOCapabilities::AudioOutputs = AudioOutputs; _p->tt__DeviceIOCapabilities::RelayOutputs = RelayOutputs; } return _p; }

inline void soap_delete_tt__DeviceIOCapabilities(struct soap *soap, tt__DeviceIOCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__DeviceIOCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZCapabilities
#define SOAP_TYPE_tt__PTZCapabilities (397)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZCapabilities(struct soap*, const char*, int, const tt__PTZCapabilities *, const char*);
SOAP_FMAC3 tt__PTZCapabilities * SOAP_FMAC4 soap_in_tt__PTZCapabilities(struct soap*, const char*, tt__PTZCapabilities *, const char*);

#ifndef soap_write_tt__PTZCapabilities
#define soap_write_tt__PTZCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZCapabilities * SOAP_FMAC4 soap_get_tt__PTZCapabilities(struct soap*, tt__PTZCapabilities *, const char*, const char*);

#ifndef soap_read_tt__PTZCapabilities
#define soap_read_tt__PTZCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZCapabilities * SOAP_FMAC2 soap_instantiate_tt__PTZCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZCapabilities * soap_new_tt__PTZCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__PTZCapabilities * soap_new_req_tt__PTZCapabilities(struct soap *soap, std::string& XAddr) { tt__PTZCapabilities *_p = soap_instantiate_tt__PTZCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZCapabilities::XAddr = XAddr; } return _p; }

inline tt__PTZCapabilities * soap_new_set_tt__PTZCapabilities(struct soap *soap, std::string& XAddr) { tt__PTZCapabilities *_p = soap_instantiate_tt__PTZCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZCapabilities::XAddr = XAddr; } return _p; }

inline void soap_delete_tt__PTZCapabilities(struct soap *soap, tt__PTZCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ImagingCapabilities
#define SOAP_TYPE_tt__ImagingCapabilities (396)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingCapabilities(struct soap*, const char*, int, const tt__ImagingCapabilities *, const char*);
SOAP_FMAC3 tt__ImagingCapabilities * SOAP_FMAC4 soap_in_tt__ImagingCapabilities(struct soap*, const char*, tt__ImagingCapabilities *, const char*);

#ifndef soap_write_tt__ImagingCapabilities
#define soap_write_tt__ImagingCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ImagingCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingCapabilities * SOAP_FMAC4 soap_get_tt__ImagingCapabilities(struct soap*, tt__ImagingCapabilities *, const char*, const char*);

#ifndef soap_read_tt__ImagingCapabilities
#define soap_read_tt__ImagingCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ImagingCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ImagingCapabilities * SOAP_FMAC2 soap_instantiate_tt__ImagingCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingCapabilities * soap_new_tt__ImagingCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__ImagingCapabilities * soap_new_req_tt__ImagingCapabilities(struct soap *soap, std::string& XAddr) { tt__ImagingCapabilities *_p = soap_instantiate_tt__ImagingCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ImagingCapabilities::XAddr = XAddr; } return _p; }

inline tt__ImagingCapabilities * soap_new_set_tt__ImagingCapabilities(struct soap *soap, std::string& XAddr) { tt__ImagingCapabilities *_p = soap_instantiate_tt__ImagingCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ImagingCapabilities::XAddr = XAddr; } return _p; }

inline void soap_delete_tt__ImagingCapabilities(struct soap *soap, tt__ImagingCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ImagingCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__OnvifVersion
#define SOAP_TYPE_tt__OnvifVersion (395)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OnvifVersion(struct soap*, const char*, int, const tt__OnvifVersion *, const char*);
SOAP_FMAC3 tt__OnvifVersion * SOAP_FMAC4 soap_in_tt__OnvifVersion(struct soap*, const char*, tt__OnvifVersion *, const char*);

#ifndef soap_write_tt__OnvifVersion
#define soap_write_tt__OnvifVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:OnvifVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OnvifVersion * SOAP_FMAC4 soap_get_tt__OnvifVersion(struct soap*, tt__OnvifVersion *, const char*, const char*);

#ifndef soap_read_tt__OnvifVersion
#define soap_read_tt__OnvifVersion(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__OnvifVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__OnvifVersion * SOAP_FMAC2 soap_instantiate_tt__OnvifVersion(struct soap*, int, const char*, const char*, size_t*);

inline tt__OnvifVersion * soap_new_tt__OnvifVersion(struct soap *soap, int n = -1) { return soap_instantiate_tt__OnvifVersion(soap, n, NULL, NULL, NULL); }

inline tt__OnvifVersion * soap_new_req_tt__OnvifVersion(struct soap *soap, int Major, int Minor) { tt__OnvifVersion *_p = soap_instantiate_tt__OnvifVersion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__OnvifVersion::Major = Major; _p->tt__OnvifVersion::Minor = Minor; } return _p; }

inline tt__OnvifVersion * soap_new_set_tt__OnvifVersion(struct soap *soap, int Major, int Minor) { tt__OnvifVersion *_p = soap_instantiate_tt__OnvifVersion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__OnvifVersion::Major = Major; _p->tt__OnvifVersion::Minor = Minor; } return _p; }

inline void soap_delete_tt__OnvifVersion(struct soap *soap, tt__OnvifVersion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__OnvifVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__SystemCapabilitiesExtension2
#define SOAP_TYPE_tt__SystemCapabilitiesExtension2 (394)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SystemCapabilitiesExtension2(struct soap*, const char*, int, const tt__SystemCapabilitiesExtension2 *, const char*);
SOAP_FMAC3 tt__SystemCapabilitiesExtension2 * SOAP_FMAC4 soap_in_tt__SystemCapabilitiesExtension2(struct soap*, const char*, tt__SystemCapabilitiesExtension2 *, const char*);

#ifndef soap_write_tt__SystemCapabilitiesExtension2
#define soap_write_tt__SystemCapabilitiesExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:SystemCapabilitiesExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemCapabilitiesExtension2 * SOAP_FMAC4 soap_get_tt__SystemCapabilitiesExtension2(struct soap*, tt__SystemCapabilitiesExtension2 *, const char*, const char*);

#ifndef soap_read_tt__SystemCapabilitiesExtension2
#define soap_read_tt__SystemCapabilitiesExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__SystemCapabilitiesExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__SystemCapabilitiesExtension2 * SOAP_FMAC2 soap_instantiate_tt__SystemCapabilitiesExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__SystemCapabilitiesExtension2 * soap_new_tt__SystemCapabilitiesExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__SystemCapabilitiesExtension2(soap, n, NULL, NULL, NULL); }

inline tt__SystemCapabilitiesExtension2 * soap_new_req_tt__SystemCapabilitiesExtension2(struct soap *soap) { tt__SystemCapabilitiesExtension2 *_p = soap_instantiate_tt__SystemCapabilitiesExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__SystemCapabilitiesExtension2 * soap_new_set_tt__SystemCapabilitiesExtension2(struct soap *soap) { tt__SystemCapabilitiesExtension2 *_p = soap_instantiate_tt__SystemCapabilitiesExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__SystemCapabilitiesExtension2(struct soap *soap, tt__SystemCapabilitiesExtension2 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__SystemCapabilitiesExtension2(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__SystemCapabilitiesExtension
#define SOAP_TYPE_tt__SystemCapabilitiesExtension (393)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SystemCapabilitiesExtension(struct soap*, const char*, int, const tt__SystemCapabilitiesExtension *, const char*);
SOAP_FMAC3 tt__SystemCapabilitiesExtension * SOAP_FMAC4 soap_in_tt__SystemCapabilitiesExtension(struct soap*, const char*, tt__SystemCapabilitiesExtension *, const char*);

#ifndef soap_write_tt__SystemCapabilitiesExtension
#define soap_write_tt__SystemCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:SystemCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemCapabilitiesExtension * SOAP_FMAC4 soap_get_tt__SystemCapabilitiesExtension(struct soap*, tt__SystemCapabilitiesExtension *, const char*, const char*);

#ifndef soap_read_tt__SystemCapabilitiesExtension
#define soap_read_tt__SystemCapabilitiesExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__SystemCapabilitiesExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__SystemCapabilitiesExtension * SOAP_FMAC2 soap_instantiate_tt__SystemCapabilitiesExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__SystemCapabilitiesExtension * soap_new_tt__SystemCapabilitiesExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__SystemCapabilitiesExtension(soap, n, NULL, NULL, NULL); }

inline tt__SystemCapabilitiesExtension * soap_new_req_tt__SystemCapabilitiesExtension(struct soap *soap) { tt__SystemCapabilitiesExtension *_p = soap_instantiate_tt__SystemCapabilitiesExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__SystemCapabilitiesExtension * soap_new_set_tt__SystemCapabilitiesExtension(struct soap *soap, bool *HttpFirmwareUpgrade, bool *HttpSystemBackup, bool *HttpSystemLogging, bool *HttpSupportInformation, tt__SystemCapabilitiesExtension2 *Extension) { tt__SystemCapabilitiesExtension *_p = soap_instantiate_tt__SystemCapabilitiesExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__SystemCapabilitiesExtension::HttpFirmwareUpgrade = HttpFirmwareUpgrade; _p->tt__SystemCapabilitiesExtension::HttpSystemBackup = HttpSystemBackup; _p->tt__SystemCapabilitiesExtension::HttpSystemLogging = HttpSystemLogging; _p->tt__SystemCapabilitiesExtension::HttpSupportInformation = HttpSupportInformation; _p->tt__SystemCapabilitiesExtension::Extension = Extension; } return _p; }

inline void soap_delete_tt__SystemCapabilitiesExtension(struct soap *soap, tt__SystemCapabilitiesExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__SystemCapabilitiesExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__SystemCapabilities
#define SOAP_TYPE_tt__SystemCapabilities (392)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SystemCapabilities(struct soap*, const char*, int, const tt__SystemCapabilities *, const char*);
SOAP_FMAC3 tt__SystemCapabilities * SOAP_FMAC4 soap_in_tt__SystemCapabilities(struct soap*, const char*, tt__SystemCapabilities *, const char*);

#ifndef soap_write_tt__SystemCapabilities
#define soap_write_tt__SystemCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:SystemCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemCapabilities * SOAP_FMAC4 soap_get_tt__SystemCapabilities(struct soap*, tt__SystemCapabilities *, const char*, const char*);

#ifndef soap_read_tt__SystemCapabilities
#define soap_read_tt__SystemCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__SystemCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__SystemCapabilities * SOAP_FMAC2 soap_instantiate_tt__SystemCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__SystemCapabilities * soap_new_tt__SystemCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__SystemCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__SystemCapabilities * soap_new_req_tt__SystemCapabilities(struct soap *soap, bool DiscoveryResolve, bool DiscoveryBye, bool RemoteDiscovery, bool SystemBackup, bool SystemLogging, bool FirmwareUpgrade, std::vector<tt__OnvifVersion * >& SupportedVersions) { tt__SystemCapabilities *_p = soap_instantiate_tt__SystemCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__SystemCapabilities::DiscoveryResolve = DiscoveryResolve; _p->tt__SystemCapabilities::DiscoveryBye = DiscoveryBye; _p->tt__SystemCapabilities::RemoteDiscovery = RemoteDiscovery; _p->tt__SystemCapabilities::SystemBackup = SystemBackup; _p->tt__SystemCapabilities::SystemLogging = SystemLogging; _p->tt__SystemCapabilities::FirmwareUpgrade = FirmwareUpgrade; _p->tt__SystemCapabilities::SupportedVersions = SupportedVersions; } return _p; }

inline tt__SystemCapabilities * soap_new_set_tt__SystemCapabilities(struct soap *soap, bool DiscoveryResolve, bool DiscoveryBye, bool RemoteDiscovery, bool SystemBackup, bool SystemLogging, bool FirmwareUpgrade, std::vector<tt__OnvifVersion * >& SupportedVersions, tt__SystemCapabilitiesExtension *Extension) { tt__SystemCapabilities *_p = soap_instantiate_tt__SystemCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__SystemCapabilities::DiscoveryResolve = DiscoveryResolve; _p->tt__SystemCapabilities::DiscoveryBye = DiscoveryBye; _p->tt__SystemCapabilities::RemoteDiscovery = RemoteDiscovery; _p->tt__SystemCapabilities::SystemBackup = SystemBackup; _p->tt__SystemCapabilities::SystemLogging = SystemLogging; _p->tt__SystemCapabilities::FirmwareUpgrade = FirmwareUpgrade; _p->tt__SystemCapabilities::SupportedVersions = SupportedVersions; _p->tt__SystemCapabilities::Extension = Extension; } return _p; }

inline void soap_delete_tt__SystemCapabilities(struct soap *soap, tt__SystemCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__SystemCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__SecurityCapabilitiesExtension2
#define SOAP_TYPE_tt__SecurityCapabilitiesExtension2 (391)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SecurityCapabilitiesExtension2(struct soap*, const char*, int, const tt__SecurityCapabilitiesExtension2 *, const char*);
SOAP_FMAC3 tt__SecurityCapabilitiesExtension2 * SOAP_FMAC4 soap_in_tt__SecurityCapabilitiesExtension2(struct soap*, const char*, tt__SecurityCapabilitiesExtension2 *, const char*);

#ifndef soap_write_tt__SecurityCapabilitiesExtension2
#define soap_write_tt__SecurityCapabilitiesExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:SecurityCapabilitiesExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SecurityCapabilitiesExtension2 * SOAP_FMAC4 soap_get_tt__SecurityCapabilitiesExtension2(struct soap*, tt__SecurityCapabilitiesExtension2 *, const char*, const char*);

#ifndef soap_read_tt__SecurityCapabilitiesExtension2
#define soap_read_tt__SecurityCapabilitiesExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__SecurityCapabilitiesExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__SecurityCapabilitiesExtension2 * SOAP_FMAC2 soap_instantiate_tt__SecurityCapabilitiesExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__SecurityCapabilitiesExtension2 * soap_new_tt__SecurityCapabilitiesExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__SecurityCapabilitiesExtension2(soap, n, NULL, NULL, NULL); }

inline tt__SecurityCapabilitiesExtension2 * soap_new_req_tt__SecurityCapabilitiesExtension2(struct soap *soap, bool Dot1X, bool RemoteUserHandling) { tt__SecurityCapabilitiesExtension2 *_p = soap_instantiate_tt__SecurityCapabilitiesExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__SecurityCapabilitiesExtension2::Dot1X = Dot1X; _p->tt__SecurityCapabilitiesExtension2::RemoteUserHandling = RemoteUserHandling; } return _p; }

inline tt__SecurityCapabilitiesExtension2 * soap_new_set_tt__SecurityCapabilitiesExtension2(struct soap *soap, bool Dot1X, std::vector<int >& SupportedEAPMethod, bool RemoteUserHandling) { tt__SecurityCapabilitiesExtension2 *_p = soap_instantiate_tt__SecurityCapabilitiesExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__SecurityCapabilitiesExtension2::Dot1X = Dot1X; _p->tt__SecurityCapabilitiesExtension2::SupportedEAPMethod = SupportedEAPMethod; _p->tt__SecurityCapabilitiesExtension2::RemoteUserHandling = RemoteUserHandling; } return _p; }

inline void soap_delete_tt__SecurityCapabilitiesExtension2(struct soap *soap, tt__SecurityCapabilitiesExtension2 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__SecurityCapabilitiesExtension2(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__SecurityCapabilitiesExtension
#define SOAP_TYPE_tt__SecurityCapabilitiesExtension (390)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SecurityCapabilitiesExtension(struct soap*, const char*, int, const tt__SecurityCapabilitiesExtension *, const char*);
SOAP_FMAC3 tt__SecurityCapabilitiesExtension * SOAP_FMAC4 soap_in_tt__SecurityCapabilitiesExtension(struct soap*, const char*, tt__SecurityCapabilitiesExtension *, const char*);

#ifndef soap_write_tt__SecurityCapabilitiesExtension
#define soap_write_tt__SecurityCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:SecurityCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SecurityCapabilitiesExtension * SOAP_FMAC4 soap_get_tt__SecurityCapabilitiesExtension(struct soap*, tt__SecurityCapabilitiesExtension *, const char*, const char*);

#ifndef soap_read_tt__SecurityCapabilitiesExtension
#define soap_read_tt__SecurityCapabilitiesExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__SecurityCapabilitiesExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__SecurityCapabilitiesExtension * SOAP_FMAC2 soap_instantiate_tt__SecurityCapabilitiesExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__SecurityCapabilitiesExtension * soap_new_tt__SecurityCapabilitiesExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__SecurityCapabilitiesExtension(soap, n, NULL, NULL, NULL); }

inline tt__SecurityCapabilitiesExtension * soap_new_req_tt__SecurityCapabilitiesExtension(struct soap *soap, bool TLS1_x002e0) { tt__SecurityCapabilitiesExtension *_p = soap_instantiate_tt__SecurityCapabilitiesExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__SecurityCapabilitiesExtension::TLS1_x002e0 = TLS1_x002e0; } return _p; }

inline tt__SecurityCapabilitiesExtension * soap_new_set_tt__SecurityCapabilitiesExtension(struct soap *soap, bool TLS1_x002e0, tt__SecurityCapabilitiesExtension2 *Extension) { tt__SecurityCapabilitiesExtension *_p = soap_instantiate_tt__SecurityCapabilitiesExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__SecurityCapabilitiesExtension::TLS1_x002e0 = TLS1_x002e0; _p->tt__SecurityCapabilitiesExtension::Extension = Extension; } return _p; }

inline void soap_delete_tt__SecurityCapabilitiesExtension(struct soap *soap, tt__SecurityCapabilitiesExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__SecurityCapabilitiesExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__SecurityCapabilities
#define SOAP_TYPE_tt__SecurityCapabilities (389)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SecurityCapabilities(struct soap*, const char*, int, const tt__SecurityCapabilities *, const char*);
SOAP_FMAC3 tt__SecurityCapabilities * SOAP_FMAC4 soap_in_tt__SecurityCapabilities(struct soap*, const char*, tt__SecurityCapabilities *, const char*);

#ifndef soap_write_tt__SecurityCapabilities
#define soap_write_tt__SecurityCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:SecurityCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SecurityCapabilities * SOAP_FMAC4 soap_get_tt__SecurityCapabilities(struct soap*, tt__SecurityCapabilities *, const char*, const char*);

#ifndef soap_read_tt__SecurityCapabilities
#define soap_read_tt__SecurityCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__SecurityCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__SecurityCapabilities * SOAP_FMAC2 soap_instantiate_tt__SecurityCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__SecurityCapabilities * soap_new_tt__SecurityCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__SecurityCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__SecurityCapabilities * soap_new_req_tt__SecurityCapabilities(struct soap *soap, bool TLS1_x002e1, bool TLS1_x002e2, bool OnboardKeyGeneration, bool AccessPolicyConfig, bool X_x002e509Token, bool SAMLToken, bool KerberosToken, bool RELToken) { tt__SecurityCapabilities *_p = soap_instantiate_tt__SecurityCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__SecurityCapabilities::TLS1_x002e1 = TLS1_x002e1; _p->tt__SecurityCapabilities::TLS1_x002e2 = TLS1_x002e2; _p->tt__SecurityCapabilities::OnboardKeyGeneration = OnboardKeyGeneration; _p->tt__SecurityCapabilities::AccessPolicyConfig = AccessPolicyConfig; _p->tt__SecurityCapabilities::X_x002e509Token = X_x002e509Token; _p->tt__SecurityCapabilities::SAMLToken = SAMLToken; _p->tt__SecurityCapabilities::KerberosToken = KerberosToken; _p->tt__SecurityCapabilities::RELToken = RELToken; } return _p; }

inline tt__SecurityCapabilities * soap_new_set_tt__SecurityCapabilities(struct soap *soap, bool TLS1_x002e1, bool TLS1_x002e2, bool OnboardKeyGeneration, bool AccessPolicyConfig, bool X_x002e509Token, bool SAMLToken, bool KerberosToken, bool RELToken, tt__SecurityCapabilitiesExtension *Extension) { tt__SecurityCapabilities *_p = soap_instantiate_tt__SecurityCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__SecurityCapabilities::TLS1_x002e1 = TLS1_x002e1; _p->tt__SecurityCapabilities::TLS1_x002e2 = TLS1_x002e2; _p->tt__SecurityCapabilities::OnboardKeyGeneration = OnboardKeyGeneration; _p->tt__SecurityCapabilities::AccessPolicyConfig = AccessPolicyConfig; _p->tt__SecurityCapabilities::X_x002e509Token = X_x002e509Token; _p->tt__SecurityCapabilities::SAMLToken = SAMLToken; _p->tt__SecurityCapabilities::KerberosToken = KerberosToken; _p->tt__SecurityCapabilities::RELToken = RELToken; _p->tt__SecurityCapabilities::Extension = Extension; } return _p; }

inline void soap_delete_tt__SecurityCapabilities(struct soap *soap, tt__SecurityCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__SecurityCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__NetworkCapabilitiesExtension2
#define SOAP_TYPE_tt__NetworkCapabilitiesExtension2 (388)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkCapabilitiesExtension2(struct soap*, const char*, int, const tt__NetworkCapabilitiesExtension2 *, const char*);
SOAP_FMAC3 tt__NetworkCapabilitiesExtension2 * SOAP_FMAC4 soap_in_tt__NetworkCapabilitiesExtension2(struct soap*, const char*, tt__NetworkCapabilitiesExtension2 *, const char*);

#ifndef soap_write_tt__NetworkCapabilitiesExtension2
#define soap_write_tt__NetworkCapabilitiesExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:NetworkCapabilitiesExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkCapabilitiesExtension2 * SOAP_FMAC4 soap_get_tt__NetworkCapabilitiesExtension2(struct soap*, tt__NetworkCapabilitiesExtension2 *, const char*, const char*);

#ifndef soap_read_tt__NetworkCapabilitiesExtension2
#define soap_read_tt__NetworkCapabilitiesExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__NetworkCapabilitiesExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__NetworkCapabilitiesExtension2 * SOAP_FMAC2 soap_instantiate_tt__NetworkCapabilitiesExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkCapabilitiesExtension2 * soap_new_tt__NetworkCapabilitiesExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkCapabilitiesExtension2(soap, n, NULL, NULL, NULL); }

inline tt__NetworkCapabilitiesExtension2 * soap_new_req_tt__NetworkCapabilitiesExtension2(struct soap *soap) { tt__NetworkCapabilitiesExtension2 *_p = soap_instantiate_tt__NetworkCapabilitiesExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__NetworkCapabilitiesExtension2 * soap_new_set_tt__NetworkCapabilitiesExtension2(struct soap *soap) { tt__NetworkCapabilitiesExtension2 *_p = soap_instantiate_tt__NetworkCapabilitiesExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__NetworkCapabilitiesExtension2(struct soap *soap, tt__NetworkCapabilitiesExtension2 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__NetworkCapabilitiesExtension2(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__NetworkCapabilitiesExtension
#define SOAP_TYPE_tt__NetworkCapabilitiesExtension (387)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkCapabilitiesExtension(struct soap*, const char*, int, const tt__NetworkCapabilitiesExtension *, const char*);
SOAP_FMAC3 tt__NetworkCapabilitiesExtension * SOAP_FMAC4 soap_in_tt__NetworkCapabilitiesExtension(struct soap*, const char*, tt__NetworkCapabilitiesExtension *, const char*);

#ifndef soap_write_tt__NetworkCapabilitiesExtension
#define soap_write_tt__NetworkCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:NetworkCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkCapabilitiesExtension * SOAP_FMAC4 soap_get_tt__NetworkCapabilitiesExtension(struct soap*, tt__NetworkCapabilitiesExtension *, const char*, const char*);

#ifndef soap_read_tt__NetworkCapabilitiesExtension
#define soap_read_tt__NetworkCapabilitiesExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__NetworkCapabilitiesExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__NetworkCapabilitiesExtension * SOAP_FMAC2 soap_instantiate_tt__NetworkCapabilitiesExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkCapabilitiesExtension * soap_new_tt__NetworkCapabilitiesExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkCapabilitiesExtension(soap, n, NULL, NULL, NULL); }

inline tt__NetworkCapabilitiesExtension * soap_new_req_tt__NetworkCapabilitiesExtension(struct soap *soap) { tt__NetworkCapabilitiesExtension *_p = soap_instantiate_tt__NetworkCapabilitiesExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__NetworkCapabilitiesExtension * soap_new_set_tt__NetworkCapabilitiesExtension(struct soap *soap, bool *Dot11Configuration, tt__NetworkCapabilitiesExtension2 *Extension) { tt__NetworkCapabilitiesExtension *_p = soap_instantiate_tt__NetworkCapabilitiesExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__NetworkCapabilitiesExtension::Dot11Configuration = Dot11Configuration; _p->tt__NetworkCapabilitiesExtension::Extension = Extension; } return _p; }

inline void soap_delete_tt__NetworkCapabilitiesExtension(struct soap *soap, tt__NetworkCapabilitiesExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__NetworkCapabilitiesExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__NetworkCapabilities
#define SOAP_TYPE_tt__NetworkCapabilities (386)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkCapabilities(struct soap*, const char*, int, const tt__NetworkCapabilities *, const char*);
SOAP_FMAC3 tt__NetworkCapabilities * SOAP_FMAC4 soap_in_tt__NetworkCapabilities(struct soap*, const char*, tt__NetworkCapabilities *, const char*);

#ifndef soap_write_tt__NetworkCapabilities
#define soap_write_tt__NetworkCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:NetworkCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkCapabilities * SOAP_FMAC4 soap_get_tt__NetworkCapabilities(struct soap*, tt__NetworkCapabilities *, const char*, const char*);

#ifndef soap_read_tt__NetworkCapabilities
#define soap_read_tt__NetworkCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__NetworkCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__NetworkCapabilities * SOAP_FMAC2 soap_instantiate_tt__NetworkCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkCapabilities * soap_new_tt__NetworkCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__NetworkCapabilities * soap_new_req_tt__NetworkCapabilities(struct soap *soap) { tt__NetworkCapabilities *_p = soap_instantiate_tt__NetworkCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__NetworkCapabilities * soap_new_set_tt__NetworkCapabilities(struct soap *soap, bool *IPFilter, bool *ZeroConfiguration, bool *IPVersion6, bool *DynDNS, tt__NetworkCapabilitiesExtension *Extension) { tt__NetworkCapabilities *_p = soap_instantiate_tt__NetworkCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__NetworkCapabilities::IPFilter = IPFilter; _p->tt__NetworkCapabilities::ZeroConfiguration = ZeroConfiguration; _p->tt__NetworkCapabilities::IPVersion6 = IPVersion6; _p->tt__NetworkCapabilities::DynDNS = DynDNS; _p->tt__NetworkCapabilities::Extension = Extension; } return _p; }

inline void soap_delete_tt__NetworkCapabilities(struct soap *soap, tt__NetworkCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__NetworkCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ProfileCapabilities
#define SOAP_TYPE_tt__ProfileCapabilities (385)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ProfileCapabilities(struct soap*, const char*, int, const tt__ProfileCapabilities *, const char*);
SOAP_FMAC3 tt__ProfileCapabilities * SOAP_FMAC4 soap_in_tt__ProfileCapabilities(struct soap*, const char*, tt__ProfileCapabilities *, const char*);

#ifndef soap_write_tt__ProfileCapabilities
#define soap_write_tt__ProfileCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ProfileCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ProfileCapabilities * SOAP_FMAC4 soap_get_tt__ProfileCapabilities(struct soap*, tt__ProfileCapabilities *, const char*, const char*);

#ifndef soap_read_tt__ProfileCapabilities
#define soap_read_tt__ProfileCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ProfileCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ProfileCapabilities * SOAP_FMAC2 soap_instantiate_tt__ProfileCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__ProfileCapabilities * soap_new_tt__ProfileCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__ProfileCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__ProfileCapabilities * soap_new_req_tt__ProfileCapabilities(struct soap *soap, int MaximumNumberOfProfiles) { tt__ProfileCapabilities *_p = soap_instantiate_tt__ProfileCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ProfileCapabilities::MaximumNumberOfProfiles = MaximumNumberOfProfiles; } return _p; }

inline tt__ProfileCapabilities * soap_new_set_tt__ProfileCapabilities(struct soap *soap, int MaximumNumberOfProfiles) { tt__ProfileCapabilities *_p = soap_instantiate_tt__ProfileCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ProfileCapabilities::MaximumNumberOfProfiles = MaximumNumberOfProfiles; } return _p; }

inline void soap_delete_tt__ProfileCapabilities(struct soap *soap, tt__ProfileCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ProfileCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RealTimeStreamingCapabilitiesExtension
#define SOAP_TYPE_tt__RealTimeStreamingCapabilitiesExtension (384)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RealTimeStreamingCapabilitiesExtension(struct soap*, const char*, int, const tt__RealTimeStreamingCapabilitiesExtension *, const char*);
SOAP_FMAC3 tt__RealTimeStreamingCapabilitiesExtension * SOAP_FMAC4 soap_in_tt__RealTimeStreamingCapabilitiesExtension(struct soap*, const char*, tt__RealTimeStreamingCapabilitiesExtension *, const char*);

#ifndef soap_write_tt__RealTimeStreamingCapabilitiesExtension
#define soap_write_tt__RealTimeStreamingCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RealTimeStreamingCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RealTimeStreamingCapabilitiesExtension * SOAP_FMAC4 soap_get_tt__RealTimeStreamingCapabilitiesExtension(struct soap*, tt__RealTimeStreamingCapabilitiesExtension *, const char*, const char*);

#ifndef soap_read_tt__RealTimeStreamingCapabilitiesExtension
#define soap_read_tt__RealTimeStreamingCapabilitiesExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RealTimeStreamingCapabilitiesExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RealTimeStreamingCapabilitiesExtension * SOAP_FMAC2 soap_instantiate_tt__RealTimeStreamingCapabilitiesExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__RealTimeStreamingCapabilitiesExtension * soap_new_tt__RealTimeStreamingCapabilitiesExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__RealTimeStreamingCapabilitiesExtension(soap, n, NULL, NULL, NULL); }

inline tt__RealTimeStreamingCapabilitiesExtension * soap_new_req_tt__RealTimeStreamingCapabilitiesExtension(struct soap *soap) { tt__RealTimeStreamingCapabilitiesExtension *_p = soap_instantiate_tt__RealTimeStreamingCapabilitiesExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__RealTimeStreamingCapabilitiesExtension * soap_new_set_tt__RealTimeStreamingCapabilitiesExtension(struct soap *soap) { tt__RealTimeStreamingCapabilitiesExtension *_p = soap_instantiate_tt__RealTimeStreamingCapabilitiesExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__RealTimeStreamingCapabilitiesExtension(struct soap *soap, tt__RealTimeStreamingCapabilitiesExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RealTimeStreamingCapabilitiesExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RealTimeStreamingCapabilities
#define SOAP_TYPE_tt__RealTimeStreamingCapabilities (383)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RealTimeStreamingCapabilities(struct soap*, const char*, int, const tt__RealTimeStreamingCapabilities *, const char*);
SOAP_FMAC3 tt__RealTimeStreamingCapabilities * SOAP_FMAC4 soap_in_tt__RealTimeStreamingCapabilities(struct soap*, const char*, tt__RealTimeStreamingCapabilities *, const char*);

#ifndef soap_write_tt__RealTimeStreamingCapabilities
#define soap_write_tt__RealTimeStreamingCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RealTimeStreamingCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RealTimeStreamingCapabilities * SOAP_FMAC4 soap_get_tt__RealTimeStreamingCapabilities(struct soap*, tt__RealTimeStreamingCapabilities *, const char*, const char*);

#ifndef soap_read_tt__RealTimeStreamingCapabilities
#define soap_read_tt__RealTimeStreamingCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RealTimeStreamingCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RealTimeStreamingCapabilities * SOAP_FMAC2 soap_instantiate_tt__RealTimeStreamingCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__RealTimeStreamingCapabilities * soap_new_tt__RealTimeStreamingCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__RealTimeStreamingCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__RealTimeStreamingCapabilities * soap_new_req_tt__RealTimeStreamingCapabilities(struct soap *soap) { tt__RealTimeStreamingCapabilities *_p = soap_instantiate_tt__RealTimeStreamingCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__RealTimeStreamingCapabilities * soap_new_set_tt__RealTimeStreamingCapabilities(struct soap *soap, bool *RTPMulticast, bool *RTP_USCORETCP, bool *RTP_USCORERTSP_USCORETCP, tt__RealTimeStreamingCapabilitiesExtension *Extension) { tt__RealTimeStreamingCapabilities *_p = soap_instantiate_tt__RealTimeStreamingCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RealTimeStreamingCapabilities::RTPMulticast = RTPMulticast; _p->tt__RealTimeStreamingCapabilities::RTP_USCORETCP = RTP_USCORETCP; _p->tt__RealTimeStreamingCapabilities::RTP_USCORERTSP_USCORETCP = RTP_USCORERTSP_USCORETCP; _p->tt__RealTimeStreamingCapabilities::Extension = Extension; } return _p; }

inline void soap_delete_tt__RealTimeStreamingCapabilities(struct soap *soap, tt__RealTimeStreamingCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RealTimeStreamingCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__MediaCapabilitiesExtension
#define SOAP_TYPE_tt__MediaCapabilitiesExtension (382)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MediaCapabilitiesExtension(struct soap*, const char*, int, const tt__MediaCapabilitiesExtension *, const char*);
SOAP_FMAC3 tt__MediaCapabilitiesExtension * SOAP_FMAC4 soap_in_tt__MediaCapabilitiesExtension(struct soap*, const char*, tt__MediaCapabilitiesExtension *, const char*);

#ifndef soap_write_tt__MediaCapabilitiesExtension
#define soap_write_tt__MediaCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:MediaCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MediaCapabilitiesExtension * SOAP_FMAC4 soap_get_tt__MediaCapabilitiesExtension(struct soap*, tt__MediaCapabilitiesExtension *, const char*, const char*);

#ifndef soap_read_tt__MediaCapabilitiesExtension
#define soap_read_tt__MediaCapabilitiesExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__MediaCapabilitiesExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__MediaCapabilitiesExtension * SOAP_FMAC2 soap_instantiate_tt__MediaCapabilitiesExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__MediaCapabilitiesExtension * soap_new_tt__MediaCapabilitiesExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__MediaCapabilitiesExtension(soap, n, NULL, NULL, NULL); }

inline tt__MediaCapabilitiesExtension * soap_new_req_tt__MediaCapabilitiesExtension(struct soap *soap, tt__ProfileCapabilities *ProfileCapabilities) { tt__MediaCapabilitiesExtension *_p = soap_instantiate_tt__MediaCapabilitiesExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MediaCapabilitiesExtension::ProfileCapabilities = ProfileCapabilities; } return _p; }

inline tt__MediaCapabilitiesExtension * soap_new_set_tt__MediaCapabilitiesExtension(struct soap *soap, tt__ProfileCapabilities *ProfileCapabilities) { tt__MediaCapabilitiesExtension *_p = soap_instantiate_tt__MediaCapabilitiesExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MediaCapabilitiesExtension::ProfileCapabilities = ProfileCapabilities; } return _p; }

inline void soap_delete_tt__MediaCapabilitiesExtension(struct soap *soap, tt__MediaCapabilitiesExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__MediaCapabilitiesExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__MediaCapabilities
#define SOAP_TYPE_tt__MediaCapabilities (381)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MediaCapabilities(struct soap*, const char*, int, const tt__MediaCapabilities *, const char*);
SOAP_FMAC3 tt__MediaCapabilities * SOAP_FMAC4 soap_in_tt__MediaCapabilities(struct soap*, const char*, tt__MediaCapabilities *, const char*);

#ifndef soap_write_tt__MediaCapabilities
#define soap_write_tt__MediaCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:MediaCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MediaCapabilities * SOAP_FMAC4 soap_get_tt__MediaCapabilities(struct soap*, tt__MediaCapabilities *, const char*, const char*);

#ifndef soap_read_tt__MediaCapabilities
#define soap_read_tt__MediaCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__MediaCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__MediaCapabilities * SOAP_FMAC2 soap_instantiate_tt__MediaCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__MediaCapabilities * soap_new_tt__MediaCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__MediaCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__MediaCapabilities * soap_new_req_tt__MediaCapabilities(struct soap *soap, std::string& XAddr, tt__RealTimeStreamingCapabilities *StreamingCapabilities) { tt__MediaCapabilities *_p = soap_instantiate_tt__MediaCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MediaCapabilities::XAddr = XAddr; _p->tt__MediaCapabilities::StreamingCapabilities = StreamingCapabilities; } return _p; }

inline tt__MediaCapabilities * soap_new_set_tt__MediaCapabilities(struct soap *soap, std::string& XAddr, tt__RealTimeStreamingCapabilities *StreamingCapabilities, tt__MediaCapabilitiesExtension *Extension) { tt__MediaCapabilities *_p = soap_instantiate_tt__MediaCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MediaCapabilities::XAddr = XAddr; _p->tt__MediaCapabilities::StreamingCapabilities = StreamingCapabilities; _p->tt__MediaCapabilities::Extension = Extension; } return _p; }

inline void soap_delete_tt__MediaCapabilities(struct soap *soap, tt__MediaCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__MediaCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__IOCapabilitiesExtension2
#define SOAP_TYPE_tt__IOCapabilitiesExtension2 (380)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IOCapabilitiesExtension2(struct soap*, const char*, int, const tt__IOCapabilitiesExtension2 *, const char*);
SOAP_FMAC3 tt__IOCapabilitiesExtension2 * SOAP_FMAC4 soap_in_tt__IOCapabilitiesExtension2(struct soap*, const char*, tt__IOCapabilitiesExtension2 *, const char*);

#ifndef soap_write_tt__IOCapabilitiesExtension2
#define soap_write_tt__IOCapabilitiesExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:IOCapabilitiesExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IOCapabilitiesExtension2 * SOAP_FMAC4 soap_get_tt__IOCapabilitiesExtension2(struct soap*, tt__IOCapabilitiesExtension2 *, const char*, const char*);

#ifndef soap_read_tt__IOCapabilitiesExtension2
#define soap_read_tt__IOCapabilitiesExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IOCapabilitiesExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__IOCapabilitiesExtension2 * SOAP_FMAC2 soap_instantiate_tt__IOCapabilitiesExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__IOCapabilitiesExtension2 * soap_new_tt__IOCapabilitiesExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__IOCapabilitiesExtension2(soap, n, NULL, NULL, NULL); }

inline tt__IOCapabilitiesExtension2 * soap_new_req_tt__IOCapabilitiesExtension2(struct soap *soap) { tt__IOCapabilitiesExtension2 *_p = soap_instantiate_tt__IOCapabilitiesExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__IOCapabilitiesExtension2 * soap_new_set_tt__IOCapabilitiesExtension2(struct soap *soap) { tt__IOCapabilitiesExtension2 *_p = soap_instantiate_tt__IOCapabilitiesExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__IOCapabilitiesExtension2(struct soap *soap, tt__IOCapabilitiesExtension2 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__IOCapabilitiesExtension2(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__IOCapabilitiesExtension
#define SOAP_TYPE_tt__IOCapabilitiesExtension (379)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IOCapabilitiesExtension(struct soap*, const char*, int, const tt__IOCapabilitiesExtension *, const char*);
SOAP_FMAC3 tt__IOCapabilitiesExtension * SOAP_FMAC4 soap_in_tt__IOCapabilitiesExtension(struct soap*, const char*, tt__IOCapabilitiesExtension *, const char*);

#ifndef soap_write_tt__IOCapabilitiesExtension
#define soap_write_tt__IOCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:IOCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IOCapabilitiesExtension * SOAP_FMAC4 soap_get_tt__IOCapabilitiesExtension(struct soap*, tt__IOCapabilitiesExtension *, const char*, const char*);

#ifndef soap_read_tt__IOCapabilitiesExtension
#define soap_read_tt__IOCapabilitiesExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IOCapabilitiesExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__IOCapabilitiesExtension * SOAP_FMAC2 soap_instantiate_tt__IOCapabilitiesExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__IOCapabilitiesExtension * soap_new_tt__IOCapabilitiesExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__IOCapabilitiesExtension(soap, n, NULL, NULL, NULL); }

inline tt__IOCapabilitiesExtension * soap_new_req_tt__IOCapabilitiesExtension(struct soap *soap, tt__IOCapabilitiesExtension2 *Extension) { tt__IOCapabilitiesExtension *_p = soap_instantiate_tt__IOCapabilitiesExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IOCapabilitiesExtension::Extension = Extension; } return _p; }

inline tt__IOCapabilitiesExtension * soap_new_set_tt__IOCapabilitiesExtension(struct soap *soap, bool *Auxiliary, std::vector<std::string >& AuxiliaryCommands, tt__IOCapabilitiesExtension2 *Extension) { tt__IOCapabilitiesExtension *_p = soap_instantiate_tt__IOCapabilitiesExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IOCapabilitiesExtension::Auxiliary = Auxiliary; _p->tt__IOCapabilitiesExtension::AuxiliaryCommands = AuxiliaryCommands; _p->tt__IOCapabilitiesExtension::Extension = Extension; } return _p; }

inline void soap_delete_tt__IOCapabilitiesExtension(struct soap *soap, tt__IOCapabilitiesExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__IOCapabilitiesExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__IOCapabilities
#define SOAP_TYPE_tt__IOCapabilities (378)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IOCapabilities(struct soap*, const char*, int, const tt__IOCapabilities *, const char*);
SOAP_FMAC3 tt__IOCapabilities * SOAP_FMAC4 soap_in_tt__IOCapabilities(struct soap*, const char*, tt__IOCapabilities *, const char*);

#ifndef soap_write_tt__IOCapabilities
#define soap_write_tt__IOCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:IOCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IOCapabilities * SOAP_FMAC4 soap_get_tt__IOCapabilities(struct soap*, tt__IOCapabilities *, const char*, const char*);

#ifndef soap_read_tt__IOCapabilities
#define soap_read_tt__IOCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IOCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__IOCapabilities * SOAP_FMAC2 soap_instantiate_tt__IOCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__IOCapabilities * soap_new_tt__IOCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__IOCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__IOCapabilities * soap_new_req_tt__IOCapabilities(struct soap *soap) { tt__IOCapabilities *_p = soap_instantiate_tt__IOCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__IOCapabilities * soap_new_set_tt__IOCapabilities(struct soap *soap, int *InputConnectors, int *RelayOutputs, tt__IOCapabilitiesExtension *Extension) { tt__IOCapabilities *_p = soap_instantiate_tt__IOCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IOCapabilities::InputConnectors = InputConnectors; _p->tt__IOCapabilities::RelayOutputs = RelayOutputs; _p->tt__IOCapabilities::Extension = Extension; } return _p; }

inline void soap_delete_tt__IOCapabilities(struct soap *soap, tt__IOCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__IOCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__EventCapabilities
#define SOAP_TYPE_tt__EventCapabilities (377)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__EventCapabilities(struct soap*, const char*, int, const tt__EventCapabilities *, const char*);
SOAP_FMAC3 tt__EventCapabilities * SOAP_FMAC4 soap_in_tt__EventCapabilities(struct soap*, const char*, tt__EventCapabilities *, const char*);

#ifndef soap_write_tt__EventCapabilities
#define soap_write_tt__EventCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:EventCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EventCapabilities * SOAP_FMAC4 soap_get_tt__EventCapabilities(struct soap*, tt__EventCapabilities *, const char*, const char*);

#ifndef soap_read_tt__EventCapabilities
#define soap_read_tt__EventCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__EventCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__EventCapabilities * SOAP_FMAC2 soap_instantiate_tt__EventCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__EventCapabilities * soap_new_tt__EventCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__EventCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__EventCapabilities * soap_new_req_tt__EventCapabilities(struct soap *soap, std::string& XAddr, bool WSSubscriptionPolicySupport, bool WSPullPointSupport, bool WSPausableSubscriptionManagerInterfaceSupport) { tt__EventCapabilities *_p = soap_instantiate_tt__EventCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__EventCapabilities::XAddr = XAddr; _p->tt__EventCapabilities::WSSubscriptionPolicySupport = WSSubscriptionPolicySupport; _p->tt__EventCapabilities::WSPullPointSupport = WSPullPointSupport; _p->tt__EventCapabilities::WSPausableSubscriptionManagerInterfaceSupport = WSPausableSubscriptionManagerInterfaceSupport; } return _p; }

inline tt__EventCapabilities * soap_new_set_tt__EventCapabilities(struct soap *soap, std::string& XAddr, bool WSSubscriptionPolicySupport, bool WSPullPointSupport, bool WSPausableSubscriptionManagerInterfaceSupport) { tt__EventCapabilities *_p = soap_instantiate_tt__EventCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__EventCapabilities::XAddr = XAddr; _p->tt__EventCapabilities::WSSubscriptionPolicySupport = WSSubscriptionPolicySupport; _p->tt__EventCapabilities::WSPullPointSupport = WSPullPointSupport; _p->tt__EventCapabilities::WSPausableSubscriptionManagerInterfaceSupport = WSPausableSubscriptionManagerInterfaceSupport; } return _p; }

inline void soap_delete_tt__EventCapabilities(struct soap *soap, tt__EventCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__EventCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__DeviceCapabilitiesExtension
#define SOAP_TYPE_tt__DeviceCapabilitiesExtension (376)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DeviceCapabilitiesExtension(struct soap*, const char*, int, const tt__DeviceCapabilitiesExtension *, const char*);
SOAP_FMAC3 tt__DeviceCapabilitiesExtension * SOAP_FMAC4 soap_in_tt__DeviceCapabilitiesExtension(struct soap*, const char*, tt__DeviceCapabilitiesExtension *, const char*);

#ifndef soap_write_tt__DeviceCapabilitiesExtension
#define soap_write_tt__DeviceCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:DeviceCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DeviceCapabilitiesExtension * SOAP_FMAC4 soap_get_tt__DeviceCapabilitiesExtension(struct soap*, tt__DeviceCapabilitiesExtension *, const char*, const char*);

#ifndef soap_read_tt__DeviceCapabilitiesExtension
#define soap_read_tt__DeviceCapabilitiesExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__DeviceCapabilitiesExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__DeviceCapabilitiesExtension * SOAP_FMAC2 soap_instantiate_tt__DeviceCapabilitiesExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__DeviceCapabilitiesExtension * soap_new_tt__DeviceCapabilitiesExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__DeviceCapabilitiesExtension(soap, n, NULL, NULL, NULL); }

inline tt__DeviceCapabilitiesExtension * soap_new_req_tt__DeviceCapabilitiesExtension(struct soap *soap) { tt__DeviceCapabilitiesExtension *_p = soap_instantiate_tt__DeviceCapabilitiesExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__DeviceCapabilitiesExtension * soap_new_set_tt__DeviceCapabilitiesExtension(struct soap *soap) { tt__DeviceCapabilitiesExtension *_p = soap_instantiate_tt__DeviceCapabilitiesExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__DeviceCapabilitiesExtension(struct soap *soap, tt__DeviceCapabilitiesExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__DeviceCapabilitiesExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__DeviceCapabilities
#define SOAP_TYPE_tt__DeviceCapabilities (375)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DeviceCapabilities(struct soap*, const char*, int, const tt__DeviceCapabilities *, const char*);
SOAP_FMAC3 tt__DeviceCapabilities * SOAP_FMAC4 soap_in_tt__DeviceCapabilities(struct soap*, const char*, tt__DeviceCapabilities *, const char*);

#ifndef soap_write_tt__DeviceCapabilities
#define soap_write_tt__DeviceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:DeviceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DeviceCapabilities * SOAP_FMAC4 soap_get_tt__DeviceCapabilities(struct soap*, tt__DeviceCapabilities *, const char*, const char*);

#ifndef soap_read_tt__DeviceCapabilities
#define soap_read_tt__DeviceCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__DeviceCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__DeviceCapabilities * SOAP_FMAC2 soap_instantiate_tt__DeviceCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__DeviceCapabilities * soap_new_tt__DeviceCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__DeviceCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__DeviceCapabilities * soap_new_req_tt__DeviceCapabilities(struct soap *soap, std::string& XAddr) { tt__DeviceCapabilities *_p = soap_instantiate_tt__DeviceCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__DeviceCapabilities::XAddr = XAddr; } return _p; }

inline tt__DeviceCapabilities * soap_new_set_tt__DeviceCapabilities(struct soap *soap, std::string& XAddr, tt__NetworkCapabilities *Network, tt__SystemCapabilities *System, tt__IOCapabilities *IO, tt__SecurityCapabilities *Security, tt__DeviceCapabilitiesExtension *Extension) { tt__DeviceCapabilities *_p = soap_instantiate_tt__DeviceCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__DeviceCapabilities::XAddr = XAddr; _p->tt__DeviceCapabilities::Network = Network; _p->tt__DeviceCapabilities::System = System; _p->tt__DeviceCapabilities::IO = IO; _p->tt__DeviceCapabilities::Security = Security; _p->tt__DeviceCapabilities::Extension = Extension; } return _p; }

inline void soap_delete_tt__DeviceCapabilities(struct soap *soap, tt__DeviceCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__DeviceCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AnalyticsCapabilities
#define SOAP_TYPE_tt__AnalyticsCapabilities (374)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsCapabilities(struct soap*, const char*, int, const tt__AnalyticsCapabilities *, const char*);
SOAP_FMAC3 tt__AnalyticsCapabilities * SOAP_FMAC4 soap_in_tt__AnalyticsCapabilities(struct soap*, const char*, tt__AnalyticsCapabilities *, const char*);

#ifndef soap_write_tt__AnalyticsCapabilities
#define soap_write_tt__AnalyticsCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AnalyticsCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsCapabilities * SOAP_FMAC4 soap_get_tt__AnalyticsCapabilities(struct soap*, tt__AnalyticsCapabilities *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsCapabilities
#define soap_read_tt__AnalyticsCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AnalyticsCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AnalyticsCapabilities * SOAP_FMAC2 soap_instantiate_tt__AnalyticsCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsCapabilities * soap_new_tt__AnalyticsCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsCapabilities * soap_new_req_tt__AnalyticsCapabilities(struct soap *soap, std::string& XAddr, bool RuleSupport, bool AnalyticsModuleSupport) { tt__AnalyticsCapabilities *_p = soap_instantiate_tt__AnalyticsCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AnalyticsCapabilities::XAddr = XAddr; _p->tt__AnalyticsCapabilities::RuleSupport = RuleSupport; _p->tt__AnalyticsCapabilities::AnalyticsModuleSupport = AnalyticsModuleSupport; } return _p; }

inline tt__AnalyticsCapabilities * soap_new_set_tt__AnalyticsCapabilities(struct soap *soap, std::string& XAddr, bool RuleSupport, bool AnalyticsModuleSupport) { tt__AnalyticsCapabilities *_p = soap_instantiate_tt__AnalyticsCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AnalyticsCapabilities::XAddr = XAddr; _p->tt__AnalyticsCapabilities::RuleSupport = RuleSupport; _p->tt__AnalyticsCapabilities::AnalyticsModuleSupport = AnalyticsModuleSupport; } return _p; }

inline void soap_delete_tt__AnalyticsCapabilities(struct soap *soap, tt__AnalyticsCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AnalyticsCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__CapabilitiesExtension2
#define SOAP_TYPE_tt__CapabilitiesExtension2 (373)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__CapabilitiesExtension2(struct soap*, const char*, int, const tt__CapabilitiesExtension2 *, const char*);
SOAP_FMAC3 tt__CapabilitiesExtension2 * SOAP_FMAC4 soap_in_tt__CapabilitiesExtension2(struct soap*, const char*, tt__CapabilitiesExtension2 *, const char*);

#ifndef soap_write_tt__CapabilitiesExtension2
#define soap_write_tt__CapabilitiesExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:CapabilitiesExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CapabilitiesExtension2 * SOAP_FMAC4 soap_get_tt__CapabilitiesExtension2(struct soap*, tt__CapabilitiesExtension2 *, const char*, const char*);

#ifndef soap_read_tt__CapabilitiesExtension2
#define soap_read_tt__CapabilitiesExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__CapabilitiesExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__CapabilitiesExtension2 * SOAP_FMAC2 soap_instantiate_tt__CapabilitiesExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__CapabilitiesExtension2 * soap_new_tt__CapabilitiesExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__CapabilitiesExtension2(soap, n, NULL, NULL, NULL); }

inline tt__CapabilitiesExtension2 * soap_new_req_tt__CapabilitiesExtension2(struct soap *soap) { tt__CapabilitiesExtension2 *_p = soap_instantiate_tt__CapabilitiesExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__CapabilitiesExtension2 * soap_new_set_tt__CapabilitiesExtension2(struct soap *soap) { tt__CapabilitiesExtension2 *_p = soap_instantiate_tt__CapabilitiesExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__CapabilitiesExtension2(struct soap *soap, tt__CapabilitiesExtension2 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__CapabilitiesExtension2(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__CapabilitiesExtension
#define SOAP_TYPE_tt__CapabilitiesExtension (372)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__CapabilitiesExtension(struct soap*, const char*, int, const tt__CapabilitiesExtension *, const char*);
SOAP_FMAC3 tt__CapabilitiesExtension * SOAP_FMAC4 soap_in_tt__CapabilitiesExtension(struct soap*, const char*, tt__CapabilitiesExtension *, const char*);

#ifndef soap_write_tt__CapabilitiesExtension
#define soap_write_tt__CapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:CapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CapabilitiesExtension * SOAP_FMAC4 soap_get_tt__CapabilitiesExtension(struct soap*, tt__CapabilitiesExtension *, const char*, const char*);

#ifndef soap_read_tt__CapabilitiesExtension
#define soap_read_tt__CapabilitiesExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__CapabilitiesExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__CapabilitiesExtension * SOAP_FMAC2 soap_instantiate_tt__CapabilitiesExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__CapabilitiesExtension * soap_new_tt__CapabilitiesExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__CapabilitiesExtension(soap, n, NULL, NULL, NULL); }

inline tt__CapabilitiesExtension * soap_new_req_tt__CapabilitiesExtension(struct soap *soap) { tt__CapabilitiesExtension *_p = soap_instantiate_tt__CapabilitiesExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__CapabilitiesExtension * soap_new_set_tt__CapabilitiesExtension(struct soap *soap, tt__DeviceIOCapabilities *DeviceIO, tt__DisplayCapabilities *Display, tt__RecordingCapabilities *Recording, tt__SearchCapabilities *Search, tt__ReplayCapabilities *Replay, tt__ReceiverCapabilities *Receiver, tt__AnalyticsDeviceCapabilities *AnalyticsDevice, tt__CapabilitiesExtension2 *Extensions) { tt__CapabilitiesExtension *_p = soap_instantiate_tt__CapabilitiesExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__CapabilitiesExtension::DeviceIO = DeviceIO; _p->tt__CapabilitiesExtension::Display = Display; _p->tt__CapabilitiesExtension::Recording = Recording; _p->tt__CapabilitiesExtension::Search = Search; _p->tt__CapabilitiesExtension::Replay = Replay; _p->tt__CapabilitiesExtension::Receiver = Receiver; _p->tt__CapabilitiesExtension::AnalyticsDevice = AnalyticsDevice; _p->tt__CapabilitiesExtension::Extensions = Extensions; } return _p; }

inline void soap_delete_tt__CapabilitiesExtension(struct soap *soap, tt__CapabilitiesExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__CapabilitiesExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Capabilities
#define SOAP_TYPE_tt__Capabilities (371)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Capabilities(struct soap*, const char*, int, const tt__Capabilities *, const char*);
SOAP_FMAC3 tt__Capabilities * SOAP_FMAC4 soap_in_tt__Capabilities(struct soap*, const char*, tt__Capabilities *, const char*);

#ifndef soap_write_tt__Capabilities
#define soap_write_tt__Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Capabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Capabilities * SOAP_FMAC4 soap_get_tt__Capabilities(struct soap*, tt__Capabilities *, const char*, const char*);

#ifndef soap_read_tt__Capabilities
#define soap_read_tt__Capabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Capabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Capabilities * SOAP_FMAC2 soap_instantiate_tt__Capabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__Capabilities * soap_new_tt__Capabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__Capabilities(soap, n, NULL, NULL, NULL); }

inline tt__Capabilities * soap_new_req_tt__Capabilities(struct soap *soap) { tt__Capabilities *_p = soap_instantiate_tt__Capabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__Capabilities * soap_new_set_tt__Capabilities(struct soap *soap, tt__AnalyticsCapabilities *Analytics, tt__DeviceCapabilities *Device, tt__EventCapabilities *Events, tt__ImagingCapabilities *Imaging, tt__MediaCapabilities *Media, tt__PTZCapabilities *PTZ, tt__CapabilitiesExtension *Extension) { tt__Capabilities *_p = soap_instantiate_tt__Capabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Capabilities::Analytics = Analytics; _p->tt__Capabilities::Device = Device; _p->tt__Capabilities::Events = Events; _p->tt__Capabilities::Imaging = Imaging; _p->tt__Capabilities::Media = Media; _p->tt__Capabilities::PTZ = PTZ; _p->tt__Capabilities::Extension = Extension; } return _p; }

inline void soap_delete_tt__Capabilities(struct soap *soap, tt__Capabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Capabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Dot11AvailableNetworksExtension
#define SOAP_TYPE_tt__Dot11AvailableNetworksExtension (370)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11AvailableNetworksExtension(struct soap*, const char*, int, const tt__Dot11AvailableNetworksExtension *, const char*);
SOAP_FMAC3 tt__Dot11AvailableNetworksExtension * SOAP_FMAC4 soap_in_tt__Dot11AvailableNetworksExtension(struct soap*, const char*, tt__Dot11AvailableNetworksExtension *, const char*);

#ifndef soap_write_tt__Dot11AvailableNetworksExtension
#define soap_write_tt__Dot11AvailableNetworksExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Dot11AvailableNetworksExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11AvailableNetworksExtension * SOAP_FMAC4 soap_get_tt__Dot11AvailableNetworksExtension(struct soap*, tt__Dot11AvailableNetworksExtension *, const char*, const char*);

#ifndef soap_read_tt__Dot11AvailableNetworksExtension
#define soap_read_tt__Dot11AvailableNetworksExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Dot11AvailableNetworksExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Dot11AvailableNetworksExtension * SOAP_FMAC2 soap_instantiate_tt__Dot11AvailableNetworksExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__Dot11AvailableNetworksExtension * soap_new_tt__Dot11AvailableNetworksExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__Dot11AvailableNetworksExtension(soap, n, NULL, NULL, NULL); }

inline tt__Dot11AvailableNetworksExtension * soap_new_req_tt__Dot11AvailableNetworksExtension(struct soap *soap) { tt__Dot11AvailableNetworksExtension *_p = soap_instantiate_tt__Dot11AvailableNetworksExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__Dot11AvailableNetworksExtension * soap_new_set_tt__Dot11AvailableNetworksExtension(struct soap *soap) { tt__Dot11AvailableNetworksExtension *_p = soap_instantiate_tt__Dot11AvailableNetworksExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__Dot11AvailableNetworksExtension(struct soap *soap, tt__Dot11AvailableNetworksExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Dot11AvailableNetworksExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Dot11AvailableNetworks
#define SOAP_TYPE_tt__Dot11AvailableNetworks (369)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11AvailableNetworks(struct soap*, const char*, int, const tt__Dot11AvailableNetworks *, const char*);
SOAP_FMAC3 tt__Dot11AvailableNetworks * SOAP_FMAC4 soap_in_tt__Dot11AvailableNetworks(struct soap*, const char*, tt__Dot11AvailableNetworks *, const char*);

#ifndef soap_write_tt__Dot11AvailableNetworks
#define soap_write_tt__Dot11AvailableNetworks(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Dot11AvailableNetworks", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11AvailableNetworks * SOAP_FMAC4 soap_get_tt__Dot11AvailableNetworks(struct soap*, tt__Dot11AvailableNetworks *, const char*, const char*);

#ifndef soap_read_tt__Dot11AvailableNetworks
#define soap_read_tt__Dot11AvailableNetworks(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Dot11AvailableNetworks(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Dot11AvailableNetworks * SOAP_FMAC2 soap_instantiate_tt__Dot11AvailableNetworks(struct soap*, int, const char*, const char*, size_t*);

inline tt__Dot11AvailableNetworks * soap_new_tt__Dot11AvailableNetworks(struct soap *soap, int n = -1) { return soap_instantiate_tt__Dot11AvailableNetworks(soap, n, NULL, NULL, NULL); }

inline tt__Dot11AvailableNetworks * soap_new_req_tt__Dot11AvailableNetworks(struct soap *soap, xsd__hexBinary& SSID) { tt__Dot11AvailableNetworks *_p = soap_instantiate_tt__Dot11AvailableNetworks(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Dot11AvailableNetworks::SSID = SSID; } return _p; }

inline tt__Dot11AvailableNetworks * soap_new_set_tt__Dot11AvailableNetworks(struct soap *soap, xsd__hexBinary& SSID, std::string *BSSID, std::vector<enum tt__Dot11AuthAndMangementSuite >& AuthAndMangementSuite, std::vector<enum tt__Dot11Cipher >& PairCipher, std::vector<enum tt__Dot11Cipher >& GroupCipher, enum tt__Dot11SignalStrength *SignalStrength, tt__Dot11AvailableNetworksExtension *Extension) { tt__Dot11AvailableNetworks *_p = soap_instantiate_tt__Dot11AvailableNetworks(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Dot11AvailableNetworks::SSID = SSID; _p->tt__Dot11AvailableNetworks::BSSID = BSSID; _p->tt__Dot11AvailableNetworks::AuthAndMangementSuite = AuthAndMangementSuite; _p->tt__Dot11AvailableNetworks::PairCipher = PairCipher; _p->tt__Dot11AvailableNetworks::GroupCipher = GroupCipher; _p->tt__Dot11AvailableNetworks::SignalStrength = SignalStrength; _p->tt__Dot11AvailableNetworks::Extension = Extension; } return _p; }

inline void soap_delete_tt__Dot11AvailableNetworks(struct soap *soap, tt__Dot11AvailableNetworks *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Dot11AvailableNetworks(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Dot11Status
#define SOAP_TYPE_tt__Dot11Status (368)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11Status(struct soap*, const char*, int, const tt__Dot11Status *, const char*);
SOAP_FMAC3 tt__Dot11Status * SOAP_FMAC4 soap_in_tt__Dot11Status(struct soap*, const char*, tt__Dot11Status *, const char*);

#ifndef soap_write_tt__Dot11Status
#define soap_write_tt__Dot11Status(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Dot11Status", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11Status * SOAP_FMAC4 soap_get_tt__Dot11Status(struct soap*, tt__Dot11Status *, const char*, const char*);

#ifndef soap_read_tt__Dot11Status
#define soap_read_tt__Dot11Status(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Dot11Status(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Dot11Status * SOAP_FMAC2 soap_instantiate_tt__Dot11Status(struct soap*, int, const char*, const char*, size_t*);

inline tt__Dot11Status * soap_new_tt__Dot11Status(struct soap *soap, int n = -1) { return soap_instantiate_tt__Dot11Status(soap, n, NULL, NULL, NULL); }

inline tt__Dot11Status * soap_new_req_tt__Dot11Status(struct soap *soap, xsd__hexBinary& SSID, std::string& ActiveConfigAlias) { tt__Dot11Status *_p = soap_instantiate_tt__Dot11Status(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Dot11Status::SSID = SSID; _p->tt__Dot11Status::ActiveConfigAlias = ActiveConfigAlias; } return _p; }

inline tt__Dot11Status * soap_new_set_tt__Dot11Status(struct soap *soap, xsd__hexBinary& SSID, std::string *BSSID, enum tt__Dot11Cipher *PairCipher, enum tt__Dot11Cipher *GroupCipher, enum tt__Dot11SignalStrength *SignalStrength, std::string& ActiveConfigAlias) { tt__Dot11Status *_p = soap_instantiate_tt__Dot11Status(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Dot11Status::SSID = SSID; _p->tt__Dot11Status::BSSID = BSSID; _p->tt__Dot11Status::PairCipher = PairCipher; _p->tt__Dot11Status::GroupCipher = GroupCipher; _p->tt__Dot11Status::SignalStrength = SignalStrength; _p->tt__Dot11Status::ActiveConfigAlias = ActiveConfigAlias; } return _p; }

inline void soap_delete_tt__Dot11Status(struct soap *soap, tt__Dot11Status *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Dot11Status(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Dot11Capabilities
#define SOAP_TYPE_tt__Dot11Capabilities (367)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11Capabilities(struct soap*, const char*, int, const tt__Dot11Capabilities *, const char*);
SOAP_FMAC3 tt__Dot11Capabilities * SOAP_FMAC4 soap_in_tt__Dot11Capabilities(struct soap*, const char*, tt__Dot11Capabilities *, const char*);

#ifndef soap_write_tt__Dot11Capabilities
#define soap_write_tt__Dot11Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Dot11Capabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11Capabilities * SOAP_FMAC4 soap_get_tt__Dot11Capabilities(struct soap*, tt__Dot11Capabilities *, const char*, const char*);

#ifndef soap_read_tt__Dot11Capabilities
#define soap_read_tt__Dot11Capabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Dot11Capabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Dot11Capabilities * SOAP_FMAC2 soap_instantiate_tt__Dot11Capabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__Dot11Capabilities * soap_new_tt__Dot11Capabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__Dot11Capabilities(soap, n, NULL, NULL, NULL); }

inline tt__Dot11Capabilities * soap_new_req_tt__Dot11Capabilities(struct soap *soap, bool TKIP, bool ScanAvailableNetworks, bool MultipleConfiguration, bool AdHocStationMode, bool WEP) { tt__Dot11Capabilities *_p = soap_instantiate_tt__Dot11Capabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Dot11Capabilities::TKIP = TKIP; _p->tt__Dot11Capabilities::ScanAvailableNetworks = ScanAvailableNetworks; _p->tt__Dot11Capabilities::MultipleConfiguration = MultipleConfiguration; _p->tt__Dot11Capabilities::AdHocStationMode = AdHocStationMode; _p->tt__Dot11Capabilities::WEP = WEP; } return _p; }

inline tt__Dot11Capabilities * soap_new_set_tt__Dot11Capabilities(struct soap *soap, bool TKIP, bool ScanAvailableNetworks, bool MultipleConfiguration, bool AdHocStationMode, bool WEP) { tt__Dot11Capabilities *_p = soap_instantiate_tt__Dot11Capabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Dot11Capabilities::TKIP = TKIP; _p->tt__Dot11Capabilities::ScanAvailableNetworks = ScanAvailableNetworks; _p->tt__Dot11Capabilities::MultipleConfiguration = MultipleConfiguration; _p->tt__Dot11Capabilities::AdHocStationMode = AdHocStationMode; _p->tt__Dot11Capabilities::WEP = WEP; } return _p; }

inline void soap_delete_tt__Dot11Capabilities(struct soap *soap, tt__Dot11Capabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Dot11Capabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__NetworkInterfaceSetConfigurationExtension2
#define SOAP_TYPE_tt__NetworkInterfaceSetConfigurationExtension2 (366)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkInterfaceSetConfigurationExtension2(struct soap*, const char*, int, const tt__NetworkInterfaceSetConfigurationExtension2 *, const char*);
SOAP_FMAC3 tt__NetworkInterfaceSetConfigurationExtension2 * SOAP_FMAC4 soap_in_tt__NetworkInterfaceSetConfigurationExtension2(struct soap*, const char*, tt__NetworkInterfaceSetConfigurationExtension2 *, const char*);

#ifndef soap_write_tt__NetworkInterfaceSetConfigurationExtension2
#define soap_write_tt__NetworkInterfaceSetConfigurationExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:NetworkInterfaceSetConfigurationExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceSetConfigurationExtension2 * SOAP_FMAC4 soap_get_tt__NetworkInterfaceSetConfigurationExtension2(struct soap*, tt__NetworkInterfaceSetConfigurationExtension2 *, const char*, const char*);

#ifndef soap_read_tt__NetworkInterfaceSetConfigurationExtension2
#define soap_read_tt__NetworkInterfaceSetConfigurationExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__NetworkInterfaceSetConfigurationExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__NetworkInterfaceSetConfigurationExtension2 * SOAP_FMAC2 soap_instantiate_tt__NetworkInterfaceSetConfigurationExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkInterfaceSetConfigurationExtension2 * soap_new_tt__NetworkInterfaceSetConfigurationExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkInterfaceSetConfigurationExtension2(soap, n, NULL, NULL, NULL); }

inline tt__NetworkInterfaceSetConfigurationExtension2 * soap_new_req_tt__NetworkInterfaceSetConfigurationExtension2(struct soap *soap) { tt__NetworkInterfaceSetConfigurationExtension2 *_p = soap_instantiate_tt__NetworkInterfaceSetConfigurationExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__NetworkInterfaceSetConfigurationExtension2 * soap_new_set_tt__NetworkInterfaceSetConfigurationExtension2(struct soap *soap) { tt__NetworkInterfaceSetConfigurationExtension2 *_p = soap_instantiate_tt__NetworkInterfaceSetConfigurationExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__NetworkInterfaceSetConfigurationExtension2(struct soap *soap, tt__NetworkInterfaceSetConfigurationExtension2 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__NetworkInterfaceSetConfigurationExtension2(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Dot11PSKSetExtension
#define SOAP_TYPE_tt__Dot11PSKSetExtension (365)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11PSKSetExtension(struct soap*, const char*, int, const tt__Dot11PSKSetExtension *, const char*);
SOAP_FMAC3 tt__Dot11PSKSetExtension * SOAP_FMAC4 soap_in_tt__Dot11PSKSetExtension(struct soap*, const char*, tt__Dot11PSKSetExtension *, const char*);

#ifndef soap_write_tt__Dot11PSKSetExtension
#define soap_write_tt__Dot11PSKSetExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Dot11PSKSetExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11PSKSetExtension * SOAP_FMAC4 soap_get_tt__Dot11PSKSetExtension(struct soap*, tt__Dot11PSKSetExtension *, const char*, const char*);

#ifndef soap_read_tt__Dot11PSKSetExtension
#define soap_read_tt__Dot11PSKSetExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Dot11PSKSetExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Dot11PSKSetExtension * SOAP_FMAC2 soap_instantiate_tt__Dot11PSKSetExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__Dot11PSKSetExtension * soap_new_tt__Dot11PSKSetExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__Dot11PSKSetExtension(soap, n, NULL, NULL, NULL); }

inline tt__Dot11PSKSetExtension * soap_new_req_tt__Dot11PSKSetExtension(struct soap *soap) { tt__Dot11PSKSetExtension *_p = soap_instantiate_tt__Dot11PSKSetExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__Dot11PSKSetExtension * soap_new_set_tt__Dot11PSKSetExtension(struct soap *soap) { tt__Dot11PSKSetExtension *_p = soap_instantiate_tt__Dot11PSKSetExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__Dot11PSKSetExtension(struct soap *soap, tt__Dot11PSKSetExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Dot11PSKSetExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Dot11PSKSet
#define SOAP_TYPE_tt__Dot11PSKSet (364)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11PSKSet(struct soap*, const char*, int, const tt__Dot11PSKSet *, const char*);
SOAP_FMAC3 tt__Dot11PSKSet * SOAP_FMAC4 soap_in_tt__Dot11PSKSet(struct soap*, const char*, tt__Dot11PSKSet *, const char*);

#ifndef soap_write_tt__Dot11PSKSet
#define soap_write_tt__Dot11PSKSet(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Dot11PSKSet", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11PSKSet * SOAP_FMAC4 soap_get_tt__Dot11PSKSet(struct soap*, tt__Dot11PSKSet *, const char*, const char*);

#ifndef soap_read_tt__Dot11PSKSet
#define soap_read_tt__Dot11PSKSet(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Dot11PSKSet(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Dot11PSKSet * SOAP_FMAC2 soap_instantiate_tt__Dot11PSKSet(struct soap*, int, const char*, const char*, size_t*);

inline tt__Dot11PSKSet * soap_new_tt__Dot11PSKSet(struct soap *soap, int n = -1) { return soap_instantiate_tt__Dot11PSKSet(soap, n, NULL, NULL, NULL); }

inline tt__Dot11PSKSet * soap_new_req_tt__Dot11PSKSet(struct soap *soap) { tt__Dot11PSKSet *_p = soap_instantiate_tt__Dot11PSKSet(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__Dot11PSKSet * soap_new_set_tt__Dot11PSKSet(struct soap *soap, xsd__hexBinary *Key, std::string *Passphrase, tt__Dot11PSKSetExtension *Extension) { tt__Dot11PSKSet *_p = soap_instantiate_tt__Dot11PSKSet(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Dot11PSKSet::Key = Key; _p->tt__Dot11PSKSet::Passphrase = Passphrase; _p->tt__Dot11PSKSet::Extension = Extension; } return _p; }

inline void soap_delete_tt__Dot11PSKSet(struct soap *soap, tt__Dot11PSKSet *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Dot11PSKSet(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Dot11SecurityConfigurationExtension
#define SOAP_TYPE_tt__Dot11SecurityConfigurationExtension (363)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11SecurityConfigurationExtension(struct soap*, const char*, int, const tt__Dot11SecurityConfigurationExtension *, const char*);
SOAP_FMAC3 tt__Dot11SecurityConfigurationExtension * SOAP_FMAC4 soap_in_tt__Dot11SecurityConfigurationExtension(struct soap*, const char*, tt__Dot11SecurityConfigurationExtension *, const char*);

#ifndef soap_write_tt__Dot11SecurityConfigurationExtension
#define soap_write_tt__Dot11SecurityConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Dot11SecurityConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11SecurityConfigurationExtension * SOAP_FMAC4 soap_get_tt__Dot11SecurityConfigurationExtension(struct soap*, tt__Dot11SecurityConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__Dot11SecurityConfigurationExtension
#define soap_read_tt__Dot11SecurityConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Dot11SecurityConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Dot11SecurityConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__Dot11SecurityConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__Dot11SecurityConfigurationExtension * soap_new_tt__Dot11SecurityConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__Dot11SecurityConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__Dot11SecurityConfigurationExtension * soap_new_req_tt__Dot11SecurityConfigurationExtension(struct soap *soap) { tt__Dot11SecurityConfigurationExtension *_p = soap_instantiate_tt__Dot11SecurityConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__Dot11SecurityConfigurationExtension * soap_new_set_tt__Dot11SecurityConfigurationExtension(struct soap *soap) { tt__Dot11SecurityConfigurationExtension *_p = soap_instantiate_tt__Dot11SecurityConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__Dot11SecurityConfigurationExtension(struct soap *soap, tt__Dot11SecurityConfigurationExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Dot11SecurityConfigurationExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Dot11SecurityConfiguration
#define SOAP_TYPE_tt__Dot11SecurityConfiguration (362)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11SecurityConfiguration(struct soap*, const char*, int, const tt__Dot11SecurityConfiguration *, const char*);
SOAP_FMAC3 tt__Dot11SecurityConfiguration * SOAP_FMAC4 soap_in_tt__Dot11SecurityConfiguration(struct soap*, const char*, tt__Dot11SecurityConfiguration *, const char*);

#ifndef soap_write_tt__Dot11SecurityConfiguration
#define soap_write_tt__Dot11SecurityConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Dot11SecurityConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11SecurityConfiguration * SOAP_FMAC4 soap_get_tt__Dot11SecurityConfiguration(struct soap*, tt__Dot11SecurityConfiguration *, const char*, const char*);

#ifndef soap_read_tt__Dot11SecurityConfiguration
#define soap_read_tt__Dot11SecurityConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Dot11SecurityConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Dot11SecurityConfiguration * SOAP_FMAC2 soap_instantiate_tt__Dot11SecurityConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__Dot11SecurityConfiguration * soap_new_tt__Dot11SecurityConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__Dot11SecurityConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__Dot11SecurityConfiguration * soap_new_req_tt__Dot11SecurityConfiguration(struct soap *soap, enum tt__Dot11SecurityMode Mode) { tt__Dot11SecurityConfiguration *_p = soap_instantiate_tt__Dot11SecurityConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Dot11SecurityConfiguration::Mode = Mode; } return _p; }

inline tt__Dot11SecurityConfiguration * soap_new_set_tt__Dot11SecurityConfiguration(struct soap *soap, enum tt__Dot11SecurityMode Mode, enum tt__Dot11Cipher *Algorithm, tt__Dot11PSKSet *PSK, std::string *Dot1X, tt__Dot11SecurityConfigurationExtension *Extension) { tt__Dot11SecurityConfiguration *_p = soap_instantiate_tt__Dot11SecurityConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Dot11SecurityConfiguration::Mode = Mode; _p->tt__Dot11SecurityConfiguration::Algorithm = Algorithm; _p->tt__Dot11SecurityConfiguration::PSK = PSK; _p->tt__Dot11SecurityConfiguration::Dot1X = Dot1X; _p->tt__Dot11SecurityConfiguration::Extension = Extension; } return _p; }

inline void soap_delete_tt__Dot11SecurityConfiguration(struct soap *soap, tt__Dot11SecurityConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Dot11SecurityConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Dot11Configuration
#define SOAP_TYPE_tt__Dot11Configuration (361)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11Configuration(struct soap*, const char*, int, const tt__Dot11Configuration *, const char*);
SOAP_FMAC3 tt__Dot11Configuration * SOAP_FMAC4 soap_in_tt__Dot11Configuration(struct soap*, const char*, tt__Dot11Configuration *, const char*);

#ifndef soap_write_tt__Dot11Configuration
#define soap_write_tt__Dot11Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Dot11Configuration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11Configuration * SOAP_FMAC4 soap_get_tt__Dot11Configuration(struct soap*, tt__Dot11Configuration *, const char*, const char*);

#ifndef soap_read_tt__Dot11Configuration
#define soap_read_tt__Dot11Configuration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Dot11Configuration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Dot11Configuration * SOAP_FMAC2 soap_instantiate_tt__Dot11Configuration(struct soap*, int, const char*, const char*, size_t*);

inline tt__Dot11Configuration * soap_new_tt__Dot11Configuration(struct soap *soap, int n = -1) { return soap_instantiate_tt__Dot11Configuration(soap, n, NULL, NULL, NULL); }

inline tt__Dot11Configuration * soap_new_req_tt__Dot11Configuration(struct soap *soap, xsd__hexBinary& SSID, enum tt__Dot11StationMode Mode, std::string& Alias, std::string& Priority, tt__Dot11SecurityConfiguration *Security) { tt__Dot11Configuration *_p = soap_instantiate_tt__Dot11Configuration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Dot11Configuration::SSID = SSID; _p->tt__Dot11Configuration::Mode = Mode; _p->tt__Dot11Configuration::Alias = Alias; _p->tt__Dot11Configuration::Priority = Priority; _p->tt__Dot11Configuration::Security = Security; } return _p; }

inline tt__Dot11Configuration * soap_new_set_tt__Dot11Configuration(struct soap *soap, xsd__hexBinary& SSID, enum tt__Dot11StationMode Mode, std::string& Alias, std::string& Priority, tt__Dot11SecurityConfiguration *Security) { tt__Dot11Configuration *_p = soap_instantiate_tt__Dot11Configuration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Dot11Configuration::SSID = SSID; _p->tt__Dot11Configuration::Mode = Mode; _p->tt__Dot11Configuration::Alias = Alias; _p->tt__Dot11Configuration::Priority = Priority; _p->tt__Dot11Configuration::Security = Security; } return _p; }

inline void soap_delete_tt__Dot11Configuration(struct soap *soap, tt__Dot11Configuration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Dot11Configuration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__IPAddressFilterExtension
#define SOAP_TYPE_tt__IPAddressFilterExtension (360)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPAddressFilterExtension(struct soap*, const char*, int, const tt__IPAddressFilterExtension *, const char*);
SOAP_FMAC3 tt__IPAddressFilterExtension * SOAP_FMAC4 soap_in_tt__IPAddressFilterExtension(struct soap*, const char*, tt__IPAddressFilterExtension *, const char*);

#ifndef soap_write_tt__IPAddressFilterExtension
#define soap_write_tt__IPAddressFilterExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:IPAddressFilterExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPAddressFilterExtension * SOAP_FMAC4 soap_get_tt__IPAddressFilterExtension(struct soap*, tt__IPAddressFilterExtension *, const char*, const char*);

#ifndef soap_read_tt__IPAddressFilterExtension
#define soap_read_tt__IPAddressFilterExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IPAddressFilterExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__IPAddressFilterExtension * SOAP_FMAC2 soap_instantiate_tt__IPAddressFilterExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__IPAddressFilterExtension * soap_new_tt__IPAddressFilterExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__IPAddressFilterExtension(soap, n, NULL, NULL, NULL); }

inline tt__IPAddressFilterExtension * soap_new_req_tt__IPAddressFilterExtension(struct soap *soap) { tt__IPAddressFilterExtension *_p = soap_instantiate_tt__IPAddressFilterExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__IPAddressFilterExtension * soap_new_set_tt__IPAddressFilterExtension(struct soap *soap) { tt__IPAddressFilterExtension *_p = soap_instantiate_tt__IPAddressFilterExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__IPAddressFilterExtension(struct soap *soap, tt__IPAddressFilterExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__IPAddressFilterExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__IPAddressFilter
#define SOAP_TYPE_tt__IPAddressFilter (359)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPAddressFilter(struct soap*, const char*, int, const tt__IPAddressFilter *, const char*);
SOAP_FMAC3 tt__IPAddressFilter * SOAP_FMAC4 soap_in_tt__IPAddressFilter(struct soap*, const char*, tt__IPAddressFilter *, const char*);

#ifndef soap_write_tt__IPAddressFilter
#define soap_write_tt__IPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:IPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPAddressFilter * SOAP_FMAC4 soap_get_tt__IPAddressFilter(struct soap*, tt__IPAddressFilter *, const char*, const char*);

#ifndef soap_read_tt__IPAddressFilter
#define soap_read_tt__IPAddressFilter(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IPAddressFilter(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__IPAddressFilter * SOAP_FMAC2 soap_instantiate_tt__IPAddressFilter(struct soap*, int, const char*, const char*, size_t*);

inline tt__IPAddressFilter * soap_new_tt__IPAddressFilter(struct soap *soap, int n = -1) { return soap_instantiate_tt__IPAddressFilter(soap, n, NULL, NULL, NULL); }

inline tt__IPAddressFilter * soap_new_req_tt__IPAddressFilter(struct soap *soap, enum tt__IPAddressFilterType Type) { tt__IPAddressFilter *_p = soap_instantiate_tt__IPAddressFilter(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IPAddressFilter::Type = Type; } return _p; }

inline tt__IPAddressFilter * soap_new_set_tt__IPAddressFilter(struct soap *soap, enum tt__IPAddressFilterType Type, std::vector<tt__PrefixedIPv4Address * >& IPv4Address, std::vector<tt__PrefixedIPv6Address * >& IPv6Address, tt__IPAddressFilterExtension *Extension) { tt__IPAddressFilter *_p = soap_instantiate_tt__IPAddressFilter(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IPAddressFilter::Type = Type; _p->tt__IPAddressFilter::IPv4Address = IPv4Address; _p->tt__IPAddressFilter::IPv6Address = IPv6Address; _p->tt__IPAddressFilter::Extension = Extension; } return _p; }

inline void soap_delete_tt__IPAddressFilter(struct soap *soap, tt__IPAddressFilter *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__IPAddressFilter(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__NetworkZeroConfigurationExtension2
#define SOAP_TYPE_tt__NetworkZeroConfigurationExtension2 (358)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkZeroConfigurationExtension2(struct soap*, const char*, int, const tt__NetworkZeroConfigurationExtension2 *, const char*);
SOAP_FMAC3 tt__NetworkZeroConfigurationExtension2 * SOAP_FMAC4 soap_in_tt__NetworkZeroConfigurationExtension2(struct soap*, const char*, tt__NetworkZeroConfigurationExtension2 *, const char*);

#ifndef soap_write_tt__NetworkZeroConfigurationExtension2
#define soap_write_tt__NetworkZeroConfigurationExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:NetworkZeroConfigurationExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkZeroConfigurationExtension2 * SOAP_FMAC4 soap_get_tt__NetworkZeroConfigurationExtension2(struct soap*, tt__NetworkZeroConfigurationExtension2 *, const char*, const char*);

#ifndef soap_read_tt__NetworkZeroConfigurationExtension2
#define soap_read_tt__NetworkZeroConfigurationExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__NetworkZeroConfigurationExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__NetworkZeroConfigurationExtension2 * SOAP_FMAC2 soap_instantiate_tt__NetworkZeroConfigurationExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkZeroConfigurationExtension2 * soap_new_tt__NetworkZeroConfigurationExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkZeroConfigurationExtension2(soap, n, NULL, NULL, NULL); }

inline tt__NetworkZeroConfigurationExtension2 * soap_new_req_tt__NetworkZeroConfigurationExtension2(struct soap *soap) { tt__NetworkZeroConfigurationExtension2 *_p = soap_instantiate_tt__NetworkZeroConfigurationExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__NetworkZeroConfigurationExtension2 * soap_new_set_tt__NetworkZeroConfigurationExtension2(struct soap *soap) { tt__NetworkZeroConfigurationExtension2 *_p = soap_instantiate_tt__NetworkZeroConfigurationExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__NetworkZeroConfigurationExtension2(struct soap *soap, tt__NetworkZeroConfigurationExtension2 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__NetworkZeroConfigurationExtension2(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__NetworkZeroConfigurationExtension
#define SOAP_TYPE_tt__NetworkZeroConfigurationExtension (357)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkZeroConfigurationExtension(struct soap*, const char*, int, const tt__NetworkZeroConfigurationExtension *, const char*);
SOAP_FMAC3 tt__NetworkZeroConfigurationExtension * SOAP_FMAC4 soap_in_tt__NetworkZeroConfigurationExtension(struct soap*, const char*, tt__NetworkZeroConfigurationExtension *, const char*);

#ifndef soap_write_tt__NetworkZeroConfigurationExtension
#define soap_write_tt__NetworkZeroConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:NetworkZeroConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkZeroConfigurationExtension * SOAP_FMAC4 soap_get_tt__NetworkZeroConfigurationExtension(struct soap*, tt__NetworkZeroConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__NetworkZeroConfigurationExtension
#define soap_read_tt__NetworkZeroConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__NetworkZeroConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__NetworkZeroConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__NetworkZeroConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkZeroConfigurationExtension * soap_new_tt__NetworkZeroConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkZeroConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__NetworkZeroConfigurationExtension * soap_new_req_tt__NetworkZeroConfigurationExtension(struct soap *soap) { tt__NetworkZeroConfigurationExtension *_p = soap_instantiate_tt__NetworkZeroConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__NetworkZeroConfigurationExtension * soap_new_set_tt__NetworkZeroConfigurationExtension(struct soap *soap, std::vector<tt__NetworkZeroConfiguration * >& Additional, tt__NetworkZeroConfigurationExtension2 *Extension) { tt__NetworkZeroConfigurationExtension *_p = soap_instantiate_tt__NetworkZeroConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__NetworkZeroConfigurationExtension::Additional = Additional; _p->tt__NetworkZeroConfigurationExtension::Extension = Extension; } return _p; }

inline void soap_delete_tt__NetworkZeroConfigurationExtension(struct soap *soap, tt__NetworkZeroConfigurationExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__NetworkZeroConfigurationExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__NetworkZeroConfiguration
#define SOAP_TYPE_tt__NetworkZeroConfiguration (356)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkZeroConfiguration(struct soap*, const char*, int, const tt__NetworkZeroConfiguration *, const char*);
SOAP_FMAC3 tt__NetworkZeroConfiguration * SOAP_FMAC4 soap_in_tt__NetworkZeroConfiguration(struct soap*, const char*, tt__NetworkZeroConfiguration *, const char*);

#ifndef soap_write_tt__NetworkZeroConfiguration
#define soap_write_tt__NetworkZeroConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:NetworkZeroConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkZeroConfiguration * SOAP_FMAC4 soap_get_tt__NetworkZeroConfiguration(struct soap*, tt__NetworkZeroConfiguration *, const char*, const char*);

#ifndef soap_read_tt__NetworkZeroConfiguration
#define soap_read_tt__NetworkZeroConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__NetworkZeroConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__NetworkZeroConfiguration * SOAP_FMAC2 soap_instantiate_tt__NetworkZeroConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkZeroConfiguration * soap_new_tt__NetworkZeroConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkZeroConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__NetworkZeroConfiguration * soap_new_req_tt__NetworkZeroConfiguration(struct soap *soap, std::string& InterfaceToken, bool Enabled) { tt__NetworkZeroConfiguration *_p = soap_instantiate_tt__NetworkZeroConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__NetworkZeroConfiguration::InterfaceToken = InterfaceToken; _p->tt__NetworkZeroConfiguration::Enabled = Enabled; } return _p; }

inline tt__NetworkZeroConfiguration * soap_new_set_tt__NetworkZeroConfiguration(struct soap *soap, std::string& InterfaceToken, bool Enabled, std::vector<std::string >& Addresses, tt__NetworkZeroConfigurationExtension *Extension) { tt__NetworkZeroConfiguration *_p = soap_instantiate_tt__NetworkZeroConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__NetworkZeroConfiguration::InterfaceToken = InterfaceToken; _p->tt__NetworkZeroConfiguration::Enabled = Enabled; _p->tt__NetworkZeroConfiguration::Addresses = Addresses; _p->tt__NetworkZeroConfiguration::Extension = Extension; } return _p; }

inline void soap_delete_tt__NetworkZeroConfiguration(struct soap *soap, tt__NetworkZeroConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__NetworkZeroConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__NetworkGateway
#define SOAP_TYPE_tt__NetworkGateway (355)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkGateway(struct soap*, const char*, int, const tt__NetworkGateway *, const char*);
SOAP_FMAC3 tt__NetworkGateway * SOAP_FMAC4 soap_in_tt__NetworkGateway(struct soap*, const char*, tt__NetworkGateway *, const char*);

#ifndef soap_write_tt__NetworkGateway
#define soap_write_tt__NetworkGateway(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:NetworkGateway", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkGateway * SOAP_FMAC4 soap_get_tt__NetworkGateway(struct soap*, tt__NetworkGateway *, const char*, const char*);

#ifndef soap_read_tt__NetworkGateway
#define soap_read_tt__NetworkGateway(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__NetworkGateway(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__NetworkGateway * SOAP_FMAC2 soap_instantiate_tt__NetworkGateway(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkGateway * soap_new_tt__NetworkGateway(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkGateway(soap, n, NULL, NULL, NULL); }

inline tt__NetworkGateway * soap_new_req_tt__NetworkGateway(struct soap *soap) { tt__NetworkGateway *_p = soap_instantiate_tt__NetworkGateway(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__NetworkGateway * soap_new_set_tt__NetworkGateway(struct soap *soap, std::vector<std::string >& IPv4Address, std::vector<std::string >& IPv6Address) { tt__NetworkGateway *_p = soap_instantiate_tt__NetworkGateway(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__NetworkGateway::IPv4Address = IPv4Address; _p->tt__NetworkGateway::IPv6Address = IPv6Address; } return _p; }

inline void soap_delete_tt__NetworkGateway(struct soap *soap, tt__NetworkGateway *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__NetworkGateway(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__IPv4NetworkInterfaceSetConfiguration
#define SOAP_TYPE_tt__IPv4NetworkInterfaceSetConfiguration (354)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPv4NetworkInterfaceSetConfiguration(struct soap*, const char*, int, const tt__IPv4NetworkInterfaceSetConfiguration *, const char*);
SOAP_FMAC3 tt__IPv4NetworkInterfaceSetConfiguration * SOAP_FMAC4 soap_in_tt__IPv4NetworkInterfaceSetConfiguration(struct soap*, const char*, tt__IPv4NetworkInterfaceSetConfiguration *, const char*);

#ifndef soap_write_tt__IPv4NetworkInterfaceSetConfiguration
#define soap_write_tt__IPv4NetworkInterfaceSetConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:IPv4NetworkInterfaceSetConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv4NetworkInterfaceSetConfiguration * SOAP_FMAC4 soap_get_tt__IPv4NetworkInterfaceSetConfiguration(struct soap*, tt__IPv4NetworkInterfaceSetConfiguration *, const char*, const char*);

#ifndef soap_read_tt__IPv4NetworkInterfaceSetConfiguration
#define soap_read_tt__IPv4NetworkInterfaceSetConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IPv4NetworkInterfaceSetConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__IPv4NetworkInterfaceSetConfiguration * SOAP_FMAC2 soap_instantiate_tt__IPv4NetworkInterfaceSetConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__IPv4NetworkInterfaceSetConfiguration * soap_new_tt__IPv4NetworkInterfaceSetConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__IPv4NetworkInterfaceSetConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__IPv4NetworkInterfaceSetConfiguration * soap_new_req_tt__IPv4NetworkInterfaceSetConfiguration(struct soap *soap) { tt__IPv4NetworkInterfaceSetConfiguration *_p = soap_instantiate_tt__IPv4NetworkInterfaceSetConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__IPv4NetworkInterfaceSetConfiguration * soap_new_set_tt__IPv4NetworkInterfaceSetConfiguration(struct soap *soap, bool *Enabled, std::vector<tt__PrefixedIPv4Address * >& Manual, bool *DHCP) { tt__IPv4NetworkInterfaceSetConfiguration *_p = soap_instantiate_tt__IPv4NetworkInterfaceSetConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IPv4NetworkInterfaceSetConfiguration::Enabled = Enabled; _p->tt__IPv4NetworkInterfaceSetConfiguration::Manual = Manual; _p->tt__IPv4NetworkInterfaceSetConfiguration::DHCP = DHCP; } return _p; }

inline void soap_delete_tt__IPv4NetworkInterfaceSetConfiguration(struct soap *soap, tt__IPv4NetworkInterfaceSetConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__IPv4NetworkInterfaceSetConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__IPv6NetworkInterfaceSetConfiguration
#define SOAP_TYPE_tt__IPv6NetworkInterfaceSetConfiguration (353)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPv6NetworkInterfaceSetConfiguration(struct soap*, const char*, int, const tt__IPv6NetworkInterfaceSetConfiguration *, const char*);
SOAP_FMAC3 tt__IPv6NetworkInterfaceSetConfiguration * SOAP_FMAC4 soap_in_tt__IPv6NetworkInterfaceSetConfiguration(struct soap*, const char*, tt__IPv6NetworkInterfaceSetConfiguration *, const char*);

#ifndef soap_write_tt__IPv6NetworkInterfaceSetConfiguration
#define soap_write_tt__IPv6NetworkInterfaceSetConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:IPv6NetworkInterfaceSetConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv6NetworkInterfaceSetConfiguration * SOAP_FMAC4 soap_get_tt__IPv6NetworkInterfaceSetConfiguration(struct soap*, tt__IPv6NetworkInterfaceSetConfiguration *, const char*, const char*);

#ifndef soap_read_tt__IPv6NetworkInterfaceSetConfiguration
#define soap_read_tt__IPv6NetworkInterfaceSetConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IPv6NetworkInterfaceSetConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__IPv6NetworkInterfaceSetConfiguration * SOAP_FMAC2 soap_instantiate_tt__IPv6NetworkInterfaceSetConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__IPv6NetworkInterfaceSetConfiguration * soap_new_tt__IPv6NetworkInterfaceSetConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__IPv6NetworkInterfaceSetConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__IPv6NetworkInterfaceSetConfiguration * soap_new_req_tt__IPv6NetworkInterfaceSetConfiguration(struct soap *soap) { tt__IPv6NetworkInterfaceSetConfiguration *_p = soap_instantiate_tt__IPv6NetworkInterfaceSetConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__IPv6NetworkInterfaceSetConfiguration * soap_new_set_tt__IPv6NetworkInterfaceSetConfiguration(struct soap *soap, bool *Enabled, bool *AcceptRouterAdvert, std::vector<tt__PrefixedIPv6Address * >& Manual, enum tt__IPv6DHCPConfiguration *DHCP) { tt__IPv6NetworkInterfaceSetConfiguration *_p = soap_instantiate_tt__IPv6NetworkInterfaceSetConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IPv6NetworkInterfaceSetConfiguration::Enabled = Enabled; _p->tt__IPv6NetworkInterfaceSetConfiguration::AcceptRouterAdvert = AcceptRouterAdvert; _p->tt__IPv6NetworkInterfaceSetConfiguration::Manual = Manual; _p->tt__IPv6NetworkInterfaceSetConfiguration::DHCP = DHCP; } return _p; }

inline void soap_delete_tt__IPv6NetworkInterfaceSetConfiguration(struct soap *soap, tt__IPv6NetworkInterfaceSetConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__IPv6NetworkInterfaceSetConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__NetworkInterfaceSetConfigurationExtension
#define SOAP_TYPE_tt__NetworkInterfaceSetConfigurationExtension (352)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkInterfaceSetConfigurationExtension(struct soap*, const char*, int, const tt__NetworkInterfaceSetConfigurationExtension *, const char*);
SOAP_FMAC3 tt__NetworkInterfaceSetConfigurationExtension * SOAP_FMAC4 soap_in_tt__NetworkInterfaceSetConfigurationExtension(struct soap*, const char*, tt__NetworkInterfaceSetConfigurationExtension *, const char*);

#ifndef soap_write_tt__NetworkInterfaceSetConfigurationExtension
#define soap_write_tt__NetworkInterfaceSetConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:NetworkInterfaceSetConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceSetConfigurationExtension * SOAP_FMAC4 soap_get_tt__NetworkInterfaceSetConfigurationExtension(struct soap*, tt__NetworkInterfaceSetConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__NetworkInterfaceSetConfigurationExtension
#define soap_read_tt__NetworkInterfaceSetConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__NetworkInterfaceSetConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__NetworkInterfaceSetConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__NetworkInterfaceSetConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkInterfaceSetConfigurationExtension * soap_new_tt__NetworkInterfaceSetConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkInterfaceSetConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__NetworkInterfaceSetConfigurationExtension * soap_new_req_tt__NetworkInterfaceSetConfigurationExtension(struct soap *soap) { tt__NetworkInterfaceSetConfigurationExtension *_p = soap_instantiate_tt__NetworkInterfaceSetConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__NetworkInterfaceSetConfigurationExtension * soap_new_set_tt__NetworkInterfaceSetConfigurationExtension(struct soap *soap, std::vector<tt__Dot3Configuration * >& Dot3, std::vector<tt__Dot11Configuration * >& Dot11, tt__NetworkInterfaceSetConfigurationExtension2 *Extension) { tt__NetworkInterfaceSetConfigurationExtension *_p = soap_instantiate_tt__NetworkInterfaceSetConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__NetworkInterfaceSetConfigurationExtension::Dot3 = Dot3; _p->tt__NetworkInterfaceSetConfigurationExtension::Dot11 = Dot11; _p->tt__NetworkInterfaceSetConfigurationExtension::Extension = Extension; } return _p; }

inline void soap_delete_tt__NetworkInterfaceSetConfigurationExtension(struct soap *soap, tt__NetworkInterfaceSetConfigurationExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__NetworkInterfaceSetConfigurationExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__NetworkInterfaceSetConfiguration
#define SOAP_TYPE_tt__NetworkInterfaceSetConfiguration (351)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkInterfaceSetConfiguration(struct soap*, const char*, int, const tt__NetworkInterfaceSetConfiguration *, const char*);
SOAP_FMAC3 tt__NetworkInterfaceSetConfiguration * SOAP_FMAC4 soap_in_tt__NetworkInterfaceSetConfiguration(struct soap*, const char*, tt__NetworkInterfaceSetConfiguration *, const char*);

#ifndef soap_write_tt__NetworkInterfaceSetConfiguration
#define soap_write_tt__NetworkInterfaceSetConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:NetworkInterfaceSetConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceSetConfiguration * SOAP_FMAC4 soap_get_tt__NetworkInterfaceSetConfiguration(struct soap*, tt__NetworkInterfaceSetConfiguration *, const char*, const char*);

#ifndef soap_read_tt__NetworkInterfaceSetConfiguration
#define soap_read_tt__NetworkInterfaceSetConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__NetworkInterfaceSetConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__NetworkInterfaceSetConfiguration * SOAP_FMAC2 soap_instantiate_tt__NetworkInterfaceSetConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkInterfaceSetConfiguration * soap_new_tt__NetworkInterfaceSetConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkInterfaceSetConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__NetworkInterfaceSetConfiguration * soap_new_req_tt__NetworkInterfaceSetConfiguration(struct soap *soap) { tt__NetworkInterfaceSetConfiguration *_p = soap_instantiate_tt__NetworkInterfaceSetConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__NetworkInterfaceSetConfiguration * soap_new_set_tt__NetworkInterfaceSetConfiguration(struct soap *soap, bool *Enabled, tt__NetworkInterfaceConnectionSetting *Link, int *MTU, tt__IPv4NetworkInterfaceSetConfiguration *IPv4, tt__IPv6NetworkInterfaceSetConfiguration *IPv6, tt__NetworkInterfaceSetConfigurationExtension *Extension) { tt__NetworkInterfaceSetConfiguration *_p = soap_instantiate_tt__NetworkInterfaceSetConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__NetworkInterfaceSetConfiguration::Enabled = Enabled; _p->tt__NetworkInterfaceSetConfiguration::Link = Link; _p->tt__NetworkInterfaceSetConfiguration::MTU = MTU; _p->tt__NetworkInterfaceSetConfiguration::IPv4 = IPv4; _p->tt__NetworkInterfaceSetConfiguration::IPv6 = IPv6; _p->tt__NetworkInterfaceSetConfiguration::Extension = Extension; } return _p; }

inline void soap_delete_tt__NetworkInterfaceSetConfiguration(struct soap *soap, tt__NetworkInterfaceSetConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__NetworkInterfaceSetConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__DynamicDNSInformationExtension
#define SOAP_TYPE_tt__DynamicDNSInformationExtension (350)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DynamicDNSInformationExtension(struct soap*, const char*, int, const tt__DynamicDNSInformationExtension *, const char*);
SOAP_FMAC3 tt__DynamicDNSInformationExtension * SOAP_FMAC4 soap_in_tt__DynamicDNSInformationExtension(struct soap*, const char*, tt__DynamicDNSInformationExtension *, const char*);

#ifndef soap_write_tt__DynamicDNSInformationExtension
#define soap_write_tt__DynamicDNSInformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:DynamicDNSInformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DynamicDNSInformationExtension * SOAP_FMAC4 soap_get_tt__DynamicDNSInformationExtension(struct soap*, tt__DynamicDNSInformationExtension *, const char*, const char*);

#ifndef soap_read_tt__DynamicDNSInformationExtension
#define soap_read_tt__DynamicDNSInformationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__DynamicDNSInformationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__DynamicDNSInformationExtension * SOAP_FMAC2 soap_instantiate_tt__DynamicDNSInformationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__DynamicDNSInformationExtension * soap_new_tt__DynamicDNSInformationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__DynamicDNSInformationExtension(soap, n, NULL, NULL, NULL); }

inline tt__DynamicDNSInformationExtension * soap_new_req_tt__DynamicDNSInformationExtension(struct soap *soap) { tt__DynamicDNSInformationExtension *_p = soap_instantiate_tt__DynamicDNSInformationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__DynamicDNSInformationExtension * soap_new_set_tt__DynamicDNSInformationExtension(struct soap *soap) { tt__DynamicDNSInformationExtension *_p = soap_instantiate_tt__DynamicDNSInformationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__DynamicDNSInformationExtension(struct soap *soap, tt__DynamicDNSInformationExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__DynamicDNSInformationExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__DynamicDNSInformation
#define SOAP_TYPE_tt__DynamicDNSInformation (349)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DynamicDNSInformation(struct soap*, const char*, int, const tt__DynamicDNSInformation *, const char*);
SOAP_FMAC3 tt__DynamicDNSInformation * SOAP_FMAC4 soap_in_tt__DynamicDNSInformation(struct soap*, const char*, tt__DynamicDNSInformation *, const char*);

#ifndef soap_write_tt__DynamicDNSInformation
#define soap_write_tt__DynamicDNSInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:DynamicDNSInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DynamicDNSInformation * SOAP_FMAC4 soap_get_tt__DynamicDNSInformation(struct soap*, tt__DynamicDNSInformation *, const char*, const char*);

#ifndef soap_read_tt__DynamicDNSInformation
#define soap_read_tt__DynamicDNSInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__DynamicDNSInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__DynamicDNSInformation * SOAP_FMAC2 soap_instantiate_tt__DynamicDNSInformation(struct soap*, int, const char*, const char*, size_t*);

inline tt__DynamicDNSInformation * soap_new_tt__DynamicDNSInformation(struct soap *soap, int n = -1) { return soap_instantiate_tt__DynamicDNSInformation(soap, n, NULL, NULL, NULL); }

inline tt__DynamicDNSInformation * soap_new_req_tt__DynamicDNSInformation(struct soap *soap, enum tt__DynamicDNSType Type) { tt__DynamicDNSInformation *_p = soap_instantiate_tt__DynamicDNSInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__DynamicDNSInformation::Type = Type; } return _p; }

inline tt__DynamicDNSInformation * soap_new_set_tt__DynamicDNSInformation(struct soap *soap, enum tt__DynamicDNSType Type, std::string *Name, LONG64 *TTL, tt__DynamicDNSInformationExtension *Extension) { tt__DynamicDNSInformation *_p = soap_instantiate_tt__DynamicDNSInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__DynamicDNSInformation::Type = Type; _p->tt__DynamicDNSInformation::Name = Name; _p->tt__DynamicDNSInformation::TTL = TTL; _p->tt__DynamicDNSInformation::Extension = Extension; } return _p; }

inline void soap_delete_tt__DynamicDNSInformation(struct soap *soap, tt__DynamicDNSInformation *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__DynamicDNSInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__NTPInformationExtension
#define SOAP_TYPE_tt__NTPInformationExtension (348)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NTPInformationExtension(struct soap*, const char*, int, const tt__NTPInformationExtension *, const char*);
SOAP_FMAC3 tt__NTPInformationExtension * SOAP_FMAC4 soap_in_tt__NTPInformationExtension(struct soap*, const char*, tt__NTPInformationExtension *, const char*);

#ifndef soap_write_tt__NTPInformationExtension
#define soap_write_tt__NTPInformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:NTPInformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NTPInformationExtension * SOAP_FMAC4 soap_get_tt__NTPInformationExtension(struct soap*, tt__NTPInformationExtension *, const char*, const char*);

#ifndef soap_read_tt__NTPInformationExtension
#define soap_read_tt__NTPInformationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__NTPInformationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__NTPInformationExtension * SOAP_FMAC2 soap_instantiate_tt__NTPInformationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__NTPInformationExtension * soap_new_tt__NTPInformationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__NTPInformationExtension(soap, n, NULL, NULL, NULL); }

inline tt__NTPInformationExtension * soap_new_req_tt__NTPInformationExtension(struct soap *soap) { tt__NTPInformationExtension *_p = soap_instantiate_tt__NTPInformationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__NTPInformationExtension * soap_new_set_tt__NTPInformationExtension(struct soap *soap) { tt__NTPInformationExtension *_p = soap_instantiate_tt__NTPInformationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__NTPInformationExtension(struct soap *soap, tt__NTPInformationExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__NTPInformationExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__NTPInformation
#define SOAP_TYPE_tt__NTPInformation (347)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NTPInformation(struct soap*, const char*, int, const tt__NTPInformation *, const char*);
SOAP_FMAC3 tt__NTPInformation * SOAP_FMAC4 soap_in_tt__NTPInformation(struct soap*, const char*, tt__NTPInformation *, const char*);

#ifndef soap_write_tt__NTPInformation
#define soap_write_tt__NTPInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:NTPInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NTPInformation * SOAP_FMAC4 soap_get_tt__NTPInformation(struct soap*, tt__NTPInformation *, const char*, const char*);

#ifndef soap_read_tt__NTPInformation
#define soap_read_tt__NTPInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__NTPInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__NTPInformation * SOAP_FMAC2 soap_instantiate_tt__NTPInformation(struct soap*, int, const char*, const char*, size_t*);

inline tt__NTPInformation * soap_new_tt__NTPInformation(struct soap *soap, int n = -1) { return soap_instantiate_tt__NTPInformation(soap, n, NULL, NULL, NULL); }

inline tt__NTPInformation * soap_new_req_tt__NTPInformation(struct soap *soap, bool FromDHCP) { tt__NTPInformation *_p = soap_instantiate_tt__NTPInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__NTPInformation::FromDHCP = FromDHCP; } return _p; }

inline tt__NTPInformation * soap_new_set_tt__NTPInformation(struct soap *soap, bool FromDHCP, std::vector<tt__NetworkHost * >& NTPFromDHCP, std::vector<tt__NetworkHost * >& NTPManual, tt__NTPInformationExtension *Extension) { tt__NTPInformation *_p = soap_instantiate_tt__NTPInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__NTPInformation::FromDHCP = FromDHCP; _p->tt__NTPInformation::NTPFromDHCP = NTPFromDHCP; _p->tt__NTPInformation::NTPManual = NTPManual; _p->tt__NTPInformation::Extension = Extension; } return _p; }

inline void soap_delete_tt__NTPInformation(struct soap *soap, tt__NTPInformation *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__NTPInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__DNSInformationExtension
#define SOAP_TYPE_tt__DNSInformationExtension (346)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DNSInformationExtension(struct soap*, const char*, int, const tt__DNSInformationExtension *, const char*);
SOAP_FMAC3 tt__DNSInformationExtension * SOAP_FMAC4 soap_in_tt__DNSInformationExtension(struct soap*, const char*, tt__DNSInformationExtension *, const char*);

#ifndef soap_write_tt__DNSInformationExtension
#define soap_write_tt__DNSInformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:DNSInformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DNSInformationExtension * SOAP_FMAC4 soap_get_tt__DNSInformationExtension(struct soap*, tt__DNSInformationExtension *, const char*, const char*);

#ifndef soap_read_tt__DNSInformationExtension
#define soap_read_tt__DNSInformationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__DNSInformationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__DNSInformationExtension * SOAP_FMAC2 soap_instantiate_tt__DNSInformationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__DNSInformationExtension * soap_new_tt__DNSInformationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__DNSInformationExtension(soap, n, NULL, NULL, NULL); }

inline tt__DNSInformationExtension * soap_new_req_tt__DNSInformationExtension(struct soap *soap) { tt__DNSInformationExtension *_p = soap_instantiate_tt__DNSInformationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__DNSInformationExtension * soap_new_set_tt__DNSInformationExtension(struct soap *soap) { tt__DNSInformationExtension *_p = soap_instantiate_tt__DNSInformationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__DNSInformationExtension(struct soap *soap, tt__DNSInformationExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__DNSInformationExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__DNSInformation
#define SOAP_TYPE_tt__DNSInformation (345)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DNSInformation(struct soap*, const char*, int, const tt__DNSInformation *, const char*);
SOAP_FMAC3 tt__DNSInformation * SOAP_FMAC4 soap_in_tt__DNSInformation(struct soap*, const char*, tt__DNSInformation *, const char*);

#ifndef soap_write_tt__DNSInformation
#define soap_write_tt__DNSInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:DNSInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DNSInformation * SOAP_FMAC4 soap_get_tt__DNSInformation(struct soap*, tt__DNSInformation *, const char*, const char*);

#ifndef soap_read_tt__DNSInformation
#define soap_read_tt__DNSInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__DNSInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__DNSInformation * SOAP_FMAC2 soap_instantiate_tt__DNSInformation(struct soap*, int, const char*, const char*, size_t*);

inline tt__DNSInformation * soap_new_tt__DNSInformation(struct soap *soap, int n = -1) { return soap_instantiate_tt__DNSInformation(soap, n, NULL, NULL, NULL); }

inline tt__DNSInformation * soap_new_req_tt__DNSInformation(struct soap *soap, bool FromDHCP) { tt__DNSInformation *_p = soap_instantiate_tt__DNSInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__DNSInformation::FromDHCP = FromDHCP; } return _p; }

inline tt__DNSInformation * soap_new_set_tt__DNSInformation(struct soap *soap, bool FromDHCP, std::vector<std::string >& SearchDomain, std::vector<tt__IPAddress * >& DNSFromDHCP, std::vector<tt__IPAddress * >& DNSManual, tt__DNSInformationExtension *Extension) { tt__DNSInformation *_p = soap_instantiate_tt__DNSInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__DNSInformation::FromDHCP = FromDHCP; _p->tt__DNSInformation::SearchDomain = SearchDomain; _p->tt__DNSInformation::DNSFromDHCP = DNSFromDHCP; _p->tt__DNSInformation::DNSManual = DNSManual; _p->tt__DNSInformation::Extension = Extension; } return _p; }

inline void soap_delete_tt__DNSInformation(struct soap *soap, tt__DNSInformation *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__DNSInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__HostnameInformationExtension
#define SOAP_TYPE_tt__HostnameInformationExtension (344)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__HostnameInformationExtension(struct soap*, const char*, int, const tt__HostnameInformationExtension *, const char*);
SOAP_FMAC3 tt__HostnameInformationExtension * SOAP_FMAC4 soap_in_tt__HostnameInformationExtension(struct soap*, const char*, tt__HostnameInformationExtension *, const char*);

#ifndef soap_write_tt__HostnameInformationExtension
#define soap_write_tt__HostnameInformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:HostnameInformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__HostnameInformationExtension * SOAP_FMAC4 soap_get_tt__HostnameInformationExtension(struct soap*, tt__HostnameInformationExtension *, const char*, const char*);

#ifndef soap_read_tt__HostnameInformationExtension
#define soap_read_tt__HostnameInformationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__HostnameInformationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__HostnameInformationExtension * SOAP_FMAC2 soap_instantiate_tt__HostnameInformationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__HostnameInformationExtension * soap_new_tt__HostnameInformationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__HostnameInformationExtension(soap, n, NULL, NULL, NULL); }

inline tt__HostnameInformationExtension * soap_new_req_tt__HostnameInformationExtension(struct soap *soap) { tt__HostnameInformationExtension *_p = soap_instantiate_tt__HostnameInformationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__HostnameInformationExtension * soap_new_set_tt__HostnameInformationExtension(struct soap *soap) { tt__HostnameInformationExtension *_p = soap_instantiate_tt__HostnameInformationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__HostnameInformationExtension(struct soap *soap, tt__HostnameInformationExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__HostnameInformationExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__HostnameInformation
#define SOAP_TYPE_tt__HostnameInformation (343)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__HostnameInformation(struct soap*, const char*, int, const tt__HostnameInformation *, const char*);
SOAP_FMAC3 tt__HostnameInformation * SOAP_FMAC4 soap_in_tt__HostnameInformation(struct soap*, const char*, tt__HostnameInformation *, const char*);

#ifndef soap_write_tt__HostnameInformation
#define soap_write_tt__HostnameInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:HostnameInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__HostnameInformation * SOAP_FMAC4 soap_get_tt__HostnameInformation(struct soap*, tt__HostnameInformation *, const char*, const char*);

#ifndef soap_read_tt__HostnameInformation
#define soap_read_tt__HostnameInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__HostnameInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__HostnameInformation * SOAP_FMAC2 soap_instantiate_tt__HostnameInformation(struct soap*, int, const char*, const char*, size_t*);

inline tt__HostnameInformation * soap_new_tt__HostnameInformation(struct soap *soap, int n = -1) { return soap_instantiate_tt__HostnameInformation(soap, n, NULL, NULL, NULL); }

inline tt__HostnameInformation * soap_new_req_tt__HostnameInformation(struct soap *soap, bool FromDHCP) { tt__HostnameInformation *_p = soap_instantiate_tt__HostnameInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__HostnameInformation::FromDHCP = FromDHCP; } return _p; }

inline tt__HostnameInformation * soap_new_set_tt__HostnameInformation(struct soap *soap, bool FromDHCP, std::string *Name, tt__HostnameInformationExtension *Extension) { tt__HostnameInformation *_p = soap_instantiate_tt__HostnameInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__HostnameInformation::FromDHCP = FromDHCP; _p->tt__HostnameInformation::Name = Name; _p->tt__HostnameInformation::Extension = Extension; } return _p; }

inline void soap_delete_tt__HostnameInformation(struct soap *soap, tt__HostnameInformation *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__HostnameInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PrefixedIPv6Address
#define SOAP_TYPE_tt__PrefixedIPv6Address (342)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PrefixedIPv6Address(struct soap*, const char*, int, const tt__PrefixedIPv6Address *, const char*);
SOAP_FMAC3 tt__PrefixedIPv6Address * SOAP_FMAC4 soap_in_tt__PrefixedIPv6Address(struct soap*, const char*, tt__PrefixedIPv6Address *, const char*);

#ifndef soap_write_tt__PrefixedIPv6Address
#define soap_write_tt__PrefixedIPv6Address(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PrefixedIPv6Address", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PrefixedIPv6Address * SOAP_FMAC4 soap_get_tt__PrefixedIPv6Address(struct soap*, tt__PrefixedIPv6Address *, const char*, const char*);

#ifndef soap_read_tt__PrefixedIPv6Address
#define soap_read_tt__PrefixedIPv6Address(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PrefixedIPv6Address(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PrefixedIPv6Address * SOAP_FMAC2 soap_instantiate_tt__PrefixedIPv6Address(struct soap*, int, const char*, const char*, size_t*);

inline tt__PrefixedIPv6Address * soap_new_tt__PrefixedIPv6Address(struct soap *soap, int n = -1) { return soap_instantiate_tt__PrefixedIPv6Address(soap, n, NULL, NULL, NULL); }

inline tt__PrefixedIPv6Address * soap_new_req_tt__PrefixedIPv6Address(struct soap *soap, std::string& Address, int PrefixLength) { tt__PrefixedIPv6Address *_p = soap_instantiate_tt__PrefixedIPv6Address(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PrefixedIPv6Address::Address = Address; _p->tt__PrefixedIPv6Address::PrefixLength = PrefixLength; } return _p; }

inline tt__PrefixedIPv6Address * soap_new_set_tt__PrefixedIPv6Address(struct soap *soap, std::string& Address, int PrefixLength) { tt__PrefixedIPv6Address *_p = soap_instantiate_tt__PrefixedIPv6Address(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PrefixedIPv6Address::Address = Address; _p->tt__PrefixedIPv6Address::PrefixLength = PrefixLength; } return _p; }

inline void soap_delete_tt__PrefixedIPv6Address(struct soap *soap, tt__PrefixedIPv6Address *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PrefixedIPv6Address(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PrefixedIPv4Address
#define SOAP_TYPE_tt__PrefixedIPv4Address (341)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PrefixedIPv4Address(struct soap*, const char*, int, const tt__PrefixedIPv4Address *, const char*);
SOAP_FMAC3 tt__PrefixedIPv4Address * SOAP_FMAC4 soap_in_tt__PrefixedIPv4Address(struct soap*, const char*, tt__PrefixedIPv4Address *, const char*);

#ifndef soap_write_tt__PrefixedIPv4Address
#define soap_write_tt__PrefixedIPv4Address(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PrefixedIPv4Address", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PrefixedIPv4Address * SOAP_FMAC4 soap_get_tt__PrefixedIPv4Address(struct soap*, tt__PrefixedIPv4Address *, const char*, const char*);

#ifndef soap_read_tt__PrefixedIPv4Address
#define soap_read_tt__PrefixedIPv4Address(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PrefixedIPv4Address(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PrefixedIPv4Address * SOAP_FMAC2 soap_instantiate_tt__PrefixedIPv4Address(struct soap*, int, const char*, const char*, size_t*);

inline tt__PrefixedIPv4Address * soap_new_tt__PrefixedIPv4Address(struct soap *soap, int n = -1) { return soap_instantiate_tt__PrefixedIPv4Address(soap, n, NULL, NULL, NULL); }

inline tt__PrefixedIPv4Address * soap_new_req_tt__PrefixedIPv4Address(struct soap *soap, std::string& Address, int PrefixLength) { tt__PrefixedIPv4Address *_p = soap_instantiate_tt__PrefixedIPv4Address(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PrefixedIPv4Address::Address = Address; _p->tt__PrefixedIPv4Address::PrefixLength = PrefixLength; } return _p; }

inline tt__PrefixedIPv4Address * soap_new_set_tt__PrefixedIPv4Address(struct soap *soap, std::string& Address, int PrefixLength) { tt__PrefixedIPv4Address *_p = soap_instantiate_tt__PrefixedIPv4Address(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PrefixedIPv4Address::Address = Address; _p->tt__PrefixedIPv4Address::PrefixLength = PrefixLength; } return _p; }

inline void soap_delete_tt__PrefixedIPv4Address(struct soap *soap, tt__PrefixedIPv4Address *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PrefixedIPv4Address(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__IPAddress
#define SOAP_TYPE_tt__IPAddress (340)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPAddress(struct soap*, const char*, int, const tt__IPAddress *, const char*);
SOAP_FMAC3 tt__IPAddress * SOAP_FMAC4 soap_in_tt__IPAddress(struct soap*, const char*, tt__IPAddress *, const char*);

#ifndef soap_write_tt__IPAddress
#define soap_write_tt__IPAddress(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:IPAddress", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPAddress * SOAP_FMAC4 soap_get_tt__IPAddress(struct soap*, tt__IPAddress *, const char*, const char*);

#ifndef soap_read_tt__IPAddress
#define soap_read_tt__IPAddress(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IPAddress(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__IPAddress * SOAP_FMAC2 soap_instantiate_tt__IPAddress(struct soap*, int, const char*, const char*, size_t*);

inline tt__IPAddress * soap_new_tt__IPAddress(struct soap *soap, int n = -1) { return soap_instantiate_tt__IPAddress(soap, n, NULL, NULL, NULL); }

inline tt__IPAddress * soap_new_req_tt__IPAddress(struct soap *soap, enum tt__IPType Type) { tt__IPAddress *_p = soap_instantiate_tt__IPAddress(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IPAddress::Type = Type; } return _p; }

inline tt__IPAddress * soap_new_set_tt__IPAddress(struct soap *soap, enum tt__IPType Type, std::string *IPv4Address, std::string *IPv6Address) { tt__IPAddress *_p = soap_instantiate_tt__IPAddress(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IPAddress::Type = Type; _p->tt__IPAddress::IPv4Address = IPv4Address; _p->tt__IPAddress::IPv6Address = IPv6Address; } return _p; }

inline void soap_delete_tt__IPAddress(struct soap *soap, tt__IPAddress *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__IPAddress(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__NetworkHostExtension
#define SOAP_TYPE_tt__NetworkHostExtension (339)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkHostExtension(struct soap*, const char*, int, const tt__NetworkHostExtension *, const char*);
SOAP_FMAC3 tt__NetworkHostExtension * SOAP_FMAC4 soap_in_tt__NetworkHostExtension(struct soap*, const char*, tt__NetworkHostExtension *, const char*);

#ifndef soap_write_tt__NetworkHostExtension
#define soap_write_tt__NetworkHostExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:NetworkHostExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkHostExtension * SOAP_FMAC4 soap_get_tt__NetworkHostExtension(struct soap*, tt__NetworkHostExtension *, const char*, const char*);

#ifndef soap_read_tt__NetworkHostExtension
#define soap_read_tt__NetworkHostExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__NetworkHostExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__NetworkHostExtension * SOAP_FMAC2 soap_instantiate_tt__NetworkHostExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkHostExtension * soap_new_tt__NetworkHostExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkHostExtension(soap, n, NULL, NULL, NULL); }

inline tt__NetworkHostExtension * soap_new_req_tt__NetworkHostExtension(struct soap *soap) { tt__NetworkHostExtension *_p = soap_instantiate_tt__NetworkHostExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__NetworkHostExtension * soap_new_set_tt__NetworkHostExtension(struct soap *soap) { tt__NetworkHostExtension *_p = soap_instantiate_tt__NetworkHostExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__NetworkHostExtension(struct soap *soap, tt__NetworkHostExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__NetworkHostExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__NetworkHost
#define SOAP_TYPE_tt__NetworkHost (338)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkHost(struct soap*, const char*, int, const tt__NetworkHost *, const char*);
SOAP_FMAC3 tt__NetworkHost * SOAP_FMAC4 soap_in_tt__NetworkHost(struct soap*, const char*, tt__NetworkHost *, const char*);

#ifndef soap_write_tt__NetworkHost
#define soap_write_tt__NetworkHost(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:NetworkHost", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkHost * SOAP_FMAC4 soap_get_tt__NetworkHost(struct soap*, tt__NetworkHost *, const char*, const char*);

#ifndef soap_read_tt__NetworkHost
#define soap_read_tt__NetworkHost(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__NetworkHost(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__NetworkHost * SOAP_FMAC2 soap_instantiate_tt__NetworkHost(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkHost * soap_new_tt__NetworkHost(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkHost(soap, n, NULL, NULL, NULL); }

inline tt__NetworkHost * soap_new_req_tt__NetworkHost(struct soap *soap, enum tt__NetworkHostType Type) { tt__NetworkHost *_p = soap_instantiate_tt__NetworkHost(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__NetworkHost::Type = Type; } return _p; }

inline tt__NetworkHost * soap_new_set_tt__NetworkHost(struct soap *soap, enum tt__NetworkHostType Type, std::string *IPv4Address, std::string *IPv6Address, std::string *DNSname, tt__NetworkHostExtension *Extension) { tt__NetworkHost *_p = soap_instantiate_tt__NetworkHost(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__NetworkHost::Type = Type; _p->tt__NetworkHost::IPv4Address = IPv4Address; _p->tt__NetworkHost::IPv6Address = IPv6Address; _p->tt__NetworkHost::DNSname = DNSname; _p->tt__NetworkHost::Extension = Extension; } return _p; }

inline void soap_delete_tt__NetworkHost(struct soap *soap, tt__NetworkHost *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__NetworkHost(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__NetworkProtocolExtension
#define SOAP_TYPE_tt__NetworkProtocolExtension (337)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkProtocolExtension(struct soap*, const char*, int, const tt__NetworkProtocolExtension *, const char*);
SOAP_FMAC3 tt__NetworkProtocolExtension * SOAP_FMAC4 soap_in_tt__NetworkProtocolExtension(struct soap*, const char*, tt__NetworkProtocolExtension *, const char*);

#ifndef soap_write_tt__NetworkProtocolExtension
#define soap_write_tt__NetworkProtocolExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:NetworkProtocolExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkProtocolExtension * SOAP_FMAC4 soap_get_tt__NetworkProtocolExtension(struct soap*, tt__NetworkProtocolExtension *, const char*, const char*);

#ifndef soap_read_tt__NetworkProtocolExtension
#define soap_read_tt__NetworkProtocolExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__NetworkProtocolExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__NetworkProtocolExtension * SOAP_FMAC2 soap_instantiate_tt__NetworkProtocolExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkProtocolExtension * soap_new_tt__NetworkProtocolExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkProtocolExtension(soap, n, NULL, NULL, NULL); }

inline tt__NetworkProtocolExtension * soap_new_req_tt__NetworkProtocolExtension(struct soap *soap) { tt__NetworkProtocolExtension *_p = soap_instantiate_tt__NetworkProtocolExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__NetworkProtocolExtension * soap_new_set_tt__NetworkProtocolExtension(struct soap *soap) { tt__NetworkProtocolExtension *_p = soap_instantiate_tt__NetworkProtocolExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__NetworkProtocolExtension(struct soap *soap, tt__NetworkProtocolExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__NetworkProtocolExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__NetworkProtocol
#define SOAP_TYPE_tt__NetworkProtocol (336)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkProtocol(struct soap*, const char*, int, const tt__NetworkProtocol *, const char*);
SOAP_FMAC3 tt__NetworkProtocol * SOAP_FMAC4 soap_in_tt__NetworkProtocol(struct soap*, const char*, tt__NetworkProtocol *, const char*);

#ifndef soap_write_tt__NetworkProtocol
#define soap_write_tt__NetworkProtocol(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:NetworkProtocol", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkProtocol * SOAP_FMAC4 soap_get_tt__NetworkProtocol(struct soap*, tt__NetworkProtocol *, const char*, const char*);

#ifndef soap_read_tt__NetworkProtocol
#define soap_read_tt__NetworkProtocol(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__NetworkProtocol(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__NetworkProtocol * SOAP_FMAC2 soap_instantiate_tt__NetworkProtocol(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkProtocol * soap_new_tt__NetworkProtocol(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkProtocol(soap, n, NULL, NULL, NULL); }

inline tt__NetworkProtocol * soap_new_req_tt__NetworkProtocol(struct soap *soap, enum tt__NetworkProtocolType Name, bool Enabled, std::vector<int >& Port) { tt__NetworkProtocol *_p = soap_instantiate_tt__NetworkProtocol(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__NetworkProtocol::Name = Name; _p->tt__NetworkProtocol::Enabled = Enabled; _p->tt__NetworkProtocol::Port = Port; } return _p; }

inline tt__NetworkProtocol * soap_new_set_tt__NetworkProtocol(struct soap *soap, enum tt__NetworkProtocolType Name, bool Enabled, std::vector<int >& Port, tt__NetworkProtocolExtension *Extension) { tt__NetworkProtocol *_p = soap_instantiate_tt__NetworkProtocol(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__NetworkProtocol::Name = Name; _p->tt__NetworkProtocol::Enabled = Enabled; _p->tt__NetworkProtocol::Port = Port; _p->tt__NetworkProtocol::Extension = Extension; } return _p; }

inline void soap_delete_tt__NetworkProtocol(struct soap *soap, tt__NetworkProtocol *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__NetworkProtocol(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__IPv6ConfigurationExtension
#define SOAP_TYPE_tt__IPv6ConfigurationExtension (335)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPv6ConfigurationExtension(struct soap*, const char*, int, const tt__IPv6ConfigurationExtension *, const char*);
SOAP_FMAC3 tt__IPv6ConfigurationExtension * SOAP_FMAC4 soap_in_tt__IPv6ConfigurationExtension(struct soap*, const char*, tt__IPv6ConfigurationExtension *, const char*);

#ifndef soap_write_tt__IPv6ConfigurationExtension
#define soap_write_tt__IPv6ConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:IPv6ConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv6ConfigurationExtension * SOAP_FMAC4 soap_get_tt__IPv6ConfigurationExtension(struct soap*, tt__IPv6ConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__IPv6ConfigurationExtension
#define soap_read_tt__IPv6ConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IPv6ConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__IPv6ConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__IPv6ConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__IPv6ConfigurationExtension * soap_new_tt__IPv6ConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__IPv6ConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__IPv6ConfigurationExtension * soap_new_req_tt__IPv6ConfigurationExtension(struct soap *soap) { tt__IPv6ConfigurationExtension *_p = soap_instantiate_tt__IPv6ConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__IPv6ConfigurationExtension * soap_new_set_tt__IPv6ConfigurationExtension(struct soap *soap) { tt__IPv6ConfigurationExtension *_p = soap_instantiate_tt__IPv6ConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__IPv6ConfigurationExtension(struct soap *soap, tt__IPv6ConfigurationExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__IPv6ConfigurationExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__IPv6Configuration
#define SOAP_TYPE_tt__IPv6Configuration (334)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPv6Configuration(struct soap*, const char*, int, const tt__IPv6Configuration *, const char*);
SOAP_FMAC3 tt__IPv6Configuration * SOAP_FMAC4 soap_in_tt__IPv6Configuration(struct soap*, const char*, tt__IPv6Configuration *, const char*);

#ifndef soap_write_tt__IPv6Configuration
#define soap_write_tt__IPv6Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:IPv6Configuration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv6Configuration * SOAP_FMAC4 soap_get_tt__IPv6Configuration(struct soap*, tt__IPv6Configuration *, const char*, const char*);

#ifndef soap_read_tt__IPv6Configuration
#define soap_read_tt__IPv6Configuration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IPv6Configuration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__IPv6Configuration * SOAP_FMAC2 soap_instantiate_tt__IPv6Configuration(struct soap*, int, const char*, const char*, size_t*);

inline tt__IPv6Configuration * soap_new_tt__IPv6Configuration(struct soap *soap, int n = -1) { return soap_instantiate_tt__IPv6Configuration(soap, n, NULL, NULL, NULL); }

inline tt__IPv6Configuration * soap_new_req_tt__IPv6Configuration(struct soap *soap, enum tt__IPv6DHCPConfiguration DHCP) { tt__IPv6Configuration *_p = soap_instantiate_tt__IPv6Configuration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IPv6Configuration::DHCP = DHCP; } return _p; }

inline tt__IPv6Configuration * soap_new_set_tt__IPv6Configuration(struct soap *soap, bool *AcceptRouterAdvert, enum tt__IPv6DHCPConfiguration DHCP, std::vector<tt__PrefixedIPv6Address * >& Manual, std::vector<tt__PrefixedIPv6Address * >& LinkLocal, std::vector<tt__PrefixedIPv6Address * >& FromDHCP, std::vector<tt__PrefixedIPv6Address * >& FromRA, tt__IPv6ConfigurationExtension *Extension) { tt__IPv6Configuration *_p = soap_instantiate_tt__IPv6Configuration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IPv6Configuration::AcceptRouterAdvert = AcceptRouterAdvert; _p->tt__IPv6Configuration::DHCP = DHCP; _p->tt__IPv6Configuration::Manual = Manual; _p->tt__IPv6Configuration::LinkLocal = LinkLocal; _p->tt__IPv6Configuration::FromDHCP = FromDHCP; _p->tt__IPv6Configuration::FromRA = FromRA; _p->tt__IPv6Configuration::Extension = Extension; } return _p; }

inline void soap_delete_tt__IPv6Configuration(struct soap *soap, tt__IPv6Configuration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__IPv6Configuration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__IPv4Configuration
#define SOAP_TYPE_tt__IPv4Configuration (333)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPv4Configuration(struct soap*, const char*, int, const tt__IPv4Configuration *, const char*);
SOAP_FMAC3 tt__IPv4Configuration * SOAP_FMAC4 soap_in_tt__IPv4Configuration(struct soap*, const char*, tt__IPv4Configuration *, const char*);

#ifndef soap_write_tt__IPv4Configuration
#define soap_write_tt__IPv4Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:IPv4Configuration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv4Configuration * SOAP_FMAC4 soap_get_tt__IPv4Configuration(struct soap*, tt__IPv4Configuration *, const char*, const char*);

#ifndef soap_read_tt__IPv4Configuration
#define soap_read_tt__IPv4Configuration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IPv4Configuration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__IPv4Configuration * SOAP_FMAC2 soap_instantiate_tt__IPv4Configuration(struct soap*, int, const char*, const char*, size_t*);

inline tt__IPv4Configuration * soap_new_tt__IPv4Configuration(struct soap *soap, int n = -1) { return soap_instantiate_tt__IPv4Configuration(soap, n, NULL, NULL, NULL); }

inline tt__IPv4Configuration * soap_new_req_tt__IPv4Configuration(struct soap *soap, bool DHCP) { tt__IPv4Configuration *_p = soap_instantiate_tt__IPv4Configuration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IPv4Configuration::DHCP = DHCP; } return _p; }

inline tt__IPv4Configuration * soap_new_set_tt__IPv4Configuration(struct soap *soap, std::vector<tt__PrefixedIPv4Address * >& Manual, tt__PrefixedIPv4Address *LinkLocal, tt__PrefixedIPv4Address *FromDHCP, bool DHCP) { tt__IPv4Configuration *_p = soap_instantiate_tt__IPv4Configuration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IPv4Configuration::Manual = Manual; _p->tt__IPv4Configuration::LinkLocal = LinkLocal; _p->tt__IPv4Configuration::FromDHCP = FromDHCP; _p->tt__IPv4Configuration::DHCP = DHCP; } return _p; }

inline void soap_delete_tt__IPv4Configuration(struct soap *soap, tt__IPv4Configuration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__IPv4Configuration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__IPv4NetworkInterface
#define SOAP_TYPE_tt__IPv4NetworkInterface (332)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPv4NetworkInterface(struct soap*, const char*, int, const tt__IPv4NetworkInterface *, const char*);
SOAP_FMAC3 tt__IPv4NetworkInterface * SOAP_FMAC4 soap_in_tt__IPv4NetworkInterface(struct soap*, const char*, tt__IPv4NetworkInterface *, const char*);

#ifndef soap_write_tt__IPv4NetworkInterface
#define soap_write_tt__IPv4NetworkInterface(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:IPv4NetworkInterface", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv4NetworkInterface * SOAP_FMAC4 soap_get_tt__IPv4NetworkInterface(struct soap*, tt__IPv4NetworkInterface *, const char*, const char*);

#ifndef soap_read_tt__IPv4NetworkInterface
#define soap_read_tt__IPv4NetworkInterface(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IPv4NetworkInterface(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__IPv4NetworkInterface * SOAP_FMAC2 soap_instantiate_tt__IPv4NetworkInterface(struct soap*, int, const char*, const char*, size_t*);

inline tt__IPv4NetworkInterface * soap_new_tt__IPv4NetworkInterface(struct soap *soap, int n = -1) { return soap_instantiate_tt__IPv4NetworkInterface(soap, n, NULL, NULL, NULL); }

inline tt__IPv4NetworkInterface * soap_new_req_tt__IPv4NetworkInterface(struct soap *soap, bool Enabled, tt__IPv4Configuration *Config) { tt__IPv4NetworkInterface *_p = soap_instantiate_tt__IPv4NetworkInterface(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IPv4NetworkInterface::Enabled = Enabled; _p->tt__IPv4NetworkInterface::Config = Config; } return _p; }

inline tt__IPv4NetworkInterface * soap_new_set_tt__IPv4NetworkInterface(struct soap *soap, bool Enabled, tt__IPv4Configuration *Config) { tt__IPv4NetworkInterface *_p = soap_instantiate_tt__IPv4NetworkInterface(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IPv4NetworkInterface::Enabled = Enabled; _p->tt__IPv4NetworkInterface::Config = Config; } return _p; }

inline void soap_delete_tt__IPv4NetworkInterface(struct soap *soap, tt__IPv4NetworkInterface *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__IPv4NetworkInterface(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__IPv6NetworkInterface
#define SOAP_TYPE_tt__IPv6NetworkInterface (331)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPv6NetworkInterface(struct soap*, const char*, int, const tt__IPv6NetworkInterface *, const char*);
SOAP_FMAC3 tt__IPv6NetworkInterface * SOAP_FMAC4 soap_in_tt__IPv6NetworkInterface(struct soap*, const char*, tt__IPv6NetworkInterface *, const char*);

#ifndef soap_write_tt__IPv6NetworkInterface
#define soap_write_tt__IPv6NetworkInterface(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:IPv6NetworkInterface", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv6NetworkInterface * SOAP_FMAC4 soap_get_tt__IPv6NetworkInterface(struct soap*, tt__IPv6NetworkInterface *, const char*, const char*);

#ifndef soap_read_tt__IPv6NetworkInterface
#define soap_read_tt__IPv6NetworkInterface(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IPv6NetworkInterface(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__IPv6NetworkInterface * SOAP_FMAC2 soap_instantiate_tt__IPv6NetworkInterface(struct soap*, int, const char*, const char*, size_t*);

inline tt__IPv6NetworkInterface * soap_new_tt__IPv6NetworkInterface(struct soap *soap, int n = -1) { return soap_instantiate_tt__IPv6NetworkInterface(soap, n, NULL, NULL, NULL); }

inline tt__IPv6NetworkInterface * soap_new_req_tt__IPv6NetworkInterface(struct soap *soap, bool Enabled) { tt__IPv6NetworkInterface *_p = soap_instantiate_tt__IPv6NetworkInterface(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IPv6NetworkInterface::Enabled = Enabled; } return _p; }

inline tt__IPv6NetworkInterface * soap_new_set_tt__IPv6NetworkInterface(struct soap *soap, bool Enabled, tt__IPv6Configuration *Config) { tt__IPv6NetworkInterface *_p = soap_instantiate_tt__IPv6NetworkInterface(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IPv6NetworkInterface::Enabled = Enabled; _p->tt__IPv6NetworkInterface::Config = Config; } return _p; }

inline void soap_delete_tt__IPv6NetworkInterface(struct soap *soap, tt__IPv6NetworkInterface *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__IPv6NetworkInterface(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__NetworkInterfaceInfo
#define SOAP_TYPE_tt__NetworkInterfaceInfo (330)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkInterfaceInfo(struct soap*, const char*, int, const tt__NetworkInterfaceInfo *, const char*);
SOAP_FMAC3 tt__NetworkInterfaceInfo * SOAP_FMAC4 soap_in_tt__NetworkInterfaceInfo(struct soap*, const char*, tt__NetworkInterfaceInfo *, const char*);

#ifndef soap_write_tt__NetworkInterfaceInfo
#define soap_write_tt__NetworkInterfaceInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:NetworkInterfaceInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceInfo * SOAP_FMAC4 soap_get_tt__NetworkInterfaceInfo(struct soap*, tt__NetworkInterfaceInfo *, const char*, const char*);

#ifndef soap_read_tt__NetworkInterfaceInfo
#define soap_read_tt__NetworkInterfaceInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__NetworkInterfaceInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__NetworkInterfaceInfo * SOAP_FMAC2 soap_instantiate_tt__NetworkInterfaceInfo(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkInterfaceInfo * soap_new_tt__NetworkInterfaceInfo(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkInterfaceInfo(soap, n, NULL, NULL, NULL); }

inline tt__NetworkInterfaceInfo * soap_new_req_tt__NetworkInterfaceInfo(struct soap *soap, std::string& HwAddress) { tt__NetworkInterfaceInfo *_p = soap_instantiate_tt__NetworkInterfaceInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__NetworkInterfaceInfo::HwAddress = HwAddress; } return _p; }

inline tt__NetworkInterfaceInfo * soap_new_set_tt__NetworkInterfaceInfo(struct soap *soap, std::string *Name, std::string& HwAddress, int *MTU) { tt__NetworkInterfaceInfo *_p = soap_instantiate_tt__NetworkInterfaceInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__NetworkInterfaceInfo::Name = Name; _p->tt__NetworkInterfaceInfo::HwAddress = HwAddress; _p->tt__NetworkInterfaceInfo::MTU = MTU; } return _p; }

inline void soap_delete_tt__NetworkInterfaceInfo(struct soap *soap, tt__NetworkInterfaceInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__NetworkInterfaceInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__NetworkInterfaceConnectionSetting
#define SOAP_TYPE_tt__NetworkInterfaceConnectionSetting (329)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkInterfaceConnectionSetting(struct soap*, const char*, int, const tt__NetworkInterfaceConnectionSetting *, const char*);
SOAP_FMAC3 tt__NetworkInterfaceConnectionSetting * SOAP_FMAC4 soap_in_tt__NetworkInterfaceConnectionSetting(struct soap*, const char*, tt__NetworkInterfaceConnectionSetting *, const char*);

#ifndef soap_write_tt__NetworkInterfaceConnectionSetting
#define soap_write_tt__NetworkInterfaceConnectionSetting(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:NetworkInterfaceConnectionSetting", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceConnectionSetting * SOAP_FMAC4 soap_get_tt__NetworkInterfaceConnectionSetting(struct soap*, tt__NetworkInterfaceConnectionSetting *, const char*, const char*);

#ifndef soap_read_tt__NetworkInterfaceConnectionSetting
#define soap_read_tt__NetworkInterfaceConnectionSetting(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__NetworkInterfaceConnectionSetting(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__NetworkInterfaceConnectionSetting * SOAP_FMAC2 soap_instantiate_tt__NetworkInterfaceConnectionSetting(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkInterfaceConnectionSetting * soap_new_tt__NetworkInterfaceConnectionSetting(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkInterfaceConnectionSetting(soap, n, NULL, NULL, NULL); }

inline tt__NetworkInterfaceConnectionSetting * soap_new_req_tt__NetworkInterfaceConnectionSetting(struct soap *soap, bool AutoNegotiation, int Speed, enum tt__Duplex Duplex) { tt__NetworkInterfaceConnectionSetting *_p = soap_instantiate_tt__NetworkInterfaceConnectionSetting(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__NetworkInterfaceConnectionSetting::AutoNegotiation = AutoNegotiation; _p->tt__NetworkInterfaceConnectionSetting::Speed = Speed; _p->tt__NetworkInterfaceConnectionSetting::Duplex = Duplex; } return _p; }

inline tt__NetworkInterfaceConnectionSetting * soap_new_set_tt__NetworkInterfaceConnectionSetting(struct soap *soap, bool AutoNegotiation, int Speed, enum tt__Duplex Duplex) { tt__NetworkInterfaceConnectionSetting *_p = soap_instantiate_tt__NetworkInterfaceConnectionSetting(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__NetworkInterfaceConnectionSetting::AutoNegotiation = AutoNegotiation; _p->tt__NetworkInterfaceConnectionSetting::Speed = Speed; _p->tt__NetworkInterfaceConnectionSetting::Duplex = Duplex; } return _p; }

inline void soap_delete_tt__NetworkInterfaceConnectionSetting(struct soap *soap, tt__NetworkInterfaceConnectionSetting *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__NetworkInterfaceConnectionSetting(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__NetworkInterfaceLink
#define SOAP_TYPE_tt__NetworkInterfaceLink (328)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkInterfaceLink(struct soap*, const char*, int, const tt__NetworkInterfaceLink *, const char*);
SOAP_FMAC3 tt__NetworkInterfaceLink * SOAP_FMAC4 soap_in_tt__NetworkInterfaceLink(struct soap*, const char*, tt__NetworkInterfaceLink *, const char*);

#ifndef soap_write_tt__NetworkInterfaceLink
#define soap_write_tt__NetworkInterfaceLink(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:NetworkInterfaceLink", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceLink * SOAP_FMAC4 soap_get_tt__NetworkInterfaceLink(struct soap*, tt__NetworkInterfaceLink *, const char*, const char*);

#ifndef soap_read_tt__NetworkInterfaceLink
#define soap_read_tt__NetworkInterfaceLink(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__NetworkInterfaceLink(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__NetworkInterfaceLink * SOAP_FMAC2 soap_instantiate_tt__NetworkInterfaceLink(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkInterfaceLink * soap_new_tt__NetworkInterfaceLink(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkInterfaceLink(soap, n, NULL, NULL, NULL); }

inline tt__NetworkInterfaceLink * soap_new_req_tt__NetworkInterfaceLink(struct soap *soap, tt__NetworkInterfaceConnectionSetting *AdminSettings, tt__NetworkInterfaceConnectionSetting *OperSettings, int InterfaceType) { tt__NetworkInterfaceLink *_p = soap_instantiate_tt__NetworkInterfaceLink(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__NetworkInterfaceLink::AdminSettings = AdminSettings; _p->tt__NetworkInterfaceLink::OperSettings = OperSettings; _p->tt__NetworkInterfaceLink::InterfaceType = InterfaceType; } return _p; }

inline tt__NetworkInterfaceLink * soap_new_set_tt__NetworkInterfaceLink(struct soap *soap, tt__NetworkInterfaceConnectionSetting *AdminSettings, tt__NetworkInterfaceConnectionSetting *OperSettings, int InterfaceType) { tt__NetworkInterfaceLink *_p = soap_instantiate_tt__NetworkInterfaceLink(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__NetworkInterfaceLink::AdminSettings = AdminSettings; _p->tt__NetworkInterfaceLink::OperSettings = OperSettings; _p->tt__NetworkInterfaceLink::InterfaceType = InterfaceType; } return _p; }

inline void soap_delete_tt__NetworkInterfaceLink(struct soap *soap, tt__NetworkInterfaceLink *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__NetworkInterfaceLink(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__NetworkInterfaceExtension2
#define SOAP_TYPE_tt__NetworkInterfaceExtension2 (327)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkInterfaceExtension2(struct soap*, const char*, int, const tt__NetworkInterfaceExtension2 *, const char*);
SOAP_FMAC3 tt__NetworkInterfaceExtension2 * SOAP_FMAC4 soap_in_tt__NetworkInterfaceExtension2(struct soap*, const char*, tt__NetworkInterfaceExtension2 *, const char*);

#ifndef soap_write_tt__NetworkInterfaceExtension2
#define soap_write_tt__NetworkInterfaceExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:NetworkInterfaceExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceExtension2 * SOAP_FMAC4 soap_get_tt__NetworkInterfaceExtension2(struct soap*, tt__NetworkInterfaceExtension2 *, const char*, const char*);

#ifndef soap_read_tt__NetworkInterfaceExtension2
#define soap_read_tt__NetworkInterfaceExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__NetworkInterfaceExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__NetworkInterfaceExtension2 * SOAP_FMAC2 soap_instantiate_tt__NetworkInterfaceExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkInterfaceExtension2 * soap_new_tt__NetworkInterfaceExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkInterfaceExtension2(soap, n, NULL, NULL, NULL); }

inline tt__NetworkInterfaceExtension2 * soap_new_req_tt__NetworkInterfaceExtension2(struct soap *soap) { tt__NetworkInterfaceExtension2 *_p = soap_instantiate_tt__NetworkInterfaceExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__NetworkInterfaceExtension2 * soap_new_set_tt__NetworkInterfaceExtension2(struct soap *soap) { tt__NetworkInterfaceExtension2 *_p = soap_instantiate_tt__NetworkInterfaceExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__NetworkInterfaceExtension2(struct soap *soap, tt__NetworkInterfaceExtension2 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__NetworkInterfaceExtension2(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Dot3Configuration
#define SOAP_TYPE_tt__Dot3Configuration (326)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot3Configuration(struct soap*, const char*, int, const tt__Dot3Configuration *, const char*);
SOAP_FMAC3 tt__Dot3Configuration * SOAP_FMAC4 soap_in_tt__Dot3Configuration(struct soap*, const char*, tt__Dot3Configuration *, const char*);

#ifndef soap_write_tt__Dot3Configuration
#define soap_write_tt__Dot3Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Dot3Configuration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot3Configuration * SOAP_FMAC4 soap_get_tt__Dot3Configuration(struct soap*, tt__Dot3Configuration *, const char*, const char*);

#ifndef soap_read_tt__Dot3Configuration
#define soap_read_tt__Dot3Configuration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Dot3Configuration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Dot3Configuration * SOAP_FMAC2 soap_instantiate_tt__Dot3Configuration(struct soap*, int, const char*, const char*, size_t*);

inline tt__Dot3Configuration * soap_new_tt__Dot3Configuration(struct soap *soap, int n = -1) { return soap_instantiate_tt__Dot3Configuration(soap, n, NULL, NULL, NULL); }

inline tt__Dot3Configuration * soap_new_req_tt__Dot3Configuration(struct soap *soap) { tt__Dot3Configuration *_p = soap_instantiate_tt__Dot3Configuration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__Dot3Configuration * soap_new_set_tt__Dot3Configuration(struct soap *soap) { tt__Dot3Configuration *_p = soap_instantiate_tt__Dot3Configuration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__Dot3Configuration(struct soap *soap, tt__Dot3Configuration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Dot3Configuration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__NetworkInterfaceExtension
#define SOAP_TYPE_tt__NetworkInterfaceExtension (325)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkInterfaceExtension(struct soap*, const char*, int, const tt__NetworkInterfaceExtension *, const char*);
SOAP_FMAC3 tt__NetworkInterfaceExtension * SOAP_FMAC4 soap_in_tt__NetworkInterfaceExtension(struct soap*, const char*, tt__NetworkInterfaceExtension *, const char*);

#ifndef soap_write_tt__NetworkInterfaceExtension
#define soap_write_tt__NetworkInterfaceExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:NetworkInterfaceExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceExtension * SOAP_FMAC4 soap_get_tt__NetworkInterfaceExtension(struct soap*, tt__NetworkInterfaceExtension *, const char*, const char*);

#ifndef soap_read_tt__NetworkInterfaceExtension
#define soap_read_tt__NetworkInterfaceExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__NetworkInterfaceExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__NetworkInterfaceExtension * SOAP_FMAC2 soap_instantiate_tt__NetworkInterfaceExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkInterfaceExtension * soap_new_tt__NetworkInterfaceExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkInterfaceExtension(soap, n, NULL, NULL, NULL); }

inline tt__NetworkInterfaceExtension * soap_new_req_tt__NetworkInterfaceExtension(struct soap *soap, int InterfaceType) { tt__NetworkInterfaceExtension *_p = soap_instantiate_tt__NetworkInterfaceExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__NetworkInterfaceExtension::InterfaceType = InterfaceType; } return _p; }

inline tt__NetworkInterfaceExtension * soap_new_set_tt__NetworkInterfaceExtension(struct soap *soap, int InterfaceType, std::vector<tt__Dot3Configuration * >& Dot3, std::vector<tt__Dot11Configuration * >& Dot11, tt__NetworkInterfaceExtension2 *Extension) { tt__NetworkInterfaceExtension *_p = soap_instantiate_tt__NetworkInterfaceExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__NetworkInterfaceExtension::InterfaceType = InterfaceType; _p->tt__NetworkInterfaceExtension::Dot3 = Dot3; _p->tt__NetworkInterfaceExtension::Dot11 = Dot11; _p->tt__NetworkInterfaceExtension::Extension = Extension; } return _p; }

inline void soap_delete_tt__NetworkInterfaceExtension(struct soap *soap, tt__NetworkInterfaceExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__NetworkInterfaceExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__NetworkInterface
#define SOAP_TYPE_tt__NetworkInterface (324)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkInterface(struct soap*, const char*, int, const tt__NetworkInterface *, const char*);
SOAP_FMAC3 tt__NetworkInterface * SOAP_FMAC4 soap_in_tt__NetworkInterface(struct soap*, const char*, tt__NetworkInterface *, const char*);

#ifndef soap_write_tt__NetworkInterface
#define soap_write_tt__NetworkInterface(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:NetworkInterface", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterface * SOAP_FMAC4 soap_get_tt__NetworkInterface(struct soap*, tt__NetworkInterface *, const char*, const char*);

#ifndef soap_read_tt__NetworkInterface
#define soap_read_tt__NetworkInterface(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__NetworkInterface(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__NetworkInterface * SOAP_FMAC2 soap_instantiate_tt__NetworkInterface(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkInterface * soap_new_tt__NetworkInterface(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkInterface(soap, n, NULL, NULL, NULL); }

inline tt__NetworkInterface * soap_new_req_tt__NetworkInterface(struct soap *soap, bool Enabled, std::string& token1) { tt__NetworkInterface *_p = soap_instantiate_tt__NetworkInterface(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__NetworkInterface::Enabled = Enabled; _p->tt__DeviceEntity::token = token1; } return _p; }

inline tt__NetworkInterface * soap_new_set_tt__NetworkInterface(struct soap *soap, bool Enabled, tt__NetworkInterfaceInfo *Info, tt__NetworkInterfaceLink *Link, tt__IPv4NetworkInterface *IPv4, tt__IPv6NetworkInterface *IPv6, tt__NetworkInterfaceExtension *Extension, std::string& token1) { tt__NetworkInterface *_p = soap_instantiate_tt__NetworkInterface(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__NetworkInterface::Enabled = Enabled; _p->tt__NetworkInterface::Info = Info; _p->tt__NetworkInterface::Link = Link; _p->tt__NetworkInterface::IPv4 = IPv4; _p->tt__NetworkInterface::IPv6 = IPv6; _p->tt__NetworkInterface::Extension = Extension; _p->tt__DeviceEntity::token = token1; } return _p; }

inline void soap_delete_tt__NetworkInterface(struct soap *soap, tt__NetworkInterface *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__NetworkInterface(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Scope
#define SOAP_TYPE_tt__Scope (323)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Scope(struct soap*, const char*, int, const tt__Scope *, const char*);
SOAP_FMAC3 tt__Scope * SOAP_FMAC4 soap_in_tt__Scope(struct soap*, const char*, tt__Scope *, const char*);

#ifndef soap_write_tt__Scope
#define soap_write_tt__Scope(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Scope", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Scope * SOAP_FMAC4 soap_get_tt__Scope(struct soap*, tt__Scope *, const char*, const char*);

#ifndef soap_read_tt__Scope
#define soap_read_tt__Scope(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Scope(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Scope * SOAP_FMAC2 soap_instantiate_tt__Scope(struct soap*, int, const char*, const char*, size_t*);

inline tt__Scope * soap_new_tt__Scope(struct soap *soap, int n = -1) { return soap_instantiate_tt__Scope(soap, n, NULL, NULL, NULL); }

inline tt__Scope * soap_new_req_tt__Scope(struct soap *soap, enum tt__ScopeDefinition ScopeDef, std::string& ScopeItem) { tt__Scope *_p = soap_instantiate_tt__Scope(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Scope::ScopeDef = ScopeDef; _p->tt__Scope::ScopeItem = ScopeItem; } return _p; }

inline tt__Scope * soap_new_set_tt__Scope(struct soap *soap, enum tt__ScopeDefinition ScopeDef, std::string& ScopeItem) { tt__Scope *_p = soap_instantiate_tt__Scope(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Scope::ScopeDef = ScopeDef; _p->tt__Scope::ScopeItem = ScopeItem; } return _p; }

inline void soap_delete_tt__Scope(struct soap *soap, tt__Scope *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Scope(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__MediaUri
#define SOAP_TYPE_tt__MediaUri (322)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MediaUri(struct soap*, const char*, int, const tt__MediaUri *, const char*);
SOAP_FMAC3 tt__MediaUri * SOAP_FMAC4 soap_in_tt__MediaUri(struct soap*, const char*, tt__MediaUri *, const char*);

#ifndef soap_write_tt__MediaUri
#define soap_write_tt__MediaUri(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:MediaUri", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MediaUri * SOAP_FMAC4 soap_get_tt__MediaUri(struct soap*, tt__MediaUri *, const char*, const char*);

#ifndef soap_read_tt__MediaUri
#define soap_read_tt__MediaUri(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__MediaUri(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__MediaUri * SOAP_FMAC2 soap_instantiate_tt__MediaUri(struct soap*, int, const char*, const char*, size_t*);

inline tt__MediaUri * soap_new_tt__MediaUri(struct soap *soap, int n = -1) { return soap_instantiate_tt__MediaUri(soap, n, NULL, NULL, NULL); }

inline tt__MediaUri * soap_new_req_tt__MediaUri(struct soap *soap, std::string& Uri, bool InvalidAfterConnect, bool InvalidAfterReboot, LONG64 Timeout) { tt__MediaUri *_p = soap_instantiate_tt__MediaUri(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MediaUri::Uri = Uri; _p->tt__MediaUri::InvalidAfterConnect = InvalidAfterConnect; _p->tt__MediaUri::InvalidAfterReboot = InvalidAfterReboot; _p->tt__MediaUri::Timeout = Timeout; } return _p; }

inline tt__MediaUri * soap_new_set_tt__MediaUri(struct soap *soap, std::string& Uri, bool InvalidAfterConnect, bool InvalidAfterReboot, LONG64 Timeout) { tt__MediaUri *_p = soap_instantiate_tt__MediaUri(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MediaUri::Uri = Uri; _p->tt__MediaUri::InvalidAfterConnect = InvalidAfterConnect; _p->tt__MediaUri::InvalidAfterReboot = InvalidAfterReboot; _p->tt__MediaUri::Timeout = Timeout; } return _p; }

inline void soap_delete_tt__MediaUri(struct soap *soap, tt__MediaUri *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__MediaUri(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Transport
#define SOAP_TYPE_tt__Transport (321)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Transport(struct soap*, const char*, int, const tt__Transport *, const char*);
SOAP_FMAC3 tt__Transport * SOAP_FMAC4 soap_in_tt__Transport(struct soap*, const char*, tt__Transport *, const char*);

#ifndef soap_write_tt__Transport
#define soap_write_tt__Transport(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Transport", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Transport * SOAP_FMAC4 soap_get_tt__Transport(struct soap*, tt__Transport *, const char*, const char*);

#ifndef soap_read_tt__Transport
#define soap_read_tt__Transport(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Transport(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Transport * SOAP_FMAC2 soap_instantiate_tt__Transport(struct soap*, int, const char*, const char*, size_t*);

inline tt__Transport * soap_new_tt__Transport(struct soap *soap, int n = -1) { return soap_instantiate_tt__Transport(soap, n, NULL, NULL, NULL); }

inline tt__Transport * soap_new_req_tt__Transport(struct soap *soap, enum tt__TransportProtocol Protocol) { tt__Transport *_p = soap_instantiate_tt__Transport(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Transport::Protocol = Protocol; } return _p; }

inline tt__Transport * soap_new_set_tt__Transport(struct soap *soap, enum tt__TransportProtocol Protocol, tt__Transport *Tunnel) { tt__Transport *_p = soap_instantiate_tt__Transport(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Transport::Protocol = Protocol; _p->tt__Transport::Tunnel = Tunnel; } return _p; }

inline void soap_delete_tt__Transport(struct soap *soap, tt__Transport *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Transport(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__StreamSetup
#define SOAP_TYPE_tt__StreamSetup (320)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__StreamSetup(struct soap*, const char*, int, const tt__StreamSetup *, const char*);
SOAP_FMAC3 tt__StreamSetup * SOAP_FMAC4 soap_in_tt__StreamSetup(struct soap*, const char*, tt__StreamSetup *, const char*);

#ifndef soap_write_tt__StreamSetup
#define soap_write_tt__StreamSetup(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:StreamSetup", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__StreamSetup * SOAP_FMAC4 soap_get_tt__StreamSetup(struct soap*, tt__StreamSetup *, const char*, const char*);

#ifndef soap_read_tt__StreamSetup
#define soap_read_tt__StreamSetup(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__StreamSetup(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__StreamSetup * SOAP_FMAC2 soap_instantiate_tt__StreamSetup(struct soap*, int, const char*, const char*, size_t*);

inline tt__StreamSetup * soap_new_tt__StreamSetup(struct soap *soap, int n = -1) { return soap_instantiate_tt__StreamSetup(soap, n, NULL, NULL, NULL); }

inline tt__StreamSetup * soap_new_req_tt__StreamSetup(struct soap *soap, enum tt__StreamType Stream, tt__Transport *Transport) { tt__StreamSetup *_p = soap_instantiate_tt__StreamSetup(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__StreamSetup::Stream = Stream; _p->tt__StreamSetup::Transport = Transport; } return _p; }

inline tt__StreamSetup * soap_new_set_tt__StreamSetup(struct soap *soap, enum tt__StreamType Stream, tt__Transport *Transport) { tt__StreamSetup *_p = soap_instantiate_tt__StreamSetup(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__StreamSetup::Stream = Stream; _p->tt__StreamSetup::Transport = Transport; } return _p; }

inline void soap_delete_tt__StreamSetup(struct soap *soap, tt__StreamSetup *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__StreamSetup(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__MulticastConfiguration
#define SOAP_TYPE_tt__MulticastConfiguration (319)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MulticastConfiguration(struct soap*, const char*, int, const tt__MulticastConfiguration *, const char*);
SOAP_FMAC3 tt__MulticastConfiguration * SOAP_FMAC4 soap_in_tt__MulticastConfiguration(struct soap*, const char*, tt__MulticastConfiguration *, const char*);

#ifndef soap_write_tt__MulticastConfiguration
#define soap_write_tt__MulticastConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:MulticastConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MulticastConfiguration * SOAP_FMAC4 soap_get_tt__MulticastConfiguration(struct soap*, tt__MulticastConfiguration *, const char*, const char*);

#ifndef soap_read_tt__MulticastConfiguration
#define soap_read_tt__MulticastConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__MulticastConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__MulticastConfiguration * SOAP_FMAC2 soap_instantiate_tt__MulticastConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__MulticastConfiguration * soap_new_tt__MulticastConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__MulticastConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__MulticastConfiguration * soap_new_req_tt__MulticastConfiguration(struct soap *soap, tt__IPAddress *Address, int Port, int TTL, bool AutoStart) { tt__MulticastConfiguration *_p = soap_instantiate_tt__MulticastConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MulticastConfiguration::Address = Address; _p->tt__MulticastConfiguration::Port = Port; _p->tt__MulticastConfiguration::TTL = TTL; _p->tt__MulticastConfiguration::AutoStart = AutoStart; } return _p; }

inline tt__MulticastConfiguration * soap_new_set_tt__MulticastConfiguration(struct soap *soap, tt__IPAddress *Address, int Port, int TTL, bool AutoStart) { tt__MulticastConfiguration *_p = soap_instantiate_tt__MulticastConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MulticastConfiguration::Address = Address; _p->tt__MulticastConfiguration::Port = Port; _p->tt__MulticastConfiguration::TTL = TTL; _p->tt__MulticastConfiguration::AutoStart = AutoStart; } return _p; }

inline void soap_delete_tt__MulticastConfiguration(struct soap *soap, tt__MulticastConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__MulticastConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AudioDecoderConfigurationOptionsExtension
#define SOAP_TYPE_tt__AudioDecoderConfigurationOptionsExtension (318)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioDecoderConfigurationOptionsExtension(struct soap*, const char*, int, const tt__AudioDecoderConfigurationOptionsExtension *, const char*);
SOAP_FMAC3 tt__AudioDecoderConfigurationOptionsExtension * SOAP_FMAC4 soap_in_tt__AudioDecoderConfigurationOptionsExtension(struct soap*, const char*, tt__AudioDecoderConfigurationOptionsExtension *, const char*);

#ifndef soap_write_tt__AudioDecoderConfigurationOptionsExtension
#define soap_write_tt__AudioDecoderConfigurationOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AudioDecoderConfigurationOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioDecoderConfigurationOptionsExtension * SOAP_FMAC4 soap_get_tt__AudioDecoderConfigurationOptionsExtension(struct soap*, tt__AudioDecoderConfigurationOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__AudioDecoderConfigurationOptionsExtension
#define soap_read_tt__AudioDecoderConfigurationOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AudioDecoderConfigurationOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AudioDecoderConfigurationOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__AudioDecoderConfigurationOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioDecoderConfigurationOptionsExtension * soap_new_tt__AudioDecoderConfigurationOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioDecoderConfigurationOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__AudioDecoderConfigurationOptionsExtension * soap_new_req_tt__AudioDecoderConfigurationOptionsExtension(struct soap *soap) { tt__AudioDecoderConfigurationOptionsExtension *_p = soap_instantiate_tt__AudioDecoderConfigurationOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__AudioDecoderConfigurationOptionsExtension * soap_new_set_tt__AudioDecoderConfigurationOptionsExtension(struct soap *soap) { tt__AudioDecoderConfigurationOptionsExtension *_p = soap_instantiate_tt__AudioDecoderConfigurationOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__AudioDecoderConfigurationOptionsExtension(struct soap *soap, tt__AudioDecoderConfigurationOptionsExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AudioDecoderConfigurationOptionsExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__G726DecOptions
#define SOAP_TYPE_tt__G726DecOptions (317)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__G726DecOptions(struct soap*, const char*, int, const tt__G726DecOptions *, const char*);
SOAP_FMAC3 tt__G726DecOptions * SOAP_FMAC4 soap_in_tt__G726DecOptions(struct soap*, const char*, tt__G726DecOptions *, const char*);

#ifndef soap_write_tt__G726DecOptions
#define soap_write_tt__G726DecOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:G726DecOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__G726DecOptions * SOAP_FMAC4 soap_get_tt__G726DecOptions(struct soap*, tt__G726DecOptions *, const char*, const char*);

#ifndef soap_read_tt__G726DecOptions
#define soap_read_tt__G726DecOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__G726DecOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__G726DecOptions * SOAP_FMAC2 soap_instantiate_tt__G726DecOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__G726DecOptions * soap_new_tt__G726DecOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__G726DecOptions(soap, n, NULL, NULL, NULL); }

inline tt__G726DecOptions * soap_new_req_tt__G726DecOptions(struct soap *soap, tt__IntList *Bitrate, tt__IntList *SampleRateRange) { tt__G726DecOptions *_p = soap_instantiate_tt__G726DecOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__G726DecOptions::Bitrate = Bitrate; _p->tt__G726DecOptions::SampleRateRange = SampleRateRange; } return _p; }

inline tt__G726DecOptions * soap_new_set_tt__G726DecOptions(struct soap *soap, tt__IntList *Bitrate, tt__IntList *SampleRateRange) { tt__G726DecOptions *_p = soap_instantiate_tt__G726DecOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__G726DecOptions::Bitrate = Bitrate; _p->tt__G726DecOptions::SampleRateRange = SampleRateRange; } return _p; }

inline void soap_delete_tt__G726DecOptions(struct soap *soap, tt__G726DecOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__G726DecOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AACDecOptions
#define SOAP_TYPE_tt__AACDecOptions (316)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AACDecOptions(struct soap*, const char*, int, const tt__AACDecOptions *, const char*);
SOAP_FMAC3 tt__AACDecOptions * SOAP_FMAC4 soap_in_tt__AACDecOptions(struct soap*, const char*, tt__AACDecOptions *, const char*);

#ifndef soap_write_tt__AACDecOptions
#define soap_write_tt__AACDecOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AACDecOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AACDecOptions * SOAP_FMAC4 soap_get_tt__AACDecOptions(struct soap*, tt__AACDecOptions *, const char*, const char*);

#ifndef soap_read_tt__AACDecOptions
#define soap_read_tt__AACDecOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AACDecOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AACDecOptions * SOAP_FMAC2 soap_instantiate_tt__AACDecOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__AACDecOptions * soap_new_tt__AACDecOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__AACDecOptions(soap, n, NULL, NULL, NULL); }

inline tt__AACDecOptions * soap_new_req_tt__AACDecOptions(struct soap *soap, tt__IntList *Bitrate, tt__IntList *SampleRateRange) { tt__AACDecOptions *_p = soap_instantiate_tt__AACDecOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AACDecOptions::Bitrate = Bitrate; _p->tt__AACDecOptions::SampleRateRange = SampleRateRange; } return _p; }

inline tt__AACDecOptions * soap_new_set_tt__AACDecOptions(struct soap *soap, tt__IntList *Bitrate, tt__IntList *SampleRateRange) { tt__AACDecOptions *_p = soap_instantiate_tt__AACDecOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AACDecOptions::Bitrate = Bitrate; _p->tt__AACDecOptions::SampleRateRange = SampleRateRange; } return _p; }

inline void soap_delete_tt__AACDecOptions(struct soap *soap, tt__AACDecOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AACDecOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__G711DecOptions
#define SOAP_TYPE_tt__G711DecOptions (315)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__G711DecOptions(struct soap*, const char*, int, const tt__G711DecOptions *, const char*);
SOAP_FMAC3 tt__G711DecOptions * SOAP_FMAC4 soap_in_tt__G711DecOptions(struct soap*, const char*, tt__G711DecOptions *, const char*);

#ifndef soap_write_tt__G711DecOptions
#define soap_write_tt__G711DecOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:G711DecOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__G711DecOptions * SOAP_FMAC4 soap_get_tt__G711DecOptions(struct soap*, tt__G711DecOptions *, const char*, const char*);

#ifndef soap_read_tt__G711DecOptions
#define soap_read_tt__G711DecOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__G711DecOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__G711DecOptions * SOAP_FMAC2 soap_instantiate_tt__G711DecOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__G711DecOptions * soap_new_tt__G711DecOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__G711DecOptions(soap, n, NULL, NULL, NULL); }

inline tt__G711DecOptions * soap_new_req_tt__G711DecOptions(struct soap *soap, tt__IntList *Bitrate, tt__IntList *SampleRateRange) { tt__G711DecOptions *_p = soap_instantiate_tt__G711DecOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__G711DecOptions::Bitrate = Bitrate; _p->tt__G711DecOptions::SampleRateRange = SampleRateRange; } return _p; }

inline tt__G711DecOptions * soap_new_set_tt__G711DecOptions(struct soap *soap, tt__IntList *Bitrate, tt__IntList *SampleRateRange) { tt__G711DecOptions *_p = soap_instantiate_tt__G711DecOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__G711DecOptions::Bitrate = Bitrate; _p->tt__G711DecOptions::SampleRateRange = SampleRateRange; } return _p; }

inline void soap_delete_tt__G711DecOptions(struct soap *soap, tt__G711DecOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__G711DecOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AudioDecoderConfigurationOptions
#define SOAP_TYPE_tt__AudioDecoderConfigurationOptions (314)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioDecoderConfigurationOptions(struct soap*, const char*, int, const tt__AudioDecoderConfigurationOptions *, const char*);
SOAP_FMAC3 tt__AudioDecoderConfigurationOptions * SOAP_FMAC4 soap_in_tt__AudioDecoderConfigurationOptions(struct soap*, const char*, tt__AudioDecoderConfigurationOptions *, const char*);

#ifndef soap_write_tt__AudioDecoderConfigurationOptions
#define soap_write_tt__AudioDecoderConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AudioDecoderConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioDecoderConfigurationOptions * SOAP_FMAC4 soap_get_tt__AudioDecoderConfigurationOptions(struct soap*, tt__AudioDecoderConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tt__AudioDecoderConfigurationOptions
#define soap_read_tt__AudioDecoderConfigurationOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AudioDecoderConfigurationOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AudioDecoderConfigurationOptions * SOAP_FMAC2 soap_instantiate_tt__AudioDecoderConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioDecoderConfigurationOptions * soap_new_tt__AudioDecoderConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioDecoderConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline tt__AudioDecoderConfigurationOptions * soap_new_req_tt__AudioDecoderConfigurationOptions(struct soap *soap) { tt__AudioDecoderConfigurationOptions *_p = soap_instantiate_tt__AudioDecoderConfigurationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__AudioDecoderConfigurationOptions * soap_new_set_tt__AudioDecoderConfigurationOptions(struct soap *soap, tt__AACDecOptions *AACDecOptions, tt__G711DecOptions *G711DecOptions, tt__G726DecOptions *G726DecOptions, tt__AudioDecoderConfigurationOptionsExtension *Extension) { tt__AudioDecoderConfigurationOptions *_p = soap_instantiate_tt__AudioDecoderConfigurationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AudioDecoderConfigurationOptions::AACDecOptions = AACDecOptions; _p->tt__AudioDecoderConfigurationOptions::G711DecOptions = G711DecOptions; _p->tt__AudioDecoderConfigurationOptions::G726DecOptions = G726DecOptions; _p->tt__AudioDecoderConfigurationOptions::Extension = Extension; } return _p; }

inline void soap_delete_tt__AudioDecoderConfigurationOptions(struct soap *soap, tt__AudioDecoderConfigurationOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AudioDecoderConfigurationOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AudioDecoderConfiguration
#define SOAP_TYPE_tt__AudioDecoderConfiguration (313)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioDecoderConfiguration(struct soap*, const char*, int, const tt__AudioDecoderConfiguration *, const char*);
SOAP_FMAC3 tt__AudioDecoderConfiguration * SOAP_FMAC4 soap_in_tt__AudioDecoderConfiguration(struct soap*, const char*, tt__AudioDecoderConfiguration *, const char*);

#ifndef soap_write_tt__AudioDecoderConfiguration
#define soap_write_tt__AudioDecoderConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AudioDecoderConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioDecoderConfiguration * SOAP_FMAC4 soap_get_tt__AudioDecoderConfiguration(struct soap*, tt__AudioDecoderConfiguration *, const char*, const char*);

#ifndef soap_read_tt__AudioDecoderConfiguration
#define soap_read_tt__AudioDecoderConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AudioDecoderConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AudioDecoderConfiguration * SOAP_FMAC2 soap_instantiate_tt__AudioDecoderConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioDecoderConfiguration * soap_new_tt__AudioDecoderConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioDecoderConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__AudioDecoderConfiguration * soap_new_req_tt__AudioDecoderConfiguration(struct soap *soap, std::string& Name1, int UseCount1, std::string& token1) { tt__AudioDecoderConfiguration *_p = soap_instantiate_tt__AudioDecoderConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ConfigurationEntity::Name = Name1; _p->tt__ConfigurationEntity::UseCount = UseCount1; _p->tt__ConfigurationEntity::token = token1; } return _p; }

inline tt__AudioDecoderConfiguration * soap_new_set_tt__AudioDecoderConfiguration(struct soap *soap, std::string& Name1, int UseCount1, std::string& token1) { tt__AudioDecoderConfiguration *_p = soap_instantiate_tt__AudioDecoderConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ConfigurationEntity::Name = Name1; _p->tt__ConfigurationEntity::UseCount = UseCount1; _p->tt__ConfigurationEntity::token = token1; } return _p; }

inline void soap_delete_tt__AudioDecoderConfiguration(struct soap *soap, tt__AudioDecoderConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AudioDecoderConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AudioOutputConfigurationOptions
#define SOAP_TYPE_tt__AudioOutputConfigurationOptions (312)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioOutputConfigurationOptions(struct soap*, const char*, int, const tt__AudioOutputConfigurationOptions *, const char*);
SOAP_FMAC3 tt__AudioOutputConfigurationOptions * SOAP_FMAC4 soap_in_tt__AudioOutputConfigurationOptions(struct soap*, const char*, tt__AudioOutputConfigurationOptions *, const char*);

#ifndef soap_write_tt__AudioOutputConfigurationOptions
#define soap_write_tt__AudioOutputConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AudioOutputConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioOutputConfigurationOptions * SOAP_FMAC4 soap_get_tt__AudioOutputConfigurationOptions(struct soap*, tt__AudioOutputConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tt__AudioOutputConfigurationOptions
#define soap_read_tt__AudioOutputConfigurationOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AudioOutputConfigurationOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AudioOutputConfigurationOptions * SOAP_FMAC2 soap_instantiate_tt__AudioOutputConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioOutputConfigurationOptions * soap_new_tt__AudioOutputConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioOutputConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline tt__AudioOutputConfigurationOptions * soap_new_req_tt__AudioOutputConfigurationOptions(struct soap *soap, std::vector<std::string >& OutputTokensAvailable, tt__IntRange *OutputLevelRange) { tt__AudioOutputConfigurationOptions *_p = soap_instantiate_tt__AudioOutputConfigurationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AudioOutputConfigurationOptions::OutputTokensAvailable = OutputTokensAvailable; _p->tt__AudioOutputConfigurationOptions::OutputLevelRange = OutputLevelRange; } return _p; }

inline tt__AudioOutputConfigurationOptions * soap_new_set_tt__AudioOutputConfigurationOptions(struct soap *soap, std::vector<std::string >& OutputTokensAvailable, std::vector<std::string >& SendPrimacyOptions, tt__IntRange *OutputLevelRange) { tt__AudioOutputConfigurationOptions *_p = soap_instantiate_tt__AudioOutputConfigurationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AudioOutputConfigurationOptions::OutputTokensAvailable = OutputTokensAvailable; _p->tt__AudioOutputConfigurationOptions::SendPrimacyOptions = SendPrimacyOptions; _p->tt__AudioOutputConfigurationOptions::OutputLevelRange = OutputLevelRange; } return _p; }

inline void soap_delete_tt__AudioOutputConfigurationOptions(struct soap *soap, tt__AudioOutputConfigurationOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AudioOutputConfigurationOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AudioOutputConfiguration
#define SOAP_TYPE_tt__AudioOutputConfiguration (311)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioOutputConfiguration(struct soap*, const char*, int, const tt__AudioOutputConfiguration *, const char*);
SOAP_FMAC3 tt__AudioOutputConfiguration * SOAP_FMAC4 soap_in_tt__AudioOutputConfiguration(struct soap*, const char*, tt__AudioOutputConfiguration *, const char*);

#ifndef soap_write_tt__AudioOutputConfiguration
#define soap_write_tt__AudioOutputConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AudioOutputConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioOutputConfiguration * SOAP_FMAC4 soap_get_tt__AudioOutputConfiguration(struct soap*, tt__AudioOutputConfiguration *, const char*, const char*);

#ifndef soap_read_tt__AudioOutputConfiguration
#define soap_read_tt__AudioOutputConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AudioOutputConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AudioOutputConfiguration * SOAP_FMAC2 soap_instantiate_tt__AudioOutputConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioOutputConfiguration * soap_new_tt__AudioOutputConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioOutputConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__AudioOutputConfiguration * soap_new_req_tt__AudioOutputConfiguration(struct soap *soap, std::string& OutputToken, int OutputLevel, std::string& Name1, int UseCount1, std::string& token1) { tt__AudioOutputConfiguration *_p = soap_instantiate_tt__AudioOutputConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AudioOutputConfiguration::OutputToken = OutputToken; _p->tt__AudioOutputConfiguration::OutputLevel = OutputLevel; _p->tt__ConfigurationEntity::Name = Name1; _p->tt__ConfigurationEntity::UseCount = UseCount1; _p->tt__ConfigurationEntity::token = token1; } return _p; }

inline tt__AudioOutputConfiguration * soap_new_set_tt__AudioOutputConfiguration(struct soap *soap, std::string& OutputToken, std::string *SendPrimacy, int OutputLevel, std::string& Name1, int UseCount1, std::string& token1) { tt__AudioOutputConfiguration *_p = soap_instantiate_tt__AudioOutputConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AudioOutputConfiguration::OutputToken = OutputToken; _p->tt__AudioOutputConfiguration::SendPrimacy = SendPrimacy; _p->tt__AudioOutputConfiguration::OutputLevel = OutputLevel; _p->tt__ConfigurationEntity::Name = Name1; _p->tt__ConfigurationEntity::UseCount = UseCount1; _p->tt__ConfigurationEntity::token = token1; } return _p; }

inline void soap_delete_tt__AudioOutputConfiguration(struct soap *soap, tt__AudioOutputConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AudioOutputConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AudioOutput
#define SOAP_TYPE_tt__AudioOutput (310)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioOutput(struct soap*, const char*, int, const tt__AudioOutput *, const char*);
SOAP_FMAC3 tt__AudioOutput * SOAP_FMAC4 soap_in_tt__AudioOutput(struct soap*, const char*, tt__AudioOutput *, const char*);

#ifndef soap_write_tt__AudioOutput
#define soap_write_tt__AudioOutput(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AudioOutput", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioOutput * SOAP_FMAC4 soap_get_tt__AudioOutput(struct soap*, tt__AudioOutput *, const char*, const char*);

#ifndef soap_read_tt__AudioOutput
#define soap_read_tt__AudioOutput(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AudioOutput(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AudioOutput * SOAP_FMAC2 soap_instantiate_tt__AudioOutput(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioOutput * soap_new_tt__AudioOutput(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioOutput(soap, n, NULL, NULL, NULL); }

inline tt__AudioOutput * soap_new_req_tt__AudioOutput(struct soap *soap, std::string& token1) { tt__AudioOutput *_p = soap_instantiate_tt__AudioOutput(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__DeviceEntity::token = token1; } return _p; }

inline tt__AudioOutput * soap_new_set_tt__AudioOutput(struct soap *soap, std::string& token1) { tt__AudioOutput *_p = soap_instantiate_tt__AudioOutput(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__DeviceEntity::token = token1; } return _p; }

inline void soap_delete_tt__AudioOutput(struct soap *soap, tt__AudioOutput *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AudioOutput(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__VideoDecoderConfigurationOptionsExtension
#define SOAP_TYPE_tt__VideoDecoderConfigurationOptionsExtension (309)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoDecoderConfigurationOptionsExtension(struct soap*, const char*, int, const tt__VideoDecoderConfigurationOptionsExtension *, const char*);
SOAP_FMAC3 tt__VideoDecoderConfigurationOptionsExtension * SOAP_FMAC4 soap_in_tt__VideoDecoderConfigurationOptionsExtension(struct soap*, const char*, tt__VideoDecoderConfigurationOptionsExtension *, const char*);

#ifndef soap_write_tt__VideoDecoderConfigurationOptionsExtension
#define soap_write_tt__VideoDecoderConfigurationOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:VideoDecoderConfigurationOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoDecoderConfigurationOptionsExtension * SOAP_FMAC4 soap_get_tt__VideoDecoderConfigurationOptionsExtension(struct soap*, tt__VideoDecoderConfigurationOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__VideoDecoderConfigurationOptionsExtension
#define soap_read_tt__VideoDecoderConfigurationOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoDecoderConfigurationOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__VideoDecoderConfigurationOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__VideoDecoderConfigurationOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoDecoderConfigurationOptionsExtension * soap_new_tt__VideoDecoderConfigurationOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoDecoderConfigurationOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__VideoDecoderConfigurationOptionsExtension * soap_new_req_tt__VideoDecoderConfigurationOptionsExtension(struct soap *soap) { tt__VideoDecoderConfigurationOptionsExtension *_p = soap_instantiate_tt__VideoDecoderConfigurationOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__VideoDecoderConfigurationOptionsExtension * soap_new_set_tt__VideoDecoderConfigurationOptionsExtension(struct soap *soap) { tt__VideoDecoderConfigurationOptionsExtension *_p = soap_instantiate_tt__VideoDecoderConfigurationOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__VideoDecoderConfigurationOptionsExtension(struct soap *soap, tt__VideoDecoderConfigurationOptionsExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__VideoDecoderConfigurationOptionsExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Mpeg4DecOptions
#define SOAP_TYPE_tt__Mpeg4DecOptions (308)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Mpeg4DecOptions(struct soap*, const char*, int, const tt__Mpeg4DecOptions *, const char*);
SOAP_FMAC3 tt__Mpeg4DecOptions * SOAP_FMAC4 soap_in_tt__Mpeg4DecOptions(struct soap*, const char*, tt__Mpeg4DecOptions *, const char*);

#ifndef soap_write_tt__Mpeg4DecOptions
#define soap_write_tt__Mpeg4DecOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Mpeg4DecOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Mpeg4DecOptions * SOAP_FMAC4 soap_get_tt__Mpeg4DecOptions(struct soap*, tt__Mpeg4DecOptions *, const char*, const char*);

#ifndef soap_read_tt__Mpeg4DecOptions
#define soap_read_tt__Mpeg4DecOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Mpeg4DecOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Mpeg4DecOptions * SOAP_FMAC2 soap_instantiate_tt__Mpeg4DecOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__Mpeg4DecOptions * soap_new_tt__Mpeg4DecOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__Mpeg4DecOptions(soap, n, NULL, NULL, NULL); }

inline tt__Mpeg4DecOptions * soap_new_req_tt__Mpeg4DecOptions(struct soap *soap, std::vector<tt__VideoResolution * >& ResolutionsAvailable, std::vector<enum tt__Mpeg4Profile >& SupportedMpeg4Profiles, tt__IntRange *SupportedInputBitrate, tt__IntRange *SupportedFrameRate) { tt__Mpeg4DecOptions *_p = soap_instantiate_tt__Mpeg4DecOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Mpeg4DecOptions::ResolutionsAvailable = ResolutionsAvailable; _p->tt__Mpeg4DecOptions::SupportedMpeg4Profiles = SupportedMpeg4Profiles; _p->tt__Mpeg4DecOptions::SupportedInputBitrate = SupportedInputBitrate; _p->tt__Mpeg4DecOptions::SupportedFrameRate = SupportedFrameRate; } return _p; }

inline tt__Mpeg4DecOptions * soap_new_set_tt__Mpeg4DecOptions(struct soap *soap, std::vector<tt__VideoResolution * >& ResolutionsAvailable, std::vector<enum tt__Mpeg4Profile >& SupportedMpeg4Profiles, tt__IntRange *SupportedInputBitrate, tt__IntRange *SupportedFrameRate) { tt__Mpeg4DecOptions *_p = soap_instantiate_tt__Mpeg4DecOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Mpeg4DecOptions::ResolutionsAvailable = ResolutionsAvailable; _p->tt__Mpeg4DecOptions::SupportedMpeg4Profiles = SupportedMpeg4Profiles; _p->tt__Mpeg4DecOptions::SupportedInputBitrate = SupportedInputBitrate; _p->tt__Mpeg4DecOptions::SupportedFrameRate = SupportedFrameRate; } return _p; }

inline void soap_delete_tt__Mpeg4DecOptions(struct soap *soap, tt__Mpeg4DecOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Mpeg4DecOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__JpegDecOptions
#define SOAP_TYPE_tt__JpegDecOptions (307)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__JpegDecOptions(struct soap*, const char*, int, const tt__JpegDecOptions *, const char*);
SOAP_FMAC3 tt__JpegDecOptions * SOAP_FMAC4 soap_in_tt__JpegDecOptions(struct soap*, const char*, tt__JpegDecOptions *, const char*);

#ifndef soap_write_tt__JpegDecOptions
#define soap_write_tt__JpegDecOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:JpegDecOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__JpegDecOptions * SOAP_FMAC4 soap_get_tt__JpegDecOptions(struct soap*, tt__JpegDecOptions *, const char*, const char*);

#ifndef soap_read_tt__JpegDecOptions
#define soap_read_tt__JpegDecOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__JpegDecOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__JpegDecOptions * SOAP_FMAC2 soap_instantiate_tt__JpegDecOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__JpegDecOptions * soap_new_tt__JpegDecOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__JpegDecOptions(soap, n, NULL, NULL, NULL); }

inline tt__JpegDecOptions * soap_new_req_tt__JpegDecOptions(struct soap *soap, std::vector<tt__VideoResolution * >& ResolutionsAvailable, tt__IntRange *SupportedInputBitrate, tt__IntRange *SupportedFrameRate) { tt__JpegDecOptions *_p = soap_instantiate_tt__JpegDecOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__JpegDecOptions::ResolutionsAvailable = ResolutionsAvailable; _p->tt__JpegDecOptions::SupportedInputBitrate = SupportedInputBitrate; _p->tt__JpegDecOptions::SupportedFrameRate = SupportedFrameRate; } return _p; }

inline tt__JpegDecOptions * soap_new_set_tt__JpegDecOptions(struct soap *soap, std::vector<tt__VideoResolution * >& ResolutionsAvailable, tt__IntRange *SupportedInputBitrate, tt__IntRange *SupportedFrameRate) { tt__JpegDecOptions *_p = soap_instantiate_tt__JpegDecOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__JpegDecOptions::ResolutionsAvailable = ResolutionsAvailable; _p->tt__JpegDecOptions::SupportedInputBitrate = SupportedInputBitrate; _p->tt__JpegDecOptions::SupportedFrameRate = SupportedFrameRate; } return _p; }

inline void soap_delete_tt__JpegDecOptions(struct soap *soap, tt__JpegDecOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__JpegDecOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__H264DecOptions
#define SOAP_TYPE_tt__H264DecOptions (306)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__H264DecOptions(struct soap*, const char*, int, const tt__H264DecOptions *, const char*);
SOAP_FMAC3 tt__H264DecOptions * SOAP_FMAC4 soap_in_tt__H264DecOptions(struct soap*, const char*, tt__H264DecOptions *, const char*);

#ifndef soap_write_tt__H264DecOptions
#define soap_write_tt__H264DecOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:H264DecOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__H264DecOptions * SOAP_FMAC4 soap_get_tt__H264DecOptions(struct soap*, tt__H264DecOptions *, const char*, const char*);

#ifndef soap_read_tt__H264DecOptions
#define soap_read_tt__H264DecOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__H264DecOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__H264DecOptions * SOAP_FMAC2 soap_instantiate_tt__H264DecOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__H264DecOptions * soap_new_tt__H264DecOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__H264DecOptions(soap, n, NULL, NULL, NULL); }

inline tt__H264DecOptions * soap_new_req_tt__H264DecOptions(struct soap *soap, std::vector<tt__VideoResolution * >& ResolutionsAvailable, std::vector<enum tt__H264Profile >& SupportedH264Profiles, tt__IntRange *SupportedInputBitrate, tt__IntRange *SupportedFrameRate) { tt__H264DecOptions *_p = soap_instantiate_tt__H264DecOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__H264DecOptions::ResolutionsAvailable = ResolutionsAvailable; _p->tt__H264DecOptions::SupportedH264Profiles = SupportedH264Profiles; _p->tt__H264DecOptions::SupportedInputBitrate = SupportedInputBitrate; _p->tt__H264DecOptions::SupportedFrameRate = SupportedFrameRate; } return _p; }

inline tt__H264DecOptions * soap_new_set_tt__H264DecOptions(struct soap *soap, std::vector<tt__VideoResolution * >& ResolutionsAvailable, std::vector<enum tt__H264Profile >& SupportedH264Profiles, tt__IntRange *SupportedInputBitrate, tt__IntRange *SupportedFrameRate) { tt__H264DecOptions *_p = soap_instantiate_tt__H264DecOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__H264DecOptions::ResolutionsAvailable = ResolutionsAvailable; _p->tt__H264DecOptions::SupportedH264Profiles = SupportedH264Profiles; _p->tt__H264DecOptions::SupportedInputBitrate = SupportedInputBitrate; _p->tt__H264DecOptions::SupportedFrameRate = SupportedFrameRate; } return _p; }

inline void soap_delete_tt__H264DecOptions(struct soap *soap, tt__H264DecOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__H264DecOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__VideoDecoderConfigurationOptions
#define SOAP_TYPE_tt__VideoDecoderConfigurationOptions (305)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoDecoderConfigurationOptions(struct soap*, const char*, int, const tt__VideoDecoderConfigurationOptions *, const char*);
SOAP_FMAC3 tt__VideoDecoderConfigurationOptions * SOAP_FMAC4 soap_in_tt__VideoDecoderConfigurationOptions(struct soap*, const char*, tt__VideoDecoderConfigurationOptions *, const char*);

#ifndef soap_write_tt__VideoDecoderConfigurationOptions
#define soap_write_tt__VideoDecoderConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:VideoDecoderConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoDecoderConfigurationOptions * SOAP_FMAC4 soap_get_tt__VideoDecoderConfigurationOptions(struct soap*, tt__VideoDecoderConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tt__VideoDecoderConfigurationOptions
#define soap_read_tt__VideoDecoderConfigurationOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoDecoderConfigurationOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__VideoDecoderConfigurationOptions * SOAP_FMAC2 soap_instantiate_tt__VideoDecoderConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoDecoderConfigurationOptions * soap_new_tt__VideoDecoderConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoDecoderConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline tt__VideoDecoderConfigurationOptions * soap_new_req_tt__VideoDecoderConfigurationOptions(struct soap *soap) { tt__VideoDecoderConfigurationOptions *_p = soap_instantiate_tt__VideoDecoderConfigurationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__VideoDecoderConfigurationOptions * soap_new_set_tt__VideoDecoderConfigurationOptions(struct soap *soap, tt__JpegDecOptions *JpegDecOptions, tt__H264DecOptions *H264DecOptions, tt__Mpeg4DecOptions *Mpeg4DecOptions, tt__VideoDecoderConfigurationOptionsExtension *Extension) { tt__VideoDecoderConfigurationOptions *_p = soap_instantiate_tt__VideoDecoderConfigurationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoDecoderConfigurationOptions::JpegDecOptions = JpegDecOptions; _p->tt__VideoDecoderConfigurationOptions::H264DecOptions = H264DecOptions; _p->tt__VideoDecoderConfigurationOptions::Mpeg4DecOptions = Mpeg4DecOptions; _p->tt__VideoDecoderConfigurationOptions::Extension = Extension; } return _p; }

inline void soap_delete_tt__VideoDecoderConfigurationOptions(struct soap *soap, tt__VideoDecoderConfigurationOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__VideoDecoderConfigurationOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__VideoOutputConfigurationOptions
#define SOAP_TYPE_tt__VideoOutputConfigurationOptions (304)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoOutputConfigurationOptions(struct soap*, const char*, int, const tt__VideoOutputConfigurationOptions *, const char*);
SOAP_FMAC3 tt__VideoOutputConfigurationOptions * SOAP_FMAC4 soap_in_tt__VideoOutputConfigurationOptions(struct soap*, const char*, tt__VideoOutputConfigurationOptions *, const char*);

#ifndef soap_write_tt__VideoOutputConfigurationOptions
#define soap_write_tt__VideoOutputConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:VideoOutputConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoOutputConfigurationOptions * SOAP_FMAC4 soap_get_tt__VideoOutputConfigurationOptions(struct soap*, tt__VideoOutputConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tt__VideoOutputConfigurationOptions
#define soap_read_tt__VideoOutputConfigurationOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoOutputConfigurationOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__VideoOutputConfigurationOptions * SOAP_FMAC2 soap_instantiate_tt__VideoOutputConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoOutputConfigurationOptions * soap_new_tt__VideoOutputConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoOutputConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline tt__VideoOutputConfigurationOptions * soap_new_req_tt__VideoOutputConfigurationOptions(struct soap *soap) { tt__VideoOutputConfigurationOptions *_p = soap_instantiate_tt__VideoOutputConfigurationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__VideoOutputConfigurationOptions * soap_new_set_tt__VideoOutputConfigurationOptions(struct soap *soap) { tt__VideoOutputConfigurationOptions *_p = soap_instantiate_tt__VideoOutputConfigurationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__VideoOutputConfigurationOptions(struct soap *soap, tt__VideoOutputConfigurationOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__VideoOutputConfigurationOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__VideoOutputConfiguration
#define SOAP_TYPE_tt__VideoOutputConfiguration (303)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoOutputConfiguration(struct soap*, const char*, int, const tt__VideoOutputConfiguration *, const char*);
SOAP_FMAC3 tt__VideoOutputConfiguration * SOAP_FMAC4 soap_in_tt__VideoOutputConfiguration(struct soap*, const char*, tt__VideoOutputConfiguration *, const char*);

#ifndef soap_write_tt__VideoOutputConfiguration
#define soap_write_tt__VideoOutputConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:VideoOutputConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoOutputConfiguration * SOAP_FMAC4 soap_get_tt__VideoOutputConfiguration(struct soap*, tt__VideoOutputConfiguration *, const char*, const char*);

#ifndef soap_read_tt__VideoOutputConfiguration
#define soap_read_tt__VideoOutputConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoOutputConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__VideoOutputConfiguration * SOAP_FMAC2 soap_instantiate_tt__VideoOutputConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoOutputConfiguration * soap_new_tt__VideoOutputConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoOutputConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__VideoOutputConfiguration * soap_new_req_tt__VideoOutputConfiguration(struct soap *soap, std::string& OutputToken, std::string& Name1, int UseCount1, std::string& token1) { tt__VideoOutputConfiguration *_p = soap_instantiate_tt__VideoOutputConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoOutputConfiguration::OutputToken = OutputToken; _p->tt__ConfigurationEntity::Name = Name1; _p->tt__ConfigurationEntity::UseCount = UseCount1; _p->tt__ConfigurationEntity::token = token1; } return _p; }

inline tt__VideoOutputConfiguration * soap_new_set_tt__VideoOutputConfiguration(struct soap *soap, std::string& OutputToken, std::string& Name1, int UseCount1, std::string& token1) { tt__VideoOutputConfiguration *_p = soap_instantiate_tt__VideoOutputConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoOutputConfiguration::OutputToken = OutputToken; _p->tt__ConfigurationEntity::Name = Name1; _p->tt__ConfigurationEntity::UseCount = UseCount1; _p->tt__ConfigurationEntity::token = token1; } return _p; }

inline void soap_delete_tt__VideoOutputConfiguration(struct soap *soap, tt__VideoOutputConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__VideoOutputConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__VideoOutputExtension
#define SOAP_TYPE_tt__VideoOutputExtension (302)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoOutputExtension(struct soap*, const char*, int, const tt__VideoOutputExtension *, const char*);
SOAP_FMAC3 tt__VideoOutputExtension * SOAP_FMAC4 soap_in_tt__VideoOutputExtension(struct soap*, const char*, tt__VideoOutputExtension *, const char*);

#ifndef soap_write_tt__VideoOutputExtension
#define soap_write_tt__VideoOutputExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:VideoOutputExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoOutputExtension * SOAP_FMAC4 soap_get_tt__VideoOutputExtension(struct soap*, tt__VideoOutputExtension *, const char*, const char*);

#ifndef soap_read_tt__VideoOutputExtension
#define soap_read_tt__VideoOutputExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoOutputExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__VideoOutputExtension * SOAP_FMAC2 soap_instantiate_tt__VideoOutputExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoOutputExtension * soap_new_tt__VideoOutputExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoOutputExtension(soap, n, NULL, NULL, NULL); }

inline tt__VideoOutputExtension * soap_new_req_tt__VideoOutputExtension(struct soap *soap) { tt__VideoOutputExtension *_p = soap_instantiate_tt__VideoOutputExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__VideoOutputExtension * soap_new_set_tt__VideoOutputExtension(struct soap *soap) { tt__VideoOutputExtension *_p = soap_instantiate_tt__VideoOutputExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__VideoOutputExtension(struct soap *soap, tt__VideoOutputExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__VideoOutputExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__VideoOutput
#define SOAP_TYPE_tt__VideoOutput (301)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoOutput(struct soap*, const char*, int, const tt__VideoOutput *, const char*);
SOAP_FMAC3 tt__VideoOutput * SOAP_FMAC4 soap_in_tt__VideoOutput(struct soap*, const char*, tt__VideoOutput *, const char*);

#ifndef soap_write_tt__VideoOutput
#define soap_write_tt__VideoOutput(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:VideoOutput", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoOutput * SOAP_FMAC4 soap_get_tt__VideoOutput(struct soap*, tt__VideoOutput *, const char*, const char*);

#ifndef soap_read_tt__VideoOutput
#define soap_read_tt__VideoOutput(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoOutput(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__VideoOutput * SOAP_FMAC2 soap_instantiate_tt__VideoOutput(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoOutput * soap_new_tt__VideoOutput(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoOutput(soap, n, NULL, NULL, NULL); }

inline tt__VideoOutput * soap_new_req_tt__VideoOutput(struct soap *soap, tt__Layout *Layout, std::string& token1) { tt__VideoOutput *_p = soap_instantiate_tt__VideoOutput(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoOutput::Layout = Layout; _p->tt__DeviceEntity::token = token1; } return _p; }

inline tt__VideoOutput * soap_new_set_tt__VideoOutput(struct soap *soap, tt__Layout *Layout, tt__VideoResolution *Resolution, float *RefreshRate, float *AspectRatio, tt__VideoOutputExtension *Extension, std::string& token1) { tt__VideoOutput *_p = soap_instantiate_tt__VideoOutput(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoOutput::Layout = Layout; _p->tt__VideoOutput::Resolution = Resolution; _p->tt__VideoOutput::RefreshRate = RefreshRate; _p->tt__VideoOutput::AspectRatio = AspectRatio; _p->tt__VideoOutput::Extension = Extension; _p->tt__DeviceEntity::token = token1; } return _p; }

inline void soap_delete_tt__VideoOutput(struct soap *soap, tt__VideoOutput *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__VideoOutput(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZStatusFilterOptionsExtension
#define SOAP_TYPE_tt__PTZStatusFilterOptionsExtension (300)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZStatusFilterOptionsExtension(struct soap*, const char*, int, const tt__PTZStatusFilterOptionsExtension *, const char*);
SOAP_FMAC3 tt__PTZStatusFilterOptionsExtension * SOAP_FMAC4 soap_in_tt__PTZStatusFilterOptionsExtension(struct soap*, const char*, tt__PTZStatusFilterOptionsExtension *, const char*);

#ifndef soap_write_tt__PTZStatusFilterOptionsExtension
#define soap_write_tt__PTZStatusFilterOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZStatusFilterOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZStatusFilterOptionsExtension * SOAP_FMAC4 soap_get_tt__PTZStatusFilterOptionsExtension(struct soap*, tt__PTZStatusFilterOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__PTZStatusFilterOptionsExtension
#define soap_read_tt__PTZStatusFilterOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZStatusFilterOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZStatusFilterOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__PTZStatusFilterOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZStatusFilterOptionsExtension * soap_new_tt__PTZStatusFilterOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZStatusFilterOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTZStatusFilterOptionsExtension * soap_new_req_tt__PTZStatusFilterOptionsExtension(struct soap *soap) { tt__PTZStatusFilterOptionsExtension *_p = soap_instantiate_tt__PTZStatusFilterOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__PTZStatusFilterOptionsExtension * soap_new_set_tt__PTZStatusFilterOptionsExtension(struct soap *soap) { tt__PTZStatusFilterOptionsExtension *_p = soap_instantiate_tt__PTZStatusFilterOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__PTZStatusFilterOptionsExtension(struct soap *soap, tt__PTZStatusFilterOptionsExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZStatusFilterOptionsExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZStatusFilterOptions
#define SOAP_TYPE_tt__PTZStatusFilterOptions (299)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZStatusFilterOptions(struct soap*, const char*, int, const tt__PTZStatusFilterOptions *, const char*);
SOAP_FMAC3 tt__PTZStatusFilterOptions * SOAP_FMAC4 soap_in_tt__PTZStatusFilterOptions(struct soap*, const char*, tt__PTZStatusFilterOptions *, const char*);

#ifndef soap_write_tt__PTZStatusFilterOptions
#define soap_write_tt__PTZStatusFilterOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZStatusFilterOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZStatusFilterOptions * SOAP_FMAC4 soap_get_tt__PTZStatusFilterOptions(struct soap*, tt__PTZStatusFilterOptions *, const char*, const char*);

#ifndef soap_read_tt__PTZStatusFilterOptions
#define soap_read_tt__PTZStatusFilterOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZStatusFilterOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZStatusFilterOptions * SOAP_FMAC2 soap_instantiate_tt__PTZStatusFilterOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZStatusFilterOptions * soap_new_tt__PTZStatusFilterOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZStatusFilterOptions(soap, n, NULL, NULL, NULL); }

inline tt__PTZStatusFilterOptions * soap_new_req_tt__PTZStatusFilterOptions(struct soap *soap, bool PanTiltStatusSupported, bool ZoomStatusSupported) { tt__PTZStatusFilterOptions *_p = soap_instantiate_tt__PTZStatusFilterOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZStatusFilterOptions::PanTiltStatusSupported = PanTiltStatusSupported; _p->tt__PTZStatusFilterOptions::ZoomStatusSupported = ZoomStatusSupported; } return _p; }

inline tt__PTZStatusFilterOptions * soap_new_set_tt__PTZStatusFilterOptions(struct soap *soap, bool PanTiltStatusSupported, bool ZoomStatusSupported, bool *PanTiltPositionSupported, bool *ZoomPositionSupported, tt__PTZStatusFilterOptionsExtension *Extension) { tt__PTZStatusFilterOptions *_p = soap_instantiate_tt__PTZStatusFilterOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZStatusFilterOptions::PanTiltStatusSupported = PanTiltStatusSupported; _p->tt__PTZStatusFilterOptions::ZoomStatusSupported = ZoomStatusSupported; _p->tt__PTZStatusFilterOptions::PanTiltPositionSupported = PanTiltPositionSupported; _p->tt__PTZStatusFilterOptions::ZoomPositionSupported = ZoomPositionSupported; _p->tt__PTZStatusFilterOptions::Extension = Extension; } return _p; }

inline void soap_delete_tt__PTZStatusFilterOptions(struct soap *soap, tt__PTZStatusFilterOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZStatusFilterOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__MetadataConfigurationOptions
#define SOAP_TYPE_tt__MetadataConfigurationOptions (298)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MetadataConfigurationOptions(struct soap*, const char*, int, const tt__MetadataConfigurationOptions *, const char*);
SOAP_FMAC3 tt__MetadataConfigurationOptions * SOAP_FMAC4 soap_in_tt__MetadataConfigurationOptions(struct soap*, const char*, tt__MetadataConfigurationOptions *, const char*);

#ifndef soap_write_tt__MetadataConfigurationOptions
#define soap_write_tt__MetadataConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:MetadataConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataConfigurationOptions * SOAP_FMAC4 soap_get_tt__MetadataConfigurationOptions(struct soap*, tt__MetadataConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tt__MetadataConfigurationOptions
#define soap_read_tt__MetadataConfigurationOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__MetadataConfigurationOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__MetadataConfigurationOptions * SOAP_FMAC2 soap_instantiate_tt__MetadataConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__MetadataConfigurationOptions * soap_new_tt__MetadataConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__MetadataConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline tt__MetadataConfigurationOptions * soap_new_req_tt__MetadataConfigurationOptions(struct soap *soap, tt__PTZStatusFilterOptions *PTZStatusFilterOptions) { tt__MetadataConfigurationOptions *_p = soap_instantiate_tt__MetadataConfigurationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MetadataConfigurationOptions::PTZStatusFilterOptions = PTZStatusFilterOptions; } return _p; }

inline tt__MetadataConfigurationOptions * soap_new_set_tt__MetadataConfigurationOptions(struct soap *soap, tt__PTZStatusFilterOptions *PTZStatusFilterOptions) { tt__MetadataConfigurationOptions *_p = soap_instantiate_tt__MetadataConfigurationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MetadataConfigurationOptions::PTZStatusFilterOptions = PTZStatusFilterOptions; } return _p; }

inline void soap_delete_tt__MetadataConfigurationOptions(struct soap *soap, tt__MetadataConfigurationOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__MetadataConfigurationOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__EventSubscription
#define SOAP_TYPE_tt__EventSubscription (297)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__EventSubscription(struct soap*, const char*, int, const tt__EventSubscription *, const char*);
SOAP_FMAC3 tt__EventSubscription * SOAP_FMAC4 soap_in_tt__EventSubscription(struct soap*, const char*, tt__EventSubscription *, const char*);

#ifndef soap_write_tt__EventSubscription
#define soap_write_tt__EventSubscription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:EventSubscription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EventSubscription * SOAP_FMAC4 soap_get_tt__EventSubscription(struct soap*, tt__EventSubscription *, const char*, const char*);

#ifndef soap_read_tt__EventSubscription
#define soap_read_tt__EventSubscription(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__EventSubscription(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__EventSubscription * SOAP_FMAC2 soap_instantiate_tt__EventSubscription(struct soap*, int, const char*, const char*, size_t*);

inline tt__EventSubscription * soap_new_tt__EventSubscription(struct soap *soap, int n = -1) { return soap_instantiate_tt__EventSubscription(soap, n, NULL, NULL, NULL); }

inline tt__EventSubscription * soap_new_req_tt__EventSubscription(struct soap *soap) { tt__EventSubscription *_p = soap_instantiate_tt__EventSubscription(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__EventSubscription * soap_new_set_tt__EventSubscription(struct soap *soap, wsnt__FilterType *Filter, _tt__EventSubscription_SubscriptionPolicy *SubscriptionPolicy) { tt__EventSubscription *_p = soap_instantiate_tt__EventSubscription(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__EventSubscription::Filter = Filter; _p->tt__EventSubscription::SubscriptionPolicy = SubscriptionPolicy; } return _p; }

inline void soap_delete_tt__EventSubscription(struct soap *soap, tt__EventSubscription *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__EventSubscription(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__PTZFilter
#define SOAP_TYPE_tt__PTZFilter (296)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZFilter(struct soap*, const char*, int, const tt__PTZFilter *, const char*);
SOAP_FMAC3 tt__PTZFilter * SOAP_FMAC4 soap_in_tt__PTZFilter(struct soap*, const char*, tt__PTZFilter *, const char*);

#ifndef soap_write_tt__PTZFilter
#define soap_write_tt__PTZFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:PTZFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZFilter * SOAP_FMAC4 soap_get_tt__PTZFilter(struct soap*, tt__PTZFilter *, const char*, const char*);

#ifndef soap_read_tt__PTZFilter
#define soap_read_tt__PTZFilter(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PTZFilter(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__PTZFilter * SOAP_FMAC2 soap_instantiate_tt__PTZFilter(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZFilter * soap_new_tt__PTZFilter(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZFilter(soap, n, NULL, NULL, NULL); }

inline tt__PTZFilter * soap_new_req_tt__PTZFilter(struct soap *soap, bool Status, bool Position) { tt__PTZFilter *_p = soap_instantiate_tt__PTZFilter(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZFilter::Status = Status; _p->tt__PTZFilter::Position = Position; } return _p; }

inline tt__PTZFilter * soap_new_set_tt__PTZFilter(struct soap *soap, bool Status, bool Position) { tt__PTZFilter *_p = soap_instantiate_tt__PTZFilter(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__PTZFilter::Status = Status; _p->tt__PTZFilter::Position = Position; } return _p; }

inline void soap_delete_tt__PTZFilter(struct soap *soap, tt__PTZFilter *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__PTZFilter(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__MetadataConfigurationExtension
#define SOAP_TYPE_tt__MetadataConfigurationExtension (295)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MetadataConfigurationExtension(struct soap*, const char*, int, const tt__MetadataConfigurationExtension *, const char*);
SOAP_FMAC3 tt__MetadataConfigurationExtension * SOAP_FMAC4 soap_in_tt__MetadataConfigurationExtension(struct soap*, const char*, tt__MetadataConfigurationExtension *, const char*);

#ifndef soap_write_tt__MetadataConfigurationExtension
#define soap_write_tt__MetadataConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:MetadataConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataConfigurationExtension * SOAP_FMAC4 soap_get_tt__MetadataConfigurationExtension(struct soap*, tt__MetadataConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__MetadataConfigurationExtension
#define soap_read_tt__MetadataConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__MetadataConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__MetadataConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__MetadataConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__MetadataConfigurationExtension * soap_new_tt__MetadataConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__MetadataConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__MetadataConfigurationExtension * soap_new_req_tt__MetadataConfigurationExtension(struct soap *soap) { tt__MetadataConfigurationExtension *_p = soap_instantiate_tt__MetadataConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__MetadataConfigurationExtension * soap_new_set_tt__MetadataConfigurationExtension(struct soap *soap) { tt__MetadataConfigurationExtension *_p = soap_instantiate_tt__MetadataConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__MetadataConfigurationExtension(struct soap *soap, tt__MetadataConfigurationExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__MetadataConfigurationExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__MetadataConfiguration
#define SOAP_TYPE_tt__MetadataConfiguration (294)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MetadataConfiguration(struct soap*, const char*, int, const tt__MetadataConfiguration *, const char*);
SOAP_FMAC3 tt__MetadataConfiguration * SOAP_FMAC4 soap_in_tt__MetadataConfiguration(struct soap*, const char*, tt__MetadataConfiguration *, const char*);

#ifndef soap_write_tt__MetadataConfiguration
#define soap_write_tt__MetadataConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:MetadataConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataConfiguration * SOAP_FMAC4 soap_get_tt__MetadataConfiguration(struct soap*, tt__MetadataConfiguration *, const char*, const char*);

#ifndef soap_read_tt__MetadataConfiguration
#define soap_read_tt__MetadataConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__MetadataConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__MetadataConfiguration * SOAP_FMAC2 soap_instantiate_tt__MetadataConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__MetadataConfiguration * soap_new_tt__MetadataConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__MetadataConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__MetadataConfiguration * soap_new_req_tt__MetadataConfiguration(struct soap *soap, tt__MulticastConfiguration *Multicast, LONG64 SessionTimeout, std::string& Name1, int UseCount1, std::string& token1) { tt__MetadataConfiguration *_p = soap_instantiate_tt__MetadataConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MetadataConfiguration::Multicast = Multicast; _p->tt__MetadataConfiguration::SessionTimeout = SessionTimeout; _p->tt__ConfigurationEntity::Name = Name1; _p->tt__ConfigurationEntity::UseCount = UseCount1; _p->tt__ConfigurationEntity::token = token1; } return _p; }

inline tt__MetadataConfiguration * soap_new_set_tt__MetadataConfiguration(struct soap *soap, tt__PTZFilter *PTZStatus, tt__EventSubscription *Events, bool *Analytics, tt__MulticastConfiguration *Multicast, LONG64 SessionTimeout, tt__AnalyticsEngineConfiguration *AnalyticsEngineConfiguration, tt__MetadataConfigurationExtension *Extension, std::string& Name1, int UseCount1, std::string& token1) { tt__MetadataConfiguration *_p = soap_instantiate_tt__MetadataConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__MetadataConfiguration::PTZStatus = PTZStatus; _p->tt__MetadataConfiguration::Events = Events; _p->tt__MetadataConfiguration::Analytics = Analytics; _p->tt__MetadataConfiguration::Multicast = Multicast; _p->tt__MetadataConfiguration::SessionTimeout = SessionTimeout; _p->tt__MetadataConfiguration::AnalyticsEngineConfiguration = AnalyticsEngineConfiguration; _p->tt__MetadataConfiguration::Extension = Extension; _p->tt__ConfigurationEntity::Name = Name1; _p->tt__ConfigurationEntity::UseCount = UseCount1; _p->tt__ConfigurationEntity::token = token1; } return _p; }

inline void soap_delete_tt__MetadataConfiguration(struct soap *soap, tt__MetadataConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__MetadataConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__VideoAnalyticsConfiguration
#define SOAP_TYPE_tt__VideoAnalyticsConfiguration (293)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoAnalyticsConfiguration(struct soap*, const char*, int, const tt__VideoAnalyticsConfiguration *, const char*);
SOAP_FMAC3 tt__VideoAnalyticsConfiguration * SOAP_FMAC4 soap_in_tt__VideoAnalyticsConfiguration(struct soap*, const char*, tt__VideoAnalyticsConfiguration *, const char*);

#ifndef soap_write_tt__VideoAnalyticsConfiguration
#define soap_write_tt__VideoAnalyticsConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:VideoAnalyticsConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoAnalyticsConfiguration * SOAP_FMAC4 soap_get_tt__VideoAnalyticsConfiguration(struct soap*, tt__VideoAnalyticsConfiguration *, const char*, const char*);

#ifndef soap_read_tt__VideoAnalyticsConfiguration
#define soap_read_tt__VideoAnalyticsConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoAnalyticsConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__VideoAnalyticsConfiguration * SOAP_FMAC2 soap_instantiate_tt__VideoAnalyticsConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoAnalyticsConfiguration * soap_new_tt__VideoAnalyticsConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoAnalyticsConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__VideoAnalyticsConfiguration * soap_new_req_tt__VideoAnalyticsConfiguration(struct soap *soap, tt__AnalyticsEngineConfiguration *AnalyticsEngineConfiguration, tt__RuleEngineConfiguration *RuleEngineConfiguration, std::string& Name1, int UseCount1, std::string& token1) { tt__VideoAnalyticsConfiguration *_p = soap_instantiate_tt__VideoAnalyticsConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoAnalyticsConfiguration::AnalyticsEngineConfiguration = AnalyticsEngineConfiguration; _p->tt__VideoAnalyticsConfiguration::RuleEngineConfiguration = RuleEngineConfiguration; _p->tt__ConfigurationEntity::Name = Name1; _p->tt__ConfigurationEntity::UseCount = UseCount1; _p->tt__ConfigurationEntity::token = token1; } return _p; }

inline tt__VideoAnalyticsConfiguration * soap_new_set_tt__VideoAnalyticsConfiguration(struct soap *soap, tt__AnalyticsEngineConfiguration *AnalyticsEngineConfiguration, tt__RuleEngineConfiguration *RuleEngineConfiguration, std::string& Name1, int UseCount1, std::string& token1) { tt__VideoAnalyticsConfiguration *_p = soap_instantiate_tt__VideoAnalyticsConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoAnalyticsConfiguration::AnalyticsEngineConfiguration = AnalyticsEngineConfiguration; _p->tt__VideoAnalyticsConfiguration::RuleEngineConfiguration = RuleEngineConfiguration; _p->tt__ConfigurationEntity::Name = Name1; _p->tt__ConfigurationEntity::UseCount = UseCount1; _p->tt__ConfigurationEntity::token = token1; } return _p; }

inline void soap_delete_tt__VideoAnalyticsConfiguration(struct soap *soap, tt__VideoAnalyticsConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__VideoAnalyticsConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AudioEncoderConfigurationOption
#define SOAP_TYPE_tt__AudioEncoderConfigurationOption (292)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioEncoderConfigurationOption(struct soap*, const char*, int, const tt__AudioEncoderConfigurationOption *, const char*);
SOAP_FMAC3 tt__AudioEncoderConfigurationOption * SOAP_FMAC4 soap_in_tt__AudioEncoderConfigurationOption(struct soap*, const char*, tt__AudioEncoderConfigurationOption *, const char*);

#ifndef soap_write_tt__AudioEncoderConfigurationOption
#define soap_write_tt__AudioEncoderConfigurationOption(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AudioEncoderConfigurationOption", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioEncoderConfigurationOption * SOAP_FMAC4 soap_get_tt__AudioEncoderConfigurationOption(struct soap*, tt__AudioEncoderConfigurationOption *, const char*, const char*);

#ifndef soap_read_tt__AudioEncoderConfigurationOption
#define soap_read_tt__AudioEncoderConfigurationOption(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AudioEncoderConfigurationOption(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AudioEncoderConfigurationOption * SOAP_FMAC2 soap_instantiate_tt__AudioEncoderConfigurationOption(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioEncoderConfigurationOption * soap_new_tt__AudioEncoderConfigurationOption(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioEncoderConfigurationOption(soap, n, NULL, NULL, NULL); }

inline tt__AudioEncoderConfigurationOption * soap_new_req_tt__AudioEncoderConfigurationOption(struct soap *soap, enum tt__AudioEncoding Encoding, tt__IntList *BitrateList, tt__IntList *SampleRateList) { tt__AudioEncoderConfigurationOption *_p = soap_instantiate_tt__AudioEncoderConfigurationOption(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AudioEncoderConfigurationOption::Encoding = Encoding; _p->tt__AudioEncoderConfigurationOption::BitrateList = BitrateList; _p->tt__AudioEncoderConfigurationOption::SampleRateList = SampleRateList; } return _p; }

inline tt__AudioEncoderConfigurationOption * soap_new_set_tt__AudioEncoderConfigurationOption(struct soap *soap, enum tt__AudioEncoding Encoding, tt__IntList *BitrateList, tt__IntList *SampleRateList) { tt__AudioEncoderConfigurationOption *_p = soap_instantiate_tt__AudioEncoderConfigurationOption(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AudioEncoderConfigurationOption::Encoding = Encoding; _p->tt__AudioEncoderConfigurationOption::BitrateList = BitrateList; _p->tt__AudioEncoderConfigurationOption::SampleRateList = SampleRateList; } return _p; }

inline void soap_delete_tt__AudioEncoderConfigurationOption(struct soap *soap, tt__AudioEncoderConfigurationOption *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AudioEncoderConfigurationOption(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AudioEncoderConfigurationOptions
#define SOAP_TYPE_tt__AudioEncoderConfigurationOptions (291)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioEncoderConfigurationOptions(struct soap*, const char*, int, const tt__AudioEncoderConfigurationOptions *, const char*);
SOAP_FMAC3 tt__AudioEncoderConfigurationOptions * SOAP_FMAC4 soap_in_tt__AudioEncoderConfigurationOptions(struct soap*, const char*, tt__AudioEncoderConfigurationOptions *, const char*);

#ifndef soap_write_tt__AudioEncoderConfigurationOptions
#define soap_write_tt__AudioEncoderConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AudioEncoderConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioEncoderConfigurationOptions * SOAP_FMAC4 soap_get_tt__AudioEncoderConfigurationOptions(struct soap*, tt__AudioEncoderConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tt__AudioEncoderConfigurationOptions
#define soap_read_tt__AudioEncoderConfigurationOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AudioEncoderConfigurationOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AudioEncoderConfigurationOptions * SOAP_FMAC2 soap_instantiate_tt__AudioEncoderConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioEncoderConfigurationOptions * soap_new_tt__AudioEncoderConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioEncoderConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline tt__AudioEncoderConfigurationOptions * soap_new_req_tt__AudioEncoderConfigurationOptions(struct soap *soap) { tt__AudioEncoderConfigurationOptions *_p = soap_instantiate_tt__AudioEncoderConfigurationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__AudioEncoderConfigurationOptions * soap_new_set_tt__AudioEncoderConfigurationOptions(struct soap *soap, std::vector<tt__AudioEncoderConfigurationOption * >& Options) { tt__AudioEncoderConfigurationOptions *_p = soap_instantiate_tt__AudioEncoderConfigurationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AudioEncoderConfigurationOptions::Options = Options; } return _p; }

inline void soap_delete_tt__AudioEncoderConfigurationOptions(struct soap *soap, tt__AudioEncoderConfigurationOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AudioEncoderConfigurationOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AudioEncoderConfiguration
#define SOAP_TYPE_tt__AudioEncoderConfiguration (290)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioEncoderConfiguration(struct soap*, const char*, int, const tt__AudioEncoderConfiguration *, const char*);
SOAP_FMAC3 tt__AudioEncoderConfiguration * SOAP_FMAC4 soap_in_tt__AudioEncoderConfiguration(struct soap*, const char*, tt__AudioEncoderConfiguration *, const char*);

#ifndef soap_write_tt__AudioEncoderConfiguration
#define soap_write_tt__AudioEncoderConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AudioEncoderConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioEncoderConfiguration * SOAP_FMAC4 soap_get_tt__AudioEncoderConfiguration(struct soap*, tt__AudioEncoderConfiguration *, const char*, const char*);

#ifndef soap_read_tt__AudioEncoderConfiguration
#define soap_read_tt__AudioEncoderConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AudioEncoderConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AudioEncoderConfiguration * SOAP_FMAC2 soap_instantiate_tt__AudioEncoderConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioEncoderConfiguration * soap_new_tt__AudioEncoderConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioEncoderConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__AudioEncoderConfiguration * soap_new_req_tt__AudioEncoderConfiguration(struct soap *soap, enum tt__AudioEncoding Encoding, int Bitrate, int SampleRate, tt__MulticastConfiguration *Multicast, LONG64 SessionTimeout, std::string& Name1, int UseCount1, std::string& token1) { tt__AudioEncoderConfiguration *_p = soap_instantiate_tt__AudioEncoderConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AudioEncoderConfiguration::Encoding = Encoding; _p->tt__AudioEncoderConfiguration::Bitrate = Bitrate; _p->tt__AudioEncoderConfiguration::SampleRate = SampleRate; _p->tt__AudioEncoderConfiguration::Multicast = Multicast; _p->tt__AudioEncoderConfiguration::SessionTimeout = SessionTimeout; _p->tt__ConfigurationEntity::Name = Name1; _p->tt__ConfigurationEntity::UseCount = UseCount1; _p->tt__ConfigurationEntity::token = token1; } return _p; }

inline tt__AudioEncoderConfiguration * soap_new_set_tt__AudioEncoderConfiguration(struct soap *soap, enum tt__AudioEncoding Encoding, int Bitrate, int SampleRate, tt__MulticastConfiguration *Multicast, LONG64 SessionTimeout, std::string& Name1, int UseCount1, std::string& token1) { tt__AudioEncoderConfiguration *_p = soap_instantiate_tt__AudioEncoderConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AudioEncoderConfiguration::Encoding = Encoding; _p->tt__AudioEncoderConfiguration::Bitrate = Bitrate; _p->tt__AudioEncoderConfiguration::SampleRate = SampleRate; _p->tt__AudioEncoderConfiguration::Multicast = Multicast; _p->tt__AudioEncoderConfiguration::SessionTimeout = SessionTimeout; _p->tt__ConfigurationEntity::Name = Name1; _p->tt__ConfigurationEntity::UseCount = UseCount1; _p->tt__ConfigurationEntity::token = token1; } return _p; }

inline void soap_delete_tt__AudioEncoderConfiguration(struct soap *soap, tt__AudioEncoderConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AudioEncoderConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AudioSourceOptionsExtension
#define SOAP_TYPE_tt__AudioSourceOptionsExtension (289)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioSourceOptionsExtension(struct soap*, const char*, int, const tt__AudioSourceOptionsExtension *, const char*);
SOAP_FMAC3 tt__AudioSourceOptionsExtension * SOAP_FMAC4 soap_in_tt__AudioSourceOptionsExtension(struct soap*, const char*, tt__AudioSourceOptionsExtension *, const char*);

#ifndef soap_write_tt__AudioSourceOptionsExtension
#define soap_write_tt__AudioSourceOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AudioSourceOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioSourceOptionsExtension * SOAP_FMAC4 soap_get_tt__AudioSourceOptionsExtension(struct soap*, tt__AudioSourceOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__AudioSourceOptionsExtension
#define soap_read_tt__AudioSourceOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AudioSourceOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AudioSourceOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__AudioSourceOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioSourceOptionsExtension * soap_new_tt__AudioSourceOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioSourceOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__AudioSourceOptionsExtension * soap_new_req_tt__AudioSourceOptionsExtension(struct soap *soap) { tt__AudioSourceOptionsExtension *_p = soap_instantiate_tt__AudioSourceOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__AudioSourceOptionsExtension * soap_new_set_tt__AudioSourceOptionsExtension(struct soap *soap) { tt__AudioSourceOptionsExtension *_p = soap_instantiate_tt__AudioSourceOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__AudioSourceOptionsExtension(struct soap *soap, tt__AudioSourceOptionsExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AudioSourceOptionsExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AudioSourceConfigurationOptions
#define SOAP_TYPE_tt__AudioSourceConfigurationOptions (288)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioSourceConfigurationOptions(struct soap*, const char*, int, const tt__AudioSourceConfigurationOptions *, const char*);
SOAP_FMAC3 tt__AudioSourceConfigurationOptions * SOAP_FMAC4 soap_in_tt__AudioSourceConfigurationOptions(struct soap*, const char*, tt__AudioSourceConfigurationOptions *, const char*);

#ifndef soap_write_tt__AudioSourceConfigurationOptions
#define soap_write_tt__AudioSourceConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AudioSourceConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioSourceConfigurationOptions * SOAP_FMAC4 soap_get_tt__AudioSourceConfigurationOptions(struct soap*, tt__AudioSourceConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tt__AudioSourceConfigurationOptions
#define soap_read_tt__AudioSourceConfigurationOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AudioSourceConfigurationOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AudioSourceConfigurationOptions * SOAP_FMAC2 soap_instantiate_tt__AudioSourceConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioSourceConfigurationOptions * soap_new_tt__AudioSourceConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioSourceConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline tt__AudioSourceConfigurationOptions * soap_new_req_tt__AudioSourceConfigurationOptions(struct soap *soap, std::vector<std::string >& InputTokensAvailable) { tt__AudioSourceConfigurationOptions *_p = soap_instantiate_tt__AudioSourceConfigurationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AudioSourceConfigurationOptions::InputTokensAvailable = InputTokensAvailable; } return _p; }

inline tt__AudioSourceConfigurationOptions * soap_new_set_tt__AudioSourceConfigurationOptions(struct soap *soap, std::vector<std::string >& InputTokensAvailable, tt__AudioSourceOptionsExtension *Extension) { tt__AudioSourceConfigurationOptions *_p = soap_instantiate_tt__AudioSourceConfigurationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AudioSourceConfigurationOptions::InputTokensAvailable = InputTokensAvailable; _p->tt__AudioSourceConfigurationOptions::Extension = Extension; } return _p; }

inline void soap_delete_tt__AudioSourceConfigurationOptions(struct soap *soap, tt__AudioSourceConfigurationOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AudioSourceConfigurationOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AudioSourceConfiguration
#define SOAP_TYPE_tt__AudioSourceConfiguration (287)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioSourceConfiguration(struct soap*, const char*, int, const tt__AudioSourceConfiguration *, const char*);
SOAP_FMAC3 tt__AudioSourceConfiguration * SOAP_FMAC4 soap_in_tt__AudioSourceConfiguration(struct soap*, const char*, tt__AudioSourceConfiguration *, const char*);

#ifndef soap_write_tt__AudioSourceConfiguration
#define soap_write_tt__AudioSourceConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AudioSourceConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioSourceConfiguration * SOAP_FMAC4 soap_get_tt__AudioSourceConfiguration(struct soap*, tt__AudioSourceConfiguration *, const char*, const char*);

#ifndef soap_read_tt__AudioSourceConfiguration
#define soap_read_tt__AudioSourceConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AudioSourceConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AudioSourceConfiguration * SOAP_FMAC2 soap_instantiate_tt__AudioSourceConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioSourceConfiguration * soap_new_tt__AudioSourceConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioSourceConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__AudioSourceConfiguration * soap_new_req_tt__AudioSourceConfiguration(struct soap *soap, std::string& SourceToken, std::string& Name1, int UseCount1, std::string& token1) { tt__AudioSourceConfiguration *_p = soap_instantiate_tt__AudioSourceConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AudioSourceConfiguration::SourceToken = SourceToken; _p->tt__ConfigurationEntity::Name = Name1; _p->tt__ConfigurationEntity::UseCount = UseCount1; _p->tt__ConfigurationEntity::token = token1; } return _p; }

inline tt__AudioSourceConfiguration * soap_new_set_tt__AudioSourceConfiguration(struct soap *soap, std::string& SourceToken, std::string& Name1, int UseCount1, std::string& token1) { tt__AudioSourceConfiguration *_p = soap_instantiate_tt__AudioSourceConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AudioSourceConfiguration::SourceToken = SourceToken; _p->tt__ConfigurationEntity::Name = Name1; _p->tt__ConfigurationEntity::UseCount = UseCount1; _p->tt__ConfigurationEntity::token = token1; } return _p; }

inline void soap_delete_tt__AudioSourceConfiguration(struct soap *soap, tt__AudioSourceConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AudioSourceConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__H264Options2
#define SOAP_TYPE_tt__H264Options2 (286)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__H264Options2(struct soap*, const char*, int, const tt__H264Options2 *, const char*);
SOAP_FMAC3 tt__H264Options2 * SOAP_FMAC4 soap_in_tt__H264Options2(struct soap*, const char*, tt__H264Options2 *, const char*);

#ifndef soap_write_tt__H264Options2
#define soap_write_tt__H264Options2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:H264Options2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__H264Options2 * SOAP_FMAC4 soap_get_tt__H264Options2(struct soap*, tt__H264Options2 *, const char*, const char*);

#ifndef soap_read_tt__H264Options2
#define soap_read_tt__H264Options2(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__H264Options2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__H264Options2 * SOAP_FMAC2 soap_instantiate_tt__H264Options2(struct soap*, int, const char*, const char*, size_t*);

inline tt__H264Options2 * soap_new_tt__H264Options2(struct soap *soap, int n = -1) { return soap_instantiate_tt__H264Options2(soap, n, NULL, NULL, NULL); }

inline tt__H264Options2 * soap_new_req_tt__H264Options2(struct soap *soap, tt__IntRange *BitrateRange, std::vector<tt__VideoResolution * >& ResolutionsAvailable1, tt__IntRange *GovLengthRange1, tt__IntRange *FrameRateRange1, tt__IntRange *EncodingIntervalRange1, std::vector<enum tt__H264Profile >& H264ProfilesSupported1) { tt__H264Options2 *_p = soap_instantiate_tt__H264Options2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__H264Options2::BitrateRange = BitrateRange; _p->tt__H264Options::ResolutionsAvailable = ResolutionsAvailable1; _p->tt__H264Options::GovLengthRange = GovLengthRange1; _p->tt__H264Options::FrameRateRange = FrameRateRange1; _p->tt__H264Options::EncodingIntervalRange = EncodingIntervalRange1; _p->tt__H264Options::H264ProfilesSupported = H264ProfilesSupported1; } return _p; }

inline tt__H264Options2 * soap_new_set_tt__H264Options2(struct soap *soap, tt__IntRange *BitrateRange, std::vector<tt__VideoResolution * >& ResolutionsAvailable1, tt__IntRange *GovLengthRange1, tt__IntRange *FrameRateRange1, tt__IntRange *EncodingIntervalRange1, std::vector<enum tt__H264Profile >& H264ProfilesSupported1) { tt__H264Options2 *_p = soap_instantiate_tt__H264Options2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__H264Options2::BitrateRange = BitrateRange; _p->tt__H264Options::ResolutionsAvailable = ResolutionsAvailable1; _p->tt__H264Options::GovLengthRange = GovLengthRange1; _p->tt__H264Options::FrameRateRange = FrameRateRange1; _p->tt__H264Options::EncodingIntervalRange = EncodingIntervalRange1; _p->tt__H264Options::H264ProfilesSupported = H264ProfilesSupported1; } return _p; }

inline void soap_delete_tt__H264Options2(struct soap *soap, tt__H264Options2 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__H264Options2(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__H264Options
#define SOAP_TYPE_tt__H264Options (285)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__H264Options(struct soap*, const char*, int, const tt__H264Options *, const char*);
SOAP_FMAC3 tt__H264Options * SOAP_FMAC4 soap_in_tt__H264Options(struct soap*, const char*, tt__H264Options *, const char*);

#ifndef soap_write_tt__H264Options
#define soap_write_tt__H264Options(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:H264Options", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__H264Options * SOAP_FMAC4 soap_get_tt__H264Options(struct soap*, tt__H264Options *, const char*, const char*);

#ifndef soap_read_tt__H264Options
#define soap_read_tt__H264Options(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__H264Options(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__H264Options * SOAP_FMAC2 soap_instantiate_tt__H264Options(struct soap*, int, const char*, const char*, size_t*);

inline tt__H264Options * soap_new_tt__H264Options(struct soap *soap, int n = -1) { return soap_instantiate_tt__H264Options(soap, n, NULL, NULL, NULL); }

inline tt__H264Options * soap_new_req_tt__H264Options(struct soap *soap, std::vector<tt__VideoResolution * >& ResolutionsAvailable, tt__IntRange *GovLengthRange, tt__IntRange *FrameRateRange, tt__IntRange *EncodingIntervalRange, std::vector<enum tt__H264Profile >& H264ProfilesSupported) { tt__H264Options *_p = soap_instantiate_tt__H264Options(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__H264Options::ResolutionsAvailable = ResolutionsAvailable; _p->tt__H264Options::GovLengthRange = GovLengthRange; _p->tt__H264Options::FrameRateRange = FrameRateRange; _p->tt__H264Options::EncodingIntervalRange = EncodingIntervalRange; _p->tt__H264Options::H264ProfilesSupported = H264ProfilesSupported; } return _p; }

inline tt__H264Options * soap_new_set_tt__H264Options(struct soap *soap, std::vector<tt__VideoResolution * >& ResolutionsAvailable, tt__IntRange *GovLengthRange, tt__IntRange *FrameRateRange, tt__IntRange *EncodingIntervalRange, std::vector<enum tt__H264Profile >& H264ProfilesSupported) { tt__H264Options *_p = soap_instantiate_tt__H264Options(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__H264Options::ResolutionsAvailable = ResolutionsAvailable; _p->tt__H264Options::GovLengthRange = GovLengthRange; _p->tt__H264Options::FrameRateRange = FrameRateRange; _p->tt__H264Options::EncodingIntervalRange = EncodingIntervalRange; _p->tt__H264Options::H264ProfilesSupported = H264ProfilesSupported; } return _p; }

inline void soap_delete_tt__H264Options(struct soap *soap, tt__H264Options *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__H264Options(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Mpeg4Options2
#define SOAP_TYPE_tt__Mpeg4Options2 (284)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Mpeg4Options2(struct soap*, const char*, int, const tt__Mpeg4Options2 *, const char*);
SOAP_FMAC3 tt__Mpeg4Options2 * SOAP_FMAC4 soap_in_tt__Mpeg4Options2(struct soap*, const char*, tt__Mpeg4Options2 *, const char*);

#ifndef soap_write_tt__Mpeg4Options2
#define soap_write_tt__Mpeg4Options2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Mpeg4Options2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Mpeg4Options2 * SOAP_FMAC4 soap_get_tt__Mpeg4Options2(struct soap*, tt__Mpeg4Options2 *, const char*, const char*);

#ifndef soap_read_tt__Mpeg4Options2
#define soap_read_tt__Mpeg4Options2(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Mpeg4Options2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Mpeg4Options2 * SOAP_FMAC2 soap_instantiate_tt__Mpeg4Options2(struct soap*, int, const char*, const char*, size_t*);

inline tt__Mpeg4Options2 * soap_new_tt__Mpeg4Options2(struct soap *soap, int n = -1) { return soap_instantiate_tt__Mpeg4Options2(soap, n, NULL, NULL, NULL); }

inline tt__Mpeg4Options2 * soap_new_req_tt__Mpeg4Options2(struct soap *soap, tt__IntRange *BitrateRange, std::vector<tt__VideoResolution * >& ResolutionsAvailable1, tt__IntRange *GovLengthRange1, tt__IntRange *FrameRateRange1, tt__IntRange *EncodingIntervalRange1, std::vector<enum tt__Mpeg4Profile >& Mpeg4ProfilesSupported1) { tt__Mpeg4Options2 *_p = soap_instantiate_tt__Mpeg4Options2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Mpeg4Options2::BitrateRange = BitrateRange; _p->tt__Mpeg4Options::ResolutionsAvailable = ResolutionsAvailable1; _p->tt__Mpeg4Options::GovLengthRange = GovLengthRange1; _p->tt__Mpeg4Options::FrameRateRange = FrameRateRange1; _p->tt__Mpeg4Options::EncodingIntervalRange = EncodingIntervalRange1; _p->tt__Mpeg4Options::Mpeg4ProfilesSupported = Mpeg4ProfilesSupported1; } return _p; }

inline tt__Mpeg4Options2 * soap_new_set_tt__Mpeg4Options2(struct soap *soap, tt__IntRange *BitrateRange, std::vector<tt__VideoResolution * >& ResolutionsAvailable1, tt__IntRange *GovLengthRange1, tt__IntRange *FrameRateRange1, tt__IntRange *EncodingIntervalRange1, std::vector<enum tt__Mpeg4Profile >& Mpeg4ProfilesSupported1) { tt__Mpeg4Options2 *_p = soap_instantiate_tt__Mpeg4Options2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Mpeg4Options2::BitrateRange = BitrateRange; _p->tt__Mpeg4Options::ResolutionsAvailable = ResolutionsAvailable1; _p->tt__Mpeg4Options::GovLengthRange = GovLengthRange1; _p->tt__Mpeg4Options::FrameRateRange = FrameRateRange1; _p->tt__Mpeg4Options::EncodingIntervalRange = EncodingIntervalRange1; _p->tt__Mpeg4Options::Mpeg4ProfilesSupported = Mpeg4ProfilesSupported1; } return _p; }

inline void soap_delete_tt__Mpeg4Options2(struct soap *soap, tt__Mpeg4Options2 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Mpeg4Options2(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Mpeg4Options
#define SOAP_TYPE_tt__Mpeg4Options (283)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Mpeg4Options(struct soap*, const char*, int, const tt__Mpeg4Options *, const char*);
SOAP_FMAC3 tt__Mpeg4Options * SOAP_FMAC4 soap_in_tt__Mpeg4Options(struct soap*, const char*, tt__Mpeg4Options *, const char*);

#ifndef soap_write_tt__Mpeg4Options
#define soap_write_tt__Mpeg4Options(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Mpeg4Options", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Mpeg4Options * SOAP_FMAC4 soap_get_tt__Mpeg4Options(struct soap*, tt__Mpeg4Options *, const char*, const char*);

#ifndef soap_read_tt__Mpeg4Options
#define soap_read_tt__Mpeg4Options(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Mpeg4Options(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Mpeg4Options * SOAP_FMAC2 soap_instantiate_tt__Mpeg4Options(struct soap*, int, const char*, const char*, size_t*);

inline tt__Mpeg4Options * soap_new_tt__Mpeg4Options(struct soap *soap, int n = -1) { return soap_instantiate_tt__Mpeg4Options(soap, n, NULL, NULL, NULL); }

inline tt__Mpeg4Options * soap_new_req_tt__Mpeg4Options(struct soap *soap, std::vector<tt__VideoResolution * >& ResolutionsAvailable, tt__IntRange *GovLengthRange, tt__IntRange *FrameRateRange, tt__IntRange *EncodingIntervalRange, std::vector<enum tt__Mpeg4Profile >& Mpeg4ProfilesSupported) { tt__Mpeg4Options *_p = soap_instantiate_tt__Mpeg4Options(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Mpeg4Options::ResolutionsAvailable = ResolutionsAvailable; _p->tt__Mpeg4Options::GovLengthRange = GovLengthRange; _p->tt__Mpeg4Options::FrameRateRange = FrameRateRange; _p->tt__Mpeg4Options::EncodingIntervalRange = EncodingIntervalRange; _p->tt__Mpeg4Options::Mpeg4ProfilesSupported = Mpeg4ProfilesSupported; } return _p; }

inline tt__Mpeg4Options * soap_new_set_tt__Mpeg4Options(struct soap *soap, std::vector<tt__VideoResolution * >& ResolutionsAvailable, tt__IntRange *GovLengthRange, tt__IntRange *FrameRateRange, tt__IntRange *EncodingIntervalRange, std::vector<enum tt__Mpeg4Profile >& Mpeg4ProfilesSupported) { tt__Mpeg4Options *_p = soap_instantiate_tt__Mpeg4Options(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Mpeg4Options::ResolutionsAvailable = ResolutionsAvailable; _p->tt__Mpeg4Options::GovLengthRange = GovLengthRange; _p->tt__Mpeg4Options::FrameRateRange = FrameRateRange; _p->tt__Mpeg4Options::EncodingIntervalRange = EncodingIntervalRange; _p->tt__Mpeg4Options::Mpeg4ProfilesSupported = Mpeg4ProfilesSupported; } return _p; }

inline void soap_delete_tt__Mpeg4Options(struct soap *soap, tt__Mpeg4Options *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Mpeg4Options(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__JpegOptions2
#define SOAP_TYPE_tt__JpegOptions2 (282)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__JpegOptions2(struct soap*, const char*, int, const tt__JpegOptions2 *, const char*);
SOAP_FMAC3 tt__JpegOptions2 * SOAP_FMAC4 soap_in_tt__JpegOptions2(struct soap*, const char*, tt__JpegOptions2 *, const char*);

#ifndef soap_write_tt__JpegOptions2
#define soap_write_tt__JpegOptions2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:JpegOptions2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__JpegOptions2 * SOAP_FMAC4 soap_get_tt__JpegOptions2(struct soap*, tt__JpegOptions2 *, const char*, const char*);

#ifndef soap_read_tt__JpegOptions2
#define soap_read_tt__JpegOptions2(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__JpegOptions2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__JpegOptions2 * SOAP_FMAC2 soap_instantiate_tt__JpegOptions2(struct soap*, int, const char*, const char*, size_t*);

inline tt__JpegOptions2 * soap_new_tt__JpegOptions2(struct soap *soap, int n = -1) { return soap_instantiate_tt__JpegOptions2(soap, n, NULL, NULL, NULL); }

inline tt__JpegOptions2 * soap_new_req_tt__JpegOptions2(struct soap *soap, tt__IntRange *BitrateRange, std::vector<tt__VideoResolution * >& ResolutionsAvailable1, tt__IntRange *FrameRateRange1, tt__IntRange *EncodingIntervalRange1) { tt__JpegOptions2 *_p = soap_instantiate_tt__JpegOptions2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__JpegOptions2::BitrateRange = BitrateRange; _p->tt__JpegOptions::ResolutionsAvailable = ResolutionsAvailable1; _p->tt__JpegOptions::FrameRateRange = FrameRateRange1; _p->tt__JpegOptions::EncodingIntervalRange = EncodingIntervalRange1; } return _p; }

inline tt__JpegOptions2 * soap_new_set_tt__JpegOptions2(struct soap *soap, tt__IntRange *BitrateRange, std::vector<tt__VideoResolution * >& ResolutionsAvailable1, tt__IntRange *FrameRateRange1, tt__IntRange *EncodingIntervalRange1) { tt__JpegOptions2 *_p = soap_instantiate_tt__JpegOptions2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__JpegOptions2::BitrateRange = BitrateRange; _p->tt__JpegOptions::ResolutionsAvailable = ResolutionsAvailable1; _p->tt__JpegOptions::FrameRateRange = FrameRateRange1; _p->tt__JpegOptions::EncodingIntervalRange = EncodingIntervalRange1; } return _p; }

inline void soap_delete_tt__JpegOptions2(struct soap *soap, tt__JpegOptions2 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__JpegOptions2(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__JpegOptions
#define SOAP_TYPE_tt__JpegOptions (281)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__JpegOptions(struct soap*, const char*, int, const tt__JpegOptions *, const char*);
SOAP_FMAC3 tt__JpegOptions * SOAP_FMAC4 soap_in_tt__JpegOptions(struct soap*, const char*, tt__JpegOptions *, const char*);

#ifndef soap_write_tt__JpegOptions
#define soap_write_tt__JpegOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:JpegOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__JpegOptions * SOAP_FMAC4 soap_get_tt__JpegOptions(struct soap*, tt__JpegOptions *, const char*, const char*);

#ifndef soap_read_tt__JpegOptions
#define soap_read_tt__JpegOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__JpegOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__JpegOptions * SOAP_FMAC2 soap_instantiate_tt__JpegOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__JpegOptions * soap_new_tt__JpegOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__JpegOptions(soap, n, NULL, NULL, NULL); }

inline tt__JpegOptions * soap_new_req_tt__JpegOptions(struct soap *soap, std::vector<tt__VideoResolution * >& ResolutionsAvailable, tt__IntRange *FrameRateRange, tt__IntRange *EncodingIntervalRange) { tt__JpegOptions *_p = soap_instantiate_tt__JpegOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__JpegOptions::ResolutionsAvailable = ResolutionsAvailable; _p->tt__JpegOptions::FrameRateRange = FrameRateRange; _p->tt__JpegOptions::EncodingIntervalRange = EncodingIntervalRange; } return _p; }

inline tt__JpegOptions * soap_new_set_tt__JpegOptions(struct soap *soap, std::vector<tt__VideoResolution * >& ResolutionsAvailable, tt__IntRange *FrameRateRange, tt__IntRange *EncodingIntervalRange) { tt__JpegOptions *_p = soap_instantiate_tt__JpegOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__JpegOptions::ResolutionsAvailable = ResolutionsAvailable; _p->tt__JpegOptions::FrameRateRange = FrameRateRange; _p->tt__JpegOptions::EncodingIntervalRange = EncodingIntervalRange; } return _p; }

inline void soap_delete_tt__JpegOptions(struct soap *soap, tt__JpegOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__JpegOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__VideoEncoderOptionsExtension2
#define SOAP_TYPE_tt__VideoEncoderOptionsExtension2 (280)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoEncoderOptionsExtension2(struct soap*, const char*, int, const tt__VideoEncoderOptionsExtension2 *, const char*);
SOAP_FMAC3 tt__VideoEncoderOptionsExtension2 * SOAP_FMAC4 soap_in_tt__VideoEncoderOptionsExtension2(struct soap*, const char*, tt__VideoEncoderOptionsExtension2 *, const char*);

#ifndef soap_write_tt__VideoEncoderOptionsExtension2
#define soap_write_tt__VideoEncoderOptionsExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:VideoEncoderOptionsExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoEncoderOptionsExtension2 * SOAP_FMAC4 soap_get_tt__VideoEncoderOptionsExtension2(struct soap*, tt__VideoEncoderOptionsExtension2 *, const char*, const char*);

#ifndef soap_read_tt__VideoEncoderOptionsExtension2
#define soap_read_tt__VideoEncoderOptionsExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoEncoderOptionsExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__VideoEncoderOptionsExtension2 * SOAP_FMAC2 soap_instantiate_tt__VideoEncoderOptionsExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoEncoderOptionsExtension2 * soap_new_tt__VideoEncoderOptionsExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoEncoderOptionsExtension2(soap, n, NULL, NULL, NULL); }

inline tt__VideoEncoderOptionsExtension2 * soap_new_req_tt__VideoEncoderOptionsExtension2(struct soap *soap) { tt__VideoEncoderOptionsExtension2 *_p = soap_instantiate_tt__VideoEncoderOptionsExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__VideoEncoderOptionsExtension2 * soap_new_set_tt__VideoEncoderOptionsExtension2(struct soap *soap) { tt__VideoEncoderOptionsExtension2 *_p = soap_instantiate_tt__VideoEncoderOptionsExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__VideoEncoderOptionsExtension2(struct soap *soap, tt__VideoEncoderOptionsExtension2 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__VideoEncoderOptionsExtension2(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__VideoEncoderOptionsExtension
#define SOAP_TYPE_tt__VideoEncoderOptionsExtension (279)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoEncoderOptionsExtension(struct soap*, const char*, int, const tt__VideoEncoderOptionsExtension *, const char*);
SOAP_FMAC3 tt__VideoEncoderOptionsExtension * SOAP_FMAC4 soap_in_tt__VideoEncoderOptionsExtension(struct soap*, const char*, tt__VideoEncoderOptionsExtension *, const char*);

#ifndef soap_write_tt__VideoEncoderOptionsExtension
#define soap_write_tt__VideoEncoderOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:VideoEncoderOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoEncoderOptionsExtension * SOAP_FMAC4 soap_get_tt__VideoEncoderOptionsExtension(struct soap*, tt__VideoEncoderOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__VideoEncoderOptionsExtension
#define soap_read_tt__VideoEncoderOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoEncoderOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__VideoEncoderOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__VideoEncoderOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoEncoderOptionsExtension * soap_new_tt__VideoEncoderOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoEncoderOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__VideoEncoderOptionsExtension * soap_new_req_tt__VideoEncoderOptionsExtension(struct soap *soap) { tt__VideoEncoderOptionsExtension *_p = soap_instantiate_tt__VideoEncoderOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__VideoEncoderOptionsExtension * soap_new_set_tt__VideoEncoderOptionsExtension(struct soap *soap, tt__JpegOptions2 *JPEG, tt__Mpeg4Options2 *MPEG4, tt__H264Options2 *H264, tt__VideoEncoderOptionsExtension2 *Extension) { tt__VideoEncoderOptionsExtension *_p = soap_instantiate_tt__VideoEncoderOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoEncoderOptionsExtension::JPEG = JPEG; _p->tt__VideoEncoderOptionsExtension::MPEG4 = MPEG4; _p->tt__VideoEncoderOptionsExtension::H264 = H264; _p->tt__VideoEncoderOptionsExtension::Extension = Extension; } return _p; }

inline void soap_delete_tt__VideoEncoderOptionsExtension(struct soap *soap, tt__VideoEncoderOptionsExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__VideoEncoderOptionsExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__VideoEncoderConfigurationOptions
#define SOAP_TYPE_tt__VideoEncoderConfigurationOptions (278)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoEncoderConfigurationOptions(struct soap*, const char*, int, const tt__VideoEncoderConfigurationOptions *, const char*);
SOAP_FMAC3 tt__VideoEncoderConfigurationOptions * SOAP_FMAC4 soap_in_tt__VideoEncoderConfigurationOptions(struct soap*, const char*, tt__VideoEncoderConfigurationOptions *, const char*);

#ifndef soap_write_tt__VideoEncoderConfigurationOptions
#define soap_write_tt__VideoEncoderConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:VideoEncoderConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoEncoderConfigurationOptions * SOAP_FMAC4 soap_get_tt__VideoEncoderConfigurationOptions(struct soap*, tt__VideoEncoderConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tt__VideoEncoderConfigurationOptions
#define soap_read_tt__VideoEncoderConfigurationOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoEncoderConfigurationOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__VideoEncoderConfigurationOptions * SOAP_FMAC2 soap_instantiate_tt__VideoEncoderConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoEncoderConfigurationOptions * soap_new_tt__VideoEncoderConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoEncoderConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline tt__VideoEncoderConfigurationOptions * soap_new_req_tt__VideoEncoderConfigurationOptions(struct soap *soap, tt__IntRange *QualityRange) { tt__VideoEncoderConfigurationOptions *_p = soap_instantiate_tt__VideoEncoderConfigurationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoEncoderConfigurationOptions::QualityRange = QualityRange; } return _p; }

inline tt__VideoEncoderConfigurationOptions * soap_new_set_tt__VideoEncoderConfigurationOptions(struct soap *soap, tt__IntRange *QualityRange, tt__JpegOptions *JPEG, tt__Mpeg4Options *MPEG4, tt__H264Options *H264, tt__VideoEncoderOptionsExtension *Extension) { tt__VideoEncoderConfigurationOptions *_p = soap_instantiate_tt__VideoEncoderConfigurationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoEncoderConfigurationOptions::QualityRange = QualityRange; _p->tt__VideoEncoderConfigurationOptions::JPEG = JPEG; _p->tt__VideoEncoderConfigurationOptions::MPEG4 = MPEG4; _p->tt__VideoEncoderConfigurationOptions::H264 = H264; _p->tt__VideoEncoderConfigurationOptions::Extension = Extension; } return _p; }

inline void soap_delete_tt__VideoEncoderConfigurationOptions(struct soap *soap, tt__VideoEncoderConfigurationOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__VideoEncoderConfigurationOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__H264Configuration
#define SOAP_TYPE_tt__H264Configuration (277)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__H264Configuration(struct soap*, const char*, int, const tt__H264Configuration *, const char*);
SOAP_FMAC3 tt__H264Configuration * SOAP_FMAC4 soap_in_tt__H264Configuration(struct soap*, const char*, tt__H264Configuration *, const char*);

#ifndef soap_write_tt__H264Configuration
#define soap_write_tt__H264Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:H264Configuration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__H264Configuration * SOAP_FMAC4 soap_get_tt__H264Configuration(struct soap*, tt__H264Configuration *, const char*, const char*);

#ifndef soap_read_tt__H264Configuration
#define soap_read_tt__H264Configuration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__H264Configuration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__H264Configuration * SOAP_FMAC2 soap_instantiate_tt__H264Configuration(struct soap*, int, const char*, const char*, size_t*);

inline tt__H264Configuration * soap_new_tt__H264Configuration(struct soap *soap, int n = -1) { return soap_instantiate_tt__H264Configuration(soap, n, NULL, NULL, NULL); }

inline tt__H264Configuration * soap_new_req_tt__H264Configuration(struct soap *soap, int GovLength, enum tt__H264Profile H264Profile) { tt__H264Configuration *_p = soap_instantiate_tt__H264Configuration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__H264Configuration::GovLength = GovLength; _p->tt__H264Configuration::H264Profile = H264Profile; } return _p; }

inline tt__H264Configuration * soap_new_set_tt__H264Configuration(struct soap *soap, int GovLength, enum tt__H264Profile H264Profile) { tt__H264Configuration *_p = soap_instantiate_tt__H264Configuration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__H264Configuration::GovLength = GovLength; _p->tt__H264Configuration::H264Profile = H264Profile; } return _p; }

inline void soap_delete_tt__H264Configuration(struct soap *soap, tt__H264Configuration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__H264Configuration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Mpeg4Configuration
#define SOAP_TYPE_tt__Mpeg4Configuration (276)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Mpeg4Configuration(struct soap*, const char*, int, const tt__Mpeg4Configuration *, const char*);
SOAP_FMAC3 tt__Mpeg4Configuration * SOAP_FMAC4 soap_in_tt__Mpeg4Configuration(struct soap*, const char*, tt__Mpeg4Configuration *, const char*);

#ifndef soap_write_tt__Mpeg4Configuration
#define soap_write_tt__Mpeg4Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Mpeg4Configuration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Mpeg4Configuration * SOAP_FMAC4 soap_get_tt__Mpeg4Configuration(struct soap*, tt__Mpeg4Configuration *, const char*, const char*);

#ifndef soap_read_tt__Mpeg4Configuration
#define soap_read_tt__Mpeg4Configuration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Mpeg4Configuration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Mpeg4Configuration * SOAP_FMAC2 soap_instantiate_tt__Mpeg4Configuration(struct soap*, int, const char*, const char*, size_t*);

inline tt__Mpeg4Configuration * soap_new_tt__Mpeg4Configuration(struct soap *soap, int n = -1) { return soap_instantiate_tt__Mpeg4Configuration(soap, n, NULL, NULL, NULL); }

inline tt__Mpeg4Configuration * soap_new_req_tt__Mpeg4Configuration(struct soap *soap, int GovLength, enum tt__Mpeg4Profile Mpeg4Profile) { tt__Mpeg4Configuration *_p = soap_instantiate_tt__Mpeg4Configuration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Mpeg4Configuration::GovLength = GovLength; _p->tt__Mpeg4Configuration::Mpeg4Profile = Mpeg4Profile; } return _p; }

inline tt__Mpeg4Configuration * soap_new_set_tt__Mpeg4Configuration(struct soap *soap, int GovLength, enum tt__Mpeg4Profile Mpeg4Profile) { tt__Mpeg4Configuration *_p = soap_instantiate_tt__Mpeg4Configuration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Mpeg4Configuration::GovLength = GovLength; _p->tt__Mpeg4Configuration::Mpeg4Profile = Mpeg4Profile; } return _p; }

inline void soap_delete_tt__Mpeg4Configuration(struct soap *soap, tt__Mpeg4Configuration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Mpeg4Configuration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__VideoRateControl
#define SOAP_TYPE_tt__VideoRateControl (275)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoRateControl(struct soap*, const char*, int, const tt__VideoRateControl *, const char*);
SOAP_FMAC3 tt__VideoRateControl * SOAP_FMAC4 soap_in_tt__VideoRateControl(struct soap*, const char*, tt__VideoRateControl *, const char*);

#ifndef soap_write_tt__VideoRateControl
#define soap_write_tt__VideoRateControl(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:VideoRateControl", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoRateControl * SOAP_FMAC4 soap_get_tt__VideoRateControl(struct soap*, tt__VideoRateControl *, const char*, const char*);

#ifndef soap_read_tt__VideoRateControl
#define soap_read_tt__VideoRateControl(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoRateControl(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__VideoRateControl * SOAP_FMAC2 soap_instantiate_tt__VideoRateControl(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoRateControl * soap_new_tt__VideoRateControl(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoRateControl(soap, n, NULL, NULL, NULL); }

inline tt__VideoRateControl * soap_new_req_tt__VideoRateControl(struct soap *soap, int FrameRateLimit, int EncodingInterval, int BitrateLimit) { tt__VideoRateControl *_p = soap_instantiate_tt__VideoRateControl(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoRateControl::FrameRateLimit = FrameRateLimit; _p->tt__VideoRateControl::EncodingInterval = EncodingInterval; _p->tt__VideoRateControl::BitrateLimit = BitrateLimit; } return _p; }

inline tt__VideoRateControl * soap_new_set_tt__VideoRateControl(struct soap *soap, int FrameRateLimit, int EncodingInterval, int BitrateLimit) { tt__VideoRateControl *_p = soap_instantiate_tt__VideoRateControl(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoRateControl::FrameRateLimit = FrameRateLimit; _p->tt__VideoRateControl::EncodingInterval = EncodingInterval; _p->tt__VideoRateControl::BitrateLimit = BitrateLimit; } return _p; }

inline void soap_delete_tt__VideoRateControl(struct soap *soap, tt__VideoRateControl *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__VideoRateControl(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__VideoResolution
#define SOAP_TYPE_tt__VideoResolution (274)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoResolution(struct soap*, const char*, int, const tt__VideoResolution *, const char*);
SOAP_FMAC3 tt__VideoResolution * SOAP_FMAC4 soap_in_tt__VideoResolution(struct soap*, const char*, tt__VideoResolution *, const char*);

#ifndef soap_write_tt__VideoResolution
#define soap_write_tt__VideoResolution(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:VideoResolution", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoResolution * SOAP_FMAC4 soap_get_tt__VideoResolution(struct soap*, tt__VideoResolution *, const char*, const char*);

#ifndef soap_read_tt__VideoResolution
#define soap_read_tt__VideoResolution(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoResolution(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__VideoResolution * SOAP_FMAC2 soap_instantiate_tt__VideoResolution(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoResolution * soap_new_tt__VideoResolution(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoResolution(soap, n, NULL, NULL, NULL); }

inline tt__VideoResolution * soap_new_req_tt__VideoResolution(struct soap *soap, int Width, int Height) { tt__VideoResolution *_p = soap_instantiate_tt__VideoResolution(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoResolution::Width = Width; _p->tt__VideoResolution::Height = Height; } return _p; }

inline tt__VideoResolution * soap_new_set_tt__VideoResolution(struct soap *soap, int Width, int Height) { tt__VideoResolution *_p = soap_instantiate_tt__VideoResolution(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoResolution::Width = Width; _p->tt__VideoResolution::Height = Height; } return _p; }

inline void soap_delete_tt__VideoResolution(struct soap *soap, tt__VideoResolution *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__VideoResolution(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__VideoEncoderConfiguration
#define SOAP_TYPE_tt__VideoEncoderConfiguration (273)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoEncoderConfiguration(struct soap*, const char*, int, const tt__VideoEncoderConfiguration *, const char*);
SOAP_FMAC3 tt__VideoEncoderConfiguration * SOAP_FMAC4 soap_in_tt__VideoEncoderConfiguration(struct soap*, const char*, tt__VideoEncoderConfiguration *, const char*);

#ifndef soap_write_tt__VideoEncoderConfiguration
#define soap_write_tt__VideoEncoderConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:VideoEncoderConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoEncoderConfiguration * SOAP_FMAC4 soap_get_tt__VideoEncoderConfiguration(struct soap*, tt__VideoEncoderConfiguration *, const char*, const char*);

#ifndef soap_read_tt__VideoEncoderConfiguration
#define soap_read_tt__VideoEncoderConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoEncoderConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__VideoEncoderConfiguration * SOAP_FMAC2 soap_instantiate_tt__VideoEncoderConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoEncoderConfiguration * soap_new_tt__VideoEncoderConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoEncoderConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__VideoEncoderConfiguration * soap_new_req_tt__VideoEncoderConfiguration(struct soap *soap, enum tt__VideoEncoding Encoding, tt__VideoResolution *Resolution, float Quality, tt__MulticastConfiguration *Multicast, LONG64 SessionTimeout, std::string& Name1, int UseCount1, std::string& token1) { tt__VideoEncoderConfiguration *_p = soap_instantiate_tt__VideoEncoderConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoEncoderConfiguration::Encoding = Encoding; _p->tt__VideoEncoderConfiguration::Resolution = Resolution; _p->tt__VideoEncoderConfiguration::Quality = Quality; _p->tt__VideoEncoderConfiguration::Multicast = Multicast; _p->tt__VideoEncoderConfiguration::SessionTimeout = SessionTimeout; _p->tt__ConfigurationEntity::Name = Name1; _p->tt__ConfigurationEntity::UseCount = UseCount1; _p->tt__ConfigurationEntity::token = token1; } return _p; }

inline tt__VideoEncoderConfiguration * soap_new_set_tt__VideoEncoderConfiguration(struct soap *soap, enum tt__VideoEncoding Encoding, tt__VideoResolution *Resolution, float Quality, tt__VideoRateControl *RateControl, tt__Mpeg4Configuration *MPEG4, tt__H264Configuration *H264, tt__MulticastConfiguration *Multicast, LONG64 SessionTimeout, std::string& Name1, int UseCount1, std::string& token1) { tt__VideoEncoderConfiguration *_p = soap_instantiate_tt__VideoEncoderConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoEncoderConfiguration::Encoding = Encoding; _p->tt__VideoEncoderConfiguration::Resolution = Resolution; _p->tt__VideoEncoderConfiguration::Quality = Quality; _p->tt__VideoEncoderConfiguration::RateControl = RateControl; _p->tt__VideoEncoderConfiguration::MPEG4 = MPEG4; _p->tt__VideoEncoderConfiguration::H264 = H264; _p->tt__VideoEncoderConfiguration::Multicast = Multicast; _p->tt__VideoEncoderConfiguration::SessionTimeout = SessionTimeout; _p->tt__ConfigurationEntity::Name = Name1; _p->tt__ConfigurationEntity::UseCount = UseCount1; _p->tt__ConfigurationEntity::token = token1; } return _p; }

inline void soap_delete_tt__VideoEncoderConfiguration(struct soap *soap, tt__VideoEncoderConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__VideoEncoderConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RotateOptionsExtension
#define SOAP_TYPE_tt__RotateOptionsExtension (272)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RotateOptionsExtension(struct soap*, const char*, int, const tt__RotateOptionsExtension *, const char*);
SOAP_FMAC3 tt__RotateOptionsExtension * SOAP_FMAC4 soap_in_tt__RotateOptionsExtension(struct soap*, const char*, tt__RotateOptionsExtension *, const char*);

#ifndef soap_write_tt__RotateOptionsExtension
#define soap_write_tt__RotateOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RotateOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RotateOptionsExtension * SOAP_FMAC4 soap_get_tt__RotateOptionsExtension(struct soap*, tt__RotateOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__RotateOptionsExtension
#define soap_read_tt__RotateOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RotateOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RotateOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__RotateOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__RotateOptionsExtension * soap_new_tt__RotateOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__RotateOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__RotateOptionsExtension * soap_new_req_tt__RotateOptionsExtension(struct soap *soap) { tt__RotateOptionsExtension *_p = soap_instantiate_tt__RotateOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__RotateOptionsExtension * soap_new_set_tt__RotateOptionsExtension(struct soap *soap) { tt__RotateOptionsExtension *_p = soap_instantiate_tt__RotateOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__RotateOptionsExtension(struct soap *soap, tt__RotateOptionsExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RotateOptionsExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RotateOptions
#define SOAP_TYPE_tt__RotateOptions (271)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RotateOptions(struct soap*, const char*, int, const tt__RotateOptions *, const char*);
SOAP_FMAC3 tt__RotateOptions * SOAP_FMAC4 soap_in_tt__RotateOptions(struct soap*, const char*, tt__RotateOptions *, const char*);

#ifndef soap_write_tt__RotateOptions
#define soap_write_tt__RotateOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RotateOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RotateOptions * SOAP_FMAC4 soap_get_tt__RotateOptions(struct soap*, tt__RotateOptions *, const char*, const char*);

#ifndef soap_read_tt__RotateOptions
#define soap_read_tt__RotateOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RotateOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RotateOptions * SOAP_FMAC2 soap_instantiate_tt__RotateOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__RotateOptions * soap_new_tt__RotateOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__RotateOptions(soap, n, NULL, NULL, NULL); }

inline tt__RotateOptions * soap_new_req_tt__RotateOptions(struct soap *soap, std::vector<enum tt__RotateMode >& Mode) { tt__RotateOptions *_p = soap_instantiate_tt__RotateOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RotateOptions::Mode = Mode; } return _p; }

inline tt__RotateOptions * soap_new_set_tt__RotateOptions(struct soap *soap, std::vector<enum tt__RotateMode >& Mode, tt__IntList *DegreeList, tt__RotateOptionsExtension *Extension) { tt__RotateOptions *_p = soap_instantiate_tt__RotateOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__RotateOptions::Mode = Mode; _p->tt__RotateOptions::DegreeList = DegreeList; _p->tt__RotateOptions::Extension = Extension; } return _p; }

inline void soap_delete_tt__RotateOptions(struct soap *soap, tt__RotateOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RotateOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__VideoSourceConfigurationOptionsExtension2
#define SOAP_TYPE_tt__VideoSourceConfigurationOptionsExtension2 (270)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoSourceConfigurationOptionsExtension2(struct soap*, const char*, int, const tt__VideoSourceConfigurationOptionsExtension2 *, const char*);
SOAP_FMAC3 tt__VideoSourceConfigurationOptionsExtension2 * SOAP_FMAC4 soap_in_tt__VideoSourceConfigurationOptionsExtension2(struct soap*, const char*, tt__VideoSourceConfigurationOptionsExtension2 *, const char*);

#ifndef soap_write_tt__VideoSourceConfigurationOptionsExtension2
#define soap_write_tt__VideoSourceConfigurationOptionsExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:VideoSourceConfigurationOptionsExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceConfigurationOptionsExtension2 * SOAP_FMAC4 soap_get_tt__VideoSourceConfigurationOptionsExtension2(struct soap*, tt__VideoSourceConfigurationOptionsExtension2 *, const char*, const char*);

#ifndef soap_read_tt__VideoSourceConfigurationOptionsExtension2
#define soap_read_tt__VideoSourceConfigurationOptionsExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoSourceConfigurationOptionsExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__VideoSourceConfigurationOptionsExtension2 * SOAP_FMAC2 soap_instantiate_tt__VideoSourceConfigurationOptionsExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoSourceConfigurationOptionsExtension2 * soap_new_tt__VideoSourceConfigurationOptionsExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoSourceConfigurationOptionsExtension2(soap, n, NULL, NULL, NULL); }

inline tt__VideoSourceConfigurationOptionsExtension2 * soap_new_req_tt__VideoSourceConfigurationOptionsExtension2(struct soap *soap) { tt__VideoSourceConfigurationOptionsExtension2 *_p = soap_instantiate_tt__VideoSourceConfigurationOptionsExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__VideoSourceConfigurationOptionsExtension2 * soap_new_set_tt__VideoSourceConfigurationOptionsExtension2(struct soap *soap) { tt__VideoSourceConfigurationOptionsExtension2 *_p = soap_instantiate_tt__VideoSourceConfigurationOptionsExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__VideoSourceConfigurationOptionsExtension2(struct soap *soap, tt__VideoSourceConfigurationOptionsExtension2 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__VideoSourceConfigurationOptionsExtension2(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__VideoSourceConfigurationOptionsExtension
#define SOAP_TYPE_tt__VideoSourceConfigurationOptionsExtension (269)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoSourceConfigurationOptionsExtension(struct soap*, const char*, int, const tt__VideoSourceConfigurationOptionsExtension *, const char*);
SOAP_FMAC3 tt__VideoSourceConfigurationOptionsExtension * SOAP_FMAC4 soap_in_tt__VideoSourceConfigurationOptionsExtension(struct soap*, const char*, tt__VideoSourceConfigurationOptionsExtension *, const char*);

#ifndef soap_write_tt__VideoSourceConfigurationOptionsExtension
#define soap_write_tt__VideoSourceConfigurationOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:VideoSourceConfigurationOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceConfigurationOptionsExtension * SOAP_FMAC4 soap_get_tt__VideoSourceConfigurationOptionsExtension(struct soap*, tt__VideoSourceConfigurationOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__VideoSourceConfigurationOptionsExtension
#define soap_read_tt__VideoSourceConfigurationOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoSourceConfigurationOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__VideoSourceConfigurationOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__VideoSourceConfigurationOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoSourceConfigurationOptionsExtension * soap_new_tt__VideoSourceConfigurationOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoSourceConfigurationOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__VideoSourceConfigurationOptionsExtension * soap_new_req_tt__VideoSourceConfigurationOptionsExtension(struct soap *soap) { tt__VideoSourceConfigurationOptionsExtension *_p = soap_instantiate_tt__VideoSourceConfigurationOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__VideoSourceConfigurationOptionsExtension * soap_new_set_tt__VideoSourceConfigurationOptionsExtension(struct soap *soap, tt__RotateOptions *Rotate, tt__VideoSourceConfigurationOptionsExtension2 *Extension) { tt__VideoSourceConfigurationOptionsExtension *_p = soap_instantiate_tt__VideoSourceConfigurationOptionsExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoSourceConfigurationOptionsExtension::Rotate = Rotate; _p->tt__VideoSourceConfigurationOptionsExtension::Extension = Extension; } return _p; }

inline void soap_delete_tt__VideoSourceConfigurationOptionsExtension(struct soap *soap, tt__VideoSourceConfigurationOptionsExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__VideoSourceConfigurationOptionsExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__VideoSourceConfigurationOptions
#define SOAP_TYPE_tt__VideoSourceConfigurationOptions (268)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoSourceConfigurationOptions(struct soap*, const char*, int, const tt__VideoSourceConfigurationOptions *, const char*);
SOAP_FMAC3 tt__VideoSourceConfigurationOptions * SOAP_FMAC4 soap_in_tt__VideoSourceConfigurationOptions(struct soap*, const char*, tt__VideoSourceConfigurationOptions *, const char*);

#ifndef soap_write_tt__VideoSourceConfigurationOptions
#define soap_write_tt__VideoSourceConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:VideoSourceConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceConfigurationOptions * SOAP_FMAC4 soap_get_tt__VideoSourceConfigurationOptions(struct soap*, tt__VideoSourceConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tt__VideoSourceConfigurationOptions
#define soap_read_tt__VideoSourceConfigurationOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoSourceConfigurationOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__VideoSourceConfigurationOptions * SOAP_FMAC2 soap_instantiate_tt__VideoSourceConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoSourceConfigurationOptions * soap_new_tt__VideoSourceConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoSourceConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline tt__VideoSourceConfigurationOptions * soap_new_req_tt__VideoSourceConfigurationOptions(struct soap *soap, tt__IntRectangleRange *BoundsRange, std::vector<std::string >& VideoSourceTokensAvailable) { tt__VideoSourceConfigurationOptions *_p = soap_instantiate_tt__VideoSourceConfigurationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoSourceConfigurationOptions::BoundsRange = BoundsRange; _p->tt__VideoSourceConfigurationOptions::VideoSourceTokensAvailable = VideoSourceTokensAvailable; } return _p; }

inline tt__VideoSourceConfigurationOptions * soap_new_set_tt__VideoSourceConfigurationOptions(struct soap *soap, tt__IntRectangleRange *BoundsRange, std::vector<std::string >& VideoSourceTokensAvailable, tt__VideoSourceConfigurationOptionsExtension *Extension) { tt__VideoSourceConfigurationOptions *_p = soap_instantiate_tt__VideoSourceConfigurationOptions(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoSourceConfigurationOptions::BoundsRange = BoundsRange; _p->tt__VideoSourceConfigurationOptions::VideoSourceTokensAvailable = VideoSourceTokensAvailable; _p->tt__VideoSourceConfigurationOptions::Extension = Extension; } return _p; }

inline void soap_delete_tt__VideoSourceConfigurationOptions(struct soap *soap, tt__VideoSourceConfigurationOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__VideoSourceConfigurationOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__RotateExtension
#define SOAP_TYPE_tt__RotateExtension (267)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RotateExtension(struct soap*, const char*, int, const tt__RotateExtension *, const char*);
SOAP_FMAC3 tt__RotateExtension * SOAP_FMAC4 soap_in_tt__RotateExtension(struct soap*, const char*, tt__RotateExtension *, const char*);

#ifndef soap_write_tt__RotateExtension
#define soap_write_tt__RotateExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:RotateExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RotateExtension * SOAP_FMAC4 soap_get_tt__RotateExtension(struct soap*, tt__RotateExtension *, const char*, const char*);

#ifndef soap_read_tt__RotateExtension
#define soap_read_tt__RotateExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__RotateExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__RotateExtension * SOAP_FMAC2 soap_instantiate_tt__RotateExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__RotateExtension * soap_new_tt__RotateExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__RotateExtension(soap, n, NULL, NULL, NULL); }

inline tt__RotateExtension * soap_new_req_tt__RotateExtension(struct soap *soap) { tt__RotateExtension *_p = soap_instantiate_tt__RotateExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__RotateExtension * soap_new_set_tt__RotateExtension(struct soap *soap) { tt__RotateExtension *_p = soap_instantiate_tt__RotateExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__RotateExtension(struct soap *soap, tt__RotateExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__RotateExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Rotate
#define SOAP_TYPE_tt__Rotate (266)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Rotate(struct soap*, const char*, int, const tt__Rotate *, const char*);
SOAP_FMAC3 tt__Rotate * SOAP_FMAC4 soap_in_tt__Rotate(struct soap*, const char*, tt__Rotate *, const char*);

#ifndef soap_write_tt__Rotate
#define soap_write_tt__Rotate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Rotate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Rotate * SOAP_FMAC4 soap_get_tt__Rotate(struct soap*, tt__Rotate *, const char*, const char*);

#ifndef soap_read_tt__Rotate
#define soap_read_tt__Rotate(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Rotate(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Rotate * SOAP_FMAC2 soap_instantiate_tt__Rotate(struct soap*, int, const char*, const char*, size_t*);

inline tt__Rotate * soap_new_tt__Rotate(struct soap *soap, int n = -1) { return soap_instantiate_tt__Rotate(soap, n, NULL, NULL, NULL); }

inline tt__Rotate * soap_new_req_tt__Rotate(struct soap *soap, enum tt__RotateMode Mode) { tt__Rotate *_p = soap_instantiate_tt__Rotate(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Rotate::Mode = Mode; } return _p; }

inline tt__Rotate * soap_new_set_tt__Rotate(struct soap *soap, enum tt__RotateMode Mode, int *Degree, tt__RotateExtension *Extension) { tt__Rotate *_p = soap_instantiate_tt__Rotate(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Rotate::Mode = Mode; _p->tt__Rotate::Degree = Degree; _p->tt__Rotate::Extension = Extension; } return _p; }

inline void soap_delete_tt__Rotate(struct soap *soap, tt__Rotate *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Rotate(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__VideoSourceConfigurationExtension2
#define SOAP_TYPE_tt__VideoSourceConfigurationExtension2 (265)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoSourceConfigurationExtension2(struct soap*, const char*, int, const tt__VideoSourceConfigurationExtension2 *, const char*);
SOAP_FMAC3 tt__VideoSourceConfigurationExtension2 * SOAP_FMAC4 soap_in_tt__VideoSourceConfigurationExtension2(struct soap*, const char*, tt__VideoSourceConfigurationExtension2 *, const char*);

#ifndef soap_write_tt__VideoSourceConfigurationExtension2
#define soap_write_tt__VideoSourceConfigurationExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:VideoSourceConfigurationExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceConfigurationExtension2 * SOAP_FMAC4 soap_get_tt__VideoSourceConfigurationExtension2(struct soap*, tt__VideoSourceConfigurationExtension2 *, const char*, const char*);

#ifndef soap_read_tt__VideoSourceConfigurationExtension2
#define soap_read_tt__VideoSourceConfigurationExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoSourceConfigurationExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__VideoSourceConfigurationExtension2 * SOAP_FMAC2 soap_instantiate_tt__VideoSourceConfigurationExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoSourceConfigurationExtension2 * soap_new_tt__VideoSourceConfigurationExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoSourceConfigurationExtension2(soap, n, NULL, NULL, NULL); }

inline tt__VideoSourceConfigurationExtension2 * soap_new_req_tt__VideoSourceConfigurationExtension2(struct soap *soap) { tt__VideoSourceConfigurationExtension2 *_p = soap_instantiate_tt__VideoSourceConfigurationExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__VideoSourceConfigurationExtension2 * soap_new_set_tt__VideoSourceConfigurationExtension2(struct soap *soap) { tt__VideoSourceConfigurationExtension2 *_p = soap_instantiate_tt__VideoSourceConfigurationExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__VideoSourceConfigurationExtension2(struct soap *soap, tt__VideoSourceConfigurationExtension2 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__VideoSourceConfigurationExtension2(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__VideoSourceConfigurationExtension
#define SOAP_TYPE_tt__VideoSourceConfigurationExtension (264)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoSourceConfigurationExtension(struct soap*, const char*, int, const tt__VideoSourceConfigurationExtension *, const char*);
SOAP_FMAC3 tt__VideoSourceConfigurationExtension * SOAP_FMAC4 soap_in_tt__VideoSourceConfigurationExtension(struct soap*, const char*, tt__VideoSourceConfigurationExtension *, const char*);

#ifndef soap_write_tt__VideoSourceConfigurationExtension
#define soap_write_tt__VideoSourceConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:VideoSourceConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceConfigurationExtension * SOAP_FMAC4 soap_get_tt__VideoSourceConfigurationExtension(struct soap*, tt__VideoSourceConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__VideoSourceConfigurationExtension
#define soap_read_tt__VideoSourceConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoSourceConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__VideoSourceConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__VideoSourceConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoSourceConfigurationExtension * soap_new_tt__VideoSourceConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoSourceConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__VideoSourceConfigurationExtension * soap_new_req_tt__VideoSourceConfigurationExtension(struct soap *soap) { tt__VideoSourceConfigurationExtension *_p = soap_instantiate_tt__VideoSourceConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__VideoSourceConfigurationExtension * soap_new_set_tt__VideoSourceConfigurationExtension(struct soap *soap, tt__Rotate *Rotate, tt__VideoSourceConfigurationExtension2 *Extension) { tt__VideoSourceConfigurationExtension *_p = soap_instantiate_tt__VideoSourceConfigurationExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoSourceConfigurationExtension::Rotate = Rotate; _p->tt__VideoSourceConfigurationExtension::Extension = Extension; } return _p; }

inline void soap_delete_tt__VideoSourceConfigurationExtension(struct soap *soap, tt__VideoSourceConfigurationExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__VideoSourceConfigurationExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__VideoSourceConfiguration
#define SOAP_TYPE_tt__VideoSourceConfiguration (263)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoSourceConfiguration(struct soap*, const char*, int, const tt__VideoSourceConfiguration *, const char*);
SOAP_FMAC3 tt__VideoSourceConfiguration * SOAP_FMAC4 soap_in_tt__VideoSourceConfiguration(struct soap*, const char*, tt__VideoSourceConfiguration *, const char*);

#ifndef soap_write_tt__VideoSourceConfiguration
#define soap_write_tt__VideoSourceConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:VideoSourceConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceConfiguration * SOAP_FMAC4 soap_get_tt__VideoSourceConfiguration(struct soap*, tt__VideoSourceConfiguration *, const char*, const char*);

#ifndef soap_read_tt__VideoSourceConfiguration
#define soap_read_tt__VideoSourceConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoSourceConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__VideoSourceConfiguration * SOAP_FMAC2 soap_instantiate_tt__VideoSourceConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoSourceConfiguration * soap_new_tt__VideoSourceConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoSourceConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__VideoSourceConfiguration * soap_new_req_tt__VideoSourceConfiguration(struct soap *soap, std::string& SourceToken, tt__IntRectangle *Bounds, std::string& Name1, int UseCount1, std::string& token1) { tt__VideoSourceConfiguration *_p = soap_instantiate_tt__VideoSourceConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoSourceConfiguration::SourceToken = SourceToken; _p->tt__VideoSourceConfiguration::Bounds = Bounds; _p->tt__ConfigurationEntity::Name = Name1; _p->tt__ConfigurationEntity::UseCount = UseCount1; _p->tt__ConfigurationEntity::token = token1; } return _p; }

inline tt__VideoSourceConfiguration * soap_new_set_tt__VideoSourceConfiguration(struct soap *soap, std::string& SourceToken, tt__IntRectangle *Bounds, tt__VideoSourceConfigurationExtension *Extension, std::string& Name1, int UseCount1, std::string& token1) { tt__VideoSourceConfiguration *_p = soap_instantiate_tt__VideoSourceConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoSourceConfiguration::SourceToken = SourceToken; _p->tt__VideoSourceConfiguration::Bounds = Bounds; _p->tt__VideoSourceConfiguration::Extension = Extension; _p->tt__ConfigurationEntity::Name = Name1; _p->tt__ConfigurationEntity::UseCount = UseCount1; _p->tt__ConfigurationEntity::token = token1; } return _p; }

inline void soap_delete_tt__VideoSourceConfiguration(struct soap *soap, tt__VideoSourceConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__VideoSourceConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ConfigurationEntity
#define SOAP_TYPE_tt__ConfigurationEntity (262)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ConfigurationEntity(struct soap*, const char*, int, const tt__ConfigurationEntity *, const char*);
SOAP_FMAC3 tt__ConfigurationEntity * SOAP_FMAC4 soap_in_tt__ConfigurationEntity(struct soap*, const char*, tt__ConfigurationEntity *, const char*);

#ifndef soap_write_tt__ConfigurationEntity
#define soap_write_tt__ConfigurationEntity(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ConfigurationEntity", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ConfigurationEntity * SOAP_FMAC4 soap_get_tt__ConfigurationEntity(struct soap*, tt__ConfigurationEntity *, const char*, const char*);

#ifndef soap_read_tt__ConfigurationEntity
#define soap_read_tt__ConfigurationEntity(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ConfigurationEntity(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ConfigurationEntity * SOAP_FMAC2 soap_instantiate_tt__ConfigurationEntity(struct soap*, int, const char*, const char*, size_t*);

inline tt__ConfigurationEntity * soap_new_tt__ConfigurationEntity(struct soap *soap, int n = -1) { return soap_instantiate_tt__ConfigurationEntity(soap, n, NULL, NULL, NULL); }

inline tt__ConfigurationEntity * soap_new_req_tt__ConfigurationEntity(struct soap *soap, std::string& Name, int UseCount, std::string& token) { tt__ConfigurationEntity *_p = soap_instantiate_tt__ConfigurationEntity(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ConfigurationEntity::Name = Name; _p->tt__ConfigurationEntity::UseCount = UseCount; _p->tt__ConfigurationEntity::token = token; } return _p; }

inline tt__ConfigurationEntity * soap_new_set_tt__ConfigurationEntity(struct soap *soap, std::string& Name, int UseCount, std::string& token) { tt__ConfigurationEntity *_p = soap_instantiate_tt__ConfigurationEntity(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ConfigurationEntity::Name = Name; _p->tt__ConfigurationEntity::UseCount = UseCount; _p->tt__ConfigurationEntity::token = token; } return _p; }

inline void soap_delete_tt__ConfigurationEntity(struct soap *soap, tt__ConfigurationEntity *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ConfigurationEntity(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ProfileExtension2
#define SOAP_TYPE_tt__ProfileExtension2 (261)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ProfileExtension2(struct soap*, const char*, int, const tt__ProfileExtension2 *, const char*);
SOAP_FMAC3 tt__ProfileExtension2 * SOAP_FMAC4 soap_in_tt__ProfileExtension2(struct soap*, const char*, tt__ProfileExtension2 *, const char*);

#ifndef soap_write_tt__ProfileExtension2
#define soap_write_tt__ProfileExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ProfileExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ProfileExtension2 * SOAP_FMAC4 soap_get_tt__ProfileExtension2(struct soap*, tt__ProfileExtension2 *, const char*, const char*);

#ifndef soap_read_tt__ProfileExtension2
#define soap_read_tt__ProfileExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ProfileExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ProfileExtension2 * SOAP_FMAC2 soap_instantiate_tt__ProfileExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__ProfileExtension2 * soap_new_tt__ProfileExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__ProfileExtension2(soap, n, NULL, NULL, NULL); }

inline tt__ProfileExtension2 * soap_new_req_tt__ProfileExtension2(struct soap *soap) { tt__ProfileExtension2 *_p = soap_instantiate_tt__ProfileExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ProfileExtension2 * soap_new_set_tt__ProfileExtension2(struct soap *soap) { tt__ProfileExtension2 *_p = soap_instantiate_tt__ProfileExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__ProfileExtension2(struct soap *soap, tt__ProfileExtension2 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ProfileExtension2(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__ProfileExtension
#define SOAP_TYPE_tt__ProfileExtension (260)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ProfileExtension(struct soap*, const char*, int, const tt__ProfileExtension *, const char*);
SOAP_FMAC3 tt__ProfileExtension * SOAP_FMAC4 soap_in_tt__ProfileExtension(struct soap*, const char*, tt__ProfileExtension *, const char*);

#ifndef soap_write_tt__ProfileExtension
#define soap_write_tt__ProfileExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:ProfileExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ProfileExtension * SOAP_FMAC4 soap_get_tt__ProfileExtension(struct soap*, tt__ProfileExtension *, const char*, const char*);

#ifndef soap_read_tt__ProfileExtension
#define soap_read_tt__ProfileExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ProfileExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__ProfileExtension * SOAP_FMAC2 soap_instantiate_tt__ProfileExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ProfileExtension * soap_new_tt__ProfileExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ProfileExtension(soap, n, NULL, NULL, NULL); }

inline tt__ProfileExtension * soap_new_req_tt__ProfileExtension(struct soap *soap) { tt__ProfileExtension *_p = soap_instantiate_tt__ProfileExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__ProfileExtension * soap_new_set_tt__ProfileExtension(struct soap *soap, tt__AudioOutputConfiguration *AudioOutputConfiguration, tt__AudioDecoderConfiguration *AudioDecoderConfiguration, tt__ProfileExtension2 *Extension) { tt__ProfileExtension *_p = soap_instantiate_tt__ProfileExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__ProfileExtension::AudioOutputConfiguration = AudioOutputConfiguration; _p->tt__ProfileExtension::AudioDecoderConfiguration = AudioDecoderConfiguration; _p->tt__ProfileExtension::Extension = Extension; } return _p; }

inline void soap_delete_tt__ProfileExtension(struct soap *soap, tt__ProfileExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__ProfileExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__Profile
#define SOAP_TYPE_tt__Profile (259)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Profile(struct soap*, const char*, int, const tt__Profile *, const char*);
SOAP_FMAC3 tt__Profile * SOAP_FMAC4 soap_in_tt__Profile(struct soap*, const char*, tt__Profile *, const char*);

#ifndef soap_write_tt__Profile
#define soap_write_tt__Profile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:Profile", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Profile * SOAP_FMAC4 soap_get_tt__Profile(struct soap*, tt__Profile *, const char*, const char*);

#ifndef soap_read_tt__Profile
#define soap_read_tt__Profile(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Profile(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__Profile * SOAP_FMAC2 soap_instantiate_tt__Profile(struct soap*, int, const char*, const char*, size_t*);

inline tt__Profile * soap_new_tt__Profile(struct soap *soap, int n = -1) { return soap_instantiate_tt__Profile(soap, n, NULL, NULL, NULL); }

inline tt__Profile * soap_new_req_tt__Profile(struct soap *soap, std::string& Name, std::string& token) { tt__Profile *_p = soap_instantiate_tt__Profile(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Profile::Name = Name; _p->tt__Profile::token = token; } return _p; }

inline tt__Profile * soap_new_set_tt__Profile(struct soap *soap, std::string& Name, tt__VideoSourceConfiguration *VideoSourceConfiguration, tt__AudioSourceConfiguration *AudioSourceConfiguration, tt__VideoEncoderConfiguration *VideoEncoderConfiguration, tt__AudioEncoderConfiguration *AudioEncoderConfiguration, tt__VideoAnalyticsConfiguration *VideoAnalyticsConfiguration, tt__PTZConfiguration *PTZConfiguration, tt__MetadataConfiguration *MetadataConfiguration, tt__ProfileExtension *Extension, std::string& token, bool *fixed) { tt__Profile *_p = soap_instantiate_tt__Profile(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__Profile::Name = Name; _p->tt__Profile::VideoSourceConfiguration = VideoSourceConfiguration; _p->tt__Profile::AudioSourceConfiguration = AudioSourceConfiguration; _p->tt__Profile::VideoEncoderConfiguration = VideoEncoderConfiguration; _p->tt__Profile::AudioEncoderConfiguration = AudioEncoderConfiguration; _p->tt__Profile::VideoAnalyticsConfiguration = VideoAnalyticsConfiguration; _p->tt__Profile::PTZConfiguration = PTZConfiguration; _p->tt__Profile::MetadataConfiguration = MetadataConfiguration; _p->tt__Profile::Extension = Extension; _p->tt__Profile::token = token; _p->tt__Profile::fixed = fixed; } return _p; }

inline void soap_delete_tt__Profile(struct soap *soap, tt__Profile *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__Profile(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AudioSource
#define SOAP_TYPE_tt__AudioSource (258)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioSource(struct soap*, const char*, int, const tt__AudioSource *, const char*);
SOAP_FMAC3 tt__AudioSource * SOAP_FMAC4 soap_in_tt__AudioSource(struct soap*, const char*, tt__AudioSource *, const char*);

#ifndef soap_write_tt__AudioSource
#define soap_write_tt__AudioSource(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AudioSource", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioSource * SOAP_FMAC4 soap_get_tt__AudioSource(struct soap*, tt__AudioSource *, const char*, const char*);

#ifndef soap_read_tt__AudioSource
#define soap_read_tt__AudioSource(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AudioSource(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AudioSource * SOAP_FMAC2 soap_instantiate_tt__AudioSource(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioSource * soap_new_tt__AudioSource(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioSource(soap, n, NULL, NULL, NULL); }

inline tt__AudioSource * soap_new_req_tt__AudioSource(struct soap *soap, int Channels, std::string& token1) { tt__AudioSource *_p = soap_instantiate_tt__AudioSource(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AudioSource::Channels = Channels; _p->tt__DeviceEntity::token = token1; } return _p; }

inline tt__AudioSource * soap_new_set_tt__AudioSource(struct soap *soap, int Channels, std::string& token1) { tt__AudioSource *_p = soap_instantiate_tt__AudioSource(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__AudioSource::Channels = Channels; _p->tt__DeviceEntity::token = token1; } return _p; }

inline void soap_delete_tt__AudioSource(struct soap *soap, tt__AudioSource *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AudioSource(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__VideoSourceExtension2
#define SOAP_TYPE_tt__VideoSourceExtension2 (257)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoSourceExtension2(struct soap*, const char*, int, const tt__VideoSourceExtension2 *, const char*);
SOAP_FMAC3 tt__VideoSourceExtension2 * SOAP_FMAC4 soap_in_tt__VideoSourceExtension2(struct soap*, const char*, tt__VideoSourceExtension2 *, const char*);

#ifndef soap_write_tt__VideoSourceExtension2
#define soap_write_tt__VideoSourceExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:VideoSourceExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceExtension2 * SOAP_FMAC4 soap_get_tt__VideoSourceExtension2(struct soap*, tt__VideoSourceExtension2 *, const char*, const char*);

#ifndef soap_read_tt__VideoSourceExtension2
#define soap_read_tt__VideoSourceExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoSourceExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__VideoSourceExtension2 * SOAP_FMAC2 soap_instantiate_tt__VideoSourceExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoSourceExtension2 * soap_new_tt__VideoSourceExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoSourceExtension2(soap, n, NULL, NULL, NULL); }

inline tt__VideoSourceExtension2 * soap_new_req_tt__VideoSourceExtension2(struct soap *soap) { tt__VideoSourceExtension2 *_p = soap_instantiate_tt__VideoSourceExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__VideoSourceExtension2 * soap_new_set_tt__VideoSourceExtension2(struct soap *soap) { tt__VideoSourceExtension2 *_p = soap_instantiate_tt__VideoSourceExtension2(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__VideoSourceExtension2(struct soap *soap, tt__VideoSourceExtension2 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__VideoSourceExtension2(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__VideoSourceExtension
#define SOAP_TYPE_tt__VideoSourceExtension (256)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoSourceExtension(struct soap*, const char*, int, const tt__VideoSourceExtension *, const char*);
SOAP_FMAC3 tt__VideoSourceExtension * SOAP_FMAC4 soap_in_tt__VideoSourceExtension(struct soap*, const char*, tt__VideoSourceExtension *, const char*);

#ifndef soap_write_tt__VideoSourceExtension
#define soap_write_tt__VideoSourceExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:VideoSourceExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceExtension * SOAP_FMAC4 soap_get_tt__VideoSourceExtension(struct soap*, tt__VideoSourceExtension *, const char*, const char*);

#ifndef soap_read_tt__VideoSourceExtension
#define soap_read_tt__VideoSourceExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoSourceExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__VideoSourceExtension * SOAP_FMAC2 soap_instantiate_tt__VideoSourceExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoSourceExtension * soap_new_tt__VideoSourceExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoSourceExtension(soap, n, NULL, NULL, NULL); }

inline tt__VideoSourceExtension * soap_new_req_tt__VideoSourceExtension(struct soap *soap) { tt__VideoSourceExtension *_p = soap_instantiate_tt__VideoSourceExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__VideoSourceExtension * soap_new_set_tt__VideoSourceExtension(struct soap *soap, tt__ImagingSettings20 *Imaging, tt__VideoSourceExtension2 *Extension) { tt__VideoSourceExtension *_p = soap_instantiate_tt__VideoSourceExtension(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoSourceExtension::Imaging = Imaging; _p->tt__VideoSourceExtension::Extension = Extension; } return _p; }

inline void soap_delete_tt__VideoSourceExtension(struct soap *soap, tt__VideoSourceExtension *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__VideoSourceExtension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__VideoSource
#define SOAP_TYPE_tt__VideoSource (255)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoSource(struct soap*, const char*, int, const tt__VideoSource *, const char*);
SOAP_FMAC3 tt__VideoSource * SOAP_FMAC4 soap_in_tt__VideoSource(struct soap*, const char*, tt__VideoSource *, const char*);

#ifndef soap_write_tt__VideoSource
#define soap_write_tt__VideoSource(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:VideoSource", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSource * SOAP_FMAC4 soap_get_tt__VideoSource(struct soap*, tt__VideoSource *, const char*, const char*);

#ifndef soap_read_tt__VideoSource
#define soap_read_tt__VideoSource(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoSource(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__VideoSource * SOAP_FMAC2 soap_instantiate_tt__VideoSource(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoSource * soap_new_tt__VideoSource(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoSource(soap, n, NULL, NULL, NULL); }

inline tt__VideoSource * soap_new_req_tt__VideoSource(struct soap *soap, float Framerate, tt__VideoResolution *Resolution, std::string& token1) { tt__VideoSource *_p = soap_instantiate_tt__VideoSource(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoSource::Framerate = Framerate; _p->tt__VideoSource::Resolution = Resolution; _p->tt__DeviceEntity::token = token1; } return _p; }

inline tt__VideoSource * soap_new_set_tt__VideoSource(struct soap *soap, float Framerate, tt__VideoResolution *Resolution, tt__ImagingSettings *Imaging, tt__VideoSourceExtension *Extension, std::string& token1) { tt__VideoSource *_p = soap_instantiate_tt__VideoSource(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__VideoSource::Framerate = Framerate; _p->tt__VideoSource::Resolution = Resolution; _p->tt__VideoSource::Imaging = Imaging; _p->tt__VideoSource::Extension = Extension; _p->tt__DeviceEntity::token = token1; } return _p; }

inline void soap_delete_tt__VideoSource(struct soap *soap, tt__VideoSource *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__VideoSource(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__AnyHolder
#define SOAP_TYPE_tt__AnyHolder (254)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnyHolder(struct soap*, const char*, int, const tt__AnyHolder *, const char*);
SOAP_FMAC3 tt__AnyHolder * SOAP_FMAC4 soap_in_tt__AnyHolder(struct soap*, const char*, tt__AnyHolder *, const char*);

#ifndef soap_write_tt__AnyHolder
#define soap_write_tt__AnyHolder(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:AnyHolder", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnyHolder * SOAP_FMAC4 soap_get_tt__AnyHolder(struct soap*, tt__AnyHolder *, const char*, const char*);

#ifndef soap_read_tt__AnyHolder
#define soap_read_tt__AnyHolder(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__AnyHolder(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__AnyHolder * SOAP_FMAC2 soap_instantiate_tt__AnyHolder(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnyHolder * soap_new_tt__AnyHolder(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnyHolder(soap, n, NULL, NULL, NULL); }

inline tt__AnyHolder * soap_new_req_tt__AnyHolder(struct soap *soap) { tt__AnyHolder *_p = soap_instantiate_tt__AnyHolder(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__AnyHolder * soap_new_set_tt__AnyHolder(struct soap *soap) { tt__AnyHolder *_p = soap_instantiate_tt__AnyHolder(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_tt__AnyHolder(struct soap *soap, tt__AnyHolder *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__AnyHolder(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__FloatList
#define SOAP_TYPE_tt__FloatList (253)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FloatList(struct soap*, const char*, int, const tt__FloatList *, const char*);
SOAP_FMAC3 tt__FloatList * SOAP_FMAC4 soap_in_tt__FloatList(struct soap*, const char*, tt__FloatList *, const char*);

#ifndef soap_write_tt__FloatList
#define soap_write_tt__FloatList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:FloatList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FloatList * SOAP_FMAC4 soap_get_tt__FloatList(struct soap*, tt__FloatList *, const char*, const char*);

#ifndef soap_read_tt__FloatList
#define soap_read_tt__FloatList(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__FloatList(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__FloatList * SOAP_FMAC2 soap_instantiate_tt__FloatList(struct soap*, int, const char*, const char*, size_t*);

inline tt__FloatList * soap_new_tt__FloatList(struct soap *soap, int n = -1) { return soap_instantiate_tt__FloatList(soap, n, NULL, NULL, NULL); }

inline tt__FloatList * soap_new_req_tt__FloatList(struct soap *soap) { tt__FloatList *_p = soap_instantiate_tt__FloatList(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__FloatList * soap_new_set_tt__FloatList(struct soap *soap, std::vector<float >& Items) { tt__FloatList *_p = soap_instantiate_tt__FloatList(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FloatList::Items = Items; } return _p; }

inline void soap_delete_tt__FloatList(struct soap *soap, tt__FloatList *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__FloatList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__IntList
#define SOAP_TYPE_tt__IntList (252)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IntList(struct soap*, const char*, int, const tt__IntList *, const char*);
SOAP_FMAC3 tt__IntList * SOAP_FMAC4 soap_in_tt__IntList(struct soap*, const char*, tt__IntList *, const char*);

#ifndef soap_write_tt__IntList
#define soap_write_tt__IntList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:IntList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IntList * SOAP_FMAC4 soap_get_tt__IntList(struct soap*, tt__IntList *, const char*, const char*);

#ifndef soap_read_tt__IntList
#define soap_read_tt__IntList(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IntList(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__IntList * SOAP_FMAC2 soap_instantiate_tt__IntList(struct soap*, int, const char*, const char*, size_t*);

inline tt__IntList * soap_new_tt__IntList(struct soap *soap, int n = -1) { return soap_instantiate_tt__IntList(soap, n, NULL, NULL, NULL); }

inline tt__IntList * soap_new_req_tt__IntList(struct soap *soap) { tt__IntList *_p = soap_instantiate_tt__IntList(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tt__IntList * soap_new_set_tt__IntList(struct soap *soap, std::vector<int >& Items) { tt__IntList *_p = soap_instantiate_tt__IntList(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IntList::Items = Items; } return _p; }

inline void soap_delete_tt__IntList(struct soap *soap, tt__IntList *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__IntList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__DurationRange
#define SOAP_TYPE_tt__DurationRange (251)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DurationRange(struct soap*, const char*, int, const tt__DurationRange *, const char*);
SOAP_FMAC3 tt__DurationRange * SOAP_FMAC4 soap_in_tt__DurationRange(struct soap*, const char*, tt__DurationRange *, const char*);

#ifndef soap_write_tt__DurationRange
#define soap_write_tt__DurationRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:DurationRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DurationRange * SOAP_FMAC4 soap_get_tt__DurationRange(struct soap*, tt__DurationRange *, const char*, const char*);

#ifndef soap_read_tt__DurationRange
#define soap_read_tt__DurationRange(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__DurationRange(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__DurationRange * SOAP_FMAC2 soap_instantiate_tt__DurationRange(struct soap*, int, const char*, const char*, size_t*);

inline tt__DurationRange * soap_new_tt__DurationRange(struct soap *soap, int n = -1) { return soap_instantiate_tt__DurationRange(soap, n, NULL, NULL, NULL); }

inline tt__DurationRange * soap_new_req_tt__DurationRange(struct soap *soap, LONG64 Min, LONG64 Max) { tt__DurationRange *_p = soap_instantiate_tt__DurationRange(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__DurationRange::Min = Min; _p->tt__DurationRange::Max = Max; } return _p; }

inline tt__DurationRange * soap_new_set_tt__DurationRange(struct soap *soap, LONG64 Min, LONG64 Max) { tt__DurationRange *_p = soap_instantiate_tt__DurationRange(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__DurationRange::Min = Min; _p->tt__DurationRange::Max = Max; } return _p; }

inline void soap_delete_tt__DurationRange(struct soap *soap, tt__DurationRange *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__DurationRange(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__FloatRange
#define SOAP_TYPE_tt__FloatRange (250)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FloatRange(struct soap*, const char*, int, const tt__FloatRange *, const char*);
SOAP_FMAC3 tt__FloatRange * SOAP_FMAC4 soap_in_tt__FloatRange(struct soap*, const char*, tt__FloatRange *, const char*);

#ifndef soap_write_tt__FloatRange
#define soap_write_tt__FloatRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:FloatRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FloatRange * SOAP_FMAC4 soap_get_tt__FloatRange(struct soap*, tt__FloatRange *, const char*, const char*);

#ifndef soap_read_tt__FloatRange
#define soap_read_tt__FloatRange(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__FloatRange(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__FloatRange * SOAP_FMAC2 soap_instantiate_tt__FloatRange(struct soap*, int, const char*, const char*, size_t*);

inline tt__FloatRange * soap_new_tt__FloatRange(struct soap *soap, int n = -1) { return soap_instantiate_tt__FloatRange(soap, n, NULL, NULL, NULL); }

inline tt__FloatRange * soap_new_req_tt__FloatRange(struct soap *soap, float Min, float Max) { tt__FloatRange *_p = soap_instantiate_tt__FloatRange(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FloatRange::Min = Min; _p->tt__FloatRange::Max = Max; } return _p; }

inline tt__FloatRange * soap_new_set_tt__FloatRange(struct soap *soap, float Min, float Max) { tt__FloatRange *_p = soap_instantiate_tt__FloatRange(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__FloatRange::Min = Min; _p->tt__FloatRange::Max = Max; } return _p; }

inline void soap_delete_tt__FloatRange(struct soap *soap, tt__FloatRange *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__FloatRange(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__IntRange
#define SOAP_TYPE_tt__IntRange (249)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IntRange(struct soap*, const char*, int, const tt__IntRange *, const char*);
SOAP_FMAC3 tt__IntRange * SOAP_FMAC4 soap_in_tt__IntRange(struct soap*, const char*, tt__IntRange *, const char*);

#ifndef soap_write_tt__IntRange
#define soap_write_tt__IntRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:IntRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IntRange * SOAP_FMAC4 soap_get_tt__IntRange(struct soap*, tt__IntRange *, const char*, const char*);

#ifndef soap_read_tt__IntRange
#define soap_read_tt__IntRange(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IntRange(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__IntRange * SOAP_FMAC2 soap_instantiate_tt__IntRange(struct soap*, int, const char*, const char*, size_t*);

inline tt__IntRange * soap_new_tt__IntRange(struct soap *soap, int n = -1) { return soap_instantiate_tt__IntRange(soap, n, NULL, NULL, NULL); }

inline tt__IntRange * soap_new_req_tt__IntRange(struct soap *soap, int Min, int Max) { tt__IntRange *_p = soap_instantiate_tt__IntRange(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IntRange::Min = Min; _p->tt__IntRange::Max = Max; } return _p; }

inline tt__IntRange * soap_new_set_tt__IntRange(struct soap *soap, int Min, int Max) { tt__IntRange *_p = soap_instantiate_tt__IntRange(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IntRange::Min = Min; _p->tt__IntRange::Max = Max; } return _p; }

inline void soap_delete_tt__IntRange(struct soap *soap, tt__IntRange *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__IntRange(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__IntRectangleRange
#define SOAP_TYPE_tt__IntRectangleRange (248)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IntRectangleRange(struct soap*, const char*, int, const tt__IntRectangleRange *, const char*);
SOAP_FMAC3 tt__IntRectangleRange * SOAP_FMAC4 soap_in_tt__IntRectangleRange(struct soap*, const char*, tt__IntRectangleRange *, const char*);

#ifndef soap_write_tt__IntRectangleRange
#define soap_write_tt__IntRectangleRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:IntRectangleRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IntRectangleRange * SOAP_FMAC4 soap_get_tt__IntRectangleRange(struct soap*, tt__IntRectangleRange *, const char*, const char*);

#ifndef soap_read_tt__IntRectangleRange
#define soap_read_tt__IntRectangleRange(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IntRectangleRange(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__IntRectangleRange * SOAP_FMAC2 soap_instantiate_tt__IntRectangleRange(struct soap*, int, const char*, const char*, size_t*);

inline tt__IntRectangleRange * soap_new_tt__IntRectangleRange(struct soap *soap, int n = -1) { return soap_instantiate_tt__IntRectangleRange(soap, n, NULL, NULL, NULL); }

inline tt__IntRectangleRange * soap_new_req_tt__IntRectangleRange(struct soap *soap, tt__IntRange *XRange, tt__IntRange *YRange, tt__IntRange *WidthRange, tt__IntRange *HeightRange) { tt__IntRectangleRange *_p = soap_instantiate_tt__IntRectangleRange(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IntRectangleRange::XRange = XRange; _p->tt__IntRectangleRange::YRange = YRange; _p->tt__IntRectangleRange::WidthRange = WidthRange; _p->tt__IntRectangleRange::HeightRange = HeightRange; } return _p; }

inline tt__IntRectangleRange * soap_new_set_tt__IntRectangleRange(struct soap *soap, tt__IntRange *XRange, tt__IntRange *YRange, tt__IntRange *WidthRange, tt__IntRange *HeightRange) { tt__IntRectangleRange *_p = soap_instantiate_tt__IntRectangleRange(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IntRectangleRange::XRange = XRange; _p->tt__IntRectangleRange::YRange = YRange; _p->tt__IntRectangleRange::WidthRange = WidthRange; _p->tt__IntRectangleRange::HeightRange = HeightRange; } return _p; }

inline void soap_delete_tt__IntRectangleRange(struct soap *soap, tt__IntRectangleRange *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__IntRectangleRange(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__IntRectangle
#define SOAP_TYPE_tt__IntRectangle (247)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IntRectangle(struct soap*, const char*, int, const tt__IntRectangle *, const char*);
SOAP_FMAC3 tt__IntRectangle * SOAP_FMAC4 soap_in_tt__IntRectangle(struct soap*, const char*, tt__IntRectangle *, const char*);

#ifndef soap_write_tt__IntRectangle
#define soap_write_tt__IntRectangle(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:IntRectangle", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IntRectangle * SOAP_FMAC4 soap_get_tt__IntRectangle(struct soap*, tt__IntRectangle *, const char*, const char*);

#ifndef soap_read_tt__IntRectangle
#define soap_read_tt__IntRectangle(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IntRectangle(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__IntRectangle * SOAP_FMAC2 soap_instantiate_tt__IntRectangle(struct soap*, int, const char*, const char*, size_t*);

inline tt__IntRectangle * soap_new_tt__IntRectangle(struct soap *soap, int n = -1) { return soap_instantiate_tt__IntRectangle(soap, n, NULL, NULL, NULL); }

inline tt__IntRectangle * soap_new_req_tt__IntRectangle(struct soap *soap, int x, int y, int width, int height) { tt__IntRectangle *_p = soap_instantiate_tt__IntRectangle(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IntRectangle::x = x; _p->tt__IntRectangle::y = y; _p->tt__IntRectangle::width = width; _p->tt__IntRectangle::height = height; } return _p; }

inline tt__IntRectangle * soap_new_set_tt__IntRectangle(struct soap *soap, int x, int y, int width, int height) { tt__IntRectangle *_p = soap_instantiate_tt__IntRectangle(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__IntRectangle::x = x; _p->tt__IntRectangle::y = y; _p->tt__IntRectangle::width = width; _p->tt__IntRectangle::height = height; } return _p; }

inline void soap_delete_tt__IntRectangle(struct soap *soap, tt__IntRectangle *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__IntRectangle(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tt__DeviceEntity
#define SOAP_TYPE_tt__DeviceEntity (246)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DeviceEntity(struct soap*, const char*, int, const tt__DeviceEntity *, const char*);
SOAP_FMAC3 tt__DeviceEntity * SOAP_FMAC4 soap_in_tt__DeviceEntity(struct soap*, const char*, tt__DeviceEntity *, const char*);

#ifndef soap_write_tt__DeviceEntity
#define soap_write_tt__DeviceEntity(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tt:DeviceEntity", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DeviceEntity * SOAP_FMAC4 soap_get_tt__DeviceEntity(struct soap*, tt__DeviceEntity *, const char*, const char*);

#ifndef soap_read_tt__DeviceEntity
#define soap_read_tt__DeviceEntity(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__DeviceEntity(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tt__DeviceEntity * SOAP_FMAC2 soap_instantiate_tt__DeviceEntity(struct soap*, int, const char*, const char*, size_t*);

inline tt__DeviceEntity * soap_new_tt__DeviceEntity(struct soap *soap, int n = -1) { return soap_instantiate_tt__DeviceEntity(soap, n, NULL, NULL, NULL); }

inline tt__DeviceEntity * soap_new_req_tt__DeviceEntity(struct soap *soap, std::string& token) { tt__DeviceEntity *_p = soap_instantiate_tt__DeviceEntity(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__DeviceEntity::token = token; } return _p; }

inline tt__DeviceEntity * soap_new_set_tt__DeviceEntity(struct soap *soap, std::string& token) { tt__DeviceEntity *_p = soap_instantiate_tt__DeviceEntity(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tt__DeviceEntity::token = token; } return _p; }

inline void soap_delete_tt__DeviceEntity(struct soap *soap, tt__DeviceEntity *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tt__DeviceEntity(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__StartSystemRestoreResponse
#define SOAP_TYPE__tds__StartSystemRestoreResponse (245)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__StartSystemRestoreResponse(struct soap*, const char*, int, const _tds__StartSystemRestoreResponse *, const char*);
SOAP_FMAC3 _tds__StartSystemRestoreResponse * SOAP_FMAC4 soap_in__tds__StartSystemRestoreResponse(struct soap*, const char*, _tds__StartSystemRestoreResponse *, const char*);

#ifndef soap_write__tds__StartSystemRestoreResponse
#define soap_write__tds__StartSystemRestoreResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:StartSystemRestoreResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__StartSystemRestoreResponse * SOAP_FMAC4 soap_get__tds__StartSystemRestoreResponse(struct soap*, _tds__StartSystemRestoreResponse *, const char*, const char*);

#ifndef soap_read__tds__StartSystemRestoreResponse
#define soap_read__tds__StartSystemRestoreResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__StartSystemRestoreResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__StartSystemRestoreResponse * SOAP_FMAC2 soap_instantiate__tds__StartSystemRestoreResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__StartSystemRestoreResponse * soap_new__tds__StartSystemRestoreResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__StartSystemRestoreResponse(soap, n, NULL, NULL, NULL); }

inline _tds__StartSystemRestoreResponse * soap_new_req__tds__StartSystemRestoreResponse(struct soap *soap, std::string& UploadUri, LONG64 ExpectedDownTime) { _tds__StartSystemRestoreResponse *_p = soap_instantiate__tds__StartSystemRestoreResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__StartSystemRestoreResponse::UploadUri = UploadUri; _p->_tds__StartSystemRestoreResponse::ExpectedDownTime = ExpectedDownTime; } return _p; }

inline _tds__StartSystemRestoreResponse * soap_new_set__tds__StartSystemRestoreResponse(struct soap *soap, std::string& UploadUri, LONG64 ExpectedDownTime) { _tds__StartSystemRestoreResponse *_p = soap_instantiate__tds__StartSystemRestoreResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__StartSystemRestoreResponse::UploadUri = UploadUri; _p->_tds__StartSystemRestoreResponse::ExpectedDownTime = ExpectedDownTime; } return _p; }

inline void soap_delete__tds__StartSystemRestoreResponse(struct soap *soap, _tds__StartSystemRestoreResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__StartSystemRestoreResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__StartSystemRestore
#define SOAP_TYPE__tds__StartSystemRestore (244)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__StartSystemRestore(struct soap*, const char*, int, const _tds__StartSystemRestore *, const char*);
SOAP_FMAC3 _tds__StartSystemRestore * SOAP_FMAC4 soap_in__tds__StartSystemRestore(struct soap*, const char*, _tds__StartSystemRestore *, const char*);

#ifndef soap_write__tds__StartSystemRestore
#define soap_write__tds__StartSystemRestore(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:StartSystemRestore", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__StartSystemRestore * SOAP_FMAC4 soap_get__tds__StartSystemRestore(struct soap*, _tds__StartSystemRestore *, const char*, const char*);

#ifndef soap_read__tds__StartSystemRestore
#define soap_read__tds__StartSystemRestore(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__StartSystemRestore(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__StartSystemRestore * SOAP_FMAC2 soap_instantiate__tds__StartSystemRestore(struct soap*, int, const char*, const char*, size_t*);

inline _tds__StartSystemRestore * soap_new__tds__StartSystemRestore(struct soap *soap, int n = -1) { return soap_instantiate__tds__StartSystemRestore(soap, n, NULL, NULL, NULL); }

inline _tds__StartSystemRestore * soap_new_req__tds__StartSystemRestore(struct soap *soap) { _tds__StartSystemRestore *_p = soap_instantiate__tds__StartSystemRestore(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__StartSystemRestore * soap_new_set__tds__StartSystemRestore(struct soap *soap) { _tds__StartSystemRestore *_p = soap_instantiate__tds__StartSystemRestore(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__StartSystemRestore(struct soap *soap, _tds__StartSystemRestore *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__StartSystemRestore(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__StartFirmwareUpgradeResponse
#define SOAP_TYPE__tds__StartFirmwareUpgradeResponse (243)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__StartFirmwareUpgradeResponse(struct soap*, const char*, int, const _tds__StartFirmwareUpgradeResponse *, const char*);
SOAP_FMAC3 _tds__StartFirmwareUpgradeResponse * SOAP_FMAC4 soap_in__tds__StartFirmwareUpgradeResponse(struct soap*, const char*, _tds__StartFirmwareUpgradeResponse *, const char*);

#ifndef soap_write__tds__StartFirmwareUpgradeResponse
#define soap_write__tds__StartFirmwareUpgradeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:StartFirmwareUpgradeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__StartFirmwareUpgradeResponse * SOAP_FMAC4 soap_get__tds__StartFirmwareUpgradeResponse(struct soap*, _tds__StartFirmwareUpgradeResponse *, const char*, const char*);

#ifndef soap_read__tds__StartFirmwareUpgradeResponse
#define soap_read__tds__StartFirmwareUpgradeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__StartFirmwareUpgradeResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__StartFirmwareUpgradeResponse * SOAP_FMAC2 soap_instantiate__tds__StartFirmwareUpgradeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__StartFirmwareUpgradeResponse * soap_new__tds__StartFirmwareUpgradeResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__StartFirmwareUpgradeResponse(soap, n, NULL, NULL, NULL); }

inline _tds__StartFirmwareUpgradeResponse * soap_new_req__tds__StartFirmwareUpgradeResponse(struct soap *soap, std::string& UploadUri, LONG64 UploadDelay, LONG64 ExpectedDownTime) { _tds__StartFirmwareUpgradeResponse *_p = soap_instantiate__tds__StartFirmwareUpgradeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__StartFirmwareUpgradeResponse::UploadUri = UploadUri; _p->_tds__StartFirmwareUpgradeResponse::UploadDelay = UploadDelay; _p->_tds__StartFirmwareUpgradeResponse::ExpectedDownTime = ExpectedDownTime; } return _p; }

inline _tds__StartFirmwareUpgradeResponse * soap_new_set__tds__StartFirmwareUpgradeResponse(struct soap *soap, std::string& UploadUri, LONG64 UploadDelay, LONG64 ExpectedDownTime) { _tds__StartFirmwareUpgradeResponse *_p = soap_instantiate__tds__StartFirmwareUpgradeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__StartFirmwareUpgradeResponse::UploadUri = UploadUri; _p->_tds__StartFirmwareUpgradeResponse::UploadDelay = UploadDelay; _p->_tds__StartFirmwareUpgradeResponse::ExpectedDownTime = ExpectedDownTime; } return _p; }

inline void soap_delete__tds__StartFirmwareUpgradeResponse(struct soap *soap, _tds__StartFirmwareUpgradeResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__StartFirmwareUpgradeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__StartFirmwareUpgrade
#define SOAP_TYPE__tds__StartFirmwareUpgrade (242)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__StartFirmwareUpgrade(struct soap*, const char*, int, const _tds__StartFirmwareUpgrade *, const char*);
SOAP_FMAC3 _tds__StartFirmwareUpgrade * SOAP_FMAC4 soap_in__tds__StartFirmwareUpgrade(struct soap*, const char*, _tds__StartFirmwareUpgrade *, const char*);

#ifndef soap_write__tds__StartFirmwareUpgrade
#define soap_write__tds__StartFirmwareUpgrade(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:StartFirmwareUpgrade", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__StartFirmwareUpgrade * SOAP_FMAC4 soap_get__tds__StartFirmwareUpgrade(struct soap*, _tds__StartFirmwareUpgrade *, const char*, const char*);

#ifndef soap_read__tds__StartFirmwareUpgrade
#define soap_read__tds__StartFirmwareUpgrade(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__StartFirmwareUpgrade(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__StartFirmwareUpgrade * SOAP_FMAC2 soap_instantiate__tds__StartFirmwareUpgrade(struct soap*, int, const char*, const char*, size_t*);

inline _tds__StartFirmwareUpgrade * soap_new__tds__StartFirmwareUpgrade(struct soap *soap, int n = -1) { return soap_instantiate__tds__StartFirmwareUpgrade(soap, n, NULL, NULL, NULL); }

inline _tds__StartFirmwareUpgrade * soap_new_req__tds__StartFirmwareUpgrade(struct soap *soap) { _tds__StartFirmwareUpgrade *_p = soap_instantiate__tds__StartFirmwareUpgrade(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__StartFirmwareUpgrade * soap_new_set__tds__StartFirmwareUpgrade(struct soap *soap) { _tds__StartFirmwareUpgrade *_p = soap_instantiate__tds__StartFirmwareUpgrade(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__StartFirmwareUpgrade(struct soap *soap, _tds__StartFirmwareUpgrade *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__StartFirmwareUpgrade(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetSystemUrisResponse
#define SOAP_TYPE__tds__GetSystemUrisResponse (241)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetSystemUrisResponse(struct soap*, const char*, int, const _tds__GetSystemUrisResponse *, const char*);
SOAP_FMAC3 _tds__GetSystemUrisResponse * SOAP_FMAC4 soap_in__tds__GetSystemUrisResponse(struct soap*, const char*, _tds__GetSystemUrisResponse *, const char*);

#ifndef soap_write__tds__GetSystemUrisResponse
#define soap_write__tds__GetSystemUrisResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetSystemUrisResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemUrisResponse * SOAP_FMAC4 soap_get__tds__GetSystemUrisResponse(struct soap*, _tds__GetSystemUrisResponse *, const char*, const char*);

#ifndef soap_read__tds__GetSystemUrisResponse
#define soap_read__tds__GetSystemUrisResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetSystemUrisResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetSystemUrisResponse * SOAP_FMAC2 soap_instantiate__tds__GetSystemUrisResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetSystemUrisResponse * soap_new__tds__GetSystemUrisResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetSystemUrisResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetSystemUrisResponse * soap_new_req__tds__GetSystemUrisResponse(struct soap *soap) { _tds__GetSystemUrisResponse *_p = soap_instantiate__tds__GetSystemUrisResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetSystemUrisResponse * soap_new_set__tds__GetSystemUrisResponse(struct soap *soap, tt__SystemLogUriList *SystemLogUris, std::string *SupportInfoUri, std::string *SystemBackupUri, _tds__GetSystemUrisResponse_Extension *Extension) { _tds__GetSystemUrisResponse *_p = soap_instantiate__tds__GetSystemUrisResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetSystemUrisResponse::SystemLogUris = SystemLogUris; _p->_tds__GetSystemUrisResponse::SupportInfoUri = SupportInfoUri; _p->_tds__GetSystemUrisResponse::SystemBackupUri = SystemBackupUri; _p->_tds__GetSystemUrisResponse::Extension = Extension; } return _p; }

inline void soap_delete__tds__GetSystemUrisResponse(struct soap *soap, _tds__GetSystemUrisResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetSystemUrisResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetSystemUris
#define SOAP_TYPE__tds__GetSystemUris (240)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetSystemUris(struct soap*, const char*, int, const _tds__GetSystemUris *, const char*);
SOAP_FMAC3 _tds__GetSystemUris * SOAP_FMAC4 soap_in__tds__GetSystemUris(struct soap*, const char*, _tds__GetSystemUris *, const char*);

#ifndef soap_write__tds__GetSystemUris
#define soap_write__tds__GetSystemUris(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetSystemUris", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemUris * SOAP_FMAC4 soap_get__tds__GetSystemUris(struct soap*, _tds__GetSystemUris *, const char*, const char*);

#ifndef soap_read__tds__GetSystemUris
#define soap_read__tds__GetSystemUris(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetSystemUris(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetSystemUris * SOAP_FMAC2 soap_instantiate__tds__GetSystemUris(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetSystemUris * soap_new__tds__GetSystemUris(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetSystemUris(soap, n, NULL, NULL, NULL); }

inline _tds__GetSystemUris * soap_new_req__tds__GetSystemUris(struct soap *soap) { _tds__GetSystemUris *_p = soap_instantiate__tds__GetSystemUris(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetSystemUris * soap_new_set__tds__GetSystemUris(struct soap *soap) { _tds__GetSystemUris *_p = soap_instantiate__tds__GetSystemUris(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetSystemUris(struct soap *soap, _tds__GetSystemUris *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetSystemUris(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__ScanAvailableDot11NetworksResponse
#define SOAP_TYPE__tds__ScanAvailableDot11NetworksResponse (239)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__ScanAvailableDot11NetworksResponse(struct soap*, const char*, int, const _tds__ScanAvailableDot11NetworksResponse *, const char*);
SOAP_FMAC3 _tds__ScanAvailableDot11NetworksResponse * SOAP_FMAC4 soap_in__tds__ScanAvailableDot11NetworksResponse(struct soap*, const char*, _tds__ScanAvailableDot11NetworksResponse *, const char*);

#ifndef soap_write__tds__ScanAvailableDot11NetworksResponse
#define soap_write__tds__ScanAvailableDot11NetworksResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:ScanAvailableDot11NetworksResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__ScanAvailableDot11NetworksResponse * SOAP_FMAC4 soap_get__tds__ScanAvailableDot11NetworksResponse(struct soap*, _tds__ScanAvailableDot11NetworksResponse *, const char*, const char*);

#ifndef soap_read__tds__ScanAvailableDot11NetworksResponse
#define soap_read__tds__ScanAvailableDot11NetworksResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__ScanAvailableDot11NetworksResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__ScanAvailableDot11NetworksResponse * SOAP_FMAC2 soap_instantiate__tds__ScanAvailableDot11NetworksResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__ScanAvailableDot11NetworksResponse * soap_new__tds__ScanAvailableDot11NetworksResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__ScanAvailableDot11NetworksResponse(soap, n, NULL, NULL, NULL); }

inline _tds__ScanAvailableDot11NetworksResponse * soap_new_req__tds__ScanAvailableDot11NetworksResponse(struct soap *soap) { _tds__ScanAvailableDot11NetworksResponse *_p = soap_instantiate__tds__ScanAvailableDot11NetworksResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__ScanAvailableDot11NetworksResponse * soap_new_set__tds__ScanAvailableDot11NetworksResponse(struct soap *soap, std::vector<tt__Dot11AvailableNetworks * >& Networks) { _tds__ScanAvailableDot11NetworksResponse *_p = soap_instantiate__tds__ScanAvailableDot11NetworksResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__ScanAvailableDot11NetworksResponse::Networks = Networks; } return _p; }

inline void soap_delete__tds__ScanAvailableDot11NetworksResponse(struct soap *soap, _tds__ScanAvailableDot11NetworksResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__ScanAvailableDot11NetworksResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__ScanAvailableDot11Networks
#define SOAP_TYPE__tds__ScanAvailableDot11Networks (238)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__ScanAvailableDot11Networks(struct soap*, const char*, int, const _tds__ScanAvailableDot11Networks *, const char*);
SOAP_FMAC3 _tds__ScanAvailableDot11Networks * SOAP_FMAC4 soap_in__tds__ScanAvailableDot11Networks(struct soap*, const char*, _tds__ScanAvailableDot11Networks *, const char*);

#ifndef soap_write__tds__ScanAvailableDot11Networks
#define soap_write__tds__ScanAvailableDot11Networks(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:ScanAvailableDot11Networks", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__ScanAvailableDot11Networks * SOAP_FMAC4 soap_get__tds__ScanAvailableDot11Networks(struct soap*, _tds__ScanAvailableDot11Networks *, const char*, const char*);

#ifndef soap_read__tds__ScanAvailableDot11Networks
#define soap_read__tds__ScanAvailableDot11Networks(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__ScanAvailableDot11Networks(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__ScanAvailableDot11Networks * SOAP_FMAC2 soap_instantiate__tds__ScanAvailableDot11Networks(struct soap*, int, const char*, const char*, size_t*);

inline _tds__ScanAvailableDot11Networks * soap_new__tds__ScanAvailableDot11Networks(struct soap *soap, int n = -1) { return soap_instantiate__tds__ScanAvailableDot11Networks(soap, n, NULL, NULL, NULL); }

inline _tds__ScanAvailableDot11Networks * soap_new_req__tds__ScanAvailableDot11Networks(struct soap *soap, std::string& InterfaceToken) { _tds__ScanAvailableDot11Networks *_p = soap_instantiate__tds__ScanAvailableDot11Networks(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__ScanAvailableDot11Networks::InterfaceToken = InterfaceToken; } return _p; }

inline _tds__ScanAvailableDot11Networks * soap_new_set__tds__ScanAvailableDot11Networks(struct soap *soap, std::string& InterfaceToken) { _tds__ScanAvailableDot11Networks *_p = soap_instantiate__tds__ScanAvailableDot11Networks(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__ScanAvailableDot11Networks::InterfaceToken = InterfaceToken; } return _p; }

inline void soap_delete__tds__ScanAvailableDot11Networks(struct soap *soap, _tds__ScanAvailableDot11Networks *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__ScanAvailableDot11Networks(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetDot11StatusResponse
#define SOAP_TYPE__tds__GetDot11StatusResponse (237)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDot11StatusResponse(struct soap*, const char*, int, const _tds__GetDot11StatusResponse *, const char*);
SOAP_FMAC3 _tds__GetDot11StatusResponse * SOAP_FMAC4 soap_in__tds__GetDot11StatusResponse(struct soap*, const char*, _tds__GetDot11StatusResponse *, const char*);

#ifndef soap_write__tds__GetDot11StatusResponse
#define soap_write__tds__GetDot11StatusResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetDot11StatusResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDot11StatusResponse * SOAP_FMAC4 soap_get__tds__GetDot11StatusResponse(struct soap*, _tds__GetDot11StatusResponse *, const char*, const char*);

#ifndef soap_read__tds__GetDot11StatusResponse
#define soap_read__tds__GetDot11StatusResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetDot11StatusResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetDot11StatusResponse * SOAP_FMAC2 soap_instantiate__tds__GetDot11StatusResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDot11StatusResponse * soap_new__tds__GetDot11StatusResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDot11StatusResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetDot11StatusResponse * soap_new_req__tds__GetDot11StatusResponse(struct soap *soap, tt__Dot11Status *Status) { _tds__GetDot11StatusResponse *_p = soap_instantiate__tds__GetDot11StatusResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetDot11StatusResponse::Status = Status; } return _p; }

inline _tds__GetDot11StatusResponse * soap_new_set__tds__GetDot11StatusResponse(struct soap *soap, tt__Dot11Status *Status) { _tds__GetDot11StatusResponse *_p = soap_instantiate__tds__GetDot11StatusResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetDot11StatusResponse::Status = Status; } return _p; }

inline void soap_delete__tds__GetDot11StatusResponse(struct soap *soap, _tds__GetDot11StatusResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetDot11StatusResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetDot11Status
#define SOAP_TYPE__tds__GetDot11Status (236)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDot11Status(struct soap*, const char*, int, const _tds__GetDot11Status *, const char*);
SOAP_FMAC3 _tds__GetDot11Status * SOAP_FMAC4 soap_in__tds__GetDot11Status(struct soap*, const char*, _tds__GetDot11Status *, const char*);

#ifndef soap_write__tds__GetDot11Status
#define soap_write__tds__GetDot11Status(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetDot11Status", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDot11Status * SOAP_FMAC4 soap_get__tds__GetDot11Status(struct soap*, _tds__GetDot11Status *, const char*, const char*);

#ifndef soap_read__tds__GetDot11Status
#define soap_read__tds__GetDot11Status(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetDot11Status(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetDot11Status * SOAP_FMAC2 soap_instantiate__tds__GetDot11Status(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDot11Status * soap_new__tds__GetDot11Status(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDot11Status(soap, n, NULL, NULL, NULL); }

inline _tds__GetDot11Status * soap_new_req__tds__GetDot11Status(struct soap *soap, std::string& InterfaceToken) { _tds__GetDot11Status *_p = soap_instantiate__tds__GetDot11Status(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetDot11Status::InterfaceToken = InterfaceToken; } return _p; }

inline _tds__GetDot11Status * soap_new_set__tds__GetDot11Status(struct soap *soap, std::string& InterfaceToken) { _tds__GetDot11Status *_p = soap_instantiate__tds__GetDot11Status(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetDot11Status::InterfaceToken = InterfaceToken; } return _p; }

inline void soap_delete__tds__GetDot11Status(struct soap *soap, _tds__GetDot11Status *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetDot11Status(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetDot11CapabilitiesResponse
#define SOAP_TYPE__tds__GetDot11CapabilitiesResponse (235)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDot11CapabilitiesResponse(struct soap*, const char*, int, const _tds__GetDot11CapabilitiesResponse *, const char*);
SOAP_FMAC3 _tds__GetDot11CapabilitiesResponse * SOAP_FMAC4 soap_in__tds__GetDot11CapabilitiesResponse(struct soap*, const char*, _tds__GetDot11CapabilitiesResponse *, const char*);

#ifndef soap_write__tds__GetDot11CapabilitiesResponse
#define soap_write__tds__GetDot11CapabilitiesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetDot11CapabilitiesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDot11CapabilitiesResponse * SOAP_FMAC4 soap_get__tds__GetDot11CapabilitiesResponse(struct soap*, _tds__GetDot11CapabilitiesResponse *, const char*, const char*);

#ifndef soap_read__tds__GetDot11CapabilitiesResponse
#define soap_read__tds__GetDot11CapabilitiesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetDot11CapabilitiesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetDot11CapabilitiesResponse * SOAP_FMAC2 soap_instantiate__tds__GetDot11CapabilitiesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDot11CapabilitiesResponse * soap_new__tds__GetDot11CapabilitiesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDot11CapabilitiesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetDot11CapabilitiesResponse * soap_new_req__tds__GetDot11CapabilitiesResponse(struct soap *soap, tt__Dot11Capabilities *Capabilities) { _tds__GetDot11CapabilitiesResponse *_p = soap_instantiate__tds__GetDot11CapabilitiesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetDot11CapabilitiesResponse::Capabilities = Capabilities; } return _p; }

inline _tds__GetDot11CapabilitiesResponse * soap_new_set__tds__GetDot11CapabilitiesResponse(struct soap *soap, tt__Dot11Capabilities *Capabilities) { _tds__GetDot11CapabilitiesResponse *_p = soap_instantiate__tds__GetDot11CapabilitiesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetDot11CapabilitiesResponse::Capabilities = Capabilities; } return _p; }

inline void soap_delete__tds__GetDot11CapabilitiesResponse(struct soap *soap, _tds__GetDot11CapabilitiesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetDot11CapabilitiesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetDot11Capabilities
#define SOAP_TYPE__tds__GetDot11Capabilities (234)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDot11Capabilities(struct soap*, const char*, int, const _tds__GetDot11Capabilities *, const char*);
SOAP_FMAC3 _tds__GetDot11Capabilities * SOAP_FMAC4 soap_in__tds__GetDot11Capabilities(struct soap*, const char*, _tds__GetDot11Capabilities *, const char*);

#ifndef soap_write__tds__GetDot11Capabilities
#define soap_write__tds__GetDot11Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetDot11Capabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDot11Capabilities * SOAP_FMAC4 soap_get__tds__GetDot11Capabilities(struct soap*, _tds__GetDot11Capabilities *, const char*, const char*);

#ifndef soap_read__tds__GetDot11Capabilities
#define soap_read__tds__GetDot11Capabilities(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetDot11Capabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetDot11Capabilities * SOAP_FMAC2 soap_instantiate__tds__GetDot11Capabilities(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDot11Capabilities * soap_new__tds__GetDot11Capabilities(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDot11Capabilities(soap, n, NULL, NULL, NULL); }

inline _tds__GetDot11Capabilities * soap_new_req__tds__GetDot11Capabilities(struct soap *soap) { _tds__GetDot11Capabilities *_p = soap_instantiate__tds__GetDot11Capabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetDot11Capabilities * soap_new_set__tds__GetDot11Capabilities(struct soap *soap) { _tds__GetDot11Capabilities *_p = soap_instantiate__tds__GetDot11Capabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetDot11Capabilities(struct soap *soap, _tds__GetDot11Capabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetDot11Capabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SendAuxiliaryCommandResponse
#define SOAP_TYPE__tds__SendAuxiliaryCommandResponse (233)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SendAuxiliaryCommandResponse(struct soap*, const char*, int, const _tds__SendAuxiliaryCommandResponse *, const char*);
SOAP_FMAC3 _tds__SendAuxiliaryCommandResponse * SOAP_FMAC4 soap_in__tds__SendAuxiliaryCommandResponse(struct soap*, const char*, _tds__SendAuxiliaryCommandResponse *, const char*);

#ifndef soap_write__tds__SendAuxiliaryCommandResponse
#define soap_write__tds__SendAuxiliaryCommandResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SendAuxiliaryCommandResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SendAuxiliaryCommandResponse * SOAP_FMAC4 soap_get__tds__SendAuxiliaryCommandResponse(struct soap*, _tds__SendAuxiliaryCommandResponse *, const char*, const char*);

#ifndef soap_read__tds__SendAuxiliaryCommandResponse
#define soap_read__tds__SendAuxiliaryCommandResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SendAuxiliaryCommandResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SendAuxiliaryCommandResponse * SOAP_FMAC2 soap_instantiate__tds__SendAuxiliaryCommandResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SendAuxiliaryCommandResponse * soap_new__tds__SendAuxiliaryCommandResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SendAuxiliaryCommandResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SendAuxiliaryCommandResponse * soap_new_req__tds__SendAuxiliaryCommandResponse(struct soap *soap) { _tds__SendAuxiliaryCommandResponse *_p = soap_instantiate__tds__SendAuxiliaryCommandResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SendAuxiliaryCommandResponse * soap_new_set__tds__SendAuxiliaryCommandResponse(struct soap *soap, std::string *AuxiliaryCommandResponse) { _tds__SendAuxiliaryCommandResponse *_p = soap_instantiate__tds__SendAuxiliaryCommandResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SendAuxiliaryCommandResponse::AuxiliaryCommandResponse = AuxiliaryCommandResponse; } return _p; }

inline void soap_delete__tds__SendAuxiliaryCommandResponse(struct soap *soap, _tds__SendAuxiliaryCommandResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SendAuxiliaryCommandResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SendAuxiliaryCommand
#define SOAP_TYPE__tds__SendAuxiliaryCommand (232)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SendAuxiliaryCommand(struct soap*, const char*, int, const _tds__SendAuxiliaryCommand *, const char*);
SOAP_FMAC3 _tds__SendAuxiliaryCommand * SOAP_FMAC4 soap_in__tds__SendAuxiliaryCommand(struct soap*, const char*, _tds__SendAuxiliaryCommand *, const char*);

#ifndef soap_write__tds__SendAuxiliaryCommand
#define soap_write__tds__SendAuxiliaryCommand(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SendAuxiliaryCommand", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SendAuxiliaryCommand * SOAP_FMAC4 soap_get__tds__SendAuxiliaryCommand(struct soap*, _tds__SendAuxiliaryCommand *, const char*, const char*);

#ifndef soap_read__tds__SendAuxiliaryCommand
#define soap_read__tds__SendAuxiliaryCommand(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SendAuxiliaryCommand(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SendAuxiliaryCommand * SOAP_FMAC2 soap_instantiate__tds__SendAuxiliaryCommand(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SendAuxiliaryCommand * soap_new__tds__SendAuxiliaryCommand(struct soap *soap, int n = -1) { return soap_instantiate__tds__SendAuxiliaryCommand(soap, n, NULL, NULL, NULL); }

inline _tds__SendAuxiliaryCommand * soap_new_req__tds__SendAuxiliaryCommand(struct soap *soap, std::string& AuxiliaryCommand) { _tds__SendAuxiliaryCommand *_p = soap_instantiate__tds__SendAuxiliaryCommand(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SendAuxiliaryCommand::AuxiliaryCommand = AuxiliaryCommand; } return _p; }

inline _tds__SendAuxiliaryCommand * soap_new_set__tds__SendAuxiliaryCommand(struct soap *soap, std::string& AuxiliaryCommand) { _tds__SendAuxiliaryCommand *_p = soap_instantiate__tds__SendAuxiliaryCommand(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SendAuxiliaryCommand::AuxiliaryCommand = AuxiliaryCommand; } return _p; }

inline void soap_delete__tds__SendAuxiliaryCommand(struct soap *soap, _tds__SendAuxiliaryCommand *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SendAuxiliaryCommand(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetRelayOutputStateResponse
#define SOAP_TYPE__tds__SetRelayOutputStateResponse (231)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetRelayOutputStateResponse(struct soap*, const char*, int, const _tds__SetRelayOutputStateResponse *, const char*);
SOAP_FMAC3 _tds__SetRelayOutputStateResponse * SOAP_FMAC4 soap_in__tds__SetRelayOutputStateResponse(struct soap*, const char*, _tds__SetRelayOutputStateResponse *, const char*);

#ifndef soap_write__tds__SetRelayOutputStateResponse
#define soap_write__tds__SetRelayOutputStateResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetRelayOutputStateResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetRelayOutputStateResponse * SOAP_FMAC4 soap_get__tds__SetRelayOutputStateResponse(struct soap*, _tds__SetRelayOutputStateResponse *, const char*, const char*);

#ifndef soap_read__tds__SetRelayOutputStateResponse
#define soap_read__tds__SetRelayOutputStateResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetRelayOutputStateResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetRelayOutputStateResponse * SOAP_FMAC2 soap_instantiate__tds__SetRelayOutputStateResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetRelayOutputStateResponse * soap_new__tds__SetRelayOutputStateResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetRelayOutputStateResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetRelayOutputStateResponse * soap_new_req__tds__SetRelayOutputStateResponse(struct soap *soap) { _tds__SetRelayOutputStateResponse *_p = soap_instantiate__tds__SetRelayOutputStateResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SetRelayOutputStateResponse * soap_new_set__tds__SetRelayOutputStateResponse(struct soap *soap) { _tds__SetRelayOutputStateResponse *_p = soap_instantiate__tds__SetRelayOutputStateResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__SetRelayOutputStateResponse(struct soap *soap, _tds__SetRelayOutputStateResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetRelayOutputStateResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetRelayOutputState
#define SOAP_TYPE__tds__SetRelayOutputState (230)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetRelayOutputState(struct soap*, const char*, int, const _tds__SetRelayOutputState *, const char*);
SOAP_FMAC3 _tds__SetRelayOutputState * SOAP_FMAC4 soap_in__tds__SetRelayOutputState(struct soap*, const char*, _tds__SetRelayOutputState *, const char*);

#ifndef soap_write__tds__SetRelayOutputState
#define soap_write__tds__SetRelayOutputState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetRelayOutputState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetRelayOutputState * SOAP_FMAC4 soap_get__tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState *, const char*, const char*);

#ifndef soap_read__tds__SetRelayOutputState
#define soap_read__tds__SetRelayOutputState(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetRelayOutputState(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetRelayOutputState * SOAP_FMAC2 soap_instantiate__tds__SetRelayOutputState(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetRelayOutputState * soap_new__tds__SetRelayOutputState(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetRelayOutputState(soap, n, NULL, NULL, NULL); }

inline _tds__SetRelayOutputState * soap_new_req__tds__SetRelayOutputState(struct soap *soap, std::string& RelayOutputToken, enum tt__RelayLogicalState LogicalState) { _tds__SetRelayOutputState *_p = soap_instantiate__tds__SetRelayOutputState(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetRelayOutputState::RelayOutputToken = RelayOutputToken; _p->_tds__SetRelayOutputState::LogicalState = LogicalState; } return _p; }

inline _tds__SetRelayOutputState * soap_new_set__tds__SetRelayOutputState(struct soap *soap, std::string& RelayOutputToken, enum tt__RelayLogicalState LogicalState) { _tds__SetRelayOutputState *_p = soap_instantiate__tds__SetRelayOutputState(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetRelayOutputState::RelayOutputToken = RelayOutputToken; _p->_tds__SetRelayOutputState::LogicalState = LogicalState; } return _p; }

inline void soap_delete__tds__SetRelayOutputState(struct soap *soap, _tds__SetRelayOutputState *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetRelayOutputState(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetRelayOutputSettingsResponse
#define SOAP_TYPE__tds__SetRelayOutputSettingsResponse (229)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetRelayOutputSettingsResponse(struct soap*, const char*, int, const _tds__SetRelayOutputSettingsResponse *, const char*);
SOAP_FMAC3 _tds__SetRelayOutputSettingsResponse * SOAP_FMAC4 soap_in__tds__SetRelayOutputSettingsResponse(struct soap*, const char*, _tds__SetRelayOutputSettingsResponse *, const char*);

#ifndef soap_write__tds__SetRelayOutputSettingsResponse
#define soap_write__tds__SetRelayOutputSettingsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetRelayOutputSettingsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetRelayOutputSettingsResponse * SOAP_FMAC4 soap_get__tds__SetRelayOutputSettingsResponse(struct soap*, _tds__SetRelayOutputSettingsResponse *, const char*, const char*);

#ifndef soap_read__tds__SetRelayOutputSettingsResponse
#define soap_read__tds__SetRelayOutputSettingsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetRelayOutputSettingsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetRelayOutputSettingsResponse * SOAP_FMAC2 soap_instantiate__tds__SetRelayOutputSettingsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetRelayOutputSettingsResponse * soap_new__tds__SetRelayOutputSettingsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetRelayOutputSettingsResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetRelayOutputSettingsResponse * soap_new_req__tds__SetRelayOutputSettingsResponse(struct soap *soap) { _tds__SetRelayOutputSettingsResponse *_p = soap_instantiate__tds__SetRelayOutputSettingsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SetRelayOutputSettingsResponse * soap_new_set__tds__SetRelayOutputSettingsResponse(struct soap *soap) { _tds__SetRelayOutputSettingsResponse *_p = soap_instantiate__tds__SetRelayOutputSettingsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__SetRelayOutputSettingsResponse(struct soap *soap, _tds__SetRelayOutputSettingsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetRelayOutputSettingsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetRelayOutputSettings
#define SOAP_TYPE__tds__SetRelayOutputSettings (228)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetRelayOutputSettings(struct soap*, const char*, int, const _tds__SetRelayOutputSettings *, const char*);
SOAP_FMAC3 _tds__SetRelayOutputSettings * SOAP_FMAC4 soap_in__tds__SetRelayOutputSettings(struct soap*, const char*, _tds__SetRelayOutputSettings *, const char*);

#ifndef soap_write__tds__SetRelayOutputSettings
#define soap_write__tds__SetRelayOutputSettings(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetRelayOutputSettings", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetRelayOutputSettings * SOAP_FMAC4 soap_get__tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings *, const char*, const char*);

#ifndef soap_read__tds__SetRelayOutputSettings
#define soap_read__tds__SetRelayOutputSettings(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetRelayOutputSettings(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetRelayOutputSettings * SOAP_FMAC2 soap_instantiate__tds__SetRelayOutputSettings(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetRelayOutputSettings * soap_new__tds__SetRelayOutputSettings(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetRelayOutputSettings(soap, n, NULL, NULL, NULL); }

inline _tds__SetRelayOutputSettings * soap_new_req__tds__SetRelayOutputSettings(struct soap *soap, std::string& RelayOutputToken, tt__RelayOutputSettings *Properties) { _tds__SetRelayOutputSettings *_p = soap_instantiate__tds__SetRelayOutputSettings(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetRelayOutputSettings::RelayOutputToken = RelayOutputToken; _p->_tds__SetRelayOutputSettings::Properties = Properties; } return _p; }

inline _tds__SetRelayOutputSettings * soap_new_set__tds__SetRelayOutputSettings(struct soap *soap, std::string& RelayOutputToken, tt__RelayOutputSettings *Properties) { _tds__SetRelayOutputSettings *_p = soap_instantiate__tds__SetRelayOutputSettings(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetRelayOutputSettings::RelayOutputToken = RelayOutputToken; _p->_tds__SetRelayOutputSettings::Properties = Properties; } return _p; }

inline void soap_delete__tds__SetRelayOutputSettings(struct soap *soap, _tds__SetRelayOutputSettings *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetRelayOutputSettings(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetRelayOutputsResponse
#define SOAP_TYPE__tds__GetRelayOutputsResponse (227)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetRelayOutputsResponse(struct soap*, const char*, int, const _tds__GetRelayOutputsResponse *, const char*);
SOAP_FMAC3 _tds__GetRelayOutputsResponse * SOAP_FMAC4 soap_in__tds__GetRelayOutputsResponse(struct soap*, const char*, _tds__GetRelayOutputsResponse *, const char*);

#ifndef soap_write__tds__GetRelayOutputsResponse
#define soap_write__tds__GetRelayOutputsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetRelayOutputsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetRelayOutputsResponse * SOAP_FMAC4 soap_get__tds__GetRelayOutputsResponse(struct soap*, _tds__GetRelayOutputsResponse *, const char*, const char*);

#ifndef soap_read__tds__GetRelayOutputsResponse
#define soap_read__tds__GetRelayOutputsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetRelayOutputsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetRelayOutputsResponse * SOAP_FMAC2 soap_instantiate__tds__GetRelayOutputsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetRelayOutputsResponse * soap_new__tds__GetRelayOutputsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetRelayOutputsResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetRelayOutputsResponse * soap_new_req__tds__GetRelayOutputsResponse(struct soap *soap) { _tds__GetRelayOutputsResponse *_p = soap_instantiate__tds__GetRelayOutputsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetRelayOutputsResponse * soap_new_set__tds__GetRelayOutputsResponse(struct soap *soap, std::vector<tt__RelayOutput * >& RelayOutputs) { _tds__GetRelayOutputsResponse *_p = soap_instantiate__tds__GetRelayOutputsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetRelayOutputsResponse::RelayOutputs = RelayOutputs; } return _p; }

inline void soap_delete__tds__GetRelayOutputsResponse(struct soap *soap, _tds__GetRelayOutputsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetRelayOutputsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetRelayOutputs
#define SOAP_TYPE__tds__GetRelayOutputs (226)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetRelayOutputs(struct soap*, const char*, int, const _tds__GetRelayOutputs *, const char*);
SOAP_FMAC3 _tds__GetRelayOutputs * SOAP_FMAC4 soap_in__tds__GetRelayOutputs(struct soap*, const char*, _tds__GetRelayOutputs *, const char*);

#ifndef soap_write__tds__GetRelayOutputs
#define soap_write__tds__GetRelayOutputs(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetRelayOutputs", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetRelayOutputs * SOAP_FMAC4 soap_get__tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs *, const char*, const char*);

#ifndef soap_read__tds__GetRelayOutputs
#define soap_read__tds__GetRelayOutputs(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetRelayOutputs(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetRelayOutputs * SOAP_FMAC2 soap_instantiate__tds__GetRelayOutputs(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetRelayOutputs * soap_new__tds__GetRelayOutputs(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetRelayOutputs(soap, n, NULL, NULL, NULL); }

inline _tds__GetRelayOutputs * soap_new_req__tds__GetRelayOutputs(struct soap *soap) { _tds__GetRelayOutputs *_p = soap_instantiate__tds__GetRelayOutputs(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetRelayOutputs * soap_new_set__tds__GetRelayOutputs(struct soap *soap) { _tds__GetRelayOutputs *_p = soap_instantiate__tds__GetRelayOutputs(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetRelayOutputs(struct soap *soap, _tds__GetRelayOutputs *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetRelayOutputs(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__DeleteDot1XConfigurationResponse
#define SOAP_TYPE__tds__DeleteDot1XConfigurationResponse (225)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__DeleteDot1XConfigurationResponse(struct soap*, const char*, int, const _tds__DeleteDot1XConfigurationResponse *, const char*);
SOAP_FMAC3 _tds__DeleteDot1XConfigurationResponse * SOAP_FMAC4 soap_in__tds__DeleteDot1XConfigurationResponse(struct soap*, const char*, _tds__DeleteDot1XConfigurationResponse *, const char*);

#ifndef soap_write__tds__DeleteDot1XConfigurationResponse
#define soap_write__tds__DeleteDot1XConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:DeleteDot1XConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__DeleteDot1XConfigurationResponse * SOAP_FMAC4 soap_get__tds__DeleteDot1XConfigurationResponse(struct soap*, _tds__DeleteDot1XConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tds__DeleteDot1XConfigurationResponse
#define soap_read__tds__DeleteDot1XConfigurationResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__DeleteDot1XConfigurationResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__DeleteDot1XConfigurationResponse * SOAP_FMAC2 soap_instantiate__tds__DeleteDot1XConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__DeleteDot1XConfigurationResponse * soap_new__tds__DeleteDot1XConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__DeleteDot1XConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tds__DeleteDot1XConfigurationResponse * soap_new_req__tds__DeleteDot1XConfigurationResponse(struct soap *soap) { _tds__DeleteDot1XConfigurationResponse *_p = soap_instantiate__tds__DeleteDot1XConfigurationResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__DeleteDot1XConfigurationResponse * soap_new_set__tds__DeleteDot1XConfigurationResponse(struct soap *soap) { _tds__DeleteDot1XConfigurationResponse *_p = soap_instantiate__tds__DeleteDot1XConfigurationResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__DeleteDot1XConfigurationResponse(struct soap *soap, _tds__DeleteDot1XConfigurationResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__DeleteDot1XConfigurationResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__DeleteDot1XConfiguration
#define SOAP_TYPE__tds__DeleteDot1XConfiguration (224)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__DeleteDot1XConfiguration(struct soap*, const char*, int, const _tds__DeleteDot1XConfiguration *, const char*);
SOAP_FMAC3 _tds__DeleteDot1XConfiguration * SOAP_FMAC4 soap_in__tds__DeleteDot1XConfiguration(struct soap*, const char*, _tds__DeleteDot1XConfiguration *, const char*);

#ifndef soap_write__tds__DeleteDot1XConfiguration
#define soap_write__tds__DeleteDot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:DeleteDot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__DeleteDot1XConfiguration * SOAP_FMAC4 soap_get__tds__DeleteDot1XConfiguration(struct soap*, _tds__DeleteDot1XConfiguration *, const char*, const char*);

#ifndef soap_read__tds__DeleteDot1XConfiguration
#define soap_read__tds__DeleteDot1XConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__DeleteDot1XConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__DeleteDot1XConfiguration * SOAP_FMAC2 soap_instantiate__tds__DeleteDot1XConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tds__DeleteDot1XConfiguration * soap_new__tds__DeleteDot1XConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tds__DeleteDot1XConfiguration(soap, n, NULL, NULL, NULL); }

inline _tds__DeleteDot1XConfiguration * soap_new_req__tds__DeleteDot1XConfiguration(struct soap *soap) { _tds__DeleteDot1XConfiguration *_p = soap_instantiate__tds__DeleteDot1XConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__DeleteDot1XConfiguration * soap_new_set__tds__DeleteDot1XConfiguration(struct soap *soap, std::vector<std::string >& Dot1XConfigurationToken) { _tds__DeleteDot1XConfiguration *_p = soap_instantiate__tds__DeleteDot1XConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__DeleteDot1XConfiguration::Dot1XConfigurationToken = Dot1XConfigurationToken; } return _p; }

inline void soap_delete__tds__DeleteDot1XConfiguration(struct soap *soap, _tds__DeleteDot1XConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__DeleteDot1XConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetDot1XConfigurationsResponse
#define SOAP_TYPE__tds__GetDot1XConfigurationsResponse (223)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDot1XConfigurationsResponse(struct soap*, const char*, int, const _tds__GetDot1XConfigurationsResponse *, const char*);
SOAP_FMAC3 _tds__GetDot1XConfigurationsResponse * SOAP_FMAC4 soap_in__tds__GetDot1XConfigurationsResponse(struct soap*, const char*, _tds__GetDot1XConfigurationsResponse *, const char*);

#ifndef soap_write__tds__GetDot1XConfigurationsResponse
#define soap_write__tds__GetDot1XConfigurationsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetDot1XConfigurationsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDot1XConfigurationsResponse * SOAP_FMAC4 soap_get__tds__GetDot1XConfigurationsResponse(struct soap*, _tds__GetDot1XConfigurationsResponse *, const char*, const char*);

#ifndef soap_read__tds__GetDot1XConfigurationsResponse
#define soap_read__tds__GetDot1XConfigurationsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetDot1XConfigurationsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetDot1XConfigurationsResponse * SOAP_FMAC2 soap_instantiate__tds__GetDot1XConfigurationsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDot1XConfigurationsResponse * soap_new__tds__GetDot1XConfigurationsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDot1XConfigurationsResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetDot1XConfigurationsResponse * soap_new_req__tds__GetDot1XConfigurationsResponse(struct soap *soap) { _tds__GetDot1XConfigurationsResponse *_p = soap_instantiate__tds__GetDot1XConfigurationsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetDot1XConfigurationsResponse * soap_new_set__tds__GetDot1XConfigurationsResponse(struct soap *soap, std::vector<tt__Dot1XConfiguration * >& Dot1XConfiguration) { _tds__GetDot1XConfigurationsResponse *_p = soap_instantiate__tds__GetDot1XConfigurationsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetDot1XConfigurationsResponse::Dot1XConfiguration = Dot1XConfiguration; } return _p; }

inline void soap_delete__tds__GetDot1XConfigurationsResponse(struct soap *soap, _tds__GetDot1XConfigurationsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetDot1XConfigurationsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetDot1XConfigurations
#define SOAP_TYPE__tds__GetDot1XConfigurations (222)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDot1XConfigurations(struct soap*, const char*, int, const _tds__GetDot1XConfigurations *, const char*);
SOAP_FMAC3 _tds__GetDot1XConfigurations * SOAP_FMAC4 soap_in__tds__GetDot1XConfigurations(struct soap*, const char*, _tds__GetDot1XConfigurations *, const char*);

#ifndef soap_write__tds__GetDot1XConfigurations
#define soap_write__tds__GetDot1XConfigurations(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetDot1XConfigurations", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDot1XConfigurations * SOAP_FMAC4 soap_get__tds__GetDot1XConfigurations(struct soap*, _tds__GetDot1XConfigurations *, const char*, const char*);

#ifndef soap_read__tds__GetDot1XConfigurations
#define soap_read__tds__GetDot1XConfigurations(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetDot1XConfigurations(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetDot1XConfigurations * SOAP_FMAC2 soap_instantiate__tds__GetDot1XConfigurations(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDot1XConfigurations * soap_new__tds__GetDot1XConfigurations(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDot1XConfigurations(soap, n, NULL, NULL, NULL); }

inline _tds__GetDot1XConfigurations * soap_new_req__tds__GetDot1XConfigurations(struct soap *soap) { _tds__GetDot1XConfigurations *_p = soap_instantiate__tds__GetDot1XConfigurations(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetDot1XConfigurations * soap_new_set__tds__GetDot1XConfigurations(struct soap *soap) { _tds__GetDot1XConfigurations *_p = soap_instantiate__tds__GetDot1XConfigurations(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetDot1XConfigurations(struct soap *soap, _tds__GetDot1XConfigurations *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetDot1XConfigurations(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetDot1XConfigurationResponse
#define SOAP_TYPE__tds__GetDot1XConfigurationResponse (221)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDot1XConfigurationResponse(struct soap*, const char*, int, const _tds__GetDot1XConfigurationResponse *, const char*);
SOAP_FMAC3 _tds__GetDot1XConfigurationResponse * SOAP_FMAC4 soap_in__tds__GetDot1XConfigurationResponse(struct soap*, const char*, _tds__GetDot1XConfigurationResponse *, const char*);

#ifndef soap_write__tds__GetDot1XConfigurationResponse
#define soap_write__tds__GetDot1XConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetDot1XConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDot1XConfigurationResponse * SOAP_FMAC4 soap_get__tds__GetDot1XConfigurationResponse(struct soap*, _tds__GetDot1XConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tds__GetDot1XConfigurationResponse
#define soap_read__tds__GetDot1XConfigurationResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetDot1XConfigurationResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetDot1XConfigurationResponse * SOAP_FMAC2 soap_instantiate__tds__GetDot1XConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDot1XConfigurationResponse * soap_new__tds__GetDot1XConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDot1XConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetDot1XConfigurationResponse * soap_new_req__tds__GetDot1XConfigurationResponse(struct soap *soap, tt__Dot1XConfiguration *Dot1XConfiguration) { _tds__GetDot1XConfigurationResponse *_p = soap_instantiate__tds__GetDot1XConfigurationResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetDot1XConfigurationResponse::Dot1XConfiguration = Dot1XConfiguration; } return _p; }

inline _tds__GetDot1XConfigurationResponse * soap_new_set__tds__GetDot1XConfigurationResponse(struct soap *soap, tt__Dot1XConfiguration *Dot1XConfiguration) { _tds__GetDot1XConfigurationResponse *_p = soap_instantiate__tds__GetDot1XConfigurationResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetDot1XConfigurationResponse::Dot1XConfiguration = Dot1XConfiguration; } return _p; }

inline void soap_delete__tds__GetDot1XConfigurationResponse(struct soap *soap, _tds__GetDot1XConfigurationResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetDot1XConfigurationResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetDot1XConfiguration
#define SOAP_TYPE__tds__GetDot1XConfiguration (220)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDot1XConfiguration(struct soap*, const char*, int, const _tds__GetDot1XConfiguration *, const char*);
SOAP_FMAC3 _tds__GetDot1XConfiguration * SOAP_FMAC4 soap_in__tds__GetDot1XConfiguration(struct soap*, const char*, _tds__GetDot1XConfiguration *, const char*);

#ifndef soap_write__tds__GetDot1XConfiguration
#define soap_write__tds__GetDot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetDot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDot1XConfiguration * SOAP_FMAC4 soap_get__tds__GetDot1XConfiguration(struct soap*, _tds__GetDot1XConfiguration *, const char*, const char*);

#ifndef soap_read__tds__GetDot1XConfiguration
#define soap_read__tds__GetDot1XConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetDot1XConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetDot1XConfiguration * SOAP_FMAC2 soap_instantiate__tds__GetDot1XConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDot1XConfiguration * soap_new__tds__GetDot1XConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDot1XConfiguration(soap, n, NULL, NULL, NULL); }

inline _tds__GetDot1XConfiguration * soap_new_req__tds__GetDot1XConfiguration(struct soap *soap, std::string& Dot1XConfigurationToken) { _tds__GetDot1XConfiguration *_p = soap_instantiate__tds__GetDot1XConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetDot1XConfiguration::Dot1XConfigurationToken = Dot1XConfigurationToken; } return _p; }

inline _tds__GetDot1XConfiguration * soap_new_set__tds__GetDot1XConfiguration(struct soap *soap, std::string& Dot1XConfigurationToken) { _tds__GetDot1XConfiguration *_p = soap_instantiate__tds__GetDot1XConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetDot1XConfiguration::Dot1XConfigurationToken = Dot1XConfigurationToken; } return _p; }

inline void soap_delete__tds__GetDot1XConfiguration(struct soap *soap, _tds__GetDot1XConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetDot1XConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetDot1XConfigurationResponse
#define SOAP_TYPE__tds__SetDot1XConfigurationResponse (219)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetDot1XConfigurationResponse(struct soap*, const char*, int, const _tds__SetDot1XConfigurationResponse *, const char*);
SOAP_FMAC3 _tds__SetDot1XConfigurationResponse * SOAP_FMAC4 soap_in__tds__SetDot1XConfigurationResponse(struct soap*, const char*, _tds__SetDot1XConfigurationResponse *, const char*);

#ifndef soap_write__tds__SetDot1XConfigurationResponse
#define soap_write__tds__SetDot1XConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetDot1XConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDot1XConfigurationResponse * SOAP_FMAC4 soap_get__tds__SetDot1XConfigurationResponse(struct soap*, _tds__SetDot1XConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tds__SetDot1XConfigurationResponse
#define soap_read__tds__SetDot1XConfigurationResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetDot1XConfigurationResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetDot1XConfigurationResponse * SOAP_FMAC2 soap_instantiate__tds__SetDot1XConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetDot1XConfigurationResponse * soap_new__tds__SetDot1XConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetDot1XConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetDot1XConfigurationResponse * soap_new_req__tds__SetDot1XConfigurationResponse(struct soap *soap) { _tds__SetDot1XConfigurationResponse *_p = soap_instantiate__tds__SetDot1XConfigurationResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SetDot1XConfigurationResponse * soap_new_set__tds__SetDot1XConfigurationResponse(struct soap *soap) { _tds__SetDot1XConfigurationResponse *_p = soap_instantiate__tds__SetDot1XConfigurationResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__SetDot1XConfigurationResponse(struct soap *soap, _tds__SetDot1XConfigurationResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetDot1XConfigurationResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetDot1XConfiguration
#define SOAP_TYPE__tds__SetDot1XConfiguration (218)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetDot1XConfiguration(struct soap*, const char*, int, const _tds__SetDot1XConfiguration *, const char*);
SOAP_FMAC3 _tds__SetDot1XConfiguration * SOAP_FMAC4 soap_in__tds__SetDot1XConfiguration(struct soap*, const char*, _tds__SetDot1XConfiguration *, const char*);

#ifndef soap_write__tds__SetDot1XConfiguration
#define soap_write__tds__SetDot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetDot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDot1XConfiguration * SOAP_FMAC4 soap_get__tds__SetDot1XConfiguration(struct soap*, _tds__SetDot1XConfiguration *, const char*, const char*);

#ifndef soap_read__tds__SetDot1XConfiguration
#define soap_read__tds__SetDot1XConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetDot1XConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetDot1XConfiguration * SOAP_FMAC2 soap_instantiate__tds__SetDot1XConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetDot1XConfiguration * soap_new__tds__SetDot1XConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetDot1XConfiguration(soap, n, NULL, NULL, NULL); }

inline _tds__SetDot1XConfiguration * soap_new_req__tds__SetDot1XConfiguration(struct soap *soap, tt__Dot1XConfiguration *Dot1XConfiguration) { _tds__SetDot1XConfiguration *_p = soap_instantiate__tds__SetDot1XConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetDot1XConfiguration::Dot1XConfiguration = Dot1XConfiguration; } return _p; }

inline _tds__SetDot1XConfiguration * soap_new_set__tds__SetDot1XConfiguration(struct soap *soap, tt__Dot1XConfiguration *Dot1XConfiguration) { _tds__SetDot1XConfiguration *_p = soap_instantiate__tds__SetDot1XConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetDot1XConfiguration::Dot1XConfiguration = Dot1XConfiguration; } return _p; }

inline void soap_delete__tds__SetDot1XConfiguration(struct soap *soap, _tds__SetDot1XConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetDot1XConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__CreateDot1XConfigurationResponse
#define SOAP_TYPE__tds__CreateDot1XConfigurationResponse (217)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__CreateDot1XConfigurationResponse(struct soap*, const char*, int, const _tds__CreateDot1XConfigurationResponse *, const char*);
SOAP_FMAC3 _tds__CreateDot1XConfigurationResponse * SOAP_FMAC4 soap_in__tds__CreateDot1XConfigurationResponse(struct soap*, const char*, _tds__CreateDot1XConfigurationResponse *, const char*);

#ifndef soap_write__tds__CreateDot1XConfigurationResponse
#define soap_write__tds__CreateDot1XConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:CreateDot1XConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__CreateDot1XConfigurationResponse * SOAP_FMAC4 soap_get__tds__CreateDot1XConfigurationResponse(struct soap*, _tds__CreateDot1XConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tds__CreateDot1XConfigurationResponse
#define soap_read__tds__CreateDot1XConfigurationResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__CreateDot1XConfigurationResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__CreateDot1XConfigurationResponse * SOAP_FMAC2 soap_instantiate__tds__CreateDot1XConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__CreateDot1XConfigurationResponse * soap_new__tds__CreateDot1XConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__CreateDot1XConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tds__CreateDot1XConfigurationResponse * soap_new_req__tds__CreateDot1XConfigurationResponse(struct soap *soap) { _tds__CreateDot1XConfigurationResponse *_p = soap_instantiate__tds__CreateDot1XConfigurationResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__CreateDot1XConfigurationResponse * soap_new_set__tds__CreateDot1XConfigurationResponse(struct soap *soap) { _tds__CreateDot1XConfigurationResponse *_p = soap_instantiate__tds__CreateDot1XConfigurationResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__CreateDot1XConfigurationResponse(struct soap *soap, _tds__CreateDot1XConfigurationResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__CreateDot1XConfigurationResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__CreateDot1XConfiguration
#define SOAP_TYPE__tds__CreateDot1XConfiguration (216)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__CreateDot1XConfiguration(struct soap*, const char*, int, const _tds__CreateDot1XConfiguration *, const char*);
SOAP_FMAC3 _tds__CreateDot1XConfiguration * SOAP_FMAC4 soap_in__tds__CreateDot1XConfiguration(struct soap*, const char*, _tds__CreateDot1XConfiguration *, const char*);

#ifndef soap_write__tds__CreateDot1XConfiguration
#define soap_write__tds__CreateDot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:CreateDot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__CreateDot1XConfiguration * SOAP_FMAC4 soap_get__tds__CreateDot1XConfiguration(struct soap*, _tds__CreateDot1XConfiguration *, const char*, const char*);

#ifndef soap_read__tds__CreateDot1XConfiguration
#define soap_read__tds__CreateDot1XConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__CreateDot1XConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__CreateDot1XConfiguration * SOAP_FMAC2 soap_instantiate__tds__CreateDot1XConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tds__CreateDot1XConfiguration * soap_new__tds__CreateDot1XConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tds__CreateDot1XConfiguration(soap, n, NULL, NULL, NULL); }

inline _tds__CreateDot1XConfiguration * soap_new_req__tds__CreateDot1XConfiguration(struct soap *soap, tt__Dot1XConfiguration *Dot1XConfiguration) { _tds__CreateDot1XConfiguration *_p = soap_instantiate__tds__CreateDot1XConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__CreateDot1XConfiguration::Dot1XConfiguration = Dot1XConfiguration; } return _p; }

inline _tds__CreateDot1XConfiguration * soap_new_set__tds__CreateDot1XConfiguration(struct soap *soap, tt__Dot1XConfiguration *Dot1XConfiguration) { _tds__CreateDot1XConfiguration *_p = soap_instantiate__tds__CreateDot1XConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__CreateDot1XConfiguration::Dot1XConfiguration = Dot1XConfiguration; } return _p; }

inline void soap_delete__tds__CreateDot1XConfiguration(struct soap *soap, _tds__CreateDot1XConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__CreateDot1XConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__LoadCACertificatesResponse
#define SOAP_TYPE__tds__LoadCACertificatesResponse (215)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__LoadCACertificatesResponse(struct soap*, const char*, int, const _tds__LoadCACertificatesResponse *, const char*);
SOAP_FMAC3 _tds__LoadCACertificatesResponse * SOAP_FMAC4 soap_in__tds__LoadCACertificatesResponse(struct soap*, const char*, _tds__LoadCACertificatesResponse *, const char*);

#ifndef soap_write__tds__LoadCACertificatesResponse
#define soap_write__tds__LoadCACertificatesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:LoadCACertificatesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__LoadCACertificatesResponse * SOAP_FMAC4 soap_get__tds__LoadCACertificatesResponse(struct soap*, _tds__LoadCACertificatesResponse *, const char*, const char*);

#ifndef soap_read__tds__LoadCACertificatesResponse
#define soap_read__tds__LoadCACertificatesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__LoadCACertificatesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__LoadCACertificatesResponse * SOAP_FMAC2 soap_instantiate__tds__LoadCACertificatesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__LoadCACertificatesResponse * soap_new__tds__LoadCACertificatesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__LoadCACertificatesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__LoadCACertificatesResponse * soap_new_req__tds__LoadCACertificatesResponse(struct soap *soap) { _tds__LoadCACertificatesResponse *_p = soap_instantiate__tds__LoadCACertificatesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__LoadCACertificatesResponse * soap_new_set__tds__LoadCACertificatesResponse(struct soap *soap) { _tds__LoadCACertificatesResponse *_p = soap_instantiate__tds__LoadCACertificatesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__LoadCACertificatesResponse(struct soap *soap, _tds__LoadCACertificatesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__LoadCACertificatesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__LoadCACertificates
#define SOAP_TYPE__tds__LoadCACertificates (214)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__LoadCACertificates(struct soap*, const char*, int, const _tds__LoadCACertificates *, const char*);
SOAP_FMAC3 _tds__LoadCACertificates * SOAP_FMAC4 soap_in__tds__LoadCACertificates(struct soap*, const char*, _tds__LoadCACertificates *, const char*);

#ifndef soap_write__tds__LoadCACertificates
#define soap_write__tds__LoadCACertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:LoadCACertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__LoadCACertificates * SOAP_FMAC4 soap_get__tds__LoadCACertificates(struct soap*, _tds__LoadCACertificates *, const char*, const char*);

#ifndef soap_read__tds__LoadCACertificates
#define soap_read__tds__LoadCACertificates(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__LoadCACertificates(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__LoadCACertificates * SOAP_FMAC2 soap_instantiate__tds__LoadCACertificates(struct soap*, int, const char*, const char*, size_t*);

inline _tds__LoadCACertificates * soap_new__tds__LoadCACertificates(struct soap *soap, int n = -1) { return soap_instantiate__tds__LoadCACertificates(soap, n, NULL, NULL, NULL); }

inline _tds__LoadCACertificates * soap_new_req__tds__LoadCACertificates(struct soap *soap, std::vector<tt__Certificate * >& CACertificate) { _tds__LoadCACertificates *_p = soap_instantiate__tds__LoadCACertificates(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__LoadCACertificates::CACertificate = CACertificate; } return _p; }

inline _tds__LoadCACertificates * soap_new_set__tds__LoadCACertificates(struct soap *soap, std::vector<tt__Certificate * >& CACertificate) { _tds__LoadCACertificates *_p = soap_instantiate__tds__LoadCACertificates(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__LoadCACertificates::CACertificate = CACertificate; } return _p; }

inline void soap_delete__tds__LoadCACertificates(struct soap *soap, _tds__LoadCACertificates *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__LoadCACertificates(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetCertificateInformationResponse
#define SOAP_TYPE__tds__GetCertificateInformationResponse (213)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetCertificateInformationResponse(struct soap*, const char*, int, const _tds__GetCertificateInformationResponse *, const char*);
SOAP_FMAC3 _tds__GetCertificateInformationResponse * SOAP_FMAC4 soap_in__tds__GetCertificateInformationResponse(struct soap*, const char*, _tds__GetCertificateInformationResponse *, const char*);

#ifndef soap_write__tds__GetCertificateInformationResponse
#define soap_write__tds__GetCertificateInformationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetCertificateInformationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCertificateInformationResponse * SOAP_FMAC4 soap_get__tds__GetCertificateInformationResponse(struct soap*, _tds__GetCertificateInformationResponse *, const char*, const char*);

#ifndef soap_read__tds__GetCertificateInformationResponse
#define soap_read__tds__GetCertificateInformationResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetCertificateInformationResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetCertificateInformationResponse * SOAP_FMAC2 soap_instantiate__tds__GetCertificateInformationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetCertificateInformationResponse * soap_new__tds__GetCertificateInformationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetCertificateInformationResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetCertificateInformationResponse * soap_new_req__tds__GetCertificateInformationResponse(struct soap *soap, tt__CertificateInformation *CertificateInformation) { _tds__GetCertificateInformationResponse *_p = soap_instantiate__tds__GetCertificateInformationResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetCertificateInformationResponse::CertificateInformation = CertificateInformation; } return _p; }

inline _tds__GetCertificateInformationResponse * soap_new_set__tds__GetCertificateInformationResponse(struct soap *soap, tt__CertificateInformation *CertificateInformation) { _tds__GetCertificateInformationResponse *_p = soap_instantiate__tds__GetCertificateInformationResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetCertificateInformationResponse::CertificateInformation = CertificateInformation; } return _p; }

inline void soap_delete__tds__GetCertificateInformationResponse(struct soap *soap, _tds__GetCertificateInformationResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetCertificateInformationResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetCertificateInformation
#define SOAP_TYPE__tds__GetCertificateInformation (212)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetCertificateInformation(struct soap*, const char*, int, const _tds__GetCertificateInformation *, const char*);
SOAP_FMAC3 _tds__GetCertificateInformation * SOAP_FMAC4 soap_in__tds__GetCertificateInformation(struct soap*, const char*, _tds__GetCertificateInformation *, const char*);

#ifndef soap_write__tds__GetCertificateInformation
#define soap_write__tds__GetCertificateInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetCertificateInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCertificateInformation * SOAP_FMAC4 soap_get__tds__GetCertificateInformation(struct soap*, _tds__GetCertificateInformation *, const char*, const char*);

#ifndef soap_read__tds__GetCertificateInformation
#define soap_read__tds__GetCertificateInformation(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetCertificateInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetCertificateInformation * SOAP_FMAC2 soap_instantiate__tds__GetCertificateInformation(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetCertificateInformation * soap_new__tds__GetCertificateInformation(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetCertificateInformation(soap, n, NULL, NULL, NULL); }

inline _tds__GetCertificateInformation * soap_new_req__tds__GetCertificateInformation(struct soap *soap, std::string& CertificateID) { _tds__GetCertificateInformation *_p = soap_instantiate__tds__GetCertificateInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetCertificateInformation::CertificateID = CertificateID; } return _p; }

inline _tds__GetCertificateInformation * soap_new_set__tds__GetCertificateInformation(struct soap *soap, std::string& CertificateID) { _tds__GetCertificateInformation *_p = soap_instantiate__tds__GetCertificateInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetCertificateInformation::CertificateID = CertificateID; } return _p; }

inline void soap_delete__tds__GetCertificateInformation(struct soap *soap, _tds__GetCertificateInformation *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetCertificateInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__LoadCertificateWithPrivateKeyResponse
#define SOAP_TYPE__tds__LoadCertificateWithPrivateKeyResponse (211)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, const char*, int, const _tds__LoadCertificateWithPrivateKeyResponse *, const char*);
SOAP_FMAC3 _tds__LoadCertificateWithPrivateKeyResponse * SOAP_FMAC4 soap_in__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, const char*, _tds__LoadCertificateWithPrivateKeyResponse *, const char*);

#ifndef soap_write__tds__LoadCertificateWithPrivateKeyResponse
#define soap_write__tds__LoadCertificateWithPrivateKeyResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:LoadCertificateWithPrivateKeyResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__LoadCertificateWithPrivateKeyResponse * SOAP_FMAC4 soap_get__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, _tds__LoadCertificateWithPrivateKeyResponse *, const char*, const char*);

#ifndef soap_read__tds__LoadCertificateWithPrivateKeyResponse
#define soap_read__tds__LoadCertificateWithPrivateKeyResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__LoadCertificateWithPrivateKeyResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__LoadCertificateWithPrivateKeyResponse * SOAP_FMAC2 soap_instantiate__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__LoadCertificateWithPrivateKeyResponse * soap_new__tds__LoadCertificateWithPrivateKeyResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__LoadCertificateWithPrivateKeyResponse(soap, n, NULL, NULL, NULL); }

inline _tds__LoadCertificateWithPrivateKeyResponse * soap_new_req__tds__LoadCertificateWithPrivateKeyResponse(struct soap *soap) { _tds__LoadCertificateWithPrivateKeyResponse *_p = soap_instantiate__tds__LoadCertificateWithPrivateKeyResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__LoadCertificateWithPrivateKeyResponse * soap_new_set__tds__LoadCertificateWithPrivateKeyResponse(struct soap *soap) { _tds__LoadCertificateWithPrivateKeyResponse *_p = soap_instantiate__tds__LoadCertificateWithPrivateKeyResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__LoadCertificateWithPrivateKeyResponse(struct soap *soap, _tds__LoadCertificateWithPrivateKeyResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__LoadCertificateWithPrivateKey
#define SOAP_TYPE__tds__LoadCertificateWithPrivateKey (210)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__LoadCertificateWithPrivateKey(struct soap*, const char*, int, const _tds__LoadCertificateWithPrivateKey *, const char*);
SOAP_FMAC3 _tds__LoadCertificateWithPrivateKey * SOAP_FMAC4 soap_in__tds__LoadCertificateWithPrivateKey(struct soap*, const char*, _tds__LoadCertificateWithPrivateKey *, const char*);

#ifndef soap_write__tds__LoadCertificateWithPrivateKey
#define soap_write__tds__LoadCertificateWithPrivateKey(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:LoadCertificateWithPrivateKey", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__LoadCertificateWithPrivateKey * SOAP_FMAC4 soap_get__tds__LoadCertificateWithPrivateKey(struct soap*, _tds__LoadCertificateWithPrivateKey *, const char*, const char*);

#ifndef soap_read__tds__LoadCertificateWithPrivateKey
#define soap_read__tds__LoadCertificateWithPrivateKey(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__LoadCertificateWithPrivateKey(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__LoadCertificateWithPrivateKey * SOAP_FMAC2 soap_instantiate__tds__LoadCertificateWithPrivateKey(struct soap*, int, const char*, const char*, size_t*);

inline _tds__LoadCertificateWithPrivateKey * soap_new__tds__LoadCertificateWithPrivateKey(struct soap *soap, int n = -1) { return soap_instantiate__tds__LoadCertificateWithPrivateKey(soap, n, NULL, NULL, NULL); }

inline _tds__LoadCertificateWithPrivateKey * soap_new_req__tds__LoadCertificateWithPrivateKey(struct soap *soap, std::vector<tt__CertificateWithPrivateKey * >& CertificateWithPrivateKey) { _tds__LoadCertificateWithPrivateKey *_p = soap_instantiate__tds__LoadCertificateWithPrivateKey(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__LoadCertificateWithPrivateKey::CertificateWithPrivateKey = CertificateWithPrivateKey; } return _p; }

inline _tds__LoadCertificateWithPrivateKey * soap_new_set__tds__LoadCertificateWithPrivateKey(struct soap *soap, std::vector<tt__CertificateWithPrivateKey * >& CertificateWithPrivateKey) { _tds__LoadCertificateWithPrivateKey *_p = soap_instantiate__tds__LoadCertificateWithPrivateKey(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__LoadCertificateWithPrivateKey::CertificateWithPrivateKey = CertificateWithPrivateKey; } return _p; }

inline void soap_delete__tds__LoadCertificateWithPrivateKey(struct soap *soap, _tds__LoadCertificateWithPrivateKey *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__LoadCertificateWithPrivateKey(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetCACertificatesResponse
#define SOAP_TYPE__tds__GetCACertificatesResponse (209)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetCACertificatesResponse(struct soap*, const char*, int, const _tds__GetCACertificatesResponse *, const char*);
SOAP_FMAC3 _tds__GetCACertificatesResponse * SOAP_FMAC4 soap_in__tds__GetCACertificatesResponse(struct soap*, const char*, _tds__GetCACertificatesResponse *, const char*);

#ifndef soap_write__tds__GetCACertificatesResponse
#define soap_write__tds__GetCACertificatesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetCACertificatesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCACertificatesResponse * SOAP_FMAC4 soap_get__tds__GetCACertificatesResponse(struct soap*, _tds__GetCACertificatesResponse *, const char*, const char*);

#ifndef soap_read__tds__GetCACertificatesResponse
#define soap_read__tds__GetCACertificatesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetCACertificatesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetCACertificatesResponse * SOAP_FMAC2 soap_instantiate__tds__GetCACertificatesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetCACertificatesResponse * soap_new__tds__GetCACertificatesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetCACertificatesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetCACertificatesResponse * soap_new_req__tds__GetCACertificatesResponse(struct soap *soap) { _tds__GetCACertificatesResponse *_p = soap_instantiate__tds__GetCACertificatesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetCACertificatesResponse * soap_new_set__tds__GetCACertificatesResponse(struct soap *soap, std::vector<tt__Certificate * >& CACertificate) { _tds__GetCACertificatesResponse *_p = soap_instantiate__tds__GetCACertificatesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetCACertificatesResponse::CACertificate = CACertificate; } return _p; }

inline void soap_delete__tds__GetCACertificatesResponse(struct soap *soap, _tds__GetCACertificatesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetCACertificatesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetCACertificates
#define SOAP_TYPE__tds__GetCACertificates (208)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetCACertificates(struct soap*, const char*, int, const _tds__GetCACertificates *, const char*);
SOAP_FMAC3 _tds__GetCACertificates * SOAP_FMAC4 soap_in__tds__GetCACertificates(struct soap*, const char*, _tds__GetCACertificates *, const char*);

#ifndef soap_write__tds__GetCACertificates
#define soap_write__tds__GetCACertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetCACertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCACertificates * SOAP_FMAC4 soap_get__tds__GetCACertificates(struct soap*, _tds__GetCACertificates *, const char*, const char*);

#ifndef soap_read__tds__GetCACertificates
#define soap_read__tds__GetCACertificates(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetCACertificates(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetCACertificates * SOAP_FMAC2 soap_instantiate__tds__GetCACertificates(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetCACertificates * soap_new__tds__GetCACertificates(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetCACertificates(soap, n, NULL, NULL, NULL); }

inline _tds__GetCACertificates * soap_new_req__tds__GetCACertificates(struct soap *soap) { _tds__GetCACertificates *_p = soap_instantiate__tds__GetCACertificates(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetCACertificates * soap_new_set__tds__GetCACertificates(struct soap *soap) { _tds__GetCACertificates *_p = soap_instantiate__tds__GetCACertificates(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetCACertificates(struct soap *soap, _tds__GetCACertificates *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetCACertificates(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetClientCertificateModeResponse
#define SOAP_TYPE__tds__SetClientCertificateModeResponse (207)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetClientCertificateModeResponse(struct soap*, const char*, int, const _tds__SetClientCertificateModeResponse *, const char*);
SOAP_FMAC3 _tds__SetClientCertificateModeResponse * SOAP_FMAC4 soap_in__tds__SetClientCertificateModeResponse(struct soap*, const char*, _tds__SetClientCertificateModeResponse *, const char*);

#ifndef soap_write__tds__SetClientCertificateModeResponse
#define soap_write__tds__SetClientCertificateModeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetClientCertificateModeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetClientCertificateModeResponse * SOAP_FMAC4 soap_get__tds__SetClientCertificateModeResponse(struct soap*, _tds__SetClientCertificateModeResponse *, const char*, const char*);

#ifndef soap_read__tds__SetClientCertificateModeResponse
#define soap_read__tds__SetClientCertificateModeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetClientCertificateModeResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetClientCertificateModeResponse * SOAP_FMAC2 soap_instantiate__tds__SetClientCertificateModeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetClientCertificateModeResponse * soap_new__tds__SetClientCertificateModeResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetClientCertificateModeResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetClientCertificateModeResponse * soap_new_req__tds__SetClientCertificateModeResponse(struct soap *soap) { _tds__SetClientCertificateModeResponse *_p = soap_instantiate__tds__SetClientCertificateModeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SetClientCertificateModeResponse * soap_new_set__tds__SetClientCertificateModeResponse(struct soap *soap) { _tds__SetClientCertificateModeResponse *_p = soap_instantiate__tds__SetClientCertificateModeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__SetClientCertificateModeResponse(struct soap *soap, _tds__SetClientCertificateModeResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetClientCertificateModeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetClientCertificateMode
#define SOAP_TYPE__tds__SetClientCertificateMode (206)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetClientCertificateMode(struct soap*, const char*, int, const _tds__SetClientCertificateMode *, const char*);
SOAP_FMAC3 _tds__SetClientCertificateMode * SOAP_FMAC4 soap_in__tds__SetClientCertificateMode(struct soap*, const char*, _tds__SetClientCertificateMode *, const char*);

#ifndef soap_write__tds__SetClientCertificateMode
#define soap_write__tds__SetClientCertificateMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetClientCertificateMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetClientCertificateMode * SOAP_FMAC4 soap_get__tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode *, const char*, const char*);

#ifndef soap_read__tds__SetClientCertificateMode
#define soap_read__tds__SetClientCertificateMode(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetClientCertificateMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetClientCertificateMode * SOAP_FMAC2 soap_instantiate__tds__SetClientCertificateMode(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetClientCertificateMode * soap_new__tds__SetClientCertificateMode(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetClientCertificateMode(soap, n, NULL, NULL, NULL); }

inline _tds__SetClientCertificateMode * soap_new_req__tds__SetClientCertificateMode(struct soap *soap, bool Enabled) { _tds__SetClientCertificateMode *_p = soap_instantiate__tds__SetClientCertificateMode(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetClientCertificateMode::Enabled = Enabled; } return _p; }

inline _tds__SetClientCertificateMode * soap_new_set__tds__SetClientCertificateMode(struct soap *soap, bool Enabled) { _tds__SetClientCertificateMode *_p = soap_instantiate__tds__SetClientCertificateMode(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetClientCertificateMode::Enabled = Enabled; } return _p; }

inline void soap_delete__tds__SetClientCertificateMode(struct soap *soap, _tds__SetClientCertificateMode *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetClientCertificateMode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetClientCertificateModeResponse
#define SOAP_TYPE__tds__GetClientCertificateModeResponse (205)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetClientCertificateModeResponse(struct soap*, const char*, int, const _tds__GetClientCertificateModeResponse *, const char*);
SOAP_FMAC3 _tds__GetClientCertificateModeResponse * SOAP_FMAC4 soap_in__tds__GetClientCertificateModeResponse(struct soap*, const char*, _tds__GetClientCertificateModeResponse *, const char*);

#ifndef soap_write__tds__GetClientCertificateModeResponse
#define soap_write__tds__GetClientCertificateModeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetClientCertificateModeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetClientCertificateModeResponse * SOAP_FMAC4 soap_get__tds__GetClientCertificateModeResponse(struct soap*, _tds__GetClientCertificateModeResponse *, const char*, const char*);

#ifndef soap_read__tds__GetClientCertificateModeResponse
#define soap_read__tds__GetClientCertificateModeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetClientCertificateModeResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetClientCertificateModeResponse * SOAP_FMAC2 soap_instantiate__tds__GetClientCertificateModeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetClientCertificateModeResponse * soap_new__tds__GetClientCertificateModeResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetClientCertificateModeResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetClientCertificateModeResponse * soap_new_req__tds__GetClientCertificateModeResponse(struct soap *soap, bool Enabled) { _tds__GetClientCertificateModeResponse *_p = soap_instantiate__tds__GetClientCertificateModeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetClientCertificateModeResponse::Enabled = Enabled; } return _p; }

inline _tds__GetClientCertificateModeResponse * soap_new_set__tds__GetClientCertificateModeResponse(struct soap *soap, bool Enabled) { _tds__GetClientCertificateModeResponse *_p = soap_instantiate__tds__GetClientCertificateModeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetClientCertificateModeResponse::Enabled = Enabled; } return _p; }

inline void soap_delete__tds__GetClientCertificateModeResponse(struct soap *soap, _tds__GetClientCertificateModeResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetClientCertificateModeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetClientCertificateMode
#define SOAP_TYPE__tds__GetClientCertificateMode (204)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetClientCertificateMode(struct soap*, const char*, int, const _tds__GetClientCertificateMode *, const char*);
SOAP_FMAC3 _tds__GetClientCertificateMode * SOAP_FMAC4 soap_in__tds__GetClientCertificateMode(struct soap*, const char*, _tds__GetClientCertificateMode *, const char*);

#ifndef soap_write__tds__GetClientCertificateMode
#define soap_write__tds__GetClientCertificateMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetClientCertificateMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetClientCertificateMode * SOAP_FMAC4 soap_get__tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode *, const char*, const char*);

#ifndef soap_read__tds__GetClientCertificateMode
#define soap_read__tds__GetClientCertificateMode(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetClientCertificateMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetClientCertificateMode * SOAP_FMAC2 soap_instantiate__tds__GetClientCertificateMode(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetClientCertificateMode * soap_new__tds__GetClientCertificateMode(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetClientCertificateMode(soap, n, NULL, NULL, NULL); }

inline _tds__GetClientCertificateMode * soap_new_req__tds__GetClientCertificateMode(struct soap *soap) { _tds__GetClientCertificateMode *_p = soap_instantiate__tds__GetClientCertificateMode(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetClientCertificateMode * soap_new_set__tds__GetClientCertificateMode(struct soap *soap) { _tds__GetClientCertificateMode *_p = soap_instantiate__tds__GetClientCertificateMode(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetClientCertificateMode(struct soap *soap, _tds__GetClientCertificateMode *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetClientCertificateMode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__LoadCertificatesResponse
#define SOAP_TYPE__tds__LoadCertificatesResponse (203)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__LoadCertificatesResponse(struct soap*, const char*, int, const _tds__LoadCertificatesResponse *, const char*);
SOAP_FMAC3 _tds__LoadCertificatesResponse * SOAP_FMAC4 soap_in__tds__LoadCertificatesResponse(struct soap*, const char*, _tds__LoadCertificatesResponse *, const char*);

#ifndef soap_write__tds__LoadCertificatesResponse
#define soap_write__tds__LoadCertificatesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:LoadCertificatesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__LoadCertificatesResponse * SOAP_FMAC4 soap_get__tds__LoadCertificatesResponse(struct soap*, _tds__LoadCertificatesResponse *, const char*, const char*);

#ifndef soap_read__tds__LoadCertificatesResponse
#define soap_read__tds__LoadCertificatesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__LoadCertificatesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__LoadCertificatesResponse * SOAP_FMAC2 soap_instantiate__tds__LoadCertificatesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__LoadCertificatesResponse * soap_new__tds__LoadCertificatesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__LoadCertificatesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__LoadCertificatesResponse * soap_new_req__tds__LoadCertificatesResponse(struct soap *soap) { _tds__LoadCertificatesResponse *_p = soap_instantiate__tds__LoadCertificatesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__LoadCertificatesResponse * soap_new_set__tds__LoadCertificatesResponse(struct soap *soap) { _tds__LoadCertificatesResponse *_p = soap_instantiate__tds__LoadCertificatesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__LoadCertificatesResponse(struct soap *soap, _tds__LoadCertificatesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__LoadCertificatesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__LoadCertificates
#define SOAP_TYPE__tds__LoadCertificates (202)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__LoadCertificates(struct soap*, const char*, int, const _tds__LoadCertificates *, const char*);
SOAP_FMAC3 _tds__LoadCertificates * SOAP_FMAC4 soap_in__tds__LoadCertificates(struct soap*, const char*, _tds__LoadCertificates *, const char*);

#ifndef soap_write__tds__LoadCertificates
#define soap_write__tds__LoadCertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:LoadCertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__LoadCertificates * SOAP_FMAC4 soap_get__tds__LoadCertificates(struct soap*, _tds__LoadCertificates *, const char*, const char*);

#ifndef soap_read__tds__LoadCertificates
#define soap_read__tds__LoadCertificates(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__LoadCertificates(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__LoadCertificates * SOAP_FMAC2 soap_instantiate__tds__LoadCertificates(struct soap*, int, const char*, const char*, size_t*);

inline _tds__LoadCertificates * soap_new__tds__LoadCertificates(struct soap *soap, int n = -1) { return soap_instantiate__tds__LoadCertificates(soap, n, NULL, NULL, NULL); }

inline _tds__LoadCertificates * soap_new_req__tds__LoadCertificates(struct soap *soap, std::vector<tt__Certificate * >& NVTCertificate) { _tds__LoadCertificates *_p = soap_instantiate__tds__LoadCertificates(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__LoadCertificates::NVTCertificate = NVTCertificate; } return _p; }

inline _tds__LoadCertificates * soap_new_set__tds__LoadCertificates(struct soap *soap, std::vector<tt__Certificate * >& NVTCertificate) { _tds__LoadCertificates *_p = soap_instantiate__tds__LoadCertificates(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__LoadCertificates::NVTCertificate = NVTCertificate; } return _p; }

inline void soap_delete__tds__LoadCertificates(struct soap *soap, _tds__LoadCertificates *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__LoadCertificates(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetPkcs10RequestResponse
#define SOAP_TYPE__tds__GetPkcs10RequestResponse (201)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetPkcs10RequestResponse(struct soap*, const char*, int, const _tds__GetPkcs10RequestResponse *, const char*);
SOAP_FMAC3 _tds__GetPkcs10RequestResponse * SOAP_FMAC4 soap_in__tds__GetPkcs10RequestResponse(struct soap*, const char*, _tds__GetPkcs10RequestResponse *, const char*);

#ifndef soap_write__tds__GetPkcs10RequestResponse
#define soap_write__tds__GetPkcs10RequestResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetPkcs10RequestResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetPkcs10RequestResponse * SOAP_FMAC4 soap_get__tds__GetPkcs10RequestResponse(struct soap*, _tds__GetPkcs10RequestResponse *, const char*, const char*);

#ifndef soap_read__tds__GetPkcs10RequestResponse
#define soap_read__tds__GetPkcs10RequestResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetPkcs10RequestResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetPkcs10RequestResponse * SOAP_FMAC2 soap_instantiate__tds__GetPkcs10RequestResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetPkcs10RequestResponse * soap_new__tds__GetPkcs10RequestResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetPkcs10RequestResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetPkcs10RequestResponse * soap_new_req__tds__GetPkcs10RequestResponse(struct soap *soap, tt__BinaryData *Pkcs10Request) { _tds__GetPkcs10RequestResponse *_p = soap_instantiate__tds__GetPkcs10RequestResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetPkcs10RequestResponse::Pkcs10Request = Pkcs10Request; } return _p; }

inline _tds__GetPkcs10RequestResponse * soap_new_set__tds__GetPkcs10RequestResponse(struct soap *soap, tt__BinaryData *Pkcs10Request) { _tds__GetPkcs10RequestResponse *_p = soap_instantiate__tds__GetPkcs10RequestResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetPkcs10RequestResponse::Pkcs10Request = Pkcs10Request; } return _p; }

inline void soap_delete__tds__GetPkcs10RequestResponse(struct soap *soap, _tds__GetPkcs10RequestResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetPkcs10RequestResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetPkcs10Request
#define SOAP_TYPE__tds__GetPkcs10Request (200)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetPkcs10Request(struct soap*, const char*, int, const _tds__GetPkcs10Request *, const char*);
SOAP_FMAC3 _tds__GetPkcs10Request * SOAP_FMAC4 soap_in__tds__GetPkcs10Request(struct soap*, const char*, _tds__GetPkcs10Request *, const char*);

#ifndef soap_write__tds__GetPkcs10Request
#define soap_write__tds__GetPkcs10Request(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetPkcs10Request", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetPkcs10Request * SOAP_FMAC4 soap_get__tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request *, const char*, const char*);

#ifndef soap_read__tds__GetPkcs10Request
#define soap_read__tds__GetPkcs10Request(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetPkcs10Request(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetPkcs10Request * SOAP_FMAC2 soap_instantiate__tds__GetPkcs10Request(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetPkcs10Request * soap_new__tds__GetPkcs10Request(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetPkcs10Request(soap, n, NULL, NULL, NULL); }

inline _tds__GetPkcs10Request * soap_new_req__tds__GetPkcs10Request(struct soap *soap, std::string& CertificateID) { _tds__GetPkcs10Request *_p = soap_instantiate__tds__GetPkcs10Request(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetPkcs10Request::CertificateID = CertificateID; } return _p; }

inline _tds__GetPkcs10Request * soap_new_set__tds__GetPkcs10Request(struct soap *soap, std::string& CertificateID, std::string *Subject, tt__BinaryData *Attributes) { _tds__GetPkcs10Request *_p = soap_instantiate__tds__GetPkcs10Request(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetPkcs10Request::CertificateID = CertificateID; _p->_tds__GetPkcs10Request::Subject = Subject; _p->_tds__GetPkcs10Request::Attributes = Attributes; } return _p; }

inline void soap_delete__tds__GetPkcs10Request(struct soap *soap, _tds__GetPkcs10Request *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetPkcs10Request(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__DeleteCertificatesResponse
#define SOAP_TYPE__tds__DeleteCertificatesResponse (199)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__DeleteCertificatesResponse(struct soap*, const char*, int, const _tds__DeleteCertificatesResponse *, const char*);
SOAP_FMAC3 _tds__DeleteCertificatesResponse * SOAP_FMAC4 soap_in__tds__DeleteCertificatesResponse(struct soap*, const char*, _tds__DeleteCertificatesResponse *, const char*);

#ifndef soap_write__tds__DeleteCertificatesResponse
#define soap_write__tds__DeleteCertificatesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:DeleteCertificatesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__DeleteCertificatesResponse * SOAP_FMAC4 soap_get__tds__DeleteCertificatesResponse(struct soap*, _tds__DeleteCertificatesResponse *, const char*, const char*);

#ifndef soap_read__tds__DeleteCertificatesResponse
#define soap_read__tds__DeleteCertificatesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__DeleteCertificatesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__DeleteCertificatesResponse * SOAP_FMAC2 soap_instantiate__tds__DeleteCertificatesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__DeleteCertificatesResponse * soap_new__tds__DeleteCertificatesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__DeleteCertificatesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__DeleteCertificatesResponse * soap_new_req__tds__DeleteCertificatesResponse(struct soap *soap) { _tds__DeleteCertificatesResponse *_p = soap_instantiate__tds__DeleteCertificatesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__DeleteCertificatesResponse * soap_new_set__tds__DeleteCertificatesResponse(struct soap *soap) { _tds__DeleteCertificatesResponse *_p = soap_instantiate__tds__DeleteCertificatesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__DeleteCertificatesResponse(struct soap *soap, _tds__DeleteCertificatesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__DeleteCertificatesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__DeleteCertificates
#define SOAP_TYPE__tds__DeleteCertificates (198)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__DeleteCertificates(struct soap*, const char*, int, const _tds__DeleteCertificates *, const char*);
SOAP_FMAC3 _tds__DeleteCertificates * SOAP_FMAC4 soap_in__tds__DeleteCertificates(struct soap*, const char*, _tds__DeleteCertificates *, const char*);

#ifndef soap_write__tds__DeleteCertificates
#define soap_write__tds__DeleteCertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:DeleteCertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__DeleteCertificates * SOAP_FMAC4 soap_get__tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates *, const char*, const char*);

#ifndef soap_read__tds__DeleteCertificates
#define soap_read__tds__DeleteCertificates(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__DeleteCertificates(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__DeleteCertificates * SOAP_FMAC2 soap_instantiate__tds__DeleteCertificates(struct soap*, int, const char*, const char*, size_t*);

inline _tds__DeleteCertificates * soap_new__tds__DeleteCertificates(struct soap *soap, int n = -1) { return soap_instantiate__tds__DeleteCertificates(soap, n, NULL, NULL, NULL); }

inline _tds__DeleteCertificates * soap_new_req__tds__DeleteCertificates(struct soap *soap, std::vector<std::string >& CertificateID) { _tds__DeleteCertificates *_p = soap_instantiate__tds__DeleteCertificates(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__DeleteCertificates::CertificateID = CertificateID; } return _p; }

inline _tds__DeleteCertificates * soap_new_set__tds__DeleteCertificates(struct soap *soap, std::vector<std::string >& CertificateID) { _tds__DeleteCertificates *_p = soap_instantiate__tds__DeleteCertificates(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__DeleteCertificates::CertificateID = CertificateID; } return _p; }

inline void soap_delete__tds__DeleteCertificates(struct soap *soap, _tds__DeleteCertificates *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__DeleteCertificates(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetCertificatesStatusResponse
#define SOAP_TYPE__tds__SetCertificatesStatusResponse (197)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetCertificatesStatusResponse(struct soap*, const char*, int, const _tds__SetCertificatesStatusResponse *, const char*);
SOAP_FMAC3 _tds__SetCertificatesStatusResponse * SOAP_FMAC4 soap_in__tds__SetCertificatesStatusResponse(struct soap*, const char*, _tds__SetCertificatesStatusResponse *, const char*);

#ifndef soap_write__tds__SetCertificatesStatusResponse
#define soap_write__tds__SetCertificatesStatusResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetCertificatesStatusResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetCertificatesStatusResponse * SOAP_FMAC4 soap_get__tds__SetCertificatesStatusResponse(struct soap*, _tds__SetCertificatesStatusResponse *, const char*, const char*);

#ifndef soap_read__tds__SetCertificatesStatusResponse
#define soap_read__tds__SetCertificatesStatusResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetCertificatesStatusResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetCertificatesStatusResponse * SOAP_FMAC2 soap_instantiate__tds__SetCertificatesStatusResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetCertificatesStatusResponse * soap_new__tds__SetCertificatesStatusResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetCertificatesStatusResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetCertificatesStatusResponse * soap_new_req__tds__SetCertificatesStatusResponse(struct soap *soap) { _tds__SetCertificatesStatusResponse *_p = soap_instantiate__tds__SetCertificatesStatusResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SetCertificatesStatusResponse * soap_new_set__tds__SetCertificatesStatusResponse(struct soap *soap) { _tds__SetCertificatesStatusResponse *_p = soap_instantiate__tds__SetCertificatesStatusResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__SetCertificatesStatusResponse(struct soap *soap, _tds__SetCertificatesStatusResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetCertificatesStatusResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetCertificatesStatus
#define SOAP_TYPE__tds__SetCertificatesStatus (196)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetCertificatesStatus(struct soap*, const char*, int, const _tds__SetCertificatesStatus *, const char*);
SOAP_FMAC3 _tds__SetCertificatesStatus * SOAP_FMAC4 soap_in__tds__SetCertificatesStatus(struct soap*, const char*, _tds__SetCertificatesStatus *, const char*);

#ifndef soap_write__tds__SetCertificatesStatus
#define soap_write__tds__SetCertificatesStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetCertificatesStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetCertificatesStatus * SOAP_FMAC4 soap_get__tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus *, const char*, const char*);

#ifndef soap_read__tds__SetCertificatesStatus
#define soap_read__tds__SetCertificatesStatus(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetCertificatesStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetCertificatesStatus * SOAP_FMAC2 soap_instantiate__tds__SetCertificatesStatus(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetCertificatesStatus * soap_new__tds__SetCertificatesStatus(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetCertificatesStatus(soap, n, NULL, NULL, NULL); }

inline _tds__SetCertificatesStatus * soap_new_req__tds__SetCertificatesStatus(struct soap *soap) { _tds__SetCertificatesStatus *_p = soap_instantiate__tds__SetCertificatesStatus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SetCertificatesStatus * soap_new_set__tds__SetCertificatesStatus(struct soap *soap, std::vector<tt__CertificateStatus * >& CertificateStatus) { _tds__SetCertificatesStatus *_p = soap_instantiate__tds__SetCertificatesStatus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetCertificatesStatus::CertificateStatus = CertificateStatus; } return _p; }

inline void soap_delete__tds__SetCertificatesStatus(struct soap *soap, _tds__SetCertificatesStatus *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetCertificatesStatus(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetCertificatesStatusResponse
#define SOAP_TYPE__tds__GetCertificatesStatusResponse (195)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetCertificatesStatusResponse(struct soap*, const char*, int, const _tds__GetCertificatesStatusResponse *, const char*);
SOAP_FMAC3 _tds__GetCertificatesStatusResponse * SOAP_FMAC4 soap_in__tds__GetCertificatesStatusResponse(struct soap*, const char*, _tds__GetCertificatesStatusResponse *, const char*);

#ifndef soap_write__tds__GetCertificatesStatusResponse
#define soap_write__tds__GetCertificatesStatusResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetCertificatesStatusResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCertificatesStatusResponse * SOAP_FMAC4 soap_get__tds__GetCertificatesStatusResponse(struct soap*, _tds__GetCertificatesStatusResponse *, const char*, const char*);

#ifndef soap_read__tds__GetCertificatesStatusResponse
#define soap_read__tds__GetCertificatesStatusResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetCertificatesStatusResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetCertificatesStatusResponse * SOAP_FMAC2 soap_instantiate__tds__GetCertificatesStatusResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetCertificatesStatusResponse * soap_new__tds__GetCertificatesStatusResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetCertificatesStatusResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetCertificatesStatusResponse * soap_new_req__tds__GetCertificatesStatusResponse(struct soap *soap) { _tds__GetCertificatesStatusResponse *_p = soap_instantiate__tds__GetCertificatesStatusResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetCertificatesStatusResponse * soap_new_set__tds__GetCertificatesStatusResponse(struct soap *soap, std::vector<tt__CertificateStatus * >& CertificateStatus) { _tds__GetCertificatesStatusResponse *_p = soap_instantiate__tds__GetCertificatesStatusResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetCertificatesStatusResponse::CertificateStatus = CertificateStatus; } return _p; }

inline void soap_delete__tds__GetCertificatesStatusResponse(struct soap *soap, _tds__GetCertificatesStatusResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetCertificatesStatusResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetCertificatesStatus
#define SOAP_TYPE__tds__GetCertificatesStatus (194)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetCertificatesStatus(struct soap*, const char*, int, const _tds__GetCertificatesStatus *, const char*);
SOAP_FMAC3 _tds__GetCertificatesStatus * SOAP_FMAC4 soap_in__tds__GetCertificatesStatus(struct soap*, const char*, _tds__GetCertificatesStatus *, const char*);

#ifndef soap_write__tds__GetCertificatesStatus
#define soap_write__tds__GetCertificatesStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetCertificatesStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCertificatesStatus * SOAP_FMAC4 soap_get__tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus *, const char*, const char*);

#ifndef soap_read__tds__GetCertificatesStatus
#define soap_read__tds__GetCertificatesStatus(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetCertificatesStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetCertificatesStatus * SOAP_FMAC2 soap_instantiate__tds__GetCertificatesStatus(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetCertificatesStatus * soap_new__tds__GetCertificatesStatus(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetCertificatesStatus(soap, n, NULL, NULL, NULL); }

inline _tds__GetCertificatesStatus * soap_new_req__tds__GetCertificatesStatus(struct soap *soap) { _tds__GetCertificatesStatus *_p = soap_instantiate__tds__GetCertificatesStatus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetCertificatesStatus * soap_new_set__tds__GetCertificatesStatus(struct soap *soap) { _tds__GetCertificatesStatus *_p = soap_instantiate__tds__GetCertificatesStatus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetCertificatesStatus(struct soap *soap, _tds__GetCertificatesStatus *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetCertificatesStatus(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetCertificatesResponse
#define SOAP_TYPE__tds__GetCertificatesResponse (193)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetCertificatesResponse(struct soap*, const char*, int, const _tds__GetCertificatesResponse *, const char*);
SOAP_FMAC3 _tds__GetCertificatesResponse * SOAP_FMAC4 soap_in__tds__GetCertificatesResponse(struct soap*, const char*, _tds__GetCertificatesResponse *, const char*);

#ifndef soap_write__tds__GetCertificatesResponse
#define soap_write__tds__GetCertificatesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetCertificatesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCertificatesResponse * SOAP_FMAC4 soap_get__tds__GetCertificatesResponse(struct soap*, _tds__GetCertificatesResponse *, const char*, const char*);

#ifndef soap_read__tds__GetCertificatesResponse
#define soap_read__tds__GetCertificatesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetCertificatesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetCertificatesResponse * SOAP_FMAC2 soap_instantiate__tds__GetCertificatesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetCertificatesResponse * soap_new__tds__GetCertificatesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetCertificatesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetCertificatesResponse * soap_new_req__tds__GetCertificatesResponse(struct soap *soap) { _tds__GetCertificatesResponse *_p = soap_instantiate__tds__GetCertificatesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetCertificatesResponse * soap_new_set__tds__GetCertificatesResponse(struct soap *soap, std::vector<tt__Certificate * >& NvtCertificate) { _tds__GetCertificatesResponse *_p = soap_instantiate__tds__GetCertificatesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetCertificatesResponse::NvtCertificate = NvtCertificate; } return _p; }

inline void soap_delete__tds__GetCertificatesResponse(struct soap *soap, _tds__GetCertificatesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetCertificatesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetCertificates
#define SOAP_TYPE__tds__GetCertificates (192)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetCertificates(struct soap*, const char*, int, const _tds__GetCertificates *, const char*);
SOAP_FMAC3 _tds__GetCertificates * SOAP_FMAC4 soap_in__tds__GetCertificates(struct soap*, const char*, _tds__GetCertificates *, const char*);

#ifndef soap_write__tds__GetCertificates
#define soap_write__tds__GetCertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetCertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCertificates * SOAP_FMAC4 soap_get__tds__GetCertificates(struct soap*, _tds__GetCertificates *, const char*, const char*);

#ifndef soap_read__tds__GetCertificates
#define soap_read__tds__GetCertificates(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetCertificates(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetCertificates * SOAP_FMAC2 soap_instantiate__tds__GetCertificates(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetCertificates * soap_new__tds__GetCertificates(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetCertificates(soap, n, NULL, NULL, NULL); }

inline _tds__GetCertificates * soap_new_req__tds__GetCertificates(struct soap *soap) { _tds__GetCertificates *_p = soap_instantiate__tds__GetCertificates(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetCertificates * soap_new_set__tds__GetCertificates(struct soap *soap) { _tds__GetCertificates *_p = soap_instantiate__tds__GetCertificates(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetCertificates(struct soap *soap, _tds__GetCertificates *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetCertificates(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__CreateCertificateResponse
#define SOAP_TYPE__tds__CreateCertificateResponse (191)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__CreateCertificateResponse(struct soap*, const char*, int, const _tds__CreateCertificateResponse *, const char*);
SOAP_FMAC3 _tds__CreateCertificateResponse * SOAP_FMAC4 soap_in__tds__CreateCertificateResponse(struct soap*, const char*, _tds__CreateCertificateResponse *, const char*);

#ifndef soap_write__tds__CreateCertificateResponse
#define soap_write__tds__CreateCertificateResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:CreateCertificateResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__CreateCertificateResponse * SOAP_FMAC4 soap_get__tds__CreateCertificateResponse(struct soap*, _tds__CreateCertificateResponse *, const char*, const char*);

#ifndef soap_read__tds__CreateCertificateResponse
#define soap_read__tds__CreateCertificateResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__CreateCertificateResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__CreateCertificateResponse * SOAP_FMAC2 soap_instantiate__tds__CreateCertificateResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__CreateCertificateResponse * soap_new__tds__CreateCertificateResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__CreateCertificateResponse(soap, n, NULL, NULL, NULL); }

inline _tds__CreateCertificateResponse * soap_new_req__tds__CreateCertificateResponse(struct soap *soap, tt__Certificate *NvtCertificate) { _tds__CreateCertificateResponse *_p = soap_instantiate__tds__CreateCertificateResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__CreateCertificateResponse::NvtCertificate = NvtCertificate; } return _p; }

inline _tds__CreateCertificateResponse * soap_new_set__tds__CreateCertificateResponse(struct soap *soap, tt__Certificate *NvtCertificate) { _tds__CreateCertificateResponse *_p = soap_instantiate__tds__CreateCertificateResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__CreateCertificateResponse::NvtCertificate = NvtCertificate; } return _p; }

inline void soap_delete__tds__CreateCertificateResponse(struct soap *soap, _tds__CreateCertificateResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__CreateCertificateResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__CreateCertificate
#define SOAP_TYPE__tds__CreateCertificate (190)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__CreateCertificate(struct soap*, const char*, int, const _tds__CreateCertificate *, const char*);
SOAP_FMAC3 _tds__CreateCertificate * SOAP_FMAC4 soap_in__tds__CreateCertificate(struct soap*, const char*, _tds__CreateCertificate *, const char*);

#ifndef soap_write__tds__CreateCertificate
#define soap_write__tds__CreateCertificate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:CreateCertificate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__CreateCertificate * SOAP_FMAC4 soap_get__tds__CreateCertificate(struct soap*, _tds__CreateCertificate *, const char*, const char*);

#ifndef soap_read__tds__CreateCertificate
#define soap_read__tds__CreateCertificate(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__CreateCertificate(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__CreateCertificate * SOAP_FMAC2 soap_instantiate__tds__CreateCertificate(struct soap*, int, const char*, const char*, size_t*);

inline _tds__CreateCertificate * soap_new__tds__CreateCertificate(struct soap *soap, int n = -1) { return soap_instantiate__tds__CreateCertificate(soap, n, NULL, NULL, NULL); }

inline _tds__CreateCertificate * soap_new_req__tds__CreateCertificate(struct soap *soap) { _tds__CreateCertificate *_p = soap_instantiate__tds__CreateCertificate(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__CreateCertificate * soap_new_set__tds__CreateCertificate(struct soap *soap, std::string *CertificateID, std::string *Subject, time_t *ValidNotBefore, time_t *ValidNotAfter) { _tds__CreateCertificate *_p = soap_instantiate__tds__CreateCertificate(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__CreateCertificate::CertificateID = CertificateID; _p->_tds__CreateCertificate::Subject = Subject; _p->_tds__CreateCertificate::ValidNotBefore = ValidNotBefore; _p->_tds__CreateCertificate::ValidNotAfter = ValidNotAfter; } return _p; }

inline void soap_delete__tds__CreateCertificate(struct soap *soap, _tds__CreateCertificate *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__CreateCertificate(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetAccessPolicyResponse
#define SOAP_TYPE__tds__SetAccessPolicyResponse (189)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetAccessPolicyResponse(struct soap*, const char*, int, const _tds__SetAccessPolicyResponse *, const char*);
SOAP_FMAC3 _tds__SetAccessPolicyResponse * SOAP_FMAC4 soap_in__tds__SetAccessPolicyResponse(struct soap*, const char*, _tds__SetAccessPolicyResponse *, const char*);

#ifndef soap_write__tds__SetAccessPolicyResponse
#define soap_write__tds__SetAccessPolicyResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetAccessPolicyResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetAccessPolicyResponse * SOAP_FMAC4 soap_get__tds__SetAccessPolicyResponse(struct soap*, _tds__SetAccessPolicyResponse *, const char*, const char*);

#ifndef soap_read__tds__SetAccessPolicyResponse
#define soap_read__tds__SetAccessPolicyResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetAccessPolicyResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetAccessPolicyResponse * SOAP_FMAC2 soap_instantiate__tds__SetAccessPolicyResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetAccessPolicyResponse * soap_new__tds__SetAccessPolicyResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetAccessPolicyResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetAccessPolicyResponse * soap_new_req__tds__SetAccessPolicyResponse(struct soap *soap) { _tds__SetAccessPolicyResponse *_p = soap_instantiate__tds__SetAccessPolicyResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SetAccessPolicyResponse * soap_new_set__tds__SetAccessPolicyResponse(struct soap *soap) { _tds__SetAccessPolicyResponse *_p = soap_instantiate__tds__SetAccessPolicyResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__SetAccessPolicyResponse(struct soap *soap, _tds__SetAccessPolicyResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetAccessPolicyResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetAccessPolicy
#define SOAP_TYPE__tds__SetAccessPolicy (188)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetAccessPolicy(struct soap*, const char*, int, const _tds__SetAccessPolicy *, const char*);
SOAP_FMAC3 _tds__SetAccessPolicy * SOAP_FMAC4 soap_in__tds__SetAccessPolicy(struct soap*, const char*, _tds__SetAccessPolicy *, const char*);

#ifndef soap_write__tds__SetAccessPolicy
#define soap_write__tds__SetAccessPolicy(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetAccessPolicy", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetAccessPolicy * SOAP_FMAC4 soap_get__tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy *, const char*, const char*);

#ifndef soap_read__tds__SetAccessPolicy
#define soap_read__tds__SetAccessPolicy(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetAccessPolicy(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetAccessPolicy * SOAP_FMAC2 soap_instantiate__tds__SetAccessPolicy(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetAccessPolicy * soap_new__tds__SetAccessPolicy(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetAccessPolicy(soap, n, NULL, NULL, NULL); }

inline _tds__SetAccessPolicy * soap_new_req__tds__SetAccessPolicy(struct soap *soap, tt__BinaryData *PolicyFile) { _tds__SetAccessPolicy *_p = soap_instantiate__tds__SetAccessPolicy(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetAccessPolicy::PolicyFile = PolicyFile; } return _p; }

inline _tds__SetAccessPolicy * soap_new_set__tds__SetAccessPolicy(struct soap *soap, tt__BinaryData *PolicyFile) { _tds__SetAccessPolicy *_p = soap_instantiate__tds__SetAccessPolicy(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetAccessPolicy::PolicyFile = PolicyFile; } return _p; }

inline void soap_delete__tds__SetAccessPolicy(struct soap *soap, _tds__SetAccessPolicy *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetAccessPolicy(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetAccessPolicyResponse
#define SOAP_TYPE__tds__GetAccessPolicyResponse (187)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetAccessPolicyResponse(struct soap*, const char*, int, const _tds__GetAccessPolicyResponse *, const char*);
SOAP_FMAC3 _tds__GetAccessPolicyResponse * SOAP_FMAC4 soap_in__tds__GetAccessPolicyResponse(struct soap*, const char*, _tds__GetAccessPolicyResponse *, const char*);

#ifndef soap_write__tds__GetAccessPolicyResponse
#define soap_write__tds__GetAccessPolicyResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetAccessPolicyResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetAccessPolicyResponse * SOAP_FMAC4 soap_get__tds__GetAccessPolicyResponse(struct soap*, _tds__GetAccessPolicyResponse *, const char*, const char*);

#ifndef soap_read__tds__GetAccessPolicyResponse
#define soap_read__tds__GetAccessPolicyResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetAccessPolicyResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetAccessPolicyResponse * SOAP_FMAC2 soap_instantiate__tds__GetAccessPolicyResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetAccessPolicyResponse * soap_new__tds__GetAccessPolicyResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetAccessPolicyResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetAccessPolicyResponse * soap_new_req__tds__GetAccessPolicyResponse(struct soap *soap, tt__BinaryData *PolicyFile) { _tds__GetAccessPolicyResponse *_p = soap_instantiate__tds__GetAccessPolicyResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetAccessPolicyResponse::PolicyFile = PolicyFile; } return _p; }

inline _tds__GetAccessPolicyResponse * soap_new_set__tds__GetAccessPolicyResponse(struct soap *soap, tt__BinaryData *PolicyFile) { _tds__GetAccessPolicyResponse *_p = soap_instantiate__tds__GetAccessPolicyResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetAccessPolicyResponse::PolicyFile = PolicyFile; } return _p; }

inline void soap_delete__tds__GetAccessPolicyResponse(struct soap *soap, _tds__GetAccessPolicyResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetAccessPolicyResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetAccessPolicy
#define SOAP_TYPE__tds__GetAccessPolicy (186)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetAccessPolicy(struct soap*, const char*, int, const _tds__GetAccessPolicy *, const char*);
SOAP_FMAC3 _tds__GetAccessPolicy * SOAP_FMAC4 soap_in__tds__GetAccessPolicy(struct soap*, const char*, _tds__GetAccessPolicy *, const char*);

#ifndef soap_write__tds__GetAccessPolicy
#define soap_write__tds__GetAccessPolicy(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetAccessPolicy", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetAccessPolicy * SOAP_FMAC4 soap_get__tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy *, const char*, const char*);

#ifndef soap_read__tds__GetAccessPolicy
#define soap_read__tds__GetAccessPolicy(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetAccessPolicy(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetAccessPolicy * SOAP_FMAC2 soap_instantiate__tds__GetAccessPolicy(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetAccessPolicy * soap_new__tds__GetAccessPolicy(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetAccessPolicy(soap, n, NULL, NULL, NULL); }

inline _tds__GetAccessPolicy * soap_new_req__tds__GetAccessPolicy(struct soap *soap) { _tds__GetAccessPolicy *_p = soap_instantiate__tds__GetAccessPolicy(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetAccessPolicy * soap_new_set__tds__GetAccessPolicy(struct soap *soap) { _tds__GetAccessPolicy *_p = soap_instantiate__tds__GetAccessPolicy(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetAccessPolicy(struct soap *soap, _tds__GetAccessPolicy *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetAccessPolicy(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__RemoveIPAddressFilterResponse
#define SOAP_TYPE__tds__RemoveIPAddressFilterResponse (185)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__RemoveIPAddressFilterResponse(struct soap*, const char*, int, const _tds__RemoveIPAddressFilterResponse *, const char*);
SOAP_FMAC3 _tds__RemoveIPAddressFilterResponse * SOAP_FMAC4 soap_in__tds__RemoveIPAddressFilterResponse(struct soap*, const char*, _tds__RemoveIPAddressFilterResponse *, const char*);

#ifndef soap_write__tds__RemoveIPAddressFilterResponse
#define soap_write__tds__RemoveIPAddressFilterResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:RemoveIPAddressFilterResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__RemoveIPAddressFilterResponse * SOAP_FMAC4 soap_get__tds__RemoveIPAddressFilterResponse(struct soap*, _tds__RemoveIPAddressFilterResponse *, const char*, const char*);

#ifndef soap_read__tds__RemoveIPAddressFilterResponse
#define soap_read__tds__RemoveIPAddressFilterResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__RemoveIPAddressFilterResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__RemoveIPAddressFilterResponse * SOAP_FMAC2 soap_instantiate__tds__RemoveIPAddressFilterResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__RemoveIPAddressFilterResponse * soap_new__tds__RemoveIPAddressFilterResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__RemoveIPAddressFilterResponse(soap, n, NULL, NULL, NULL); }

inline _tds__RemoveIPAddressFilterResponse * soap_new_req__tds__RemoveIPAddressFilterResponse(struct soap *soap) { _tds__RemoveIPAddressFilterResponse *_p = soap_instantiate__tds__RemoveIPAddressFilterResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__RemoveIPAddressFilterResponse * soap_new_set__tds__RemoveIPAddressFilterResponse(struct soap *soap) { _tds__RemoveIPAddressFilterResponse *_p = soap_instantiate__tds__RemoveIPAddressFilterResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__RemoveIPAddressFilterResponse(struct soap *soap, _tds__RemoveIPAddressFilterResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__RemoveIPAddressFilterResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__RemoveIPAddressFilter
#define SOAP_TYPE__tds__RemoveIPAddressFilter (184)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__RemoveIPAddressFilter(struct soap*, const char*, int, const _tds__RemoveIPAddressFilter *, const char*);
SOAP_FMAC3 _tds__RemoveIPAddressFilter * SOAP_FMAC4 soap_in__tds__RemoveIPAddressFilter(struct soap*, const char*, _tds__RemoveIPAddressFilter *, const char*);

#ifndef soap_write__tds__RemoveIPAddressFilter
#define soap_write__tds__RemoveIPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:RemoveIPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__RemoveIPAddressFilter * SOAP_FMAC4 soap_get__tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter *, const char*, const char*);

#ifndef soap_read__tds__RemoveIPAddressFilter
#define soap_read__tds__RemoveIPAddressFilter(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__RemoveIPAddressFilter(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__RemoveIPAddressFilter * SOAP_FMAC2 soap_instantiate__tds__RemoveIPAddressFilter(struct soap*, int, const char*, const char*, size_t*);

inline _tds__RemoveIPAddressFilter * soap_new__tds__RemoveIPAddressFilter(struct soap *soap, int n = -1) { return soap_instantiate__tds__RemoveIPAddressFilter(soap, n, NULL, NULL, NULL); }

inline _tds__RemoveIPAddressFilter * soap_new_req__tds__RemoveIPAddressFilter(struct soap *soap, tt__IPAddressFilter *IPAddressFilter) { _tds__RemoveIPAddressFilter *_p = soap_instantiate__tds__RemoveIPAddressFilter(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__RemoveIPAddressFilter::IPAddressFilter = IPAddressFilter; } return _p; }

inline _tds__RemoveIPAddressFilter * soap_new_set__tds__RemoveIPAddressFilter(struct soap *soap, tt__IPAddressFilter *IPAddressFilter) { _tds__RemoveIPAddressFilter *_p = soap_instantiate__tds__RemoveIPAddressFilter(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__RemoveIPAddressFilter::IPAddressFilter = IPAddressFilter; } return _p; }

inline void soap_delete__tds__RemoveIPAddressFilter(struct soap *soap, _tds__RemoveIPAddressFilter *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__RemoveIPAddressFilter(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__AddIPAddressFilterResponse
#define SOAP_TYPE__tds__AddIPAddressFilterResponse (183)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__AddIPAddressFilterResponse(struct soap*, const char*, int, const _tds__AddIPAddressFilterResponse *, const char*);
SOAP_FMAC3 _tds__AddIPAddressFilterResponse * SOAP_FMAC4 soap_in__tds__AddIPAddressFilterResponse(struct soap*, const char*, _tds__AddIPAddressFilterResponse *, const char*);

#ifndef soap_write__tds__AddIPAddressFilterResponse
#define soap_write__tds__AddIPAddressFilterResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:AddIPAddressFilterResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__AddIPAddressFilterResponse * SOAP_FMAC4 soap_get__tds__AddIPAddressFilterResponse(struct soap*, _tds__AddIPAddressFilterResponse *, const char*, const char*);

#ifndef soap_read__tds__AddIPAddressFilterResponse
#define soap_read__tds__AddIPAddressFilterResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__AddIPAddressFilterResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__AddIPAddressFilterResponse * SOAP_FMAC2 soap_instantiate__tds__AddIPAddressFilterResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__AddIPAddressFilterResponse * soap_new__tds__AddIPAddressFilterResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__AddIPAddressFilterResponse(soap, n, NULL, NULL, NULL); }

inline _tds__AddIPAddressFilterResponse * soap_new_req__tds__AddIPAddressFilterResponse(struct soap *soap) { _tds__AddIPAddressFilterResponse *_p = soap_instantiate__tds__AddIPAddressFilterResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__AddIPAddressFilterResponse * soap_new_set__tds__AddIPAddressFilterResponse(struct soap *soap) { _tds__AddIPAddressFilterResponse *_p = soap_instantiate__tds__AddIPAddressFilterResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__AddIPAddressFilterResponse(struct soap *soap, _tds__AddIPAddressFilterResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__AddIPAddressFilterResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__AddIPAddressFilter
#define SOAP_TYPE__tds__AddIPAddressFilter (182)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__AddIPAddressFilter(struct soap*, const char*, int, const _tds__AddIPAddressFilter *, const char*);
SOAP_FMAC3 _tds__AddIPAddressFilter * SOAP_FMAC4 soap_in__tds__AddIPAddressFilter(struct soap*, const char*, _tds__AddIPAddressFilter *, const char*);

#ifndef soap_write__tds__AddIPAddressFilter
#define soap_write__tds__AddIPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:AddIPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__AddIPAddressFilter * SOAP_FMAC4 soap_get__tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter *, const char*, const char*);

#ifndef soap_read__tds__AddIPAddressFilter
#define soap_read__tds__AddIPAddressFilter(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__AddIPAddressFilter(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__AddIPAddressFilter * SOAP_FMAC2 soap_instantiate__tds__AddIPAddressFilter(struct soap*, int, const char*, const char*, size_t*);

inline _tds__AddIPAddressFilter * soap_new__tds__AddIPAddressFilter(struct soap *soap, int n = -1) { return soap_instantiate__tds__AddIPAddressFilter(soap, n, NULL, NULL, NULL); }

inline _tds__AddIPAddressFilter * soap_new_req__tds__AddIPAddressFilter(struct soap *soap, tt__IPAddressFilter *IPAddressFilter) { _tds__AddIPAddressFilter *_p = soap_instantiate__tds__AddIPAddressFilter(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__AddIPAddressFilter::IPAddressFilter = IPAddressFilter; } return _p; }

inline _tds__AddIPAddressFilter * soap_new_set__tds__AddIPAddressFilter(struct soap *soap, tt__IPAddressFilter *IPAddressFilter) { _tds__AddIPAddressFilter *_p = soap_instantiate__tds__AddIPAddressFilter(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__AddIPAddressFilter::IPAddressFilter = IPAddressFilter; } return _p; }

inline void soap_delete__tds__AddIPAddressFilter(struct soap *soap, _tds__AddIPAddressFilter *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__AddIPAddressFilter(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetIPAddressFilterResponse
#define SOAP_TYPE__tds__SetIPAddressFilterResponse (181)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetIPAddressFilterResponse(struct soap*, const char*, int, const _tds__SetIPAddressFilterResponse *, const char*);
SOAP_FMAC3 _tds__SetIPAddressFilterResponse * SOAP_FMAC4 soap_in__tds__SetIPAddressFilterResponse(struct soap*, const char*, _tds__SetIPAddressFilterResponse *, const char*);

#ifndef soap_write__tds__SetIPAddressFilterResponse
#define soap_write__tds__SetIPAddressFilterResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetIPAddressFilterResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetIPAddressFilterResponse * SOAP_FMAC4 soap_get__tds__SetIPAddressFilterResponse(struct soap*, _tds__SetIPAddressFilterResponse *, const char*, const char*);

#ifndef soap_read__tds__SetIPAddressFilterResponse
#define soap_read__tds__SetIPAddressFilterResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetIPAddressFilterResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetIPAddressFilterResponse * SOAP_FMAC2 soap_instantiate__tds__SetIPAddressFilterResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetIPAddressFilterResponse * soap_new__tds__SetIPAddressFilterResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetIPAddressFilterResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetIPAddressFilterResponse * soap_new_req__tds__SetIPAddressFilterResponse(struct soap *soap) { _tds__SetIPAddressFilterResponse *_p = soap_instantiate__tds__SetIPAddressFilterResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SetIPAddressFilterResponse * soap_new_set__tds__SetIPAddressFilterResponse(struct soap *soap) { _tds__SetIPAddressFilterResponse *_p = soap_instantiate__tds__SetIPAddressFilterResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__SetIPAddressFilterResponse(struct soap *soap, _tds__SetIPAddressFilterResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetIPAddressFilterResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetIPAddressFilter
#define SOAP_TYPE__tds__SetIPAddressFilter (180)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetIPAddressFilter(struct soap*, const char*, int, const _tds__SetIPAddressFilter *, const char*);
SOAP_FMAC3 _tds__SetIPAddressFilter * SOAP_FMAC4 soap_in__tds__SetIPAddressFilter(struct soap*, const char*, _tds__SetIPAddressFilter *, const char*);

#ifndef soap_write__tds__SetIPAddressFilter
#define soap_write__tds__SetIPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetIPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetIPAddressFilter * SOAP_FMAC4 soap_get__tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter *, const char*, const char*);

#ifndef soap_read__tds__SetIPAddressFilter
#define soap_read__tds__SetIPAddressFilter(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetIPAddressFilter(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetIPAddressFilter * SOAP_FMAC2 soap_instantiate__tds__SetIPAddressFilter(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetIPAddressFilter * soap_new__tds__SetIPAddressFilter(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetIPAddressFilter(soap, n, NULL, NULL, NULL); }

inline _tds__SetIPAddressFilter * soap_new_req__tds__SetIPAddressFilter(struct soap *soap, tt__IPAddressFilter *IPAddressFilter) { _tds__SetIPAddressFilter *_p = soap_instantiate__tds__SetIPAddressFilter(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetIPAddressFilter::IPAddressFilter = IPAddressFilter; } return _p; }

inline _tds__SetIPAddressFilter * soap_new_set__tds__SetIPAddressFilter(struct soap *soap, tt__IPAddressFilter *IPAddressFilter) { _tds__SetIPAddressFilter *_p = soap_instantiate__tds__SetIPAddressFilter(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetIPAddressFilter::IPAddressFilter = IPAddressFilter; } return _p; }

inline void soap_delete__tds__SetIPAddressFilter(struct soap *soap, _tds__SetIPAddressFilter *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetIPAddressFilter(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetIPAddressFilterResponse
#define SOAP_TYPE__tds__GetIPAddressFilterResponse (179)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetIPAddressFilterResponse(struct soap*, const char*, int, const _tds__GetIPAddressFilterResponse *, const char*);
SOAP_FMAC3 _tds__GetIPAddressFilterResponse * SOAP_FMAC4 soap_in__tds__GetIPAddressFilterResponse(struct soap*, const char*, _tds__GetIPAddressFilterResponse *, const char*);

#ifndef soap_write__tds__GetIPAddressFilterResponse
#define soap_write__tds__GetIPAddressFilterResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetIPAddressFilterResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetIPAddressFilterResponse * SOAP_FMAC4 soap_get__tds__GetIPAddressFilterResponse(struct soap*, _tds__GetIPAddressFilterResponse *, const char*, const char*);

#ifndef soap_read__tds__GetIPAddressFilterResponse
#define soap_read__tds__GetIPAddressFilterResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetIPAddressFilterResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetIPAddressFilterResponse * SOAP_FMAC2 soap_instantiate__tds__GetIPAddressFilterResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetIPAddressFilterResponse * soap_new__tds__GetIPAddressFilterResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetIPAddressFilterResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetIPAddressFilterResponse * soap_new_req__tds__GetIPAddressFilterResponse(struct soap *soap, tt__IPAddressFilter *IPAddressFilter) { _tds__GetIPAddressFilterResponse *_p = soap_instantiate__tds__GetIPAddressFilterResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetIPAddressFilterResponse::IPAddressFilter = IPAddressFilter; } return _p; }

inline _tds__GetIPAddressFilterResponse * soap_new_set__tds__GetIPAddressFilterResponse(struct soap *soap, tt__IPAddressFilter *IPAddressFilter) { _tds__GetIPAddressFilterResponse *_p = soap_instantiate__tds__GetIPAddressFilterResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetIPAddressFilterResponse::IPAddressFilter = IPAddressFilter; } return _p; }

inline void soap_delete__tds__GetIPAddressFilterResponse(struct soap *soap, _tds__GetIPAddressFilterResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetIPAddressFilterResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetIPAddressFilter
#define SOAP_TYPE__tds__GetIPAddressFilter (178)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetIPAddressFilter(struct soap*, const char*, int, const _tds__GetIPAddressFilter *, const char*);
SOAP_FMAC3 _tds__GetIPAddressFilter * SOAP_FMAC4 soap_in__tds__GetIPAddressFilter(struct soap*, const char*, _tds__GetIPAddressFilter *, const char*);

#ifndef soap_write__tds__GetIPAddressFilter
#define soap_write__tds__GetIPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetIPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetIPAddressFilter * SOAP_FMAC4 soap_get__tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter *, const char*, const char*);

#ifndef soap_read__tds__GetIPAddressFilter
#define soap_read__tds__GetIPAddressFilter(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetIPAddressFilter(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetIPAddressFilter * SOAP_FMAC2 soap_instantiate__tds__GetIPAddressFilter(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetIPAddressFilter * soap_new__tds__GetIPAddressFilter(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetIPAddressFilter(soap, n, NULL, NULL, NULL); }

inline _tds__GetIPAddressFilter * soap_new_req__tds__GetIPAddressFilter(struct soap *soap) { _tds__GetIPAddressFilter *_p = soap_instantiate__tds__GetIPAddressFilter(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetIPAddressFilter * soap_new_set__tds__GetIPAddressFilter(struct soap *soap) { _tds__GetIPAddressFilter *_p = soap_instantiate__tds__GetIPAddressFilter(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetIPAddressFilter(struct soap *soap, _tds__GetIPAddressFilter *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetIPAddressFilter(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetZeroConfigurationResponse
#define SOAP_TYPE__tds__SetZeroConfigurationResponse (177)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetZeroConfigurationResponse(struct soap*, const char*, int, const _tds__SetZeroConfigurationResponse *, const char*);
SOAP_FMAC3 _tds__SetZeroConfigurationResponse * SOAP_FMAC4 soap_in__tds__SetZeroConfigurationResponse(struct soap*, const char*, _tds__SetZeroConfigurationResponse *, const char*);

#ifndef soap_write__tds__SetZeroConfigurationResponse
#define soap_write__tds__SetZeroConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetZeroConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetZeroConfigurationResponse * SOAP_FMAC4 soap_get__tds__SetZeroConfigurationResponse(struct soap*, _tds__SetZeroConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tds__SetZeroConfigurationResponse
#define soap_read__tds__SetZeroConfigurationResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetZeroConfigurationResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetZeroConfigurationResponse * SOAP_FMAC2 soap_instantiate__tds__SetZeroConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetZeroConfigurationResponse * soap_new__tds__SetZeroConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetZeroConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetZeroConfigurationResponse * soap_new_req__tds__SetZeroConfigurationResponse(struct soap *soap) { _tds__SetZeroConfigurationResponse *_p = soap_instantiate__tds__SetZeroConfigurationResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SetZeroConfigurationResponse * soap_new_set__tds__SetZeroConfigurationResponse(struct soap *soap) { _tds__SetZeroConfigurationResponse *_p = soap_instantiate__tds__SetZeroConfigurationResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__SetZeroConfigurationResponse(struct soap *soap, _tds__SetZeroConfigurationResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetZeroConfigurationResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetZeroConfiguration
#define SOAP_TYPE__tds__SetZeroConfiguration (176)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetZeroConfiguration(struct soap*, const char*, int, const _tds__SetZeroConfiguration *, const char*);
SOAP_FMAC3 _tds__SetZeroConfiguration * SOAP_FMAC4 soap_in__tds__SetZeroConfiguration(struct soap*, const char*, _tds__SetZeroConfiguration *, const char*);

#ifndef soap_write__tds__SetZeroConfiguration
#define soap_write__tds__SetZeroConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetZeroConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetZeroConfiguration * SOAP_FMAC4 soap_get__tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration *, const char*, const char*);

#ifndef soap_read__tds__SetZeroConfiguration
#define soap_read__tds__SetZeroConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetZeroConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetZeroConfiguration * SOAP_FMAC2 soap_instantiate__tds__SetZeroConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetZeroConfiguration * soap_new__tds__SetZeroConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetZeroConfiguration(soap, n, NULL, NULL, NULL); }

inline _tds__SetZeroConfiguration * soap_new_req__tds__SetZeroConfiguration(struct soap *soap, std::string& InterfaceToken, bool Enabled) { _tds__SetZeroConfiguration *_p = soap_instantiate__tds__SetZeroConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetZeroConfiguration::InterfaceToken = InterfaceToken; _p->_tds__SetZeroConfiguration::Enabled = Enabled; } return _p; }

inline _tds__SetZeroConfiguration * soap_new_set__tds__SetZeroConfiguration(struct soap *soap, std::string& InterfaceToken, bool Enabled) { _tds__SetZeroConfiguration *_p = soap_instantiate__tds__SetZeroConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetZeroConfiguration::InterfaceToken = InterfaceToken; _p->_tds__SetZeroConfiguration::Enabled = Enabled; } return _p; }

inline void soap_delete__tds__SetZeroConfiguration(struct soap *soap, _tds__SetZeroConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetZeroConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetZeroConfigurationResponse
#define SOAP_TYPE__tds__GetZeroConfigurationResponse (175)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetZeroConfigurationResponse(struct soap*, const char*, int, const _tds__GetZeroConfigurationResponse *, const char*);
SOAP_FMAC3 _tds__GetZeroConfigurationResponse * SOAP_FMAC4 soap_in__tds__GetZeroConfigurationResponse(struct soap*, const char*, _tds__GetZeroConfigurationResponse *, const char*);

#ifndef soap_write__tds__GetZeroConfigurationResponse
#define soap_write__tds__GetZeroConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetZeroConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetZeroConfigurationResponse * SOAP_FMAC4 soap_get__tds__GetZeroConfigurationResponse(struct soap*, _tds__GetZeroConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tds__GetZeroConfigurationResponse
#define soap_read__tds__GetZeroConfigurationResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetZeroConfigurationResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetZeroConfigurationResponse * SOAP_FMAC2 soap_instantiate__tds__GetZeroConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetZeroConfigurationResponse * soap_new__tds__GetZeroConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetZeroConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetZeroConfigurationResponse * soap_new_req__tds__GetZeroConfigurationResponse(struct soap *soap, tt__NetworkZeroConfiguration *ZeroConfiguration) { _tds__GetZeroConfigurationResponse *_p = soap_instantiate__tds__GetZeroConfigurationResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetZeroConfigurationResponse::ZeroConfiguration = ZeroConfiguration; } return _p; }

inline _tds__GetZeroConfigurationResponse * soap_new_set__tds__GetZeroConfigurationResponse(struct soap *soap, tt__NetworkZeroConfiguration *ZeroConfiguration) { _tds__GetZeroConfigurationResponse *_p = soap_instantiate__tds__GetZeroConfigurationResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetZeroConfigurationResponse::ZeroConfiguration = ZeroConfiguration; } return _p; }

inline void soap_delete__tds__GetZeroConfigurationResponse(struct soap *soap, _tds__GetZeroConfigurationResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetZeroConfigurationResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetZeroConfiguration
#define SOAP_TYPE__tds__GetZeroConfiguration (174)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetZeroConfiguration(struct soap*, const char*, int, const _tds__GetZeroConfiguration *, const char*);
SOAP_FMAC3 _tds__GetZeroConfiguration * SOAP_FMAC4 soap_in__tds__GetZeroConfiguration(struct soap*, const char*, _tds__GetZeroConfiguration *, const char*);

#ifndef soap_write__tds__GetZeroConfiguration
#define soap_write__tds__GetZeroConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetZeroConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetZeroConfiguration * SOAP_FMAC4 soap_get__tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration *, const char*, const char*);

#ifndef soap_read__tds__GetZeroConfiguration
#define soap_read__tds__GetZeroConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetZeroConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetZeroConfiguration * SOAP_FMAC2 soap_instantiate__tds__GetZeroConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetZeroConfiguration * soap_new__tds__GetZeroConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetZeroConfiguration(soap, n, NULL, NULL, NULL); }

inline _tds__GetZeroConfiguration * soap_new_req__tds__GetZeroConfiguration(struct soap *soap) { _tds__GetZeroConfiguration *_p = soap_instantiate__tds__GetZeroConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetZeroConfiguration * soap_new_set__tds__GetZeroConfiguration(struct soap *soap) { _tds__GetZeroConfiguration *_p = soap_instantiate__tds__GetZeroConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetZeroConfiguration(struct soap *soap, _tds__GetZeroConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetZeroConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetNetworkDefaultGatewayResponse
#define SOAP_TYPE__tds__SetNetworkDefaultGatewayResponse (173)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetNetworkDefaultGatewayResponse(struct soap*, const char*, int, const _tds__SetNetworkDefaultGatewayResponse *, const char*);
SOAP_FMAC3 _tds__SetNetworkDefaultGatewayResponse * SOAP_FMAC4 soap_in__tds__SetNetworkDefaultGatewayResponse(struct soap*, const char*, _tds__SetNetworkDefaultGatewayResponse *, const char*);

#ifndef soap_write__tds__SetNetworkDefaultGatewayResponse
#define soap_write__tds__SetNetworkDefaultGatewayResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetNetworkDefaultGatewayResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetNetworkDefaultGatewayResponse * SOAP_FMAC4 soap_get__tds__SetNetworkDefaultGatewayResponse(struct soap*, _tds__SetNetworkDefaultGatewayResponse *, const char*, const char*);

#ifndef soap_read__tds__SetNetworkDefaultGatewayResponse
#define soap_read__tds__SetNetworkDefaultGatewayResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetNetworkDefaultGatewayResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetNetworkDefaultGatewayResponse * SOAP_FMAC2 soap_instantiate__tds__SetNetworkDefaultGatewayResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetNetworkDefaultGatewayResponse * soap_new__tds__SetNetworkDefaultGatewayResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetNetworkDefaultGatewayResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetNetworkDefaultGatewayResponse * soap_new_req__tds__SetNetworkDefaultGatewayResponse(struct soap *soap) { _tds__SetNetworkDefaultGatewayResponse *_p = soap_instantiate__tds__SetNetworkDefaultGatewayResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SetNetworkDefaultGatewayResponse * soap_new_set__tds__SetNetworkDefaultGatewayResponse(struct soap *soap) { _tds__SetNetworkDefaultGatewayResponse *_p = soap_instantiate__tds__SetNetworkDefaultGatewayResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__SetNetworkDefaultGatewayResponse(struct soap *soap, _tds__SetNetworkDefaultGatewayResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetNetworkDefaultGatewayResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetNetworkDefaultGateway
#define SOAP_TYPE__tds__SetNetworkDefaultGateway (172)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetNetworkDefaultGateway(struct soap*, const char*, int, const _tds__SetNetworkDefaultGateway *, const char*);
SOAP_FMAC3 _tds__SetNetworkDefaultGateway * SOAP_FMAC4 soap_in__tds__SetNetworkDefaultGateway(struct soap*, const char*, _tds__SetNetworkDefaultGateway *, const char*);

#ifndef soap_write__tds__SetNetworkDefaultGateway
#define soap_write__tds__SetNetworkDefaultGateway(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetNetworkDefaultGateway", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetNetworkDefaultGateway * SOAP_FMAC4 soap_get__tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway *, const char*, const char*);

#ifndef soap_read__tds__SetNetworkDefaultGateway
#define soap_read__tds__SetNetworkDefaultGateway(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetNetworkDefaultGateway(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetNetworkDefaultGateway * SOAP_FMAC2 soap_instantiate__tds__SetNetworkDefaultGateway(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetNetworkDefaultGateway * soap_new__tds__SetNetworkDefaultGateway(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetNetworkDefaultGateway(soap, n, NULL, NULL, NULL); }

inline _tds__SetNetworkDefaultGateway * soap_new_req__tds__SetNetworkDefaultGateway(struct soap *soap) { _tds__SetNetworkDefaultGateway *_p = soap_instantiate__tds__SetNetworkDefaultGateway(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SetNetworkDefaultGateway * soap_new_set__tds__SetNetworkDefaultGateway(struct soap *soap, std::vector<std::string >& IPv4Address, std::vector<std::string >& IPv6Address) { _tds__SetNetworkDefaultGateway *_p = soap_instantiate__tds__SetNetworkDefaultGateway(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetNetworkDefaultGateway::IPv4Address = IPv4Address; _p->_tds__SetNetworkDefaultGateway::IPv6Address = IPv6Address; } return _p; }

inline void soap_delete__tds__SetNetworkDefaultGateway(struct soap *soap, _tds__SetNetworkDefaultGateway *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetNetworkDefaultGateway(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetNetworkDefaultGatewayResponse
#define SOAP_TYPE__tds__GetNetworkDefaultGatewayResponse (171)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetNetworkDefaultGatewayResponse(struct soap*, const char*, int, const _tds__GetNetworkDefaultGatewayResponse *, const char*);
SOAP_FMAC3 _tds__GetNetworkDefaultGatewayResponse * SOAP_FMAC4 soap_in__tds__GetNetworkDefaultGatewayResponse(struct soap*, const char*, _tds__GetNetworkDefaultGatewayResponse *, const char*);

#ifndef soap_write__tds__GetNetworkDefaultGatewayResponse
#define soap_write__tds__GetNetworkDefaultGatewayResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetNetworkDefaultGatewayResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetNetworkDefaultGatewayResponse * SOAP_FMAC4 soap_get__tds__GetNetworkDefaultGatewayResponse(struct soap*, _tds__GetNetworkDefaultGatewayResponse *, const char*, const char*);

#ifndef soap_read__tds__GetNetworkDefaultGatewayResponse
#define soap_read__tds__GetNetworkDefaultGatewayResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetNetworkDefaultGatewayResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetNetworkDefaultGatewayResponse * SOAP_FMAC2 soap_instantiate__tds__GetNetworkDefaultGatewayResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetNetworkDefaultGatewayResponse * soap_new__tds__GetNetworkDefaultGatewayResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetNetworkDefaultGatewayResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetNetworkDefaultGatewayResponse * soap_new_req__tds__GetNetworkDefaultGatewayResponse(struct soap *soap, tt__NetworkGateway *NetworkGateway) { _tds__GetNetworkDefaultGatewayResponse *_p = soap_instantiate__tds__GetNetworkDefaultGatewayResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetNetworkDefaultGatewayResponse::NetworkGateway = NetworkGateway; } return _p; }

inline _tds__GetNetworkDefaultGatewayResponse * soap_new_set__tds__GetNetworkDefaultGatewayResponse(struct soap *soap, tt__NetworkGateway *NetworkGateway) { _tds__GetNetworkDefaultGatewayResponse *_p = soap_instantiate__tds__GetNetworkDefaultGatewayResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetNetworkDefaultGatewayResponse::NetworkGateway = NetworkGateway; } return _p; }

inline void soap_delete__tds__GetNetworkDefaultGatewayResponse(struct soap *soap, _tds__GetNetworkDefaultGatewayResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetNetworkDefaultGatewayResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetNetworkDefaultGateway
#define SOAP_TYPE__tds__GetNetworkDefaultGateway (170)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetNetworkDefaultGateway(struct soap*, const char*, int, const _tds__GetNetworkDefaultGateway *, const char*);
SOAP_FMAC3 _tds__GetNetworkDefaultGateway * SOAP_FMAC4 soap_in__tds__GetNetworkDefaultGateway(struct soap*, const char*, _tds__GetNetworkDefaultGateway *, const char*);

#ifndef soap_write__tds__GetNetworkDefaultGateway
#define soap_write__tds__GetNetworkDefaultGateway(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetNetworkDefaultGateway", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetNetworkDefaultGateway * SOAP_FMAC4 soap_get__tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway *, const char*, const char*);

#ifndef soap_read__tds__GetNetworkDefaultGateway
#define soap_read__tds__GetNetworkDefaultGateway(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetNetworkDefaultGateway(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetNetworkDefaultGateway * SOAP_FMAC2 soap_instantiate__tds__GetNetworkDefaultGateway(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetNetworkDefaultGateway * soap_new__tds__GetNetworkDefaultGateway(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetNetworkDefaultGateway(soap, n, NULL, NULL, NULL); }

inline _tds__GetNetworkDefaultGateway * soap_new_req__tds__GetNetworkDefaultGateway(struct soap *soap) { _tds__GetNetworkDefaultGateway *_p = soap_instantiate__tds__GetNetworkDefaultGateway(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetNetworkDefaultGateway * soap_new_set__tds__GetNetworkDefaultGateway(struct soap *soap) { _tds__GetNetworkDefaultGateway *_p = soap_instantiate__tds__GetNetworkDefaultGateway(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetNetworkDefaultGateway(struct soap *soap, _tds__GetNetworkDefaultGateway *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetNetworkDefaultGateway(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetNetworkProtocolsResponse
#define SOAP_TYPE__tds__SetNetworkProtocolsResponse (169)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetNetworkProtocolsResponse(struct soap*, const char*, int, const _tds__SetNetworkProtocolsResponse *, const char*);
SOAP_FMAC3 _tds__SetNetworkProtocolsResponse * SOAP_FMAC4 soap_in__tds__SetNetworkProtocolsResponse(struct soap*, const char*, _tds__SetNetworkProtocolsResponse *, const char*);

#ifndef soap_write__tds__SetNetworkProtocolsResponse
#define soap_write__tds__SetNetworkProtocolsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetNetworkProtocolsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetNetworkProtocolsResponse * SOAP_FMAC4 soap_get__tds__SetNetworkProtocolsResponse(struct soap*, _tds__SetNetworkProtocolsResponse *, const char*, const char*);

#ifndef soap_read__tds__SetNetworkProtocolsResponse
#define soap_read__tds__SetNetworkProtocolsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetNetworkProtocolsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetNetworkProtocolsResponse * SOAP_FMAC2 soap_instantiate__tds__SetNetworkProtocolsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetNetworkProtocolsResponse * soap_new__tds__SetNetworkProtocolsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetNetworkProtocolsResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetNetworkProtocolsResponse * soap_new_req__tds__SetNetworkProtocolsResponse(struct soap *soap) { _tds__SetNetworkProtocolsResponse *_p = soap_instantiate__tds__SetNetworkProtocolsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SetNetworkProtocolsResponse * soap_new_set__tds__SetNetworkProtocolsResponse(struct soap *soap) { _tds__SetNetworkProtocolsResponse *_p = soap_instantiate__tds__SetNetworkProtocolsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__SetNetworkProtocolsResponse(struct soap *soap, _tds__SetNetworkProtocolsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetNetworkProtocolsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetNetworkProtocols
#define SOAP_TYPE__tds__SetNetworkProtocols (168)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetNetworkProtocols(struct soap*, const char*, int, const _tds__SetNetworkProtocols *, const char*);
SOAP_FMAC3 _tds__SetNetworkProtocols * SOAP_FMAC4 soap_in__tds__SetNetworkProtocols(struct soap*, const char*, _tds__SetNetworkProtocols *, const char*);

#ifndef soap_write__tds__SetNetworkProtocols
#define soap_write__tds__SetNetworkProtocols(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetNetworkProtocols", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetNetworkProtocols * SOAP_FMAC4 soap_get__tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols *, const char*, const char*);

#ifndef soap_read__tds__SetNetworkProtocols
#define soap_read__tds__SetNetworkProtocols(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetNetworkProtocols(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetNetworkProtocols * SOAP_FMAC2 soap_instantiate__tds__SetNetworkProtocols(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetNetworkProtocols * soap_new__tds__SetNetworkProtocols(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetNetworkProtocols(soap, n, NULL, NULL, NULL); }

inline _tds__SetNetworkProtocols * soap_new_req__tds__SetNetworkProtocols(struct soap *soap, std::vector<tt__NetworkProtocol * >& NetworkProtocols) { _tds__SetNetworkProtocols *_p = soap_instantiate__tds__SetNetworkProtocols(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetNetworkProtocols::NetworkProtocols = NetworkProtocols; } return _p; }

inline _tds__SetNetworkProtocols * soap_new_set__tds__SetNetworkProtocols(struct soap *soap, std::vector<tt__NetworkProtocol * >& NetworkProtocols) { _tds__SetNetworkProtocols *_p = soap_instantiate__tds__SetNetworkProtocols(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetNetworkProtocols::NetworkProtocols = NetworkProtocols; } return _p; }

inline void soap_delete__tds__SetNetworkProtocols(struct soap *soap, _tds__SetNetworkProtocols *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetNetworkProtocols(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetNetworkProtocolsResponse
#define SOAP_TYPE__tds__GetNetworkProtocolsResponse (167)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetNetworkProtocolsResponse(struct soap*, const char*, int, const _tds__GetNetworkProtocolsResponse *, const char*);
SOAP_FMAC3 _tds__GetNetworkProtocolsResponse * SOAP_FMAC4 soap_in__tds__GetNetworkProtocolsResponse(struct soap*, const char*, _tds__GetNetworkProtocolsResponse *, const char*);

#ifndef soap_write__tds__GetNetworkProtocolsResponse
#define soap_write__tds__GetNetworkProtocolsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetNetworkProtocolsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetNetworkProtocolsResponse * SOAP_FMAC4 soap_get__tds__GetNetworkProtocolsResponse(struct soap*, _tds__GetNetworkProtocolsResponse *, const char*, const char*);

#ifndef soap_read__tds__GetNetworkProtocolsResponse
#define soap_read__tds__GetNetworkProtocolsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetNetworkProtocolsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetNetworkProtocolsResponse * SOAP_FMAC2 soap_instantiate__tds__GetNetworkProtocolsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetNetworkProtocolsResponse * soap_new__tds__GetNetworkProtocolsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetNetworkProtocolsResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetNetworkProtocolsResponse * soap_new_req__tds__GetNetworkProtocolsResponse(struct soap *soap) { _tds__GetNetworkProtocolsResponse *_p = soap_instantiate__tds__GetNetworkProtocolsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetNetworkProtocolsResponse * soap_new_set__tds__GetNetworkProtocolsResponse(struct soap *soap, std::vector<tt__NetworkProtocol * >& NetworkProtocols) { _tds__GetNetworkProtocolsResponse *_p = soap_instantiate__tds__GetNetworkProtocolsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetNetworkProtocolsResponse::NetworkProtocols = NetworkProtocols; } return _p; }

inline void soap_delete__tds__GetNetworkProtocolsResponse(struct soap *soap, _tds__GetNetworkProtocolsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetNetworkProtocolsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetNetworkProtocols
#define SOAP_TYPE__tds__GetNetworkProtocols (166)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetNetworkProtocols(struct soap*, const char*, int, const _tds__GetNetworkProtocols *, const char*);
SOAP_FMAC3 _tds__GetNetworkProtocols * SOAP_FMAC4 soap_in__tds__GetNetworkProtocols(struct soap*, const char*, _tds__GetNetworkProtocols *, const char*);

#ifndef soap_write__tds__GetNetworkProtocols
#define soap_write__tds__GetNetworkProtocols(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetNetworkProtocols", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetNetworkProtocols * SOAP_FMAC4 soap_get__tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols *, const char*, const char*);

#ifndef soap_read__tds__GetNetworkProtocols
#define soap_read__tds__GetNetworkProtocols(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetNetworkProtocols(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetNetworkProtocols * SOAP_FMAC2 soap_instantiate__tds__GetNetworkProtocols(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetNetworkProtocols * soap_new__tds__GetNetworkProtocols(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetNetworkProtocols(soap, n, NULL, NULL, NULL); }

inline _tds__GetNetworkProtocols * soap_new_req__tds__GetNetworkProtocols(struct soap *soap) { _tds__GetNetworkProtocols *_p = soap_instantiate__tds__GetNetworkProtocols(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetNetworkProtocols * soap_new_set__tds__GetNetworkProtocols(struct soap *soap) { _tds__GetNetworkProtocols *_p = soap_instantiate__tds__GetNetworkProtocols(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetNetworkProtocols(struct soap *soap, _tds__GetNetworkProtocols *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetNetworkProtocols(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetNetworkInterfacesResponse
#define SOAP_TYPE__tds__SetNetworkInterfacesResponse (165)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetNetworkInterfacesResponse(struct soap*, const char*, int, const _tds__SetNetworkInterfacesResponse *, const char*);
SOAP_FMAC3 _tds__SetNetworkInterfacesResponse * SOAP_FMAC4 soap_in__tds__SetNetworkInterfacesResponse(struct soap*, const char*, _tds__SetNetworkInterfacesResponse *, const char*);

#ifndef soap_write__tds__SetNetworkInterfacesResponse
#define soap_write__tds__SetNetworkInterfacesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetNetworkInterfacesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetNetworkInterfacesResponse * SOAP_FMAC4 soap_get__tds__SetNetworkInterfacesResponse(struct soap*, _tds__SetNetworkInterfacesResponse *, const char*, const char*);

#ifndef soap_read__tds__SetNetworkInterfacesResponse
#define soap_read__tds__SetNetworkInterfacesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetNetworkInterfacesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetNetworkInterfacesResponse * SOAP_FMAC2 soap_instantiate__tds__SetNetworkInterfacesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetNetworkInterfacesResponse * soap_new__tds__SetNetworkInterfacesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetNetworkInterfacesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetNetworkInterfacesResponse * soap_new_req__tds__SetNetworkInterfacesResponse(struct soap *soap, bool RebootNeeded) { _tds__SetNetworkInterfacesResponse *_p = soap_instantiate__tds__SetNetworkInterfacesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetNetworkInterfacesResponse::RebootNeeded = RebootNeeded; } return _p; }

inline _tds__SetNetworkInterfacesResponse * soap_new_set__tds__SetNetworkInterfacesResponse(struct soap *soap, bool RebootNeeded) { _tds__SetNetworkInterfacesResponse *_p = soap_instantiate__tds__SetNetworkInterfacesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetNetworkInterfacesResponse::RebootNeeded = RebootNeeded; } return _p; }

inline void soap_delete__tds__SetNetworkInterfacesResponse(struct soap *soap, _tds__SetNetworkInterfacesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetNetworkInterfacesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetNetworkInterfaces
#define SOAP_TYPE__tds__SetNetworkInterfaces (164)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetNetworkInterfaces(struct soap*, const char*, int, const _tds__SetNetworkInterfaces *, const char*);
SOAP_FMAC3 _tds__SetNetworkInterfaces * SOAP_FMAC4 soap_in__tds__SetNetworkInterfaces(struct soap*, const char*, _tds__SetNetworkInterfaces *, const char*);

#ifndef soap_write__tds__SetNetworkInterfaces
#define soap_write__tds__SetNetworkInterfaces(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetNetworkInterfaces", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetNetworkInterfaces * SOAP_FMAC4 soap_get__tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces *, const char*, const char*);

#ifndef soap_read__tds__SetNetworkInterfaces
#define soap_read__tds__SetNetworkInterfaces(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetNetworkInterfaces(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetNetworkInterfaces * SOAP_FMAC2 soap_instantiate__tds__SetNetworkInterfaces(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetNetworkInterfaces * soap_new__tds__SetNetworkInterfaces(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetNetworkInterfaces(soap, n, NULL, NULL, NULL); }

inline _tds__SetNetworkInterfaces * soap_new_req__tds__SetNetworkInterfaces(struct soap *soap, std::string& InterfaceToken, tt__NetworkInterfaceSetConfiguration *NetworkInterface) { _tds__SetNetworkInterfaces *_p = soap_instantiate__tds__SetNetworkInterfaces(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetNetworkInterfaces::InterfaceToken = InterfaceToken; _p->_tds__SetNetworkInterfaces::NetworkInterface = NetworkInterface; } return _p; }

inline _tds__SetNetworkInterfaces * soap_new_set__tds__SetNetworkInterfaces(struct soap *soap, std::string& InterfaceToken, tt__NetworkInterfaceSetConfiguration *NetworkInterface) { _tds__SetNetworkInterfaces *_p = soap_instantiate__tds__SetNetworkInterfaces(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetNetworkInterfaces::InterfaceToken = InterfaceToken; _p->_tds__SetNetworkInterfaces::NetworkInterface = NetworkInterface; } return _p; }

inline void soap_delete__tds__SetNetworkInterfaces(struct soap *soap, _tds__SetNetworkInterfaces *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetNetworkInterfaces(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetNetworkInterfacesResponse
#define SOAP_TYPE__tds__GetNetworkInterfacesResponse (163)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetNetworkInterfacesResponse(struct soap*, const char*, int, const _tds__GetNetworkInterfacesResponse *, const char*);
SOAP_FMAC3 _tds__GetNetworkInterfacesResponse * SOAP_FMAC4 soap_in__tds__GetNetworkInterfacesResponse(struct soap*, const char*, _tds__GetNetworkInterfacesResponse *, const char*);

#ifndef soap_write__tds__GetNetworkInterfacesResponse
#define soap_write__tds__GetNetworkInterfacesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetNetworkInterfacesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetNetworkInterfacesResponse * SOAP_FMAC4 soap_get__tds__GetNetworkInterfacesResponse(struct soap*, _tds__GetNetworkInterfacesResponse *, const char*, const char*);

#ifndef soap_read__tds__GetNetworkInterfacesResponse
#define soap_read__tds__GetNetworkInterfacesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetNetworkInterfacesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetNetworkInterfacesResponse * SOAP_FMAC2 soap_instantiate__tds__GetNetworkInterfacesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetNetworkInterfacesResponse * soap_new__tds__GetNetworkInterfacesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetNetworkInterfacesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetNetworkInterfacesResponse * soap_new_req__tds__GetNetworkInterfacesResponse(struct soap *soap, std::vector<tt__NetworkInterface * >& NetworkInterfaces) { _tds__GetNetworkInterfacesResponse *_p = soap_instantiate__tds__GetNetworkInterfacesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetNetworkInterfacesResponse::NetworkInterfaces = NetworkInterfaces; } return _p; }

inline _tds__GetNetworkInterfacesResponse * soap_new_set__tds__GetNetworkInterfacesResponse(struct soap *soap, std::vector<tt__NetworkInterface * >& NetworkInterfaces) { _tds__GetNetworkInterfacesResponse *_p = soap_instantiate__tds__GetNetworkInterfacesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetNetworkInterfacesResponse::NetworkInterfaces = NetworkInterfaces; } return _p; }

inline void soap_delete__tds__GetNetworkInterfacesResponse(struct soap *soap, _tds__GetNetworkInterfacesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetNetworkInterfacesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetNetworkInterfaces
#define SOAP_TYPE__tds__GetNetworkInterfaces (162)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetNetworkInterfaces(struct soap*, const char*, int, const _tds__GetNetworkInterfaces *, const char*);
SOAP_FMAC3 _tds__GetNetworkInterfaces * SOAP_FMAC4 soap_in__tds__GetNetworkInterfaces(struct soap*, const char*, _tds__GetNetworkInterfaces *, const char*);

#ifndef soap_write__tds__GetNetworkInterfaces
#define soap_write__tds__GetNetworkInterfaces(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetNetworkInterfaces", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetNetworkInterfaces * SOAP_FMAC4 soap_get__tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces *, const char*, const char*);

#ifndef soap_read__tds__GetNetworkInterfaces
#define soap_read__tds__GetNetworkInterfaces(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetNetworkInterfaces(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetNetworkInterfaces * SOAP_FMAC2 soap_instantiate__tds__GetNetworkInterfaces(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetNetworkInterfaces * soap_new__tds__GetNetworkInterfaces(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetNetworkInterfaces(soap, n, NULL, NULL, NULL); }

inline _tds__GetNetworkInterfaces * soap_new_req__tds__GetNetworkInterfaces(struct soap *soap) { _tds__GetNetworkInterfaces *_p = soap_instantiate__tds__GetNetworkInterfaces(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetNetworkInterfaces * soap_new_set__tds__GetNetworkInterfaces(struct soap *soap) { _tds__GetNetworkInterfaces *_p = soap_instantiate__tds__GetNetworkInterfaces(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetNetworkInterfaces(struct soap *soap, _tds__GetNetworkInterfaces *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetNetworkInterfaces(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetDynamicDNSResponse
#define SOAP_TYPE__tds__SetDynamicDNSResponse (161)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetDynamicDNSResponse(struct soap*, const char*, int, const _tds__SetDynamicDNSResponse *, const char*);
SOAP_FMAC3 _tds__SetDynamicDNSResponse * SOAP_FMAC4 soap_in__tds__SetDynamicDNSResponse(struct soap*, const char*, _tds__SetDynamicDNSResponse *, const char*);

#ifndef soap_write__tds__SetDynamicDNSResponse
#define soap_write__tds__SetDynamicDNSResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetDynamicDNSResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDynamicDNSResponse * SOAP_FMAC4 soap_get__tds__SetDynamicDNSResponse(struct soap*, _tds__SetDynamicDNSResponse *, const char*, const char*);

#ifndef soap_read__tds__SetDynamicDNSResponse
#define soap_read__tds__SetDynamicDNSResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetDynamicDNSResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetDynamicDNSResponse * SOAP_FMAC2 soap_instantiate__tds__SetDynamicDNSResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetDynamicDNSResponse * soap_new__tds__SetDynamicDNSResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetDynamicDNSResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetDynamicDNSResponse * soap_new_req__tds__SetDynamicDNSResponse(struct soap *soap) { _tds__SetDynamicDNSResponse *_p = soap_instantiate__tds__SetDynamicDNSResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SetDynamicDNSResponse * soap_new_set__tds__SetDynamicDNSResponse(struct soap *soap) { _tds__SetDynamicDNSResponse *_p = soap_instantiate__tds__SetDynamicDNSResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__SetDynamicDNSResponse(struct soap *soap, _tds__SetDynamicDNSResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetDynamicDNSResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetDynamicDNS
#define SOAP_TYPE__tds__SetDynamicDNS (160)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetDynamicDNS(struct soap*, const char*, int, const _tds__SetDynamicDNS *, const char*);
SOAP_FMAC3 _tds__SetDynamicDNS * SOAP_FMAC4 soap_in__tds__SetDynamicDNS(struct soap*, const char*, _tds__SetDynamicDNS *, const char*);

#ifndef soap_write__tds__SetDynamicDNS
#define soap_write__tds__SetDynamicDNS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetDynamicDNS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDynamicDNS * SOAP_FMAC4 soap_get__tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS *, const char*, const char*);

#ifndef soap_read__tds__SetDynamicDNS
#define soap_read__tds__SetDynamicDNS(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetDynamicDNS(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetDynamicDNS * SOAP_FMAC2 soap_instantiate__tds__SetDynamicDNS(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetDynamicDNS * soap_new__tds__SetDynamicDNS(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetDynamicDNS(soap, n, NULL, NULL, NULL); }

inline _tds__SetDynamicDNS * soap_new_req__tds__SetDynamicDNS(struct soap *soap, enum tt__DynamicDNSType Type) { _tds__SetDynamicDNS *_p = soap_instantiate__tds__SetDynamicDNS(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetDynamicDNS::Type = Type; } return _p; }

inline _tds__SetDynamicDNS * soap_new_set__tds__SetDynamicDNS(struct soap *soap, enum tt__DynamicDNSType Type, std::string *Name, LONG64 *TTL) { _tds__SetDynamicDNS *_p = soap_instantiate__tds__SetDynamicDNS(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetDynamicDNS::Type = Type; _p->_tds__SetDynamicDNS::Name = Name; _p->_tds__SetDynamicDNS::TTL = TTL; } return _p; }

inline void soap_delete__tds__SetDynamicDNS(struct soap *soap, _tds__SetDynamicDNS *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetDynamicDNS(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetDynamicDNSResponse
#define SOAP_TYPE__tds__GetDynamicDNSResponse (159)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDynamicDNSResponse(struct soap*, const char*, int, const _tds__GetDynamicDNSResponse *, const char*);
SOAP_FMAC3 _tds__GetDynamicDNSResponse * SOAP_FMAC4 soap_in__tds__GetDynamicDNSResponse(struct soap*, const char*, _tds__GetDynamicDNSResponse *, const char*);

#ifndef soap_write__tds__GetDynamicDNSResponse
#define soap_write__tds__GetDynamicDNSResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetDynamicDNSResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDynamicDNSResponse * SOAP_FMAC4 soap_get__tds__GetDynamicDNSResponse(struct soap*, _tds__GetDynamicDNSResponse *, const char*, const char*);

#ifndef soap_read__tds__GetDynamicDNSResponse
#define soap_read__tds__GetDynamicDNSResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetDynamicDNSResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetDynamicDNSResponse * SOAP_FMAC2 soap_instantiate__tds__GetDynamicDNSResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDynamicDNSResponse * soap_new__tds__GetDynamicDNSResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDynamicDNSResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetDynamicDNSResponse * soap_new_req__tds__GetDynamicDNSResponse(struct soap *soap, tt__DynamicDNSInformation *DynamicDNSInformation) { _tds__GetDynamicDNSResponse *_p = soap_instantiate__tds__GetDynamicDNSResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetDynamicDNSResponse::DynamicDNSInformation = DynamicDNSInformation; } return _p; }

inline _tds__GetDynamicDNSResponse * soap_new_set__tds__GetDynamicDNSResponse(struct soap *soap, tt__DynamicDNSInformation *DynamicDNSInformation) { _tds__GetDynamicDNSResponse *_p = soap_instantiate__tds__GetDynamicDNSResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetDynamicDNSResponse::DynamicDNSInformation = DynamicDNSInformation; } return _p; }

inline void soap_delete__tds__GetDynamicDNSResponse(struct soap *soap, _tds__GetDynamicDNSResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetDynamicDNSResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetDynamicDNS
#define SOAP_TYPE__tds__GetDynamicDNS (158)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDynamicDNS(struct soap*, const char*, int, const _tds__GetDynamicDNS *, const char*);
SOAP_FMAC3 _tds__GetDynamicDNS * SOAP_FMAC4 soap_in__tds__GetDynamicDNS(struct soap*, const char*, _tds__GetDynamicDNS *, const char*);

#ifndef soap_write__tds__GetDynamicDNS
#define soap_write__tds__GetDynamicDNS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetDynamicDNS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDynamicDNS * SOAP_FMAC4 soap_get__tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS *, const char*, const char*);

#ifndef soap_read__tds__GetDynamicDNS
#define soap_read__tds__GetDynamicDNS(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetDynamicDNS(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetDynamicDNS * SOAP_FMAC2 soap_instantiate__tds__GetDynamicDNS(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDynamicDNS * soap_new__tds__GetDynamicDNS(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDynamicDNS(soap, n, NULL, NULL, NULL); }

inline _tds__GetDynamicDNS * soap_new_req__tds__GetDynamicDNS(struct soap *soap) { _tds__GetDynamicDNS *_p = soap_instantiate__tds__GetDynamicDNS(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetDynamicDNS * soap_new_set__tds__GetDynamicDNS(struct soap *soap) { _tds__GetDynamicDNS *_p = soap_instantiate__tds__GetDynamicDNS(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetDynamicDNS(struct soap *soap, _tds__GetDynamicDNS *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetDynamicDNS(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetNTPResponse
#define SOAP_TYPE__tds__SetNTPResponse (157)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetNTPResponse(struct soap*, const char*, int, const _tds__SetNTPResponse *, const char*);
SOAP_FMAC3 _tds__SetNTPResponse * SOAP_FMAC4 soap_in__tds__SetNTPResponse(struct soap*, const char*, _tds__SetNTPResponse *, const char*);

#ifndef soap_write__tds__SetNTPResponse
#define soap_write__tds__SetNTPResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetNTPResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetNTPResponse * SOAP_FMAC4 soap_get__tds__SetNTPResponse(struct soap*, _tds__SetNTPResponse *, const char*, const char*);

#ifndef soap_read__tds__SetNTPResponse
#define soap_read__tds__SetNTPResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetNTPResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetNTPResponse * SOAP_FMAC2 soap_instantiate__tds__SetNTPResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetNTPResponse * soap_new__tds__SetNTPResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetNTPResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetNTPResponse * soap_new_req__tds__SetNTPResponse(struct soap *soap) { _tds__SetNTPResponse *_p = soap_instantiate__tds__SetNTPResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SetNTPResponse * soap_new_set__tds__SetNTPResponse(struct soap *soap) { _tds__SetNTPResponse *_p = soap_instantiate__tds__SetNTPResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__SetNTPResponse(struct soap *soap, _tds__SetNTPResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetNTPResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetNTP
#define SOAP_TYPE__tds__SetNTP (156)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetNTP(struct soap*, const char*, int, const _tds__SetNTP *, const char*);
SOAP_FMAC3 _tds__SetNTP * SOAP_FMAC4 soap_in__tds__SetNTP(struct soap*, const char*, _tds__SetNTP *, const char*);

#ifndef soap_write__tds__SetNTP
#define soap_write__tds__SetNTP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetNTP", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetNTP * SOAP_FMAC4 soap_get__tds__SetNTP(struct soap*, _tds__SetNTP *, const char*, const char*);

#ifndef soap_read__tds__SetNTP
#define soap_read__tds__SetNTP(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetNTP(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetNTP * SOAP_FMAC2 soap_instantiate__tds__SetNTP(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetNTP * soap_new__tds__SetNTP(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetNTP(soap, n, NULL, NULL, NULL); }

inline _tds__SetNTP * soap_new_req__tds__SetNTP(struct soap *soap, bool FromDHCP) { _tds__SetNTP *_p = soap_instantiate__tds__SetNTP(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetNTP::FromDHCP = FromDHCP; } return _p; }

inline _tds__SetNTP * soap_new_set__tds__SetNTP(struct soap *soap, bool FromDHCP, std::vector<tt__NetworkHost * >& NTPManual) { _tds__SetNTP *_p = soap_instantiate__tds__SetNTP(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetNTP::FromDHCP = FromDHCP; _p->_tds__SetNTP::NTPManual = NTPManual; } return _p; }

inline void soap_delete__tds__SetNTP(struct soap *soap, _tds__SetNTP *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetNTP(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetNTPResponse
#define SOAP_TYPE__tds__GetNTPResponse (155)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetNTPResponse(struct soap*, const char*, int, const _tds__GetNTPResponse *, const char*);
SOAP_FMAC3 _tds__GetNTPResponse * SOAP_FMAC4 soap_in__tds__GetNTPResponse(struct soap*, const char*, _tds__GetNTPResponse *, const char*);

#ifndef soap_write__tds__GetNTPResponse
#define soap_write__tds__GetNTPResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetNTPResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetNTPResponse * SOAP_FMAC4 soap_get__tds__GetNTPResponse(struct soap*, _tds__GetNTPResponse *, const char*, const char*);

#ifndef soap_read__tds__GetNTPResponse
#define soap_read__tds__GetNTPResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetNTPResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetNTPResponse * SOAP_FMAC2 soap_instantiate__tds__GetNTPResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetNTPResponse * soap_new__tds__GetNTPResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetNTPResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetNTPResponse * soap_new_req__tds__GetNTPResponse(struct soap *soap, tt__NTPInformation *NTPInformation) { _tds__GetNTPResponse *_p = soap_instantiate__tds__GetNTPResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetNTPResponse::NTPInformation = NTPInformation; } return _p; }

inline _tds__GetNTPResponse * soap_new_set__tds__GetNTPResponse(struct soap *soap, tt__NTPInformation *NTPInformation) { _tds__GetNTPResponse *_p = soap_instantiate__tds__GetNTPResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetNTPResponse::NTPInformation = NTPInformation; } return _p; }

inline void soap_delete__tds__GetNTPResponse(struct soap *soap, _tds__GetNTPResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetNTPResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetNTP
#define SOAP_TYPE__tds__GetNTP (154)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetNTP(struct soap*, const char*, int, const _tds__GetNTP *, const char*);
SOAP_FMAC3 _tds__GetNTP * SOAP_FMAC4 soap_in__tds__GetNTP(struct soap*, const char*, _tds__GetNTP *, const char*);

#ifndef soap_write__tds__GetNTP
#define soap_write__tds__GetNTP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetNTP", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetNTP * SOAP_FMAC4 soap_get__tds__GetNTP(struct soap*, _tds__GetNTP *, const char*, const char*);

#ifndef soap_read__tds__GetNTP
#define soap_read__tds__GetNTP(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetNTP(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetNTP * SOAP_FMAC2 soap_instantiate__tds__GetNTP(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetNTP * soap_new__tds__GetNTP(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetNTP(soap, n, NULL, NULL, NULL); }

inline _tds__GetNTP * soap_new_req__tds__GetNTP(struct soap *soap) { _tds__GetNTP *_p = soap_instantiate__tds__GetNTP(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetNTP * soap_new_set__tds__GetNTP(struct soap *soap) { _tds__GetNTP *_p = soap_instantiate__tds__GetNTP(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetNTP(struct soap *soap, _tds__GetNTP *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetNTP(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetDNSResponse
#define SOAP_TYPE__tds__SetDNSResponse (153)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetDNSResponse(struct soap*, const char*, int, const _tds__SetDNSResponse *, const char*);
SOAP_FMAC3 _tds__SetDNSResponse * SOAP_FMAC4 soap_in__tds__SetDNSResponse(struct soap*, const char*, _tds__SetDNSResponse *, const char*);

#ifndef soap_write__tds__SetDNSResponse
#define soap_write__tds__SetDNSResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetDNSResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDNSResponse * SOAP_FMAC4 soap_get__tds__SetDNSResponse(struct soap*, _tds__SetDNSResponse *, const char*, const char*);

#ifndef soap_read__tds__SetDNSResponse
#define soap_read__tds__SetDNSResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetDNSResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetDNSResponse * SOAP_FMAC2 soap_instantiate__tds__SetDNSResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetDNSResponse * soap_new__tds__SetDNSResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetDNSResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetDNSResponse * soap_new_req__tds__SetDNSResponse(struct soap *soap) { _tds__SetDNSResponse *_p = soap_instantiate__tds__SetDNSResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SetDNSResponse * soap_new_set__tds__SetDNSResponse(struct soap *soap) { _tds__SetDNSResponse *_p = soap_instantiate__tds__SetDNSResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__SetDNSResponse(struct soap *soap, _tds__SetDNSResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetDNSResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetDNS
#define SOAP_TYPE__tds__SetDNS (152)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetDNS(struct soap*, const char*, int, const _tds__SetDNS *, const char*);
SOAP_FMAC3 _tds__SetDNS * SOAP_FMAC4 soap_in__tds__SetDNS(struct soap*, const char*, _tds__SetDNS *, const char*);

#ifndef soap_write__tds__SetDNS
#define soap_write__tds__SetDNS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetDNS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDNS * SOAP_FMAC4 soap_get__tds__SetDNS(struct soap*, _tds__SetDNS *, const char*, const char*);

#ifndef soap_read__tds__SetDNS
#define soap_read__tds__SetDNS(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetDNS(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetDNS * SOAP_FMAC2 soap_instantiate__tds__SetDNS(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetDNS * soap_new__tds__SetDNS(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetDNS(soap, n, NULL, NULL, NULL); }

inline _tds__SetDNS * soap_new_req__tds__SetDNS(struct soap *soap, bool FromDHCP) { _tds__SetDNS *_p = soap_instantiate__tds__SetDNS(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetDNS::FromDHCP = FromDHCP; } return _p; }

inline _tds__SetDNS * soap_new_set__tds__SetDNS(struct soap *soap, bool FromDHCP, std::vector<std::string >& SearchDomain, std::vector<tt__IPAddress * >& DNSManual) { _tds__SetDNS *_p = soap_instantiate__tds__SetDNS(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetDNS::FromDHCP = FromDHCP; _p->_tds__SetDNS::SearchDomain = SearchDomain; _p->_tds__SetDNS::DNSManual = DNSManual; } return _p; }

inline void soap_delete__tds__SetDNS(struct soap *soap, _tds__SetDNS *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetDNS(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetDNSResponse
#define SOAP_TYPE__tds__GetDNSResponse (151)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDNSResponse(struct soap*, const char*, int, const _tds__GetDNSResponse *, const char*);
SOAP_FMAC3 _tds__GetDNSResponse * SOAP_FMAC4 soap_in__tds__GetDNSResponse(struct soap*, const char*, _tds__GetDNSResponse *, const char*);

#ifndef soap_write__tds__GetDNSResponse
#define soap_write__tds__GetDNSResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetDNSResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDNSResponse * SOAP_FMAC4 soap_get__tds__GetDNSResponse(struct soap*, _tds__GetDNSResponse *, const char*, const char*);

#ifndef soap_read__tds__GetDNSResponse
#define soap_read__tds__GetDNSResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetDNSResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetDNSResponse * SOAP_FMAC2 soap_instantiate__tds__GetDNSResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDNSResponse * soap_new__tds__GetDNSResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDNSResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetDNSResponse * soap_new_req__tds__GetDNSResponse(struct soap *soap, tt__DNSInformation *DNSInformation) { _tds__GetDNSResponse *_p = soap_instantiate__tds__GetDNSResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetDNSResponse::DNSInformation = DNSInformation; } return _p; }

inline _tds__GetDNSResponse * soap_new_set__tds__GetDNSResponse(struct soap *soap, tt__DNSInformation *DNSInformation) { _tds__GetDNSResponse *_p = soap_instantiate__tds__GetDNSResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetDNSResponse::DNSInformation = DNSInformation; } return _p; }

inline void soap_delete__tds__GetDNSResponse(struct soap *soap, _tds__GetDNSResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetDNSResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetDNS
#define SOAP_TYPE__tds__GetDNS (150)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDNS(struct soap*, const char*, int, const _tds__GetDNS *, const char*);
SOAP_FMAC3 _tds__GetDNS * SOAP_FMAC4 soap_in__tds__GetDNS(struct soap*, const char*, _tds__GetDNS *, const char*);

#ifndef soap_write__tds__GetDNS
#define soap_write__tds__GetDNS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetDNS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDNS * SOAP_FMAC4 soap_get__tds__GetDNS(struct soap*, _tds__GetDNS *, const char*, const char*);

#ifndef soap_read__tds__GetDNS
#define soap_read__tds__GetDNS(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetDNS(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetDNS * SOAP_FMAC2 soap_instantiate__tds__GetDNS(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDNS * soap_new__tds__GetDNS(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDNS(soap, n, NULL, NULL, NULL); }

inline _tds__GetDNS * soap_new_req__tds__GetDNS(struct soap *soap) { _tds__GetDNS *_p = soap_instantiate__tds__GetDNS(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetDNS * soap_new_set__tds__GetDNS(struct soap *soap) { _tds__GetDNS *_p = soap_instantiate__tds__GetDNS(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetDNS(struct soap *soap, _tds__GetDNS *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetDNS(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetHostnameFromDHCPResponse
#define SOAP_TYPE__tds__SetHostnameFromDHCPResponse (149)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetHostnameFromDHCPResponse(struct soap*, const char*, int, const _tds__SetHostnameFromDHCPResponse *, const char*);
SOAP_FMAC3 _tds__SetHostnameFromDHCPResponse * SOAP_FMAC4 soap_in__tds__SetHostnameFromDHCPResponse(struct soap*, const char*, _tds__SetHostnameFromDHCPResponse *, const char*);

#ifndef soap_write__tds__SetHostnameFromDHCPResponse
#define soap_write__tds__SetHostnameFromDHCPResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetHostnameFromDHCPResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetHostnameFromDHCPResponse * SOAP_FMAC4 soap_get__tds__SetHostnameFromDHCPResponse(struct soap*, _tds__SetHostnameFromDHCPResponse *, const char*, const char*);

#ifndef soap_read__tds__SetHostnameFromDHCPResponse
#define soap_read__tds__SetHostnameFromDHCPResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetHostnameFromDHCPResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetHostnameFromDHCPResponse * SOAP_FMAC2 soap_instantiate__tds__SetHostnameFromDHCPResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetHostnameFromDHCPResponse * soap_new__tds__SetHostnameFromDHCPResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetHostnameFromDHCPResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetHostnameFromDHCPResponse * soap_new_req__tds__SetHostnameFromDHCPResponse(struct soap *soap, bool RebootNeeded) { _tds__SetHostnameFromDHCPResponse *_p = soap_instantiate__tds__SetHostnameFromDHCPResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetHostnameFromDHCPResponse::RebootNeeded = RebootNeeded; } return _p; }

inline _tds__SetHostnameFromDHCPResponse * soap_new_set__tds__SetHostnameFromDHCPResponse(struct soap *soap, bool RebootNeeded) { _tds__SetHostnameFromDHCPResponse *_p = soap_instantiate__tds__SetHostnameFromDHCPResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetHostnameFromDHCPResponse::RebootNeeded = RebootNeeded; } return _p; }

inline void soap_delete__tds__SetHostnameFromDHCPResponse(struct soap *soap, _tds__SetHostnameFromDHCPResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetHostnameFromDHCPResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetHostnameFromDHCP
#define SOAP_TYPE__tds__SetHostnameFromDHCP (148)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetHostnameFromDHCP(struct soap*, const char*, int, const _tds__SetHostnameFromDHCP *, const char*);
SOAP_FMAC3 _tds__SetHostnameFromDHCP * SOAP_FMAC4 soap_in__tds__SetHostnameFromDHCP(struct soap*, const char*, _tds__SetHostnameFromDHCP *, const char*);

#ifndef soap_write__tds__SetHostnameFromDHCP
#define soap_write__tds__SetHostnameFromDHCP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetHostnameFromDHCP", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetHostnameFromDHCP * SOAP_FMAC4 soap_get__tds__SetHostnameFromDHCP(struct soap*, _tds__SetHostnameFromDHCP *, const char*, const char*);

#ifndef soap_read__tds__SetHostnameFromDHCP
#define soap_read__tds__SetHostnameFromDHCP(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetHostnameFromDHCP(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetHostnameFromDHCP * SOAP_FMAC2 soap_instantiate__tds__SetHostnameFromDHCP(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetHostnameFromDHCP * soap_new__tds__SetHostnameFromDHCP(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetHostnameFromDHCP(soap, n, NULL, NULL, NULL); }

inline _tds__SetHostnameFromDHCP * soap_new_req__tds__SetHostnameFromDHCP(struct soap *soap, bool FromDHCP) { _tds__SetHostnameFromDHCP *_p = soap_instantiate__tds__SetHostnameFromDHCP(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetHostnameFromDHCP::FromDHCP = FromDHCP; } return _p; }

inline _tds__SetHostnameFromDHCP * soap_new_set__tds__SetHostnameFromDHCP(struct soap *soap, bool FromDHCP) { _tds__SetHostnameFromDHCP *_p = soap_instantiate__tds__SetHostnameFromDHCP(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetHostnameFromDHCP::FromDHCP = FromDHCP; } return _p; }

inline void soap_delete__tds__SetHostnameFromDHCP(struct soap *soap, _tds__SetHostnameFromDHCP *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetHostnameFromDHCP(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetHostnameResponse
#define SOAP_TYPE__tds__SetHostnameResponse (147)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetHostnameResponse(struct soap*, const char*, int, const _tds__SetHostnameResponse *, const char*);
SOAP_FMAC3 _tds__SetHostnameResponse * SOAP_FMAC4 soap_in__tds__SetHostnameResponse(struct soap*, const char*, _tds__SetHostnameResponse *, const char*);

#ifndef soap_write__tds__SetHostnameResponse
#define soap_write__tds__SetHostnameResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetHostnameResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetHostnameResponse * SOAP_FMAC4 soap_get__tds__SetHostnameResponse(struct soap*, _tds__SetHostnameResponse *, const char*, const char*);

#ifndef soap_read__tds__SetHostnameResponse
#define soap_read__tds__SetHostnameResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetHostnameResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetHostnameResponse * SOAP_FMAC2 soap_instantiate__tds__SetHostnameResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetHostnameResponse * soap_new__tds__SetHostnameResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetHostnameResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetHostnameResponse * soap_new_req__tds__SetHostnameResponse(struct soap *soap) { _tds__SetHostnameResponse *_p = soap_instantiate__tds__SetHostnameResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SetHostnameResponse * soap_new_set__tds__SetHostnameResponse(struct soap *soap) { _tds__SetHostnameResponse *_p = soap_instantiate__tds__SetHostnameResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__SetHostnameResponse(struct soap *soap, _tds__SetHostnameResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetHostnameResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetHostname
#define SOAP_TYPE__tds__SetHostname (146)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetHostname(struct soap*, const char*, int, const _tds__SetHostname *, const char*);
SOAP_FMAC3 _tds__SetHostname * SOAP_FMAC4 soap_in__tds__SetHostname(struct soap*, const char*, _tds__SetHostname *, const char*);

#ifndef soap_write__tds__SetHostname
#define soap_write__tds__SetHostname(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetHostname", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetHostname * SOAP_FMAC4 soap_get__tds__SetHostname(struct soap*, _tds__SetHostname *, const char*, const char*);

#ifndef soap_read__tds__SetHostname
#define soap_read__tds__SetHostname(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetHostname(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetHostname * SOAP_FMAC2 soap_instantiate__tds__SetHostname(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetHostname * soap_new__tds__SetHostname(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetHostname(soap, n, NULL, NULL, NULL); }

inline _tds__SetHostname * soap_new_req__tds__SetHostname(struct soap *soap, std::string& Name) { _tds__SetHostname *_p = soap_instantiate__tds__SetHostname(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetHostname::Name = Name; } return _p; }

inline _tds__SetHostname * soap_new_set__tds__SetHostname(struct soap *soap, std::string& Name) { _tds__SetHostname *_p = soap_instantiate__tds__SetHostname(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetHostname::Name = Name; } return _p; }

inline void soap_delete__tds__SetHostname(struct soap *soap, _tds__SetHostname *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetHostname(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetHostnameResponse
#define SOAP_TYPE__tds__GetHostnameResponse (145)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetHostnameResponse(struct soap*, const char*, int, const _tds__GetHostnameResponse *, const char*);
SOAP_FMAC3 _tds__GetHostnameResponse * SOAP_FMAC4 soap_in__tds__GetHostnameResponse(struct soap*, const char*, _tds__GetHostnameResponse *, const char*);

#ifndef soap_write__tds__GetHostnameResponse
#define soap_write__tds__GetHostnameResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetHostnameResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetHostnameResponse * SOAP_FMAC4 soap_get__tds__GetHostnameResponse(struct soap*, _tds__GetHostnameResponse *, const char*, const char*);

#ifndef soap_read__tds__GetHostnameResponse
#define soap_read__tds__GetHostnameResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetHostnameResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetHostnameResponse * SOAP_FMAC2 soap_instantiate__tds__GetHostnameResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetHostnameResponse * soap_new__tds__GetHostnameResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetHostnameResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetHostnameResponse * soap_new_req__tds__GetHostnameResponse(struct soap *soap, tt__HostnameInformation *HostnameInformation) { _tds__GetHostnameResponse *_p = soap_instantiate__tds__GetHostnameResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetHostnameResponse::HostnameInformation = HostnameInformation; } return _p; }

inline _tds__GetHostnameResponse * soap_new_set__tds__GetHostnameResponse(struct soap *soap, tt__HostnameInformation *HostnameInformation) { _tds__GetHostnameResponse *_p = soap_instantiate__tds__GetHostnameResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetHostnameResponse::HostnameInformation = HostnameInformation; } return _p; }

inline void soap_delete__tds__GetHostnameResponse(struct soap *soap, _tds__GetHostnameResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetHostnameResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetHostname
#define SOAP_TYPE__tds__GetHostname (144)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetHostname(struct soap*, const char*, int, const _tds__GetHostname *, const char*);
SOAP_FMAC3 _tds__GetHostname * SOAP_FMAC4 soap_in__tds__GetHostname(struct soap*, const char*, _tds__GetHostname *, const char*);

#ifndef soap_write__tds__GetHostname
#define soap_write__tds__GetHostname(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetHostname", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetHostname * SOAP_FMAC4 soap_get__tds__GetHostname(struct soap*, _tds__GetHostname *, const char*, const char*);

#ifndef soap_read__tds__GetHostname
#define soap_read__tds__GetHostname(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetHostname(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetHostname * SOAP_FMAC2 soap_instantiate__tds__GetHostname(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetHostname * soap_new__tds__GetHostname(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetHostname(soap, n, NULL, NULL, NULL); }

inline _tds__GetHostname * soap_new_req__tds__GetHostname(struct soap *soap) { _tds__GetHostname *_p = soap_instantiate__tds__GetHostname(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetHostname * soap_new_set__tds__GetHostname(struct soap *soap) { _tds__GetHostname *_p = soap_instantiate__tds__GetHostname(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetHostname(struct soap *soap, _tds__GetHostname *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetHostname(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetCapabilitiesResponse
#define SOAP_TYPE__tds__GetCapabilitiesResponse (143)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetCapabilitiesResponse(struct soap*, const char*, int, const _tds__GetCapabilitiesResponse *, const char*);
SOAP_FMAC3 _tds__GetCapabilitiesResponse * SOAP_FMAC4 soap_in__tds__GetCapabilitiesResponse(struct soap*, const char*, _tds__GetCapabilitiesResponse *, const char*);

#ifndef soap_write__tds__GetCapabilitiesResponse
#define soap_write__tds__GetCapabilitiesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetCapabilitiesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCapabilitiesResponse * SOAP_FMAC4 soap_get__tds__GetCapabilitiesResponse(struct soap*, _tds__GetCapabilitiesResponse *, const char*, const char*);

#ifndef soap_read__tds__GetCapabilitiesResponse
#define soap_read__tds__GetCapabilitiesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetCapabilitiesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetCapabilitiesResponse * SOAP_FMAC2 soap_instantiate__tds__GetCapabilitiesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetCapabilitiesResponse * soap_new__tds__GetCapabilitiesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetCapabilitiesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetCapabilitiesResponse * soap_new_req__tds__GetCapabilitiesResponse(struct soap *soap, tt__Capabilities *Capabilities) { _tds__GetCapabilitiesResponse *_p = soap_instantiate__tds__GetCapabilitiesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetCapabilitiesResponse::Capabilities = Capabilities; } return _p; }

inline _tds__GetCapabilitiesResponse * soap_new_set__tds__GetCapabilitiesResponse(struct soap *soap, tt__Capabilities *Capabilities) { _tds__GetCapabilitiesResponse *_p = soap_instantiate__tds__GetCapabilitiesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetCapabilitiesResponse::Capabilities = Capabilities; } return _p; }

inline void soap_delete__tds__GetCapabilitiesResponse(struct soap *soap, _tds__GetCapabilitiesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetCapabilitiesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetCapabilities
#define SOAP_TYPE__tds__GetCapabilities (142)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetCapabilities(struct soap*, const char*, int, const _tds__GetCapabilities *, const char*);
SOAP_FMAC3 _tds__GetCapabilities * SOAP_FMAC4 soap_in__tds__GetCapabilities(struct soap*, const char*, _tds__GetCapabilities *, const char*);

#ifndef soap_write__tds__GetCapabilities
#define soap_write__tds__GetCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCapabilities * SOAP_FMAC4 soap_get__tds__GetCapabilities(struct soap*, _tds__GetCapabilities *, const char*, const char*);

#ifndef soap_read__tds__GetCapabilities
#define soap_read__tds__GetCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetCapabilities * SOAP_FMAC2 soap_instantiate__tds__GetCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetCapabilities * soap_new__tds__GetCapabilities(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetCapabilities(soap, n, NULL, NULL, NULL); }

inline _tds__GetCapabilities * soap_new_req__tds__GetCapabilities(struct soap *soap) { _tds__GetCapabilities *_p = soap_instantiate__tds__GetCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetCapabilities * soap_new_set__tds__GetCapabilities(struct soap *soap, std::vector<enum tt__CapabilityCategory >& Category) { _tds__GetCapabilities *_p = soap_instantiate__tds__GetCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetCapabilities::Category = Category; } return _p; }

inline void soap_delete__tds__GetCapabilities(struct soap *soap, _tds__GetCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetWsdlUrlResponse
#define SOAP_TYPE__tds__GetWsdlUrlResponse (141)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetWsdlUrlResponse(struct soap*, const char*, int, const _tds__GetWsdlUrlResponse *, const char*);
SOAP_FMAC3 _tds__GetWsdlUrlResponse * SOAP_FMAC4 soap_in__tds__GetWsdlUrlResponse(struct soap*, const char*, _tds__GetWsdlUrlResponse *, const char*);

#ifndef soap_write__tds__GetWsdlUrlResponse
#define soap_write__tds__GetWsdlUrlResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetWsdlUrlResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetWsdlUrlResponse * SOAP_FMAC4 soap_get__tds__GetWsdlUrlResponse(struct soap*, _tds__GetWsdlUrlResponse *, const char*, const char*);

#ifndef soap_read__tds__GetWsdlUrlResponse
#define soap_read__tds__GetWsdlUrlResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetWsdlUrlResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetWsdlUrlResponse * SOAP_FMAC2 soap_instantiate__tds__GetWsdlUrlResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetWsdlUrlResponse * soap_new__tds__GetWsdlUrlResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetWsdlUrlResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetWsdlUrlResponse * soap_new_req__tds__GetWsdlUrlResponse(struct soap *soap, std::string& WsdlUrl) { _tds__GetWsdlUrlResponse *_p = soap_instantiate__tds__GetWsdlUrlResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetWsdlUrlResponse::WsdlUrl = WsdlUrl; } return _p; }

inline _tds__GetWsdlUrlResponse * soap_new_set__tds__GetWsdlUrlResponse(struct soap *soap, std::string& WsdlUrl) { _tds__GetWsdlUrlResponse *_p = soap_instantiate__tds__GetWsdlUrlResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetWsdlUrlResponse::WsdlUrl = WsdlUrl; } return _p; }

inline void soap_delete__tds__GetWsdlUrlResponse(struct soap *soap, _tds__GetWsdlUrlResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetWsdlUrlResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetWsdlUrl
#define SOAP_TYPE__tds__GetWsdlUrl (140)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetWsdlUrl(struct soap*, const char*, int, const _tds__GetWsdlUrl *, const char*);
SOAP_FMAC3 _tds__GetWsdlUrl * SOAP_FMAC4 soap_in__tds__GetWsdlUrl(struct soap*, const char*, _tds__GetWsdlUrl *, const char*);

#ifndef soap_write__tds__GetWsdlUrl
#define soap_write__tds__GetWsdlUrl(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetWsdlUrl", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetWsdlUrl * SOAP_FMAC4 soap_get__tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl *, const char*, const char*);

#ifndef soap_read__tds__GetWsdlUrl
#define soap_read__tds__GetWsdlUrl(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetWsdlUrl(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetWsdlUrl * SOAP_FMAC2 soap_instantiate__tds__GetWsdlUrl(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetWsdlUrl * soap_new__tds__GetWsdlUrl(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetWsdlUrl(soap, n, NULL, NULL, NULL); }

inline _tds__GetWsdlUrl * soap_new_req__tds__GetWsdlUrl(struct soap *soap) { _tds__GetWsdlUrl *_p = soap_instantiate__tds__GetWsdlUrl(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetWsdlUrl * soap_new_set__tds__GetWsdlUrl(struct soap *soap) { _tds__GetWsdlUrl *_p = soap_instantiate__tds__GetWsdlUrl(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetWsdlUrl(struct soap *soap, _tds__GetWsdlUrl *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetWsdlUrl(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetUserResponse
#define SOAP_TYPE__tds__SetUserResponse (139)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetUserResponse(struct soap*, const char*, int, const _tds__SetUserResponse *, const char*);
SOAP_FMAC3 _tds__SetUserResponse * SOAP_FMAC4 soap_in__tds__SetUserResponse(struct soap*, const char*, _tds__SetUserResponse *, const char*);

#ifndef soap_write__tds__SetUserResponse
#define soap_write__tds__SetUserResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetUserResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetUserResponse * SOAP_FMAC4 soap_get__tds__SetUserResponse(struct soap*, _tds__SetUserResponse *, const char*, const char*);

#ifndef soap_read__tds__SetUserResponse
#define soap_read__tds__SetUserResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetUserResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetUserResponse * SOAP_FMAC2 soap_instantiate__tds__SetUserResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetUserResponse * soap_new__tds__SetUserResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetUserResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetUserResponse * soap_new_req__tds__SetUserResponse(struct soap *soap) { _tds__SetUserResponse *_p = soap_instantiate__tds__SetUserResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SetUserResponse * soap_new_set__tds__SetUserResponse(struct soap *soap) { _tds__SetUserResponse *_p = soap_instantiate__tds__SetUserResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__SetUserResponse(struct soap *soap, _tds__SetUserResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetUserResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetUser
#define SOAP_TYPE__tds__SetUser (138)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetUser(struct soap*, const char*, int, const _tds__SetUser *, const char*);
SOAP_FMAC3 _tds__SetUser * SOAP_FMAC4 soap_in__tds__SetUser(struct soap*, const char*, _tds__SetUser *, const char*);

#ifndef soap_write__tds__SetUser
#define soap_write__tds__SetUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetUser * SOAP_FMAC4 soap_get__tds__SetUser(struct soap*, _tds__SetUser *, const char*, const char*);

#ifndef soap_read__tds__SetUser
#define soap_read__tds__SetUser(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetUser * SOAP_FMAC2 soap_instantiate__tds__SetUser(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetUser * soap_new__tds__SetUser(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetUser(soap, n, NULL, NULL, NULL); }

inline _tds__SetUser * soap_new_req__tds__SetUser(struct soap *soap, std::vector<tt__User * >& User) { _tds__SetUser *_p = soap_instantiate__tds__SetUser(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetUser::User = User; } return _p; }

inline _tds__SetUser * soap_new_set__tds__SetUser(struct soap *soap, std::vector<tt__User * >& User) { _tds__SetUser *_p = soap_instantiate__tds__SetUser(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetUser::User = User; } return _p; }

inline void soap_delete__tds__SetUser(struct soap *soap, _tds__SetUser *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetUser(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__DeleteUsersResponse
#define SOAP_TYPE__tds__DeleteUsersResponse (137)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__DeleteUsersResponse(struct soap*, const char*, int, const _tds__DeleteUsersResponse *, const char*);
SOAP_FMAC3 _tds__DeleteUsersResponse * SOAP_FMAC4 soap_in__tds__DeleteUsersResponse(struct soap*, const char*, _tds__DeleteUsersResponse *, const char*);

#ifndef soap_write__tds__DeleteUsersResponse
#define soap_write__tds__DeleteUsersResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:DeleteUsersResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__DeleteUsersResponse * SOAP_FMAC4 soap_get__tds__DeleteUsersResponse(struct soap*, _tds__DeleteUsersResponse *, const char*, const char*);

#ifndef soap_read__tds__DeleteUsersResponse
#define soap_read__tds__DeleteUsersResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__DeleteUsersResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__DeleteUsersResponse * SOAP_FMAC2 soap_instantiate__tds__DeleteUsersResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__DeleteUsersResponse * soap_new__tds__DeleteUsersResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__DeleteUsersResponse(soap, n, NULL, NULL, NULL); }

inline _tds__DeleteUsersResponse * soap_new_req__tds__DeleteUsersResponse(struct soap *soap) { _tds__DeleteUsersResponse *_p = soap_instantiate__tds__DeleteUsersResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__DeleteUsersResponse * soap_new_set__tds__DeleteUsersResponse(struct soap *soap) { _tds__DeleteUsersResponse *_p = soap_instantiate__tds__DeleteUsersResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__DeleteUsersResponse(struct soap *soap, _tds__DeleteUsersResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__DeleteUsersResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__DeleteUsers
#define SOAP_TYPE__tds__DeleteUsers (136)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__DeleteUsers(struct soap*, const char*, int, const _tds__DeleteUsers *, const char*);
SOAP_FMAC3 _tds__DeleteUsers * SOAP_FMAC4 soap_in__tds__DeleteUsers(struct soap*, const char*, _tds__DeleteUsers *, const char*);

#ifndef soap_write__tds__DeleteUsers
#define soap_write__tds__DeleteUsers(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:DeleteUsers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__DeleteUsers * SOAP_FMAC4 soap_get__tds__DeleteUsers(struct soap*, _tds__DeleteUsers *, const char*, const char*);

#ifndef soap_read__tds__DeleteUsers
#define soap_read__tds__DeleteUsers(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__DeleteUsers(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__DeleteUsers * SOAP_FMAC2 soap_instantiate__tds__DeleteUsers(struct soap*, int, const char*, const char*, size_t*);

inline _tds__DeleteUsers * soap_new__tds__DeleteUsers(struct soap *soap, int n = -1) { return soap_instantiate__tds__DeleteUsers(soap, n, NULL, NULL, NULL); }

inline _tds__DeleteUsers * soap_new_req__tds__DeleteUsers(struct soap *soap, std::vector<std::string >& Username) { _tds__DeleteUsers *_p = soap_instantiate__tds__DeleteUsers(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__DeleteUsers::Username = Username; } return _p; }

inline _tds__DeleteUsers * soap_new_set__tds__DeleteUsers(struct soap *soap, std::vector<std::string >& Username) { _tds__DeleteUsers *_p = soap_instantiate__tds__DeleteUsers(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__DeleteUsers::Username = Username; } return _p; }

inline void soap_delete__tds__DeleteUsers(struct soap *soap, _tds__DeleteUsers *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__DeleteUsers(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__CreateUsersResponse
#define SOAP_TYPE__tds__CreateUsersResponse (135)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__CreateUsersResponse(struct soap*, const char*, int, const _tds__CreateUsersResponse *, const char*);
SOAP_FMAC3 _tds__CreateUsersResponse * SOAP_FMAC4 soap_in__tds__CreateUsersResponse(struct soap*, const char*, _tds__CreateUsersResponse *, const char*);

#ifndef soap_write__tds__CreateUsersResponse
#define soap_write__tds__CreateUsersResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:CreateUsersResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__CreateUsersResponse * SOAP_FMAC4 soap_get__tds__CreateUsersResponse(struct soap*, _tds__CreateUsersResponse *, const char*, const char*);

#ifndef soap_read__tds__CreateUsersResponse
#define soap_read__tds__CreateUsersResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__CreateUsersResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__CreateUsersResponse * SOAP_FMAC2 soap_instantiate__tds__CreateUsersResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__CreateUsersResponse * soap_new__tds__CreateUsersResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__CreateUsersResponse(soap, n, NULL, NULL, NULL); }

inline _tds__CreateUsersResponse * soap_new_req__tds__CreateUsersResponse(struct soap *soap) { _tds__CreateUsersResponse *_p = soap_instantiate__tds__CreateUsersResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__CreateUsersResponse * soap_new_set__tds__CreateUsersResponse(struct soap *soap) { _tds__CreateUsersResponse *_p = soap_instantiate__tds__CreateUsersResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__CreateUsersResponse(struct soap *soap, _tds__CreateUsersResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__CreateUsersResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__CreateUsers
#define SOAP_TYPE__tds__CreateUsers (134)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__CreateUsers(struct soap*, const char*, int, const _tds__CreateUsers *, const char*);
SOAP_FMAC3 _tds__CreateUsers * SOAP_FMAC4 soap_in__tds__CreateUsers(struct soap*, const char*, _tds__CreateUsers *, const char*);

#ifndef soap_write__tds__CreateUsers
#define soap_write__tds__CreateUsers(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:CreateUsers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__CreateUsers * SOAP_FMAC4 soap_get__tds__CreateUsers(struct soap*, _tds__CreateUsers *, const char*, const char*);

#ifndef soap_read__tds__CreateUsers
#define soap_read__tds__CreateUsers(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__CreateUsers(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__CreateUsers * SOAP_FMAC2 soap_instantiate__tds__CreateUsers(struct soap*, int, const char*, const char*, size_t*);

inline _tds__CreateUsers * soap_new__tds__CreateUsers(struct soap *soap, int n = -1) { return soap_instantiate__tds__CreateUsers(soap, n, NULL, NULL, NULL); }

inline _tds__CreateUsers * soap_new_req__tds__CreateUsers(struct soap *soap, std::vector<tt__User * >& User) { _tds__CreateUsers *_p = soap_instantiate__tds__CreateUsers(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__CreateUsers::User = User; } return _p; }

inline _tds__CreateUsers * soap_new_set__tds__CreateUsers(struct soap *soap, std::vector<tt__User * >& User) { _tds__CreateUsers *_p = soap_instantiate__tds__CreateUsers(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__CreateUsers::User = User; } return _p; }

inline void soap_delete__tds__CreateUsers(struct soap *soap, _tds__CreateUsers *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__CreateUsers(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetUsersResponse
#define SOAP_TYPE__tds__GetUsersResponse (133)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetUsersResponse(struct soap*, const char*, int, const _tds__GetUsersResponse *, const char*);
SOAP_FMAC3 _tds__GetUsersResponse * SOAP_FMAC4 soap_in__tds__GetUsersResponse(struct soap*, const char*, _tds__GetUsersResponse *, const char*);

#ifndef soap_write__tds__GetUsersResponse
#define soap_write__tds__GetUsersResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetUsersResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetUsersResponse * SOAP_FMAC4 soap_get__tds__GetUsersResponse(struct soap*, _tds__GetUsersResponse *, const char*, const char*);

#ifndef soap_read__tds__GetUsersResponse
#define soap_read__tds__GetUsersResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetUsersResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetUsersResponse * SOAP_FMAC2 soap_instantiate__tds__GetUsersResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetUsersResponse * soap_new__tds__GetUsersResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetUsersResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetUsersResponse * soap_new_req__tds__GetUsersResponse(struct soap *soap) { _tds__GetUsersResponse *_p = soap_instantiate__tds__GetUsersResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetUsersResponse * soap_new_set__tds__GetUsersResponse(struct soap *soap, std::vector<tt__User * >& User) { _tds__GetUsersResponse *_p = soap_instantiate__tds__GetUsersResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetUsersResponse::User = User; } return _p; }

inline void soap_delete__tds__GetUsersResponse(struct soap *soap, _tds__GetUsersResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetUsersResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetUsers
#define SOAP_TYPE__tds__GetUsers (132)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetUsers(struct soap*, const char*, int, const _tds__GetUsers *, const char*);
SOAP_FMAC3 _tds__GetUsers * SOAP_FMAC4 soap_in__tds__GetUsers(struct soap*, const char*, _tds__GetUsers *, const char*);

#ifndef soap_write__tds__GetUsers
#define soap_write__tds__GetUsers(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetUsers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetUsers * SOAP_FMAC4 soap_get__tds__GetUsers(struct soap*, _tds__GetUsers *, const char*, const char*);

#ifndef soap_read__tds__GetUsers
#define soap_read__tds__GetUsers(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetUsers(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetUsers * SOAP_FMAC2 soap_instantiate__tds__GetUsers(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetUsers * soap_new__tds__GetUsers(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetUsers(soap, n, NULL, NULL, NULL); }

inline _tds__GetUsers * soap_new_req__tds__GetUsers(struct soap *soap) { _tds__GetUsers *_p = soap_instantiate__tds__GetUsers(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetUsers * soap_new_set__tds__GetUsers(struct soap *soap) { _tds__GetUsers *_p = soap_instantiate__tds__GetUsers(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetUsers(struct soap *soap, _tds__GetUsers *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetUsers(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetRemoteUserResponse
#define SOAP_TYPE__tds__SetRemoteUserResponse (131)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetRemoteUserResponse(struct soap*, const char*, int, const _tds__SetRemoteUserResponse *, const char*);
SOAP_FMAC3 _tds__SetRemoteUserResponse * SOAP_FMAC4 soap_in__tds__SetRemoteUserResponse(struct soap*, const char*, _tds__SetRemoteUserResponse *, const char*);

#ifndef soap_write__tds__SetRemoteUserResponse
#define soap_write__tds__SetRemoteUserResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetRemoteUserResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetRemoteUserResponse * SOAP_FMAC4 soap_get__tds__SetRemoteUserResponse(struct soap*, _tds__SetRemoteUserResponse *, const char*, const char*);

#ifndef soap_read__tds__SetRemoteUserResponse
#define soap_read__tds__SetRemoteUserResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetRemoteUserResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetRemoteUserResponse * SOAP_FMAC2 soap_instantiate__tds__SetRemoteUserResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetRemoteUserResponse * soap_new__tds__SetRemoteUserResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetRemoteUserResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetRemoteUserResponse * soap_new_req__tds__SetRemoteUserResponse(struct soap *soap) { _tds__SetRemoteUserResponse *_p = soap_instantiate__tds__SetRemoteUserResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SetRemoteUserResponse * soap_new_set__tds__SetRemoteUserResponse(struct soap *soap) { _tds__SetRemoteUserResponse *_p = soap_instantiate__tds__SetRemoteUserResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__SetRemoteUserResponse(struct soap *soap, _tds__SetRemoteUserResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetRemoteUserResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetRemoteUser
#define SOAP_TYPE__tds__SetRemoteUser (130)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetRemoteUser(struct soap*, const char*, int, const _tds__SetRemoteUser *, const char*);
SOAP_FMAC3 _tds__SetRemoteUser * SOAP_FMAC4 soap_in__tds__SetRemoteUser(struct soap*, const char*, _tds__SetRemoteUser *, const char*);

#ifndef soap_write__tds__SetRemoteUser
#define soap_write__tds__SetRemoteUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetRemoteUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetRemoteUser * SOAP_FMAC4 soap_get__tds__SetRemoteUser(struct soap*, _tds__SetRemoteUser *, const char*, const char*);

#ifndef soap_read__tds__SetRemoteUser
#define soap_read__tds__SetRemoteUser(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetRemoteUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetRemoteUser * SOAP_FMAC2 soap_instantiate__tds__SetRemoteUser(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetRemoteUser * soap_new__tds__SetRemoteUser(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetRemoteUser(soap, n, NULL, NULL, NULL); }

inline _tds__SetRemoteUser * soap_new_req__tds__SetRemoteUser(struct soap *soap) { _tds__SetRemoteUser *_p = soap_instantiate__tds__SetRemoteUser(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SetRemoteUser * soap_new_set__tds__SetRemoteUser(struct soap *soap, tt__RemoteUser *RemoteUser) { _tds__SetRemoteUser *_p = soap_instantiate__tds__SetRemoteUser(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetRemoteUser::RemoteUser = RemoteUser; } return _p; }

inline void soap_delete__tds__SetRemoteUser(struct soap *soap, _tds__SetRemoteUser *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetRemoteUser(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetRemoteUserResponse
#define SOAP_TYPE__tds__GetRemoteUserResponse (129)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetRemoteUserResponse(struct soap*, const char*, int, const _tds__GetRemoteUserResponse *, const char*);
SOAP_FMAC3 _tds__GetRemoteUserResponse * SOAP_FMAC4 soap_in__tds__GetRemoteUserResponse(struct soap*, const char*, _tds__GetRemoteUserResponse *, const char*);

#ifndef soap_write__tds__GetRemoteUserResponse
#define soap_write__tds__GetRemoteUserResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetRemoteUserResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetRemoteUserResponse * SOAP_FMAC4 soap_get__tds__GetRemoteUserResponse(struct soap*, _tds__GetRemoteUserResponse *, const char*, const char*);

#ifndef soap_read__tds__GetRemoteUserResponse
#define soap_read__tds__GetRemoteUserResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetRemoteUserResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetRemoteUserResponse * SOAP_FMAC2 soap_instantiate__tds__GetRemoteUserResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetRemoteUserResponse * soap_new__tds__GetRemoteUserResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetRemoteUserResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetRemoteUserResponse * soap_new_req__tds__GetRemoteUserResponse(struct soap *soap) { _tds__GetRemoteUserResponse *_p = soap_instantiate__tds__GetRemoteUserResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetRemoteUserResponse * soap_new_set__tds__GetRemoteUserResponse(struct soap *soap, tt__RemoteUser *RemoteUser) { _tds__GetRemoteUserResponse *_p = soap_instantiate__tds__GetRemoteUserResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetRemoteUserResponse::RemoteUser = RemoteUser; } return _p; }

inline void soap_delete__tds__GetRemoteUserResponse(struct soap *soap, _tds__GetRemoteUserResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetRemoteUserResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetRemoteUser
#define SOAP_TYPE__tds__GetRemoteUser (128)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetRemoteUser(struct soap*, const char*, int, const _tds__GetRemoteUser *, const char*);
SOAP_FMAC3 _tds__GetRemoteUser * SOAP_FMAC4 soap_in__tds__GetRemoteUser(struct soap*, const char*, _tds__GetRemoteUser *, const char*);

#ifndef soap_write__tds__GetRemoteUser
#define soap_write__tds__GetRemoteUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetRemoteUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetRemoteUser * SOAP_FMAC4 soap_get__tds__GetRemoteUser(struct soap*, _tds__GetRemoteUser *, const char*, const char*);

#ifndef soap_read__tds__GetRemoteUser
#define soap_read__tds__GetRemoteUser(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetRemoteUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetRemoteUser * SOAP_FMAC2 soap_instantiate__tds__GetRemoteUser(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetRemoteUser * soap_new__tds__GetRemoteUser(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetRemoteUser(soap, n, NULL, NULL, NULL); }

inline _tds__GetRemoteUser * soap_new_req__tds__GetRemoteUser(struct soap *soap) { _tds__GetRemoteUser *_p = soap_instantiate__tds__GetRemoteUser(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetRemoteUser * soap_new_set__tds__GetRemoteUser(struct soap *soap) { _tds__GetRemoteUser *_p = soap_instantiate__tds__GetRemoteUser(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetRemoteUser(struct soap *soap, _tds__GetRemoteUser *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetRemoteUser(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetEndpointReferenceResponse
#define SOAP_TYPE__tds__GetEndpointReferenceResponse (127)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetEndpointReferenceResponse(struct soap*, const char*, int, const _tds__GetEndpointReferenceResponse *, const char*);
SOAP_FMAC3 _tds__GetEndpointReferenceResponse * SOAP_FMAC4 soap_in__tds__GetEndpointReferenceResponse(struct soap*, const char*, _tds__GetEndpointReferenceResponse *, const char*);

#ifndef soap_write__tds__GetEndpointReferenceResponse
#define soap_write__tds__GetEndpointReferenceResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetEndpointReferenceResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetEndpointReferenceResponse * SOAP_FMAC4 soap_get__tds__GetEndpointReferenceResponse(struct soap*, _tds__GetEndpointReferenceResponse *, const char*, const char*);

#ifndef soap_read__tds__GetEndpointReferenceResponse
#define soap_read__tds__GetEndpointReferenceResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetEndpointReferenceResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetEndpointReferenceResponse * SOAP_FMAC2 soap_instantiate__tds__GetEndpointReferenceResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetEndpointReferenceResponse * soap_new__tds__GetEndpointReferenceResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetEndpointReferenceResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetEndpointReferenceResponse * soap_new_req__tds__GetEndpointReferenceResponse(struct soap *soap, std::string& GUID) { _tds__GetEndpointReferenceResponse *_p = soap_instantiate__tds__GetEndpointReferenceResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetEndpointReferenceResponse::GUID = GUID; } return _p; }

inline _tds__GetEndpointReferenceResponse * soap_new_set__tds__GetEndpointReferenceResponse(struct soap *soap, std::string& GUID) { _tds__GetEndpointReferenceResponse *_p = soap_instantiate__tds__GetEndpointReferenceResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetEndpointReferenceResponse::GUID = GUID; } return _p; }

inline void soap_delete__tds__GetEndpointReferenceResponse(struct soap *soap, _tds__GetEndpointReferenceResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetEndpointReferenceResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetEndpointReference
#define SOAP_TYPE__tds__GetEndpointReference (126)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetEndpointReference(struct soap*, const char*, int, const _tds__GetEndpointReference *, const char*);
SOAP_FMAC3 _tds__GetEndpointReference * SOAP_FMAC4 soap_in__tds__GetEndpointReference(struct soap*, const char*, _tds__GetEndpointReference *, const char*);

#ifndef soap_write__tds__GetEndpointReference
#define soap_write__tds__GetEndpointReference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetEndpointReference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetEndpointReference * SOAP_FMAC4 soap_get__tds__GetEndpointReference(struct soap*, _tds__GetEndpointReference *, const char*, const char*);

#ifndef soap_read__tds__GetEndpointReference
#define soap_read__tds__GetEndpointReference(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetEndpointReference(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetEndpointReference * SOAP_FMAC2 soap_instantiate__tds__GetEndpointReference(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetEndpointReference * soap_new__tds__GetEndpointReference(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetEndpointReference(soap, n, NULL, NULL, NULL); }

inline _tds__GetEndpointReference * soap_new_req__tds__GetEndpointReference(struct soap *soap) { _tds__GetEndpointReference *_p = soap_instantiate__tds__GetEndpointReference(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetEndpointReference * soap_new_set__tds__GetEndpointReference(struct soap *soap) { _tds__GetEndpointReference *_p = soap_instantiate__tds__GetEndpointReference(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetEndpointReference(struct soap *soap, _tds__GetEndpointReference *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetEndpointReference(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetDPAddressesResponse
#define SOAP_TYPE__tds__SetDPAddressesResponse (125)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetDPAddressesResponse(struct soap*, const char*, int, const _tds__SetDPAddressesResponse *, const char*);
SOAP_FMAC3 _tds__SetDPAddressesResponse * SOAP_FMAC4 soap_in__tds__SetDPAddressesResponse(struct soap*, const char*, _tds__SetDPAddressesResponse *, const char*);

#ifndef soap_write__tds__SetDPAddressesResponse
#define soap_write__tds__SetDPAddressesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetDPAddressesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDPAddressesResponse * SOAP_FMAC4 soap_get__tds__SetDPAddressesResponse(struct soap*, _tds__SetDPAddressesResponse *, const char*, const char*);

#ifndef soap_read__tds__SetDPAddressesResponse
#define soap_read__tds__SetDPAddressesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetDPAddressesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetDPAddressesResponse * SOAP_FMAC2 soap_instantiate__tds__SetDPAddressesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetDPAddressesResponse * soap_new__tds__SetDPAddressesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetDPAddressesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetDPAddressesResponse * soap_new_req__tds__SetDPAddressesResponse(struct soap *soap) { _tds__SetDPAddressesResponse *_p = soap_instantiate__tds__SetDPAddressesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SetDPAddressesResponse * soap_new_set__tds__SetDPAddressesResponse(struct soap *soap) { _tds__SetDPAddressesResponse *_p = soap_instantiate__tds__SetDPAddressesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__SetDPAddressesResponse(struct soap *soap, _tds__SetDPAddressesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetDPAddressesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetDPAddresses
#define SOAP_TYPE__tds__SetDPAddresses (124)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetDPAddresses(struct soap*, const char*, int, const _tds__SetDPAddresses *, const char*);
SOAP_FMAC3 _tds__SetDPAddresses * SOAP_FMAC4 soap_in__tds__SetDPAddresses(struct soap*, const char*, _tds__SetDPAddresses *, const char*);

#ifndef soap_write__tds__SetDPAddresses
#define soap_write__tds__SetDPAddresses(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetDPAddresses", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDPAddresses * SOAP_FMAC4 soap_get__tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses *, const char*, const char*);

#ifndef soap_read__tds__SetDPAddresses
#define soap_read__tds__SetDPAddresses(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetDPAddresses(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetDPAddresses * SOAP_FMAC2 soap_instantiate__tds__SetDPAddresses(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetDPAddresses * soap_new__tds__SetDPAddresses(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetDPAddresses(soap, n, NULL, NULL, NULL); }

inline _tds__SetDPAddresses * soap_new_req__tds__SetDPAddresses(struct soap *soap) { _tds__SetDPAddresses *_p = soap_instantiate__tds__SetDPAddresses(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SetDPAddresses * soap_new_set__tds__SetDPAddresses(struct soap *soap, std::vector<tt__NetworkHost * >& DPAddress) { _tds__SetDPAddresses *_p = soap_instantiate__tds__SetDPAddresses(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetDPAddresses::DPAddress = DPAddress; } return _p; }

inline void soap_delete__tds__SetDPAddresses(struct soap *soap, _tds__SetDPAddresses *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetDPAddresses(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetDPAddressesResponse
#define SOAP_TYPE__tds__GetDPAddressesResponse (123)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDPAddressesResponse(struct soap*, const char*, int, const _tds__GetDPAddressesResponse *, const char*);
SOAP_FMAC3 _tds__GetDPAddressesResponse * SOAP_FMAC4 soap_in__tds__GetDPAddressesResponse(struct soap*, const char*, _tds__GetDPAddressesResponse *, const char*);

#ifndef soap_write__tds__GetDPAddressesResponse
#define soap_write__tds__GetDPAddressesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetDPAddressesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDPAddressesResponse * SOAP_FMAC4 soap_get__tds__GetDPAddressesResponse(struct soap*, _tds__GetDPAddressesResponse *, const char*, const char*);

#ifndef soap_read__tds__GetDPAddressesResponse
#define soap_read__tds__GetDPAddressesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetDPAddressesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetDPAddressesResponse * SOAP_FMAC2 soap_instantiate__tds__GetDPAddressesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDPAddressesResponse * soap_new__tds__GetDPAddressesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDPAddressesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetDPAddressesResponse * soap_new_req__tds__GetDPAddressesResponse(struct soap *soap) { _tds__GetDPAddressesResponse *_p = soap_instantiate__tds__GetDPAddressesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetDPAddressesResponse * soap_new_set__tds__GetDPAddressesResponse(struct soap *soap, std::vector<tt__NetworkHost * >& DPAddress) { _tds__GetDPAddressesResponse *_p = soap_instantiate__tds__GetDPAddressesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetDPAddressesResponse::DPAddress = DPAddress; } return _p; }

inline void soap_delete__tds__GetDPAddressesResponse(struct soap *soap, _tds__GetDPAddressesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetDPAddressesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetDPAddresses
#define SOAP_TYPE__tds__GetDPAddresses (122)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDPAddresses(struct soap*, const char*, int, const _tds__GetDPAddresses *, const char*);
SOAP_FMAC3 _tds__GetDPAddresses * SOAP_FMAC4 soap_in__tds__GetDPAddresses(struct soap*, const char*, _tds__GetDPAddresses *, const char*);

#ifndef soap_write__tds__GetDPAddresses
#define soap_write__tds__GetDPAddresses(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetDPAddresses", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDPAddresses * SOAP_FMAC4 soap_get__tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses *, const char*, const char*);

#ifndef soap_read__tds__GetDPAddresses
#define soap_read__tds__GetDPAddresses(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetDPAddresses(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetDPAddresses * SOAP_FMAC2 soap_instantiate__tds__GetDPAddresses(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDPAddresses * soap_new__tds__GetDPAddresses(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDPAddresses(soap, n, NULL, NULL, NULL); }

inline _tds__GetDPAddresses * soap_new_req__tds__GetDPAddresses(struct soap *soap) { _tds__GetDPAddresses *_p = soap_instantiate__tds__GetDPAddresses(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetDPAddresses * soap_new_set__tds__GetDPAddresses(struct soap *soap) { _tds__GetDPAddresses *_p = soap_instantiate__tds__GetDPAddresses(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetDPAddresses(struct soap *soap, _tds__GetDPAddresses *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetDPAddresses(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetRemoteDiscoveryModeResponse
#define SOAP_TYPE__tds__SetRemoteDiscoveryModeResponse (121)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetRemoteDiscoveryModeResponse(struct soap*, const char*, int, const _tds__SetRemoteDiscoveryModeResponse *, const char*);
SOAP_FMAC3 _tds__SetRemoteDiscoveryModeResponse * SOAP_FMAC4 soap_in__tds__SetRemoteDiscoveryModeResponse(struct soap*, const char*, _tds__SetRemoteDiscoveryModeResponse *, const char*);

#ifndef soap_write__tds__SetRemoteDiscoveryModeResponse
#define soap_write__tds__SetRemoteDiscoveryModeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetRemoteDiscoveryModeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetRemoteDiscoveryModeResponse * SOAP_FMAC4 soap_get__tds__SetRemoteDiscoveryModeResponse(struct soap*, _tds__SetRemoteDiscoveryModeResponse *, const char*, const char*);

#ifndef soap_read__tds__SetRemoteDiscoveryModeResponse
#define soap_read__tds__SetRemoteDiscoveryModeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetRemoteDiscoveryModeResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetRemoteDiscoveryModeResponse * SOAP_FMAC2 soap_instantiate__tds__SetRemoteDiscoveryModeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetRemoteDiscoveryModeResponse * soap_new__tds__SetRemoteDiscoveryModeResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetRemoteDiscoveryModeResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetRemoteDiscoveryModeResponse * soap_new_req__tds__SetRemoteDiscoveryModeResponse(struct soap *soap) { _tds__SetRemoteDiscoveryModeResponse *_p = soap_instantiate__tds__SetRemoteDiscoveryModeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SetRemoteDiscoveryModeResponse * soap_new_set__tds__SetRemoteDiscoveryModeResponse(struct soap *soap) { _tds__SetRemoteDiscoveryModeResponse *_p = soap_instantiate__tds__SetRemoteDiscoveryModeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__SetRemoteDiscoveryModeResponse(struct soap *soap, _tds__SetRemoteDiscoveryModeResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetRemoteDiscoveryModeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetRemoteDiscoveryMode
#define SOAP_TYPE__tds__SetRemoteDiscoveryMode (120)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetRemoteDiscoveryMode(struct soap*, const char*, int, const _tds__SetRemoteDiscoveryMode *, const char*);
SOAP_FMAC3 _tds__SetRemoteDiscoveryMode * SOAP_FMAC4 soap_in__tds__SetRemoteDiscoveryMode(struct soap*, const char*, _tds__SetRemoteDiscoveryMode *, const char*);

#ifndef soap_write__tds__SetRemoteDiscoveryMode
#define soap_write__tds__SetRemoteDiscoveryMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetRemoteDiscoveryMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetRemoteDiscoveryMode * SOAP_FMAC4 soap_get__tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode *, const char*, const char*);

#ifndef soap_read__tds__SetRemoteDiscoveryMode
#define soap_read__tds__SetRemoteDiscoveryMode(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetRemoteDiscoveryMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetRemoteDiscoveryMode * SOAP_FMAC2 soap_instantiate__tds__SetRemoteDiscoveryMode(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetRemoteDiscoveryMode * soap_new__tds__SetRemoteDiscoveryMode(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetRemoteDiscoveryMode(soap, n, NULL, NULL, NULL); }

inline _tds__SetRemoteDiscoveryMode * soap_new_req__tds__SetRemoteDiscoveryMode(struct soap *soap, enum tt__DiscoveryMode RemoteDiscoveryMode) { _tds__SetRemoteDiscoveryMode *_p = soap_instantiate__tds__SetRemoteDiscoveryMode(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetRemoteDiscoveryMode::RemoteDiscoveryMode = RemoteDiscoveryMode; } return _p; }

inline _tds__SetRemoteDiscoveryMode * soap_new_set__tds__SetRemoteDiscoveryMode(struct soap *soap, enum tt__DiscoveryMode RemoteDiscoveryMode) { _tds__SetRemoteDiscoveryMode *_p = soap_instantiate__tds__SetRemoteDiscoveryMode(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetRemoteDiscoveryMode::RemoteDiscoveryMode = RemoteDiscoveryMode; } return _p; }

inline void soap_delete__tds__SetRemoteDiscoveryMode(struct soap *soap, _tds__SetRemoteDiscoveryMode *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetRemoteDiscoveryMode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetRemoteDiscoveryModeResponse
#define SOAP_TYPE__tds__GetRemoteDiscoveryModeResponse (119)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetRemoteDiscoveryModeResponse(struct soap*, const char*, int, const _tds__GetRemoteDiscoveryModeResponse *, const char*);
SOAP_FMAC3 _tds__GetRemoteDiscoveryModeResponse * SOAP_FMAC4 soap_in__tds__GetRemoteDiscoveryModeResponse(struct soap*, const char*, _tds__GetRemoteDiscoveryModeResponse *, const char*);

#ifndef soap_write__tds__GetRemoteDiscoveryModeResponse
#define soap_write__tds__GetRemoteDiscoveryModeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetRemoteDiscoveryModeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetRemoteDiscoveryModeResponse * SOAP_FMAC4 soap_get__tds__GetRemoteDiscoveryModeResponse(struct soap*, _tds__GetRemoteDiscoveryModeResponse *, const char*, const char*);

#ifndef soap_read__tds__GetRemoteDiscoveryModeResponse
#define soap_read__tds__GetRemoteDiscoveryModeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetRemoteDiscoveryModeResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetRemoteDiscoveryModeResponse * SOAP_FMAC2 soap_instantiate__tds__GetRemoteDiscoveryModeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetRemoteDiscoveryModeResponse * soap_new__tds__GetRemoteDiscoveryModeResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetRemoteDiscoveryModeResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetRemoteDiscoveryModeResponse * soap_new_req__tds__GetRemoteDiscoveryModeResponse(struct soap *soap, enum tt__DiscoveryMode RemoteDiscoveryMode) { _tds__GetRemoteDiscoveryModeResponse *_p = soap_instantiate__tds__GetRemoteDiscoveryModeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetRemoteDiscoveryModeResponse::RemoteDiscoveryMode = RemoteDiscoveryMode; } return _p; }

inline _tds__GetRemoteDiscoveryModeResponse * soap_new_set__tds__GetRemoteDiscoveryModeResponse(struct soap *soap, enum tt__DiscoveryMode RemoteDiscoveryMode) { _tds__GetRemoteDiscoveryModeResponse *_p = soap_instantiate__tds__GetRemoteDiscoveryModeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetRemoteDiscoveryModeResponse::RemoteDiscoveryMode = RemoteDiscoveryMode; } return _p; }

inline void soap_delete__tds__GetRemoteDiscoveryModeResponse(struct soap *soap, _tds__GetRemoteDiscoveryModeResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetRemoteDiscoveryModeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetRemoteDiscoveryMode
#define SOAP_TYPE__tds__GetRemoteDiscoveryMode (118)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetRemoteDiscoveryMode(struct soap*, const char*, int, const _tds__GetRemoteDiscoveryMode *, const char*);
SOAP_FMAC3 _tds__GetRemoteDiscoveryMode * SOAP_FMAC4 soap_in__tds__GetRemoteDiscoveryMode(struct soap*, const char*, _tds__GetRemoteDiscoveryMode *, const char*);

#ifndef soap_write__tds__GetRemoteDiscoveryMode
#define soap_write__tds__GetRemoteDiscoveryMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetRemoteDiscoveryMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetRemoteDiscoveryMode * SOAP_FMAC4 soap_get__tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode *, const char*, const char*);

#ifndef soap_read__tds__GetRemoteDiscoveryMode
#define soap_read__tds__GetRemoteDiscoveryMode(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetRemoteDiscoveryMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetRemoteDiscoveryMode * SOAP_FMAC2 soap_instantiate__tds__GetRemoteDiscoveryMode(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetRemoteDiscoveryMode * soap_new__tds__GetRemoteDiscoveryMode(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetRemoteDiscoveryMode(soap, n, NULL, NULL, NULL); }

inline _tds__GetRemoteDiscoveryMode * soap_new_req__tds__GetRemoteDiscoveryMode(struct soap *soap) { _tds__GetRemoteDiscoveryMode *_p = soap_instantiate__tds__GetRemoteDiscoveryMode(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetRemoteDiscoveryMode * soap_new_set__tds__GetRemoteDiscoveryMode(struct soap *soap) { _tds__GetRemoteDiscoveryMode *_p = soap_instantiate__tds__GetRemoteDiscoveryMode(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetRemoteDiscoveryMode(struct soap *soap, _tds__GetRemoteDiscoveryMode *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetRemoteDiscoveryMode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetDiscoveryModeResponse
#define SOAP_TYPE__tds__SetDiscoveryModeResponse (117)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetDiscoveryModeResponse(struct soap*, const char*, int, const _tds__SetDiscoveryModeResponse *, const char*);
SOAP_FMAC3 _tds__SetDiscoveryModeResponse * SOAP_FMAC4 soap_in__tds__SetDiscoveryModeResponse(struct soap*, const char*, _tds__SetDiscoveryModeResponse *, const char*);

#ifndef soap_write__tds__SetDiscoveryModeResponse
#define soap_write__tds__SetDiscoveryModeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetDiscoveryModeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDiscoveryModeResponse * SOAP_FMAC4 soap_get__tds__SetDiscoveryModeResponse(struct soap*, _tds__SetDiscoveryModeResponse *, const char*, const char*);

#ifndef soap_read__tds__SetDiscoveryModeResponse
#define soap_read__tds__SetDiscoveryModeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetDiscoveryModeResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetDiscoveryModeResponse * SOAP_FMAC2 soap_instantiate__tds__SetDiscoveryModeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetDiscoveryModeResponse * soap_new__tds__SetDiscoveryModeResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetDiscoveryModeResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetDiscoveryModeResponse * soap_new_req__tds__SetDiscoveryModeResponse(struct soap *soap) { _tds__SetDiscoveryModeResponse *_p = soap_instantiate__tds__SetDiscoveryModeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SetDiscoveryModeResponse * soap_new_set__tds__SetDiscoveryModeResponse(struct soap *soap) { _tds__SetDiscoveryModeResponse *_p = soap_instantiate__tds__SetDiscoveryModeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__SetDiscoveryModeResponse(struct soap *soap, _tds__SetDiscoveryModeResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetDiscoveryModeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetDiscoveryMode
#define SOAP_TYPE__tds__SetDiscoveryMode (116)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetDiscoveryMode(struct soap*, const char*, int, const _tds__SetDiscoveryMode *, const char*);
SOAP_FMAC3 _tds__SetDiscoveryMode * SOAP_FMAC4 soap_in__tds__SetDiscoveryMode(struct soap*, const char*, _tds__SetDiscoveryMode *, const char*);

#ifndef soap_write__tds__SetDiscoveryMode
#define soap_write__tds__SetDiscoveryMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetDiscoveryMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDiscoveryMode * SOAP_FMAC4 soap_get__tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode *, const char*, const char*);

#ifndef soap_read__tds__SetDiscoveryMode
#define soap_read__tds__SetDiscoveryMode(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetDiscoveryMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetDiscoveryMode * SOAP_FMAC2 soap_instantiate__tds__SetDiscoveryMode(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetDiscoveryMode * soap_new__tds__SetDiscoveryMode(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetDiscoveryMode(soap, n, NULL, NULL, NULL); }

inline _tds__SetDiscoveryMode * soap_new_req__tds__SetDiscoveryMode(struct soap *soap, enum tt__DiscoveryMode DiscoveryMode) { _tds__SetDiscoveryMode *_p = soap_instantiate__tds__SetDiscoveryMode(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetDiscoveryMode::DiscoveryMode = DiscoveryMode; } return _p; }

inline _tds__SetDiscoveryMode * soap_new_set__tds__SetDiscoveryMode(struct soap *soap, enum tt__DiscoveryMode DiscoveryMode) { _tds__SetDiscoveryMode *_p = soap_instantiate__tds__SetDiscoveryMode(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetDiscoveryMode::DiscoveryMode = DiscoveryMode; } return _p; }

inline void soap_delete__tds__SetDiscoveryMode(struct soap *soap, _tds__SetDiscoveryMode *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetDiscoveryMode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetDiscoveryModeResponse
#define SOAP_TYPE__tds__GetDiscoveryModeResponse (115)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDiscoveryModeResponse(struct soap*, const char*, int, const _tds__GetDiscoveryModeResponse *, const char*);
SOAP_FMAC3 _tds__GetDiscoveryModeResponse * SOAP_FMAC4 soap_in__tds__GetDiscoveryModeResponse(struct soap*, const char*, _tds__GetDiscoveryModeResponse *, const char*);

#ifndef soap_write__tds__GetDiscoveryModeResponse
#define soap_write__tds__GetDiscoveryModeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetDiscoveryModeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDiscoveryModeResponse * SOAP_FMAC4 soap_get__tds__GetDiscoveryModeResponse(struct soap*, _tds__GetDiscoveryModeResponse *, const char*, const char*);

#ifndef soap_read__tds__GetDiscoveryModeResponse
#define soap_read__tds__GetDiscoveryModeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetDiscoveryModeResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetDiscoveryModeResponse * SOAP_FMAC2 soap_instantiate__tds__GetDiscoveryModeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDiscoveryModeResponse * soap_new__tds__GetDiscoveryModeResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDiscoveryModeResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetDiscoveryModeResponse * soap_new_req__tds__GetDiscoveryModeResponse(struct soap *soap, enum tt__DiscoveryMode DiscoveryMode) { _tds__GetDiscoveryModeResponse *_p = soap_instantiate__tds__GetDiscoveryModeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetDiscoveryModeResponse::DiscoveryMode = DiscoveryMode; } return _p; }

inline _tds__GetDiscoveryModeResponse * soap_new_set__tds__GetDiscoveryModeResponse(struct soap *soap, enum tt__DiscoveryMode DiscoveryMode) { _tds__GetDiscoveryModeResponse *_p = soap_instantiate__tds__GetDiscoveryModeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetDiscoveryModeResponse::DiscoveryMode = DiscoveryMode; } return _p; }

inline void soap_delete__tds__GetDiscoveryModeResponse(struct soap *soap, _tds__GetDiscoveryModeResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetDiscoveryModeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetDiscoveryMode
#define SOAP_TYPE__tds__GetDiscoveryMode (114)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDiscoveryMode(struct soap*, const char*, int, const _tds__GetDiscoveryMode *, const char*);
SOAP_FMAC3 _tds__GetDiscoveryMode * SOAP_FMAC4 soap_in__tds__GetDiscoveryMode(struct soap*, const char*, _tds__GetDiscoveryMode *, const char*);

#ifndef soap_write__tds__GetDiscoveryMode
#define soap_write__tds__GetDiscoveryMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetDiscoveryMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDiscoveryMode * SOAP_FMAC4 soap_get__tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode *, const char*, const char*);

#ifndef soap_read__tds__GetDiscoveryMode
#define soap_read__tds__GetDiscoveryMode(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetDiscoveryMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetDiscoveryMode * SOAP_FMAC2 soap_instantiate__tds__GetDiscoveryMode(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDiscoveryMode * soap_new__tds__GetDiscoveryMode(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDiscoveryMode(soap, n, NULL, NULL, NULL); }

inline _tds__GetDiscoveryMode * soap_new_req__tds__GetDiscoveryMode(struct soap *soap) { _tds__GetDiscoveryMode *_p = soap_instantiate__tds__GetDiscoveryMode(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetDiscoveryMode * soap_new_set__tds__GetDiscoveryMode(struct soap *soap) { _tds__GetDiscoveryMode *_p = soap_instantiate__tds__GetDiscoveryMode(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetDiscoveryMode(struct soap *soap, _tds__GetDiscoveryMode *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetDiscoveryMode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__RemoveScopesResponse
#define SOAP_TYPE__tds__RemoveScopesResponse (113)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__RemoveScopesResponse(struct soap*, const char*, int, const _tds__RemoveScopesResponse *, const char*);
SOAP_FMAC3 _tds__RemoveScopesResponse * SOAP_FMAC4 soap_in__tds__RemoveScopesResponse(struct soap*, const char*, _tds__RemoveScopesResponse *, const char*);

#ifndef soap_write__tds__RemoveScopesResponse
#define soap_write__tds__RemoveScopesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:RemoveScopesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__RemoveScopesResponse * SOAP_FMAC4 soap_get__tds__RemoveScopesResponse(struct soap*, _tds__RemoveScopesResponse *, const char*, const char*);

#ifndef soap_read__tds__RemoveScopesResponse
#define soap_read__tds__RemoveScopesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__RemoveScopesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__RemoveScopesResponse * SOAP_FMAC2 soap_instantiate__tds__RemoveScopesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__RemoveScopesResponse * soap_new__tds__RemoveScopesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__RemoveScopesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__RemoveScopesResponse * soap_new_req__tds__RemoveScopesResponse(struct soap *soap) { _tds__RemoveScopesResponse *_p = soap_instantiate__tds__RemoveScopesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__RemoveScopesResponse * soap_new_set__tds__RemoveScopesResponse(struct soap *soap, std::vector<std::string >& ScopeItem) { _tds__RemoveScopesResponse *_p = soap_instantiate__tds__RemoveScopesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__RemoveScopesResponse::ScopeItem = ScopeItem; } return _p; }

inline void soap_delete__tds__RemoveScopesResponse(struct soap *soap, _tds__RemoveScopesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__RemoveScopesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__RemoveScopes
#define SOAP_TYPE__tds__RemoveScopes (112)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__RemoveScopes(struct soap*, const char*, int, const _tds__RemoveScopes *, const char*);
SOAP_FMAC3 _tds__RemoveScopes * SOAP_FMAC4 soap_in__tds__RemoveScopes(struct soap*, const char*, _tds__RemoveScopes *, const char*);

#ifndef soap_write__tds__RemoveScopes
#define soap_write__tds__RemoveScopes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:RemoveScopes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__RemoveScopes * SOAP_FMAC4 soap_get__tds__RemoveScopes(struct soap*, _tds__RemoveScopes *, const char*, const char*);

#ifndef soap_read__tds__RemoveScopes
#define soap_read__tds__RemoveScopes(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__RemoveScopes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__RemoveScopes * SOAP_FMAC2 soap_instantiate__tds__RemoveScopes(struct soap*, int, const char*, const char*, size_t*);

inline _tds__RemoveScopes * soap_new__tds__RemoveScopes(struct soap *soap, int n = -1) { return soap_instantiate__tds__RemoveScopes(soap, n, NULL, NULL, NULL); }

inline _tds__RemoveScopes * soap_new_req__tds__RemoveScopes(struct soap *soap, std::vector<std::string >& ScopeItem) { _tds__RemoveScopes *_p = soap_instantiate__tds__RemoveScopes(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__RemoveScopes::ScopeItem = ScopeItem; } return _p; }

inline _tds__RemoveScopes * soap_new_set__tds__RemoveScopes(struct soap *soap, std::vector<std::string >& ScopeItem) { _tds__RemoveScopes *_p = soap_instantiate__tds__RemoveScopes(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__RemoveScopes::ScopeItem = ScopeItem; } return _p; }

inline void soap_delete__tds__RemoveScopes(struct soap *soap, _tds__RemoveScopes *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__RemoveScopes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__AddScopesResponse
#define SOAP_TYPE__tds__AddScopesResponse (111)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__AddScopesResponse(struct soap*, const char*, int, const _tds__AddScopesResponse *, const char*);
SOAP_FMAC3 _tds__AddScopesResponse * SOAP_FMAC4 soap_in__tds__AddScopesResponse(struct soap*, const char*, _tds__AddScopesResponse *, const char*);

#ifndef soap_write__tds__AddScopesResponse
#define soap_write__tds__AddScopesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:AddScopesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__AddScopesResponse * SOAP_FMAC4 soap_get__tds__AddScopesResponse(struct soap*, _tds__AddScopesResponse *, const char*, const char*);

#ifndef soap_read__tds__AddScopesResponse
#define soap_read__tds__AddScopesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__AddScopesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__AddScopesResponse * SOAP_FMAC2 soap_instantiate__tds__AddScopesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__AddScopesResponse * soap_new__tds__AddScopesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__AddScopesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__AddScopesResponse * soap_new_req__tds__AddScopesResponse(struct soap *soap) { _tds__AddScopesResponse *_p = soap_instantiate__tds__AddScopesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__AddScopesResponse * soap_new_set__tds__AddScopesResponse(struct soap *soap) { _tds__AddScopesResponse *_p = soap_instantiate__tds__AddScopesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__AddScopesResponse(struct soap *soap, _tds__AddScopesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__AddScopesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__AddScopes
#define SOAP_TYPE__tds__AddScopes (110)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__AddScopes(struct soap*, const char*, int, const _tds__AddScopes *, const char*);
SOAP_FMAC3 _tds__AddScopes * SOAP_FMAC4 soap_in__tds__AddScopes(struct soap*, const char*, _tds__AddScopes *, const char*);

#ifndef soap_write__tds__AddScopes
#define soap_write__tds__AddScopes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:AddScopes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__AddScopes * SOAP_FMAC4 soap_get__tds__AddScopes(struct soap*, _tds__AddScopes *, const char*, const char*);

#ifndef soap_read__tds__AddScopes
#define soap_read__tds__AddScopes(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__AddScopes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__AddScopes * SOAP_FMAC2 soap_instantiate__tds__AddScopes(struct soap*, int, const char*, const char*, size_t*);

inline _tds__AddScopes * soap_new__tds__AddScopes(struct soap *soap, int n = -1) { return soap_instantiate__tds__AddScopes(soap, n, NULL, NULL, NULL); }

inline _tds__AddScopes * soap_new_req__tds__AddScopes(struct soap *soap, std::vector<std::string >& ScopeItem) { _tds__AddScopes *_p = soap_instantiate__tds__AddScopes(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__AddScopes::ScopeItem = ScopeItem; } return _p; }

inline _tds__AddScopes * soap_new_set__tds__AddScopes(struct soap *soap, std::vector<std::string >& ScopeItem) { _tds__AddScopes *_p = soap_instantiate__tds__AddScopes(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__AddScopes::ScopeItem = ScopeItem; } return _p; }

inline void soap_delete__tds__AddScopes(struct soap *soap, _tds__AddScopes *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__AddScopes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetScopesResponse
#define SOAP_TYPE__tds__SetScopesResponse (109)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetScopesResponse(struct soap*, const char*, int, const _tds__SetScopesResponse *, const char*);
SOAP_FMAC3 _tds__SetScopesResponse * SOAP_FMAC4 soap_in__tds__SetScopesResponse(struct soap*, const char*, _tds__SetScopesResponse *, const char*);

#ifndef soap_write__tds__SetScopesResponse
#define soap_write__tds__SetScopesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetScopesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetScopesResponse * SOAP_FMAC4 soap_get__tds__SetScopesResponse(struct soap*, _tds__SetScopesResponse *, const char*, const char*);

#ifndef soap_read__tds__SetScopesResponse
#define soap_read__tds__SetScopesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetScopesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetScopesResponse * SOAP_FMAC2 soap_instantiate__tds__SetScopesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetScopesResponse * soap_new__tds__SetScopesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetScopesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetScopesResponse * soap_new_req__tds__SetScopesResponse(struct soap *soap) { _tds__SetScopesResponse *_p = soap_instantiate__tds__SetScopesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SetScopesResponse * soap_new_set__tds__SetScopesResponse(struct soap *soap) { _tds__SetScopesResponse *_p = soap_instantiate__tds__SetScopesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__SetScopesResponse(struct soap *soap, _tds__SetScopesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetScopesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetScopes
#define SOAP_TYPE__tds__SetScopes (108)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetScopes(struct soap*, const char*, int, const _tds__SetScopes *, const char*);
SOAP_FMAC3 _tds__SetScopes * SOAP_FMAC4 soap_in__tds__SetScopes(struct soap*, const char*, _tds__SetScopes *, const char*);

#ifndef soap_write__tds__SetScopes
#define soap_write__tds__SetScopes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetScopes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetScopes * SOAP_FMAC4 soap_get__tds__SetScopes(struct soap*, _tds__SetScopes *, const char*, const char*);

#ifndef soap_read__tds__SetScopes
#define soap_read__tds__SetScopes(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetScopes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetScopes * SOAP_FMAC2 soap_instantiate__tds__SetScopes(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetScopes * soap_new__tds__SetScopes(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetScopes(soap, n, NULL, NULL, NULL); }

inline _tds__SetScopes * soap_new_req__tds__SetScopes(struct soap *soap, std::vector<std::string >& Scopes) { _tds__SetScopes *_p = soap_instantiate__tds__SetScopes(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetScopes::Scopes = Scopes; } return _p; }

inline _tds__SetScopes * soap_new_set__tds__SetScopes(struct soap *soap, std::vector<std::string >& Scopes) { _tds__SetScopes *_p = soap_instantiate__tds__SetScopes(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetScopes::Scopes = Scopes; } return _p; }

inline void soap_delete__tds__SetScopes(struct soap *soap, _tds__SetScopes *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetScopes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetScopesResponse
#define SOAP_TYPE__tds__GetScopesResponse (107)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetScopesResponse(struct soap*, const char*, int, const _tds__GetScopesResponse *, const char*);
SOAP_FMAC3 _tds__GetScopesResponse * SOAP_FMAC4 soap_in__tds__GetScopesResponse(struct soap*, const char*, _tds__GetScopesResponse *, const char*);

#ifndef soap_write__tds__GetScopesResponse
#define soap_write__tds__GetScopesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetScopesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetScopesResponse * SOAP_FMAC4 soap_get__tds__GetScopesResponse(struct soap*, _tds__GetScopesResponse *, const char*, const char*);

#ifndef soap_read__tds__GetScopesResponse
#define soap_read__tds__GetScopesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetScopesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetScopesResponse * SOAP_FMAC2 soap_instantiate__tds__GetScopesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetScopesResponse * soap_new__tds__GetScopesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetScopesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetScopesResponse * soap_new_req__tds__GetScopesResponse(struct soap *soap, std::vector<tt__Scope * >& Scopes) { _tds__GetScopesResponse *_p = soap_instantiate__tds__GetScopesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetScopesResponse::Scopes = Scopes; } return _p; }

inline _tds__GetScopesResponse * soap_new_set__tds__GetScopesResponse(struct soap *soap, std::vector<tt__Scope * >& Scopes) { _tds__GetScopesResponse *_p = soap_instantiate__tds__GetScopesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetScopesResponse::Scopes = Scopes; } return _p; }

inline void soap_delete__tds__GetScopesResponse(struct soap *soap, _tds__GetScopesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetScopesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetScopes
#define SOAP_TYPE__tds__GetScopes (106)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetScopes(struct soap*, const char*, int, const _tds__GetScopes *, const char*);
SOAP_FMAC3 _tds__GetScopes * SOAP_FMAC4 soap_in__tds__GetScopes(struct soap*, const char*, _tds__GetScopes *, const char*);

#ifndef soap_write__tds__GetScopes
#define soap_write__tds__GetScopes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetScopes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetScopes * SOAP_FMAC4 soap_get__tds__GetScopes(struct soap*, _tds__GetScopes *, const char*, const char*);

#ifndef soap_read__tds__GetScopes
#define soap_read__tds__GetScopes(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetScopes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetScopes * SOAP_FMAC2 soap_instantiate__tds__GetScopes(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetScopes * soap_new__tds__GetScopes(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetScopes(soap, n, NULL, NULL, NULL); }

inline _tds__GetScopes * soap_new_req__tds__GetScopes(struct soap *soap) { _tds__GetScopes *_p = soap_instantiate__tds__GetScopes(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetScopes * soap_new_set__tds__GetScopes(struct soap *soap) { _tds__GetScopes *_p = soap_instantiate__tds__GetScopes(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetScopes(struct soap *soap, _tds__GetScopes *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetScopes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetSystemLogResponse
#define SOAP_TYPE__tds__GetSystemLogResponse (105)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetSystemLogResponse(struct soap*, const char*, int, const _tds__GetSystemLogResponse *, const char*);
SOAP_FMAC3 _tds__GetSystemLogResponse * SOAP_FMAC4 soap_in__tds__GetSystemLogResponse(struct soap*, const char*, _tds__GetSystemLogResponse *, const char*);

#ifndef soap_write__tds__GetSystemLogResponse
#define soap_write__tds__GetSystemLogResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetSystemLogResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemLogResponse * SOAP_FMAC4 soap_get__tds__GetSystemLogResponse(struct soap*, _tds__GetSystemLogResponse *, const char*, const char*);

#ifndef soap_read__tds__GetSystemLogResponse
#define soap_read__tds__GetSystemLogResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetSystemLogResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetSystemLogResponse * SOAP_FMAC2 soap_instantiate__tds__GetSystemLogResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetSystemLogResponse * soap_new__tds__GetSystemLogResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetSystemLogResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetSystemLogResponse * soap_new_req__tds__GetSystemLogResponse(struct soap *soap, tt__SystemLog *SystemLog) { _tds__GetSystemLogResponse *_p = soap_instantiate__tds__GetSystemLogResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetSystemLogResponse::SystemLog = SystemLog; } return _p; }

inline _tds__GetSystemLogResponse * soap_new_set__tds__GetSystemLogResponse(struct soap *soap, tt__SystemLog *SystemLog) { _tds__GetSystemLogResponse *_p = soap_instantiate__tds__GetSystemLogResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetSystemLogResponse::SystemLog = SystemLog; } return _p; }

inline void soap_delete__tds__GetSystemLogResponse(struct soap *soap, _tds__GetSystemLogResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetSystemLogResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetSystemLog
#define SOAP_TYPE__tds__GetSystemLog (104)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetSystemLog(struct soap*, const char*, int, const _tds__GetSystemLog *, const char*);
SOAP_FMAC3 _tds__GetSystemLog * SOAP_FMAC4 soap_in__tds__GetSystemLog(struct soap*, const char*, _tds__GetSystemLog *, const char*);

#ifndef soap_write__tds__GetSystemLog
#define soap_write__tds__GetSystemLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetSystemLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemLog * SOAP_FMAC4 soap_get__tds__GetSystemLog(struct soap*, _tds__GetSystemLog *, const char*, const char*);

#ifndef soap_read__tds__GetSystemLog
#define soap_read__tds__GetSystemLog(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetSystemLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetSystemLog * SOAP_FMAC2 soap_instantiate__tds__GetSystemLog(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetSystemLog * soap_new__tds__GetSystemLog(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetSystemLog(soap, n, NULL, NULL, NULL); }

inline _tds__GetSystemLog * soap_new_req__tds__GetSystemLog(struct soap *soap, enum tt__SystemLogType LogType) { _tds__GetSystemLog *_p = soap_instantiate__tds__GetSystemLog(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetSystemLog::LogType = LogType; } return _p; }

inline _tds__GetSystemLog * soap_new_set__tds__GetSystemLog(struct soap *soap, enum tt__SystemLogType LogType) { _tds__GetSystemLog *_p = soap_instantiate__tds__GetSystemLog(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetSystemLog::LogType = LogType; } return _p; }

inline void soap_delete__tds__GetSystemLog(struct soap *soap, _tds__GetSystemLog *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetSystemLog(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetSystemSupportInformationResponse
#define SOAP_TYPE__tds__GetSystemSupportInformationResponse (103)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetSystemSupportInformationResponse(struct soap*, const char*, int, const _tds__GetSystemSupportInformationResponse *, const char*);
SOAP_FMAC3 _tds__GetSystemSupportInformationResponse * SOAP_FMAC4 soap_in__tds__GetSystemSupportInformationResponse(struct soap*, const char*, _tds__GetSystemSupportInformationResponse *, const char*);

#ifndef soap_write__tds__GetSystemSupportInformationResponse
#define soap_write__tds__GetSystemSupportInformationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetSystemSupportInformationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemSupportInformationResponse * SOAP_FMAC4 soap_get__tds__GetSystemSupportInformationResponse(struct soap*, _tds__GetSystemSupportInformationResponse *, const char*, const char*);

#ifndef soap_read__tds__GetSystemSupportInformationResponse
#define soap_read__tds__GetSystemSupportInformationResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetSystemSupportInformationResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetSystemSupportInformationResponse * SOAP_FMAC2 soap_instantiate__tds__GetSystemSupportInformationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetSystemSupportInformationResponse * soap_new__tds__GetSystemSupportInformationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetSystemSupportInformationResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetSystemSupportInformationResponse * soap_new_req__tds__GetSystemSupportInformationResponse(struct soap *soap, tt__SupportInformation *SupportInformation) { _tds__GetSystemSupportInformationResponse *_p = soap_instantiate__tds__GetSystemSupportInformationResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetSystemSupportInformationResponse::SupportInformation = SupportInformation; } return _p; }

inline _tds__GetSystemSupportInformationResponse * soap_new_set__tds__GetSystemSupportInformationResponse(struct soap *soap, tt__SupportInformation *SupportInformation) { _tds__GetSystemSupportInformationResponse *_p = soap_instantiate__tds__GetSystemSupportInformationResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetSystemSupportInformationResponse::SupportInformation = SupportInformation; } return _p; }

inline void soap_delete__tds__GetSystemSupportInformationResponse(struct soap *soap, _tds__GetSystemSupportInformationResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetSystemSupportInformationResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetSystemSupportInformation
#define SOAP_TYPE__tds__GetSystemSupportInformation (102)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetSystemSupportInformation(struct soap*, const char*, int, const _tds__GetSystemSupportInformation *, const char*);
SOAP_FMAC3 _tds__GetSystemSupportInformation * SOAP_FMAC4 soap_in__tds__GetSystemSupportInformation(struct soap*, const char*, _tds__GetSystemSupportInformation *, const char*);

#ifndef soap_write__tds__GetSystemSupportInformation
#define soap_write__tds__GetSystemSupportInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetSystemSupportInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemSupportInformation * SOAP_FMAC4 soap_get__tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation *, const char*, const char*);

#ifndef soap_read__tds__GetSystemSupportInformation
#define soap_read__tds__GetSystemSupportInformation(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetSystemSupportInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetSystemSupportInformation * SOAP_FMAC2 soap_instantiate__tds__GetSystemSupportInformation(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetSystemSupportInformation * soap_new__tds__GetSystemSupportInformation(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetSystemSupportInformation(soap, n, NULL, NULL, NULL); }

inline _tds__GetSystemSupportInformation * soap_new_req__tds__GetSystemSupportInformation(struct soap *soap) { _tds__GetSystemSupportInformation *_p = soap_instantiate__tds__GetSystemSupportInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetSystemSupportInformation * soap_new_set__tds__GetSystemSupportInformation(struct soap *soap) { _tds__GetSystemSupportInformation *_p = soap_instantiate__tds__GetSystemSupportInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetSystemSupportInformation(struct soap *soap, _tds__GetSystemSupportInformation *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetSystemSupportInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetSystemBackupResponse
#define SOAP_TYPE__tds__GetSystemBackupResponse (101)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetSystemBackupResponse(struct soap*, const char*, int, const _tds__GetSystemBackupResponse *, const char*);
SOAP_FMAC3 _tds__GetSystemBackupResponse * SOAP_FMAC4 soap_in__tds__GetSystemBackupResponse(struct soap*, const char*, _tds__GetSystemBackupResponse *, const char*);

#ifndef soap_write__tds__GetSystemBackupResponse
#define soap_write__tds__GetSystemBackupResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetSystemBackupResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemBackupResponse * SOAP_FMAC4 soap_get__tds__GetSystemBackupResponse(struct soap*, _tds__GetSystemBackupResponse *, const char*, const char*);

#ifndef soap_read__tds__GetSystemBackupResponse
#define soap_read__tds__GetSystemBackupResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetSystemBackupResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetSystemBackupResponse * SOAP_FMAC2 soap_instantiate__tds__GetSystemBackupResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetSystemBackupResponse * soap_new__tds__GetSystemBackupResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetSystemBackupResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetSystemBackupResponse * soap_new_req__tds__GetSystemBackupResponse(struct soap *soap, std::vector<tt__BackupFile * >& BackupFiles) { _tds__GetSystemBackupResponse *_p = soap_instantiate__tds__GetSystemBackupResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetSystemBackupResponse::BackupFiles = BackupFiles; } return _p; }

inline _tds__GetSystemBackupResponse * soap_new_set__tds__GetSystemBackupResponse(struct soap *soap, std::vector<tt__BackupFile * >& BackupFiles) { _tds__GetSystemBackupResponse *_p = soap_instantiate__tds__GetSystemBackupResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetSystemBackupResponse::BackupFiles = BackupFiles; } return _p; }

inline void soap_delete__tds__GetSystemBackupResponse(struct soap *soap, _tds__GetSystemBackupResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetSystemBackupResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetSystemBackup
#define SOAP_TYPE__tds__GetSystemBackup (100)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetSystemBackup(struct soap*, const char*, int, const _tds__GetSystemBackup *, const char*);
SOAP_FMAC3 _tds__GetSystemBackup * SOAP_FMAC4 soap_in__tds__GetSystemBackup(struct soap*, const char*, _tds__GetSystemBackup *, const char*);

#ifndef soap_write__tds__GetSystemBackup
#define soap_write__tds__GetSystemBackup(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetSystemBackup", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemBackup * SOAP_FMAC4 soap_get__tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup *, const char*, const char*);

#ifndef soap_read__tds__GetSystemBackup
#define soap_read__tds__GetSystemBackup(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetSystemBackup(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetSystemBackup * SOAP_FMAC2 soap_instantiate__tds__GetSystemBackup(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetSystemBackup * soap_new__tds__GetSystemBackup(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetSystemBackup(soap, n, NULL, NULL, NULL); }

inline _tds__GetSystemBackup * soap_new_req__tds__GetSystemBackup(struct soap *soap) { _tds__GetSystemBackup *_p = soap_instantiate__tds__GetSystemBackup(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetSystemBackup * soap_new_set__tds__GetSystemBackup(struct soap *soap) { _tds__GetSystemBackup *_p = soap_instantiate__tds__GetSystemBackup(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetSystemBackup(struct soap *soap, _tds__GetSystemBackup *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetSystemBackup(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__RestoreSystemResponse
#define SOAP_TYPE__tds__RestoreSystemResponse (99)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__RestoreSystemResponse(struct soap*, const char*, int, const _tds__RestoreSystemResponse *, const char*);
SOAP_FMAC3 _tds__RestoreSystemResponse * SOAP_FMAC4 soap_in__tds__RestoreSystemResponse(struct soap*, const char*, _tds__RestoreSystemResponse *, const char*);

#ifndef soap_write__tds__RestoreSystemResponse
#define soap_write__tds__RestoreSystemResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:RestoreSystemResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__RestoreSystemResponse * SOAP_FMAC4 soap_get__tds__RestoreSystemResponse(struct soap*, _tds__RestoreSystemResponse *, const char*, const char*);

#ifndef soap_read__tds__RestoreSystemResponse
#define soap_read__tds__RestoreSystemResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__RestoreSystemResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__RestoreSystemResponse * SOAP_FMAC2 soap_instantiate__tds__RestoreSystemResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__RestoreSystemResponse * soap_new__tds__RestoreSystemResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__RestoreSystemResponse(soap, n, NULL, NULL, NULL); }

inline _tds__RestoreSystemResponse * soap_new_req__tds__RestoreSystemResponse(struct soap *soap) { _tds__RestoreSystemResponse *_p = soap_instantiate__tds__RestoreSystemResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__RestoreSystemResponse * soap_new_set__tds__RestoreSystemResponse(struct soap *soap) { _tds__RestoreSystemResponse *_p = soap_instantiate__tds__RestoreSystemResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__RestoreSystemResponse(struct soap *soap, _tds__RestoreSystemResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__RestoreSystemResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__RestoreSystem
#define SOAP_TYPE__tds__RestoreSystem (98)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__RestoreSystem(struct soap*, const char*, int, const _tds__RestoreSystem *, const char*);
SOAP_FMAC3 _tds__RestoreSystem * SOAP_FMAC4 soap_in__tds__RestoreSystem(struct soap*, const char*, _tds__RestoreSystem *, const char*);

#ifndef soap_write__tds__RestoreSystem
#define soap_write__tds__RestoreSystem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:RestoreSystem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__RestoreSystem * SOAP_FMAC4 soap_get__tds__RestoreSystem(struct soap*, _tds__RestoreSystem *, const char*, const char*);

#ifndef soap_read__tds__RestoreSystem
#define soap_read__tds__RestoreSystem(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__RestoreSystem(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__RestoreSystem * SOAP_FMAC2 soap_instantiate__tds__RestoreSystem(struct soap*, int, const char*, const char*, size_t*);

inline _tds__RestoreSystem * soap_new__tds__RestoreSystem(struct soap *soap, int n = -1) { return soap_instantiate__tds__RestoreSystem(soap, n, NULL, NULL, NULL); }

inline _tds__RestoreSystem * soap_new_req__tds__RestoreSystem(struct soap *soap, std::vector<tt__BackupFile * >& BackupFiles) { _tds__RestoreSystem *_p = soap_instantiate__tds__RestoreSystem(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__RestoreSystem::BackupFiles = BackupFiles; } return _p; }

inline _tds__RestoreSystem * soap_new_set__tds__RestoreSystem(struct soap *soap, std::vector<tt__BackupFile * >& BackupFiles) { _tds__RestoreSystem *_p = soap_instantiate__tds__RestoreSystem(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__RestoreSystem::BackupFiles = BackupFiles; } return _p; }

inline void soap_delete__tds__RestoreSystem(struct soap *soap, _tds__RestoreSystem *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__RestoreSystem(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SystemRebootResponse
#define SOAP_TYPE__tds__SystemRebootResponse (97)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SystemRebootResponse(struct soap*, const char*, int, const _tds__SystemRebootResponse *, const char*);
SOAP_FMAC3 _tds__SystemRebootResponse * SOAP_FMAC4 soap_in__tds__SystemRebootResponse(struct soap*, const char*, _tds__SystemRebootResponse *, const char*);

#ifndef soap_write__tds__SystemRebootResponse
#define soap_write__tds__SystemRebootResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SystemRebootResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SystemRebootResponse * SOAP_FMAC4 soap_get__tds__SystemRebootResponse(struct soap*, _tds__SystemRebootResponse *, const char*, const char*);

#ifndef soap_read__tds__SystemRebootResponse
#define soap_read__tds__SystemRebootResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SystemRebootResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SystemRebootResponse * SOAP_FMAC2 soap_instantiate__tds__SystemRebootResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SystemRebootResponse * soap_new__tds__SystemRebootResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SystemRebootResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SystemRebootResponse * soap_new_req__tds__SystemRebootResponse(struct soap *soap, std::string& Message) { _tds__SystemRebootResponse *_p = soap_instantiate__tds__SystemRebootResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SystemRebootResponse::Message = Message; } return _p; }

inline _tds__SystemRebootResponse * soap_new_set__tds__SystemRebootResponse(struct soap *soap, std::string& Message) { _tds__SystemRebootResponse *_p = soap_instantiate__tds__SystemRebootResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SystemRebootResponse::Message = Message; } return _p; }

inline void soap_delete__tds__SystemRebootResponse(struct soap *soap, _tds__SystemRebootResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SystemRebootResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SystemReboot
#define SOAP_TYPE__tds__SystemReboot (96)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SystemReboot(struct soap*, const char*, int, const _tds__SystemReboot *, const char*);
SOAP_FMAC3 _tds__SystemReboot * SOAP_FMAC4 soap_in__tds__SystemReboot(struct soap*, const char*, _tds__SystemReboot *, const char*);

#ifndef soap_write__tds__SystemReboot
#define soap_write__tds__SystemReboot(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SystemReboot", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SystemReboot * SOAP_FMAC4 soap_get__tds__SystemReboot(struct soap*, _tds__SystemReboot *, const char*, const char*);

#ifndef soap_read__tds__SystemReboot
#define soap_read__tds__SystemReboot(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SystemReboot(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SystemReboot * SOAP_FMAC2 soap_instantiate__tds__SystemReboot(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SystemReboot * soap_new__tds__SystemReboot(struct soap *soap, int n = -1) { return soap_instantiate__tds__SystemReboot(soap, n, NULL, NULL, NULL); }

inline _tds__SystemReboot * soap_new_req__tds__SystemReboot(struct soap *soap) { _tds__SystemReboot *_p = soap_instantiate__tds__SystemReboot(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SystemReboot * soap_new_set__tds__SystemReboot(struct soap *soap) { _tds__SystemReboot *_p = soap_instantiate__tds__SystemReboot(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__SystemReboot(struct soap *soap, _tds__SystemReboot *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SystemReboot(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__UpgradeSystemFirmwareResponse
#define SOAP_TYPE__tds__UpgradeSystemFirmwareResponse (95)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__UpgradeSystemFirmwareResponse(struct soap*, const char*, int, const _tds__UpgradeSystemFirmwareResponse *, const char*);
SOAP_FMAC3 _tds__UpgradeSystemFirmwareResponse * SOAP_FMAC4 soap_in__tds__UpgradeSystemFirmwareResponse(struct soap*, const char*, _tds__UpgradeSystemFirmwareResponse *, const char*);

#ifndef soap_write__tds__UpgradeSystemFirmwareResponse
#define soap_write__tds__UpgradeSystemFirmwareResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:UpgradeSystemFirmwareResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__UpgradeSystemFirmwareResponse * SOAP_FMAC4 soap_get__tds__UpgradeSystemFirmwareResponse(struct soap*, _tds__UpgradeSystemFirmwareResponse *, const char*, const char*);

#ifndef soap_read__tds__UpgradeSystemFirmwareResponse
#define soap_read__tds__UpgradeSystemFirmwareResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__UpgradeSystemFirmwareResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__UpgradeSystemFirmwareResponse * SOAP_FMAC2 soap_instantiate__tds__UpgradeSystemFirmwareResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__UpgradeSystemFirmwareResponse * soap_new__tds__UpgradeSystemFirmwareResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__UpgradeSystemFirmwareResponse(soap, n, NULL, NULL, NULL); }

inline _tds__UpgradeSystemFirmwareResponse * soap_new_req__tds__UpgradeSystemFirmwareResponse(struct soap *soap) { _tds__UpgradeSystemFirmwareResponse *_p = soap_instantiate__tds__UpgradeSystemFirmwareResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__UpgradeSystemFirmwareResponse * soap_new_set__tds__UpgradeSystemFirmwareResponse(struct soap *soap, std::string *Message) { _tds__UpgradeSystemFirmwareResponse *_p = soap_instantiate__tds__UpgradeSystemFirmwareResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__UpgradeSystemFirmwareResponse::Message = Message; } return _p; }

inline void soap_delete__tds__UpgradeSystemFirmwareResponse(struct soap *soap, _tds__UpgradeSystemFirmwareResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__UpgradeSystemFirmwareResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__UpgradeSystemFirmware
#define SOAP_TYPE__tds__UpgradeSystemFirmware (94)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__UpgradeSystemFirmware(struct soap*, const char*, int, const _tds__UpgradeSystemFirmware *, const char*);
SOAP_FMAC3 _tds__UpgradeSystemFirmware * SOAP_FMAC4 soap_in__tds__UpgradeSystemFirmware(struct soap*, const char*, _tds__UpgradeSystemFirmware *, const char*);

#ifndef soap_write__tds__UpgradeSystemFirmware
#define soap_write__tds__UpgradeSystemFirmware(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:UpgradeSystemFirmware", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__UpgradeSystemFirmware * SOAP_FMAC4 soap_get__tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware *, const char*, const char*);

#ifndef soap_read__tds__UpgradeSystemFirmware
#define soap_read__tds__UpgradeSystemFirmware(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__UpgradeSystemFirmware(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__UpgradeSystemFirmware * SOAP_FMAC2 soap_instantiate__tds__UpgradeSystemFirmware(struct soap*, int, const char*, const char*, size_t*);

inline _tds__UpgradeSystemFirmware * soap_new__tds__UpgradeSystemFirmware(struct soap *soap, int n = -1) { return soap_instantiate__tds__UpgradeSystemFirmware(soap, n, NULL, NULL, NULL); }

inline _tds__UpgradeSystemFirmware * soap_new_req__tds__UpgradeSystemFirmware(struct soap *soap, tt__AttachmentData *Firmware) { _tds__UpgradeSystemFirmware *_p = soap_instantiate__tds__UpgradeSystemFirmware(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__UpgradeSystemFirmware::Firmware = Firmware; } return _p; }

inline _tds__UpgradeSystemFirmware * soap_new_set__tds__UpgradeSystemFirmware(struct soap *soap, tt__AttachmentData *Firmware) { _tds__UpgradeSystemFirmware *_p = soap_instantiate__tds__UpgradeSystemFirmware(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__UpgradeSystemFirmware::Firmware = Firmware; } return _p; }

inline void soap_delete__tds__UpgradeSystemFirmware(struct soap *soap, _tds__UpgradeSystemFirmware *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__UpgradeSystemFirmware(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetSystemFactoryDefaultResponse
#define SOAP_TYPE__tds__SetSystemFactoryDefaultResponse (93)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetSystemFactoryDefaultResponse(struct soap*, const char*, int, const _tds__SetSystemFactoryDefaultResponse *, const char*);
SOAP_FMAC3 _tds__SetSystemFactoryDefaultResponse * SOAP_FMAC4 soap_in__tds__SetSystemFactoryDefaultResponse(struct soap*, const char*, _tds__SetSystemFactoryDefaultResponse *, const char*);

#ifndef soap_write__tds__SetSystemFactoryDefaultResponse
#define soap_write__tds__SetSystemFactoryDefaultResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetSystemFactoryDefaultResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetSystemFactoryDefaultResponse * SOAP_FMAC4 soap_get__tds__SetSystemFactoryDefaultResponse(struct soap*, _tds__SetSystemFactoryDefaultResponse *, const char*, const char*);

#ifndef soap_read__tds__SetSystemFactoryDefaultResponse
#define soap_read__tds__SetSystemFactoryDefaultResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetSystemFactoryDefaultResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetSystemFactoryDefaultResponse * SOAP_FMAC2 soap_instantiate__tds__SetSystemFactoryDefaultResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetSystemFactoryDefaultResponse * soap_new__tds__SetSystemFactoryDefaultResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetSystemFactoryDefaultResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetSystemFactoryDefaultResponse * soap_new_req__tds__SetSystemFactoryDefaultResponse(struct soap *soap) { _tds__SetSystemFactoryDefaultResponse *_p = soap_instantiate__tds__SetSystemFactoryDefaultResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SetSystemFactoryDefaultResponse * soap_new_set__tds__SetSystemFactoryDefaultResponse(struct soap *soap) { _tds__SetSystemFactoryDefaultResponse *_p = soap_instantiate__tds__SetSystemFactoryDefaultResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__SetSystemFactoryDefaultResponse(struct soap *soap, _tds__SetSystemFactoryDefaultResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetSystemFactoryDefaultResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetSystemFactoryDefault
#define SOAP_TYPE__tds__SetSystemFactoryDefault (92)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetSystemFactoryDefault(struct soap*, const char*, int, const _tds__SetSystemFactoryDefault *, const char*);
SOAP_FMAC3 _tds__SetSystemFactoryDefault * SOAP_FMAC4 soap_in__tds__SetSystemFactoryDefault(struct soap*, const char*, _tds__SetSystemFactoryDefault *, const char*);

#ifndef soap_write__tds__SetSystemFactoryDefault
#define soap_write__tds__SetSystemFactoryDefault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetSystemFactoryDefault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetSystemFactoryDefault * SOAP_FMAC4 soap_get__tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault *, const char*, const char*);

#ifndef soap_read__tds__SetSystemFactoryDefault
#define soap_read__tds__SetSystemFactoryDefault(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetSystemFactoryDefault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetSystemFactoryDefault * SOAP_FMAC2 soap_instantiate__tds__SetSystemFactoryDefault(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetSystemFactoryDefault * soap_new__tds__SetSystemFactoryDefault(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetSystemFactoryDefault(soap, n, NULL, NULL, NULL); }

inline _tds__SetSystemFactoryDefault * soap_new_req__tds__SetSystemFactoryDefault(struct soap *soap, enum tt__FactoryDefaultType FactoryDefault) { _tds__SetSystemFactoryDefault *_p = soap_instantiate__tds__SetSystemFactoryDefault(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetSystemFactoryDefault::FactoryDefault = FactoryDefault; } return _p; }

inline _tds__SetSystemFactoryDefault * soap_new_set__tds__SetSystemFactoryDefault(struct soap *soap, enum tt__FactoryDefaultType FactoryDefault) { _tds__SetSystemFactoryDefault *_p = soap_instantiate__tds__SetSystemFactoryDefault(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetSystemFactoryDefault::FactoryDefault = FactoryDefault; } return _p; }

inline void soap_delete__tds__SetSystemFactoryDefault(struct soap *soap, _tds__SetSystemFactoryDefault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetSystemFactoryDefault(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetSystemDateAndTimeResponse
#define SOAP_TYPE__tds__GetSystemDateAndTimeResponse (91)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetSystemDateAndTimeResponse(struct soap*, const char*, int, const _tds__GetSystemDateAndTimeResponse *, const char*);
SOAP_FMAC3 _tds__GetSystemDateAndTimeResponse * SOAP_FMAC4 soap_in__tds__GetSystemDateAndTimeResponse(struct soap*, const char*, _tds__GetSystemDateAndTimeResponse *, const char*);

#ifndef soap_write__tds__GetSystemDateAndTimeResponse
#define soap_write__tds__GetSystemDateAndTimeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetSystemDateAndTimeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemDateAndTimeResponse * SOAP_FMAC4 soap_get__tds__GetSystemDateAndTimeResponse(struct soap*, _tds__GetSystemDateAndTimeResponse *, const char*, const char*);

#ifndef soap_read__tds__GetSystemDateAndTimeResponse
#define soap_read__tds__GetSystemDateAndTimeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetSystemDateAndTimeResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetSystemDateAndTimeResponse * SOAP_FMAC2 soap_instantiate__tds__GetSystemDateAndTimeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetSystemDateAndTimeResponse * soap_new__tds__GetSystemDateAndTimeResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetSystemDateAndTimeResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetSystemDateAndTimeResponse * soap_new_req__tds__GetSystemDateAndTimeResponse(struct soap *soap, tt__SystemDateTime *SystemDateAndTime) { _tds__GetSystemDateAndTimeResponse *_p = soap_instantiate__tds__GetSystemDateAndTimeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetSystemDateAndTimeResponse::SystemDateAndTime = SystemDateAndTime; } return _p; }

inline _tds__GetSystemDateAndTimeResponse * soap_new_set__tds__GetSystemDateAndTimeResponse(struct soap *soap, tt__SystemDateTime *SystemDateAndTime) { _tds__GetSystemDateAndTimeResponse *_p = soap_instantiate__tds__GetSystemDateAndTimeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetSystemDateAndTimeResponse::SystemDateAndTime = SystemDateAndTime; } return _p; }

inline void soap_delete__tds__GetSystemDateAndTimeResponse(struct soap *soap, _tds__GetSystemDateAndTimeResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetSystemDateAndTimeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetSystemDateAndTime
#define SOAP_TYPE__tds__GetSystemDateAndTime (90)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetSystemDateAndTime(struct soap*, const char*, int, const _tds__GetSystemDateAndTime *, const char*);
SOAP_FMAC3 _tds__GetSystemDateAndTime * SOAP_FMAC4 soap_in__tds__GetSystemDateAndTime(struct soap*, const char*, _tds__GetSystemDateAndTime *, const char*);

#ifndef soap_write__tds__GetSystemDateAndTime
#define soap_write__tds__GetSystemDateAndTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetSystemDateAndTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemDateAndTime * SOAP_FMAC4 soap_get__tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime *, const char*, const char*);

#ifndef soap_read__tds__GetSystemDateAndTime
#define soap_read__tds__GetSystemDateAndTime(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetSystemDateAndTime(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetSystemDateAndTime * SOAP_FMAC2 soap_instantiate__tds__GetSystemDateAndTime(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetSystemDateAndTime * soap_new__tds__GetSystemDateAndTime(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetSystemDateAndTime(soap, n, NULL, NULL, NULL); }

inline _tds__GetSystemDateAndTime * soap_new_req__tds__GetSystemDateAndTime(struct soap *soap) { _tds__GetSystemDateAndTime *_p = soap_instantiate__tds__GetSystemDateAndTime(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetSystemDateAndTime * soap_new_set__tds__GetSystemDateAndTime(struct soap *soap) { _tds__GetSystemDateAndTime *_p = soap_instantiate__tds__GetSystemDateAndTime(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetSystemDateAndTime(struct soap *soap, _tds__GetSystemDateAndTime *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetSystemDateAndTime(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetSystemDateAndTimeResponse
#define SOAP_TYPE__tds__SetSystemDateAndTimeResponse (89)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetSystemDateAndTimeResponse(struct soap*, const char*, int, const _tds__SetSystemDateAndTimeResponse *, const char*);
SOAP_FMAC3 _tds__SetSystemDateAndTimeResponse * SOAP_FMAC4 soap_in__tds__SetSystemDateAndTimeResponse(struct soap*, const char*, _tds__SetSystemDateAndTimeResponse *, const char*);

#ifndef soap_write__tds__SetSystemDateAndTimeResponse
#define soap_write__tds__SetSystemDateAndTimeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetSystemDateAndTimeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetSystemDateAndTimeResponse * SOAP_FMAC4 soap_get__tds__SetSystemDateAndTimeResponse(struct soap*, _tds__SetSystemDateAndTimeResponse *, const char*, const char*);

#ifndef soap_read__tds__SetSystemDateAndTimeResponse
#define soap_read__tds__SetSystemDateAndTimeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetSystemDateAndTimeResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetSystemDateAndTimeResponse * SOAP_FMAC2 soap_instantiate__tds__SetSystemDateAndTimeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetSystemDateAndTimeResponse * soap_new__tds__SetSystemDateAndTimeResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetSystemDateAndTimeResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetSystemDateAndTimeResponse * soap_new_req__tds__SetSystemDateAndTimeResponse(struct soap *soap) { _tds__SetSystemDateAndTimeResponse *_p = soap_instantiate__tds__SetSystemDateAndTimeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__SetSystemDateAndTimeResponse * soap_new_set__tds__SetSystemDateAndTimeResponse(struct soap *soap) { _tds__SetSystemDateAndTimeResponse *_p = soap_instantiate__tds__SetSystemDateAndTimeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__SetSystemDateAndTimeResponse(struct soap *soap, _tds__SetSystemDateAndTimeResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetSystemDateAndTimeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__SetSystemDateAndTime
#define SOAP_TYPE__tds__SetSystemDateAndTime (88)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetSystemDateAndTime(struct soap*, const char*, int, const _tds__SetSystemDateAndTime *, const char*);
SOAP_FMAC3 _tds__SetSystemDateAndTime * SOAP_FMAC4 soap_in__tds__SetSystemDateAndTime(struct soap*, const char*, _tds__SetSystemDateAndTime *, const char*);

#ifndef soap_write__tds__SetSystemDateAndTime
#define soap_write__tds__SetSystemDateAndTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SetSystemDateAndTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetSystemDateAndTime * SOAP_FMAC4 soap_get__tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime *, const char*, const char*);

#ifndef soap_read__tds__SetSystemDateAndTime
#define soap_read__tds__SetSystemDateAndTime(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__SetSystemDateAndTime(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__SetSystemDateAndTime * SOAP_FMAC2 soap_instantiate__tds__SetSystemDateAndTime(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetSystemDateAndTime * soap_new__tds__SetSystemDateAndTime(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetSystemDateAndTime(soap, n, NULL, NULL, NULL); }

inline _tds__SetSystemDateAndTime * soap_new_req__tds__SetSystemDateAndTime(struct soap *soap, enum tt__SetDateTimeType DateTimeType, bool DaylightSavings) { _tds__SetSystemDateAndTime *_p = soap_instantiate__tds__SetSystemDateAndTime(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetSystemDateAndTime::DateTimeType = DateTimeType; _p->_tds__SetSystemDateAndTime::DaylightSavings = DaylightSavings; } return _p; }

inline _tds__SetSystemDateAndTime * soap_new_set__tds__SetSystemDateAndTime(struct soap *soap, enum tt__SetDateTimeType DateTimeType, bool DaylightSavings, tt__TimeZone *TimeZone, tt__DateTime *UTCDateTime) { _tds__SetSystemDateAndTime *_p = soap_instantiate__tds__SetSystemDateAndTime(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__SetSystemDateAndTime::DateTimeType = DateTimeType; _p->_tds__SetSystemDateAndTime::DaylightSavings = DaylightSavings; _p->_tds__SetSystemDateAndTime::TimeZone = TimeZone; _p->_tds__SetSystemDateAndTime::UTCDateTime = UTCDateTime; } return _p; }

inline void soap_delete__tds__SetSystemDateAndTime(struct soap *soap, _tds__SetSystemDateAndTime *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__SetSystemDateAndTime(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetDeviceInformationResponse
#define SOAP_TYPE__tds__GetDeviceInformationResponse (87)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDeviceInformationResponse(struct soap*, const char*, int, const _tds__GetDeviceInformationResponse *, const char*);
SOAP_FMAC3 _tds__GetDeviceInformationResponse * SOAP_FMAC4 soap_in__tds__GetDeviceInformationResponse(struct soap*, const char*, _tds__GetDeviceInformationResponse *, const char*);

#ifndef soap_write__tds__GetDeviceInformationResponse
#define soap_write__tds__GetDeviceInformationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetDeviceInformationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDeviceInformationResponse * SOAP_FMAC4 soap_get__tds__GetDeviceInformationResponse(struct soap*, _tds__GetDeviceInformationResponse *, const char*, const char*);

#ifndef soap_read__tds__GetDeviceInformationResponse
#define soap_read__tds__GetDeviceInformationResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetDeviceInformationResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetDeviceInformationResponse * SOAP_FMAC2 soap_instantiate__tds__GetDeviceInformationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDeviceInformationResponse * soap_new__tds__GetDeviceInformationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDeviceInformationResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetDeviceInformationResponse * soap_new_req__tds__GetDeviceInformationResponse(struct soap *soap, std::string& Manufacturer, std::string& Model, std::string& FirmwareVersion, std::string& SerialNumber, std::string& HardwareId) { _tds__GetDeviceInformationResponse *_p = soap_instantiate__tds__GetDeviceInformationResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetDeviceInformationResponse::Manufacturer = Manufacturer; _p->_tds__GetDeviceInformationResponse::Model = Model; _p->_tds__GetDeviceInformationResponse::FirmwareVersion = FirmwareVersion; _p->_tds__GetDeviceInformationResponse::SerialNumber = SerialNumber; _p->_tds__GetDeviceInformationResponse::HardwareId = HardwareId; } return _p; }

inline _tds__GetDeviceInformationResponse * soap_new_set__tds__GetDeviceInformationResponse(struct soap *soap, std::string& Manufacturer, std::string& Model, std::string& FirmwareVersion, std::string& SerialNumber, std::string& HardwareId) { _tds__GetDeviceInformationResponse *_p = soap_instantiate__tds__GetDeviceInformationResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetDeviceInformationResponse::Manufacturer = Manufacturer; _p->_tds__GetDeviceInformationResponse::Model = Model; _p->_tds__GetDeviceInformationResponse::FirmwareVersion = FirmwareVersion; _p->_tds__GetDeviceInformationResponse::SerialNumber = SerialNumber; _p->_tds__GetDeviceInformationResponse::HardwareId = HardwareId; } return _p; }

inline void soap_delete__tds__GetDeviceInformationResponse(struct soap *soap, _tds__GetDeviceInformationResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetDeviceInformationResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetDeviceInformation
#define SOAP_TYPE__tds__GetDeviceInformation (86)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDeviceInformation(struct soap*, const char*, int, const _tds__GetDeviceInformation *, const char*);
SOAP_FMAC3 _tds__GetDeviceInformation * SOAP_FMAC4 soap_in__tds__GetDeviceInformation(struct soap*, const char*, _tds__GetDeviceInformation *, const char*);

#ifndef soap_write__tds__GetDeviceInformation
#define soap_write__tds__GetDeviceInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetDeviceInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDeviceInformation * SOAP_FMAC4 soap_get__tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation *, const char*, const char*);

#ifndef soap_read__tds__GetDeviceInformation
#define soap_read__tds__GetDeviceInformation(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetDeviceInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetDeviceInformation * SOAP_FMAC2 soap_instantiate__tds__GetDeviceInformation(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDeviceInformation * soap_new__tds__GetDeviceInformation(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDeviceInformation(soap, n, NULL, NULL, NULL); }

inline _tds__GetDeviceInformation * soap_new_req__tds__GetDeviceInformation(struct soap *soap) { _tds__GetDeviceInformation *_p = soap_instantiate__tds__GetDeviceInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetDeviceInformation * soap_new_set__tds__GetDeviceInformation(struct soap *soap) { _tds__GetDeviceInformation *_p = soap_instantiate__tds__GetDeviceInformation(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetDeviceInformation(struct soap *soap, _tds__GetDeviceInformation *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetDeviceInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetServiceCapabilitiesResponse
#define SOAP_TYPE__tds__GetServiceCapabilitiesResponse (85)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetServiceCapabilitiesResponse(struct soap*, const char*, int, const _tds__GetServiceCapabilitiesResponse *, const char*);
SOAP_FMAC3 _tds__GetServiceCapabilitiesResponse * SOAP_FMAC4 soap_in__tds__GetServiceCapabilitiesResponse(struct soap*, const char*, _tds__GetServiceCapabilitiesResponse *, const char*);

#ifndef soap_write__tds__GetServiceCapabilitiesResponse
#define soap_write__tds__GetServiceCapabilitiesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetServiceCapabilitiesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetServiceCapabilitiesResponse * SOAP_FMAC4 soap_get__tds__GetServiceCapabilitiesResponse(struct soap*, _tds__GetServiceCapabilitiesResponse *, const char*, const char*);

#ifndef soap_read__tds__GetServiceCapabilitiesResponse
#define soap_read__tds__GetServiceCapabilitiesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetServiceCapabilitiesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetServiceCapabilitiesResponse * SOAP_FMAC2 soap_instantiate__tds__GetServiceCapabilitiesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetServiceCapabilitiesResponse * soap_new__tds__GetServiceCapabilitiesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetServiceCapabilitiesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetServiceCapabilitiesResponse * soap_new_req__tds__GetServiceCapabilitiesResponse(struct soap *soap, tds__DeviceServiceCapabilities *Capabilities) { _tds__GetServiceCapabilitiesResponse *_p = soap_instantiate__tds__GetServiceCapabilitiesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetServiceCapabilitiesResponse::Capabilities = Capabilities; } return _p; }

inline _tds__GetServiceCapabilitiesResponse * soap_new_set__tds__GetServiceCapabilitiesResponse(struct soap *soap, tds__DeviceServiceCapabilities *Capabilities) { _tds__GetServiceCapabilitiesResponse *_p = soap_instantiate__tds__GetServiceCapabilitiesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetServiceCapabilitiesResponse::Capabilities = Capabilities; } return _p; }

inline void soap_delete__tds__GetServiceCapabilitiesResponse(struct soap *soap, _tds__GetServiceCapabilitiesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetServiceCapabilitiesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetServiceCapabilities
#define SOAP_TYPE__tds__GetServiceCapabilities (84)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetServiceCapabilities(struct soap*, const char*, int, const _tds__GetServiceCapabilities *, const char*);
SOAP_FMAC3 _tds__GetServiceCapabilities * SOAP_FMAC4 soap_in__tds__GetServiceCapabilities(struct soap*, const char*, _tds__GetServiceCapabilities *, const char*);

#ifndef soap_write__tds__GetServiceCapabilities
#define soap_write__tds__GetServiceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetServiceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetServiceCapabilities * SOAP_FMAC4 soap_get__tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_read__tds__GetServiceCapabilities
#define soap_read__tds__GetServiceCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetServiceCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetServiceCapabilities * SOAP_FMAC2 soap_instantiate__tds__GetServiceCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetServiceCapabilities * soap_new__tds__GetServiceCapabilities(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetServiceCapabilities(soap, n, NULL, NULL, NULL); }

inline _tds__GetServiceCapabilities * soap_new_req__tds__GetServiceCapabilities(struct soap *soap) { _tds__GetServiceCapabilities *_p = soap_instantiate__tds__GetServiceCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _tds__GetServiceCapabilities * soap_new_set__tds__GetServiceCapabilities(struct soap *soap) { _tds__GetServiceCapabilities *_p = soap_instantiate__tds__GetServiceCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__tds__GetServiceCapabilities(struct soap *soap, _tds__GetServiceCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetServiceCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetServicesResponse
#define SOAP_TYPE__tds__GetServicesResponse (83)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetServicesResponse(struct soap*, const char*, int, const _tds__GetServicesResponse *, const char*);
SOAP_FMAC3 _tds__GetServicesResponse * SOAP_FMAC4 soap_in__tds__GetServicesResponse(struct soap*, const char*, _tds__GetServicesResponse *, const char*);

#ifndef soap_write__tds__GetServicesResponse
#define soap_write__tds__GetServicesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetServicesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetServicesResponse * SOAP_FMAC4 soap_get__tds__GetServicesResponse(struct soap*, _tds__GetServicesResponse *, const char*, const char*);

#ifndef soap_read__tds__GetServicesResponse
#define soap_read__tds__GetServicesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetServicesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetServicesResponse * SOAP_FMAC2 soap_instantiate__tds__GetServicesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetServicesResponse * soap_new__tds__GetServicesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetServicesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetServicesResponse * soap_new_req__tds__GetServicesResponse(struct soap *soap, std::vector<tds__Service * >& Service) { _tds__GetServicesResponse *_p = soap_instantiate__tds__GetServicesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetServicesResponse::Service = Service; } return _p; }

inline _tds__GetServicesResponse * soap_new_set__tds__GetServicesResponse(struct soap *soap, std::vector<tds__Service * >& Service) { _tds__GetServicesResponse *_p = soap_instantiate__tds__GetServicesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetServicesResponse::Service = Service; } return _p; }

inline void soap_delete__tds__GetServicesResponse(struct soap *soap, _tds__GetServicesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetServicesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tds__GetServices
#define SOAP_TYPE__tds__GetServices (82)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetServices(struct soap*, const char*, int, const _tds__GetServices *, const char*);
SOAP_FMAC3 _tds__GetServices * SOAP_FMAC4 soap_in__tds__GetServices(struct soap*, const char*, _tds__GetServices *, const char*);

#ifndef soap_write__tds__GetServices
#define soap_write__tds__GetServices(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:GetServices", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetServices * SOAP_FMAC4 soap_get__tds__GetServices(struct soap*, _tds__GetServices *, const char*, const char*);

#ifndef soap_read__tds__GetServices
#define soap_read__tds__GetServices(soap, data) ( soap_begin_recv(soap) || !soap_get__tds__GetServices(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _tds__GetServices * SOAP_FMAC2 soap_instantiate__tds__GetServices(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetServices * soap_new__tds__GetServices(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetServices(soap, n, NULL, NULL, NULL); }

inline _tds__GetServices * soap_new_req__tds__GetServices(struct soap *soap, bool IncludeCapability) { _tds__GetServices *_p = soap_instantiate__tds__GetServices(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetServices::IncludeCapability = IncludeCapability; } return _p; }

inline _tds__GetServices * soap_new_set__tds__GetServices(struct soap *soap, bool IncludeCapability) { _tds__GetServices *_p = soap_instantiate__tds__GetServices(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_tds__GetServices::IncludeCapability = IncludeCapability; } return _p; }

inline void soap_delete__tds__GetServices(struct soap *soap, _tds__GetServices *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__tds__GetServices(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tds__MiscCapabilities
#define SOAP_TYPE_tds__MiscCapabilities (81)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tds__MiscCapabilities(struct soap*, const char*, int, const tds__MiscCapabilities *, const char*);
SOAP_FMAC3 tds__MiscCapabilities * SOAP_FMAC4 soap_in_tds__MiscCapabilities(struct soap*, const char*, tds__MiscCapabilities *, const char*);

#ifndef soap_write_tds__MiscCapabilities
#define soap_write_tds__MiscCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:MiscCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__MiscCapabilities * SOAP_FMAC4 soap_get_tds__MiscCapabilities(struct soap*, tds__MiscCapabilities *, const char*, const char*);

#ifndef soap_read_tds__MiscCapabilities
#define soap_read_tds__MiscCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tds__MiscCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tds__MiscCapabilities * SOAP_FMAC2 soap_instantiate_tds__MiscCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tds__MiscCapabilities * soap_new_tds__MiscCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tds__MiscCapabilities(soap, n, NULL, NULL, NULL); }

inline tds__MiscCapabilities * soap_new_req_tds__MiscCapabilities(struct soap *soap) { tds__MiscCapabilities *_p = soap_instantiate_tds__MiscCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tds__MiscCapabilities * soap_new_set_tds__MiscCapabilities(struct soap *soap, std::string *AuxiliaryCommands) { tds__MiscCapabilities *_p = soap_instantiate_tds__MiscCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tds__MiscCapabilities::AuxiliaryCommands = AuxiliaryCommands; } return _p; }

inline void soap_delete_tds__MiscCapabilities(struct soap *soap, tds__MiscCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tds__MiscCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tds__SystemCapabilities
#define SOAP_TYPE_tds__SystemCapabilities (80)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tds__SystemCapabilities(struct soap*, const char*, int, const tds__SystemCapabilities *, const char*);
SOAP_FMAC3 tds__SystemCapabilities * SOAP_FMAC4 soap_in_tds__SystemCapabilities(struct soap*, const char*, tds__SystemCapabilities *, const char*);

#ifndef soap_write_tds__SystemCapabilities
#define soap_write_tds__SystemCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SystemCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__SystemCapabilities * SOAP_FMAC4 soap_get_tds__SystemCapabilities(struct soap*, tds__SystemCapabilities *, const char*, const char*);

#ifndef soap_read_tds__SystemCapabilities
#define soap_read_tds__SystemCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tds__SystemCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tds__SystemCapabilities * SOAP_FMAC2 soap_instantiate_tds__SystemCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tds__SystemCapabilities * soap_new_tds__SystemCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tds__SystemCapabilities(soap, n, NULL, NULL, NULL); }

inline tds__SystemCapabilities * soap_new_req_tds__SystemCapabilities(struct soap *soap) { tds__SystemCapabilities *_p = soap_instantiate_tds__SystemCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tds__SystemCapabilities * soap_new_set_tds__SystemCapabilities(struct soap *soap, bool *DiscoveryResolve, bool *DiscoveryBye, bool *RemoteDiscovery, bool *SystemBackup, bool *SystemLogging, bool *FirmwareUpgrade, bool *HttpFirmwareUpgrade, bool *HttpSystemBackup, bool *HttpSystemLogging, bool *HttpSupportInformation) { tds__SystemCapabilities *_p = soap_instantiate_tds__SystemCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tds__SystemCapabilities::DiscoveryResolve = DiscoveryResolve; _p->tds__SystemCapabilities::DiscoveryBye = DiscoveryBye; _p->tds__SystemCapabilities::RemoteDiscovery = RemoteDiscovery; _p->tds__SystemCapabilities::SystemBackup = SystemBackup; _p->tds__SystemCapabilities::SystemLogging = SystemLogging; _p->tds__SystemCapabilities::FirmwareUpgrade = FirmwareUpgrade; _p->tds__SystemCapabilities::HttpFirmwareUpgrade = HttpFirmwareUpgrade; _p->tds__SystemCapabilities::HttpSystemBackup = HttpSystemBackup; _p->tds__SystemCapabilities::HttpSystemLogging = HttpSystemLogging; _p->tds__SystemCapabilities::HttpSupportInformation = HttpSupportInformation; } return _p; }

inline void soap_delete_tds__SystemCapabilities(struct soap *soap, tds__SystemCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tds__SystemCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tds__SecurityCapabilities
#define SOAP_TYPE_tds__SecurityCapabilities (79)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tds__SecurityCapabilities(struct soap*, const char*, int, const tds__SecurityCapabilities *, const char*);
SOAP_FMAC3 tds__SecurityCapabilities * SOAP_FMAC4 soap_in_tds__SecurityCapabilities(struct soap*, const char*, tds__SecurityCapabilities *, const char*);

#ifndef soap_write_tds__SecurityCapabilities
#define soap_write_tds__SecurityCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:SecurityCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__SecurityCapabilities * SOAP_FMAC4 soap_get_tds__SecurityCapabilities(struct soap*, tds__SecurityCapabilities *, const char*, const char*);

#ifndef soap_read_tds__SecurityCapabilities
#define soap_read_tds__SecurityCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tds__SecurityCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tds__SecurityCapabilities * SOAP_FMAC2 soap_instantiate_tds__SecurityCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tds__SecurityCapabilities * soap_new_tds__SecurityCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tds__SecurityCapabilities(soap, n, NULL, NULL, NULL); }

inline tds__SecurityCapabilities * soap_new_req_tds__SecurityCapabilities(struct soap *soap) { tds__SecurityCapabilities *_p = soap_instantiate_tds__SecurityCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tds__SecurityCapabilities * soap_new_set_tds__SecurityCapabilities(struct soap *soap, bool *TLS1_x002e0, bool *TLS1_x002e1, bool *TLS1_x002e2, bool *OnboardKeyGeneration, bool *AccessPolicyConfig, bool *DefaultAccessPolicy, bool *Dot1X, bool *RemoteUserHandling, bool *X_x002e509Token, bool *SAMLToken, bool *KerberosToken, bool *UsernameToken, bool *HttpDigest, bool *RELToken, std::string *SupportedEAPMethods, int *MaxUsers) { tds__SecurityCapabilities *_p = soap_instantiate_tds__SecurityCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tds__SecurityCapabilities::TLS1_x002e0 = TLS1_x002e0; _p->tds__SecurityCapabilities::TLS1_x002e1 = TLS1_x002e1; _p->tds__SecurityCapabilities::TLS1_x002e2 = TLS1_x002e2; _p->tds__SecurityCapabilities::OnboardKeyGeneration = OnboardKeyGeneration; _p->tds__SecurityCapabilities::AccessPolicyConfig = AccessPolicyConfig; _p->tds__SecurityCapabilities::DefaultAccessPolicy = DefaultAccessPolicy; _p->tds__SecurityCapabilities::Dot1X = Dot1X; _p->tds__SecurityCapabilities::RemoteUserHandling = RemoteUserHandling; _p->tds__SecurityCapabilities::X_x002e509Token = X_x002e509Token; _p->tds__SecurityCapabilities::SAMLToken = SAMLToken; _p->tds__SecurityCapabilities::KerberosToken = KerberosToken; _p->tds__SecurityCapabilities::UsernameToken = UsernameToken; _p->tds__SecurityCapabilities::HttpDigest = HttpDigest; _p->tds__SecurityCapabilities::RELToken = RELToken; _p->tds__SecurityCapabilities::SupportedEAPMethods = SupportedEAPMethods; _p->tds__SecurityCapabilities::MaxUsers = MaxUsers; } return _p; }

inline void soap_delete_tds__SecurityCapabilities(struct soap *soap, tds__SecurityCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tds__SecurityCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tds__NetworkCapabilities
#define SOAP_TYPE_tds__NetworkCapabilities (78)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tds__NetworkCapabilities(struct soap*, const char*, int, const tds__NetworkCapabilities *, const char*);
SOAP_FMAC3 tds__NetworkCapabilities * SOAP_FMAC4 soap_in_tds__NetworkCapabilities(struct soap*, const char*, tds__NetworkCapabilities *, const char*);

#ifndef soap_write_tds__NetworkCapabilities
#define soap_write_tds__NetworkCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:NetworkCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__NetworkCapabilities * SOAP_FMAC4 soap_get_tds__NetworkCapabilities(struct soap*, tds__NetworkCapabilities *, const char*, const char*);

#ifndef soap_read_tds__NetworkCapabilities
#define soap_read_tds__NetworkCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tds__NetworkCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tds__NetworkCapabilities * SOAP_FMAC2 soap_instantiate_tds__NetworkCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tds__NetworkCapabilities * soap_new_tds__NetworkCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tds__NetworkCapabilities(soap, n, NULL, NULL, NULL); }

inline tds__NetworkCapabilities * soap_new_req_tds__NetworkCapabilities(struct soap *soap) { tds__NetworkCapabilities *_p = soap_instantiate_tds__NetworkCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline tds__NetworkCapabilities * soap_new_set_tds__NetworkCapabilities(struct soap *soap, bool *IPFilter, bool *ZeroConfiguration, bool *IPVersion6, bool *DynDNS, bool *Dot11Configuration, int *Dot1XConfigurations, bool *HostnameFromDHCP, int *NTP, bool *DHCPv6) { tds__NetworkCapabilities *_p = soap_instantiate_tds__NetworkCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tds__NetworkCapabilities::IPFilter = IPFilter; _p->tds__NetworkCapabilities::ZeroConfiguration = ZeroConfiguration; _p->tds__NetworkCapabilities::IPVersion6 = IPVersion6; _p->tds__NetworkCapabilities::DynDNS = DynDNS; _p->tds__NetworkCapabilities::Dot11Configuration = Dot11Configuration; _p->tds__NetworkCapabilities::Dot1XConfigurations = Dot1XConfigurations; _p->tds__NetworkCapabilities::HostnameFromDHCP = HostnameFromDHCP; _p->tds__NetworkCapabilities::NTP = NTP; _p->tds__NetworkCapabilities::DHCPv6 = DHCPv6; } return _p; }

inline void soap_delete_tds__NetworkCapabilities(struct soap *soap, tds__NetworkCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tds__NetworkCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tds__DeviceServiceCapabilities
#define SOAP_TYPE_tds__DeviceServiceCapabilities (77)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tds__DeviceServiceCapabilities(struct soap*, const char*, int, const tds__DeviceServiceCapabilities *, const char*);
SOAP_FMAC3 tds__DeviceServiceCapabilities * SOAP_FMAC4 soap_in_tds__DeviceServiceCapabilities(struct soap*, const char*, tds__DeviceServiceCapabilities *, const char*);

#ifndef soap_write_tds__DeviceServiceCapabilities
#define soap_write_tds__DeviceServiceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:DeviceServiceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__DeviceServiceCapabilities * SOAP_FMAC4 soap_get_tds__DeviceServiceCapabilities(struct soap*, tds__DeviceServiceCapabilities *, const char*, const char*);

#ifndef soap_read_tds__DeviceServiceCapabilities
#define soap_read_tds__DeviceServiceCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_tds__DeviceServiceCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tds__DeviceServiceCapabilities * SOAP_FMAC2 soap_instantiate_tds__DeviceServiceCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tds__DeviceServiceCapabilities * soap_new_tds__DeviceServiceCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tds__DeviceServiceCapabilities(soap, n, NULL, NULL, NULL); }

inline tds__DeviceServiceCapabilities * soap_new_req_tds__DeviceServiceCapabilities(struct soap *soap, tds__NetworkCapabilities *Network, tds__SecurityCapabilities *Security, tds__SystemCapabilities *System) { tds__DeviceServiceCapabilities *_p = soap_instantiate_tds__DeviceServiceCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tds__DeviceServiceCapabilities::Network = Network; _p->tds__DeviceServiceCapabilities::Security = Security; _p->tds__DeviceServiceCapabilities::System = System; } return _p; }

inline tds__DeviceServiceCapabilities * soap_new_set_tds__DeviceServiceCapabilities(struct soap *soap, tds__NetworkCapabilities *Network, tds__SecurityCapabilities *Security, tds__SystemCapabilities *System, tds__MiscCapabilities *Misc) { tds__DeviceServiceCapabilities *_p = soap_instantiate_tds__DeviceServiceCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tds__DeviceServiceCapabilities::Network = Network; _p->tds__DeviceServiceCapabilities::Security = Security; _p->tds__DeviceServiceCapabilities::System = System; _p->tds__DeviceServiceCapabilities::Misc = Misc; } return _p; }

inline void soap_delete_tds__DeviceServiceCapabilities(struct soap *soap, tds__DeviceServiceCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tds__DeviceServiceCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_tds__Service
#define SOAP_TYPE_tds__Service (76)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tds__Service(struct soap*, const char*, int, const tds__Service *, const char*);
SOAP_FMAC3 tds__Service * SOAP_FMAC4 soap_in_tds__Service(struct soap*, const char*, tds__Service *, const char*);

#ifndef soap_write_tds__Service
#define soap_write_tds__Service(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "tds:Service", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__Service * SOAP_FMAC4 soap_get_tds__Service(struct soap*, tds__Service *, const char*, const char*);

#ifndef soap_read_tds__Service
#define soap_read_tds__Service(soap, data) ( soap_begin_recv(soap) || !soap_get_tds__Service(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 tds__Service * SOAP_FMAC2 soap_instantiate_tds__Service(struct soap*, int, const char*, const char*, size_t*);

inline tds__Service * soap_new_tds__Service(struct soap *soap, int n = -1) { return soap_instantiate_tds__Service(soap, n, NULL, NULL, NULL); }

inline tds__Service * soap_new_req_tds__Service(struct soap *soap, std::string& Namespace, std::string& XAddr, tt__OnvifVersion *Version) { tds__Service *_p = soap_instantiate_tds__Service(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tds__Service::Namespace = Namespace; _p->tds__Service::XAddr = XAddr; _p->tds__Service::Version = Version; } return _p; }

inline tds__Service * soap_new_set_tds__Service(struct soap *soap, std::string& Namespace, std::string& XAddr, _tds__Service_Capabilities *Capabilities, tt__OnvifVersion *Version) { tds__Service *_p = soap_instantiate_tds__Service(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->tds__Service::Namespace = Namespace; _p->tds__Service::XAddr = XAddr; _p->tds__Service::Capabilities = Capabilities; _p->tds__Service::Version = Version; } return _p; }

inline void soap_delete_tds__Service(struct soap *soap, tds__Service *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_tds__Service(struct soap*, int, int, void*, size_t, const void*, size_t);

/* _xml__lang is a typedef element/attribute synonym for std__string */

#ifndef SOAP_TYPE__xml__lang
#define SOAP_TYPE__xml__lang (75)
#endif

#define soap_default__xml__lang(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__xml__lang soap_serialize_std__string


#define soap_out__xml__lang soap_out_std__string


#define soap_in__xml__lang soap_in_std__string


#define soap_put__xml__lang soap_put_std__string


#define soap_get__xml__lang soap_get_std__string


#define soap_instantiate__xml__lang soap_instantiate_std__string


#define soap_copy__xml__lang soap_copy_std__string

#ifndef SOAP_TYPE_xsd__token
#define SOAP_TYPE_xsd__token (74)
#endif

#define soap_default_xsd__token(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__token(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__token(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__token(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__token(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__token
#define soap_write_xsd__token(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__token(soap, data),0) || soap_put_xsd__token(soap, data, "xsd:token", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__token(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__token
#define soap_read_xsd__token(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__token(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_xsd__token soap_instantiate_std__string


#define soap_copy_xsd__token soap_copy_std__string

#ifndef SOAP_TYPE_xsd__nonNegativeInteger
#define SOAP_TYPE_xsd__nonNegativeInteger (73)
#endif

#define soap_default_xsd__nonNegativeInteger(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__nonNegativeInteger(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__nonNegativeInteger(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__nonNegativeInteger(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__nonNegativeInteger(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__nonNegativeInteger
#define soap_write_xsd__nonNegativeInteger(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__nonNegativeInteger(soap, data),0) || soap_put_xsd__nonNegativeInteger(soap, data, "xsd:nonNegativeInteger", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__nonNegativeInteger(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__nonNegativeInteger
#define soap_read_xsd__nonNegativeInteger(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__nonNegativeInteger(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_xsd__nonNegativeInteger soap_instantiate_std__string


#define soap_copy_xsd__nonNegativeInteger soap_copy_std__string

#ifndef SOAP_TYPE_xsd__integer
#define SOAP_TYPE_xsd__integer (72)
#endif

#define soap_default_xsd__integer(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__integer(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__integer(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__integer(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__integer(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__integer
#define soap_write_xsd__integer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__integer(soap, data),0) || soap_put_xsd__integer(soap, data, "xsd:integer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__integer(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__integer
#define soap_read_xsd__integer(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__integer(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_xsd__integer soap_instantiate_std__string


#define soap_copy_xsd__integer soap_copy_std__string

#ifndef SOAP_TYPE_xsd__anyURI
#define SOAP_TYPE_xsd__anyURI (71)
#endif

#define soap_default_xsd__anyURI(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__anyURI(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anyURI(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__anyURI(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__anyURI(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__anyURI
#define soap_write_xsd__anyURI(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__anyURI(soap, data),0) || soap_put_xsd__anyURI(soap, data, "xsd:anyURI", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__anyURI(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__anyURI
#define soap_read_xsd__anyURI(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__anyURI(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_xsd__anyURI soap_instantiate_std__string


#define soap_copy_xsd__anyURI soap_copy_std__string

#ifndef SOAP_TYPE_xsd__anySimpleType
#define SOAP_TYPE_xsd__anySimpleType (70)
#endif

#define soap_default_xsd__anySimpleType(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__anySimpleType(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anySimpleType(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__anySimpleType(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__anySimpleType(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__anySimpleType
#define soap_write_xsd__anySimpleType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__anySimpleType(soap, data),0) || soap_put_xsd__anySimpleType(soap, data, "xsd:anySimpleType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__anySimpleType(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__anySimpleType
#define soap_read_xsd__anySimpleType(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__anySimpleType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_xsd__anySimpleType soap_instantiate_std__string


#define soap_copy_xsd__anySimpleType soap_copy_std__string

#ifndef SOAP_TYPE_xsd__NCName
#define SOAP_TYPE_xsd__NCName (69)
#endif

#define soap_default_xsd__NCName(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__NCName(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__NCName(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__NCName(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__NCName(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__NCName
#define soap_write_xsd__NCName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__NCName(soap, data),0) || soap_put_xsd__NCName(soap, data, "xsd:NCName", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__NCName(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__NCName
#define soap_read_xsd__NCName(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__NCName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_xsd__NCName soap_instantiate_std__string


#define soap_copy_xsd__NCName soap_copy_std__string

#ifndef SOAP_TYPE_xsd__hexBinary
#define SOAP_TYPE_xsd__hexBinary (68)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__hexBinary(struct soap*, const char*, int, const xsd__hexBinary *, const char*);
SOAP_FMAC3 xsd__hexBinary * SOAP_FMAC4 soap_in_xsd__hexBinary(struct soap*, const char*, xsd__hexBinary *, const char*);

#ifndef soap_write_xsd__hexBinary
#define soap_write_xsd__hexBinary(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:hexBinary", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__hexBinary * SOAP_FMAC4 soap_get_xsd__hexBinary(struct soap*, xsd__hexBinary *, const char*, const char*);

#ifndef soap_read_xsd__hexBinary
#define soap_read_xsd__hexBinary(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__hexBinary(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__hexBinary * SOAP_FMAC2 soap_instantiate_xsd__hexBinary(struct soap*, int, const char*, const char*, size_t*);

inline xsd__hexBinary * soap_new_xsd__hexBinary(struct soap *soap, int n = -1) { return soap_instantiate_xsd__hexBinary(soap, n, NULL, NULL, NULL); }

inline xsd__hexBinary * soap_new_req_xsd__hexBinary(struct soap *soap) { xsd__hexBinary *_p = soap_instantiate_xsd__hexBinary(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline xsd__hexBinary * soap_new_set_xsd__hexBinary(struct soap *soap, unsigned char *__ptr, int __size) { xsd__hexBinary *_p = soap_instantiate_xsd__hexBinary(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__hexBinary::__ptr = __ptr; _p->xsd__hexBinary::__size = __size; } return _p; }

inline void soap_delete_xsd__hexBinary(struct soap *soap, xsd__hexBinary *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__hexBinary(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (63)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__base64Binary(struct soap*, const char*, int, const xsd__base64Binary *, const char*);
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_in_xsd__base64Binary(struct soap*, const char*, xsd__base64Binary *, const char*);

#ifndef soap_write_xsd__base64Binary
#define soap_write_xsd__base64Binary(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:base64Binary", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_get_xsd__base64Binary(struct soap*, xsd__base64Binary *, const char*, const char*);

#ifndef soap_read_xsd__base64Binary
#define soap_read_xsd__base64Binary(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__base64Binary(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__base64Binary * SOAP_FMAC2 soap_instantiate_xsd__base64Binary(struct soap*, int, const char*, const char*, size_t*);

inline xsd__base64Binary * soap_new_xsd__base64Binary(struct soap *soap, int n = -1) { return soap_instantiate_xsd__base64Binary(soap, n, NULL, NULL, NULL); }

inline xsd__base64Binary * soap_new_req_xsd__base64Binary(struct soap *soap) { xsd__base64Binary *_p = soap_instantiate_xsd__base64Binary(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline xsd__base64Binary * soap_new_set_xsd__base64Binary(struct soap *soap, unsigned char *__ptr, int __size, char *id, char *type, char *options) { xsd__base64Binary *_p = soap_instantiate_xsd__base64Binary(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__base64Binary::__ptr = __ptr; _p->xsd__base64Binary::__size = __size; _p->xsd__base64Binary::id = id; _p->xsd__base64Binary::type = type; _p->xsd__base64Binary::options = options; } return _p; }

inline void soap_delete_xsd__base64Binary(struct soap *soap, xsd__base64Binary *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__base64Binary(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__QName
#define SOAP_TYPE_xsd__QName (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__QName(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__QName(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__QName(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__QName(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__QName(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__QName
#define soap_write_xsd__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__QName(soap, data),0) || soap_put_xsd__QName(soap, data, "xsd:QName", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__QName(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__QName
#define soap_read_xsd__QName(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_xsd__QName(struct soap*, int, const char*, const char*, size_t*);

inline std::string * soap_new_xsd__QName(struct soap *soap, int n = -1) { return soap_instantiate_xsd__QName(soap, n, NULL, NULL, NULL); }

inline std::string * soap_new_req_xsd__QName(struct soap *soap) { std::string *_p = soap_instantiate_xsd__QName(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xsd__QName(soap, _p); } return _p; }

inline std::string * soap_new_set_xsd__QName(struct soap *soap) { std::string *_p = soap_instantiate_xsd__QName(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xsd__QName(soap, _p); } return _p; }

inline void soap_delete_xsd__QName(struct soap *soap, std::string *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__QName(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_std__string(soap, data),0) || soap_put_std__string(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);

inline std::string * soap_new_std__string(struct soap *soap, int n = -1) { return soap_instantiate_std__string(soap, n, NULL, NULL, NULL); }

inline std::string * soap_new_req_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline std::string * soap_new_set_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline void soap_delete_std__string(struct soap *soap, std::string *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__anyType
#define SOAP_TYPE_xsd__anyType (57)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anyType(struct soap*, const char*, int, const xsd__anyType *, const char*);
SOAP_FMAC3 xsd__anyType * SOAP_FMAC4 soap_in_xsd__anyType(struct soap*, const char*, xsd__anyType *, const char*);

#ifndef soap_write_xsd__anyType
#define soap_write_xsd__anyType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:anyType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__anyType * SOAP_FMAC4 soap_get_xsd__anyType(struct soap*, xsd__anyType *, const char*, const char*);

#ifndef soap_read_xsd__anyType
#define soap_read_xsd__anyType(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__anyType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__anyType * SOAP_FMAC2 soap_instantiate_xsd__anyType(struct soap*, int, const char*, const char*, size_t*);

inline xsd__anyType * soap_new_xsd__anyType(struct soap *soap, int n = -1) { return soap_instantiate_xsd__anyType(soap, n, NULL, NULL, NULL); }

inline xsd__anyType * soap_new_req_xsd__anyType(struct soap *soap) { xsd__anyType *_p = soap_instantiate_xsd__anyType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline xsd__anyType * soap_new_set_xsd__anyType(struct soap *soap, char *__item) { xsd__anyType *_p = soap_instantiate_xsd__anyType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__anyType::__item = __item; } return _p; }

inline void soap_delete_xsd__anyType(struct soap *soap, xsd__anyType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__anyType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__GetCompatibleConfigurations
#define SOAP_TYPE___tptz__GetCompatibleConfigurations (1953)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__GetCompatibleConfigurations(struct soap*, struct __tptz__GetCompatibleConfigurations *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__GetCompatibleConfigurations(struct soap*, const struct __tptz__GetCompatibleConfigurations *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__GetCompatibleConfigurations(struct soap*, const char*, int, const struct __tptz__GetCompatibleConfigurations *, const char*);
SOAP_FMAC3 struct __tptz__GetCompatibleConfigurations * SOAP_FMAC4 soap_in___tptz__GetCompatibleConfigurations(struct soap*, const char*, struct __tptz__GetCompatibleConfigurations *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__GetCompatibleConfigurations(struct soap*, const struct __tptz__GetCompatibleConfigurations *, const char*, const char*);

#ifndef soap_write___tptz__GetCompatibleConfigurations
#define soap_write___tptz__GetCompatibleConfigurations(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__GetCompatibleConfigurations(soap, data),0) || soap_put___tptz__GetCompatibleConfigurations(soap, data, "-tptz:GetCompatibleConfigurations", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__GetCompatibleConfigurations * SOAP_FMAC4 soap_get___tptz__GetCompatibleConfigurations(struct soap*, struct __tptz__GetCompatibleConfigurations *, const char*, const char*);

#ifndef soap_read___tptz__GetCompatibleConfigurations
#define soap_read___tptz__GetCompatibleConfigurations(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__GetCompatibleConfigurations(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__GetCompatibleConfigurations * SOAP_FMAC2 soap_instantiate___tptz__GetCompatibleConfigurations(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__GetCompatibleConfigurations * soap_new___tptz__GetCompatibleConfigurations(struct soap *soap, int n = -1) { return soap_instantiate___tptz__GetCompatibleConfigurations(soap, n, NULL, NULL, NULL); }

inline struct __tptz__GetCompatibleConfigurations * soap_new_req___tptz__GetCompatibleConfigurations(struct soap *soap) { struct __tptz__GetCompatibleConfigurations *_p = soap_instantiate___tptz__GetCompatibleConfigurations(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GetCompatibleConfigurations(soap, _p); } return _p; }

inline struct __tptz__GetCompatibleConfigurations * soap_new_set___tptz__GetCompatibleConfigurations(struct soap *soap, _tptz__GetCompatibleConfigurations *tptz__GetCompatibleConfigurations) { struct __tptz__GetCompatibleConfigurations *_p = soap_instantiate___tptz__GetCompatibleConfigurations(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GetCompatibleConfigurations(soap, _p); _p->tptz__GetCompatibleConfigurations = tptz__GetCompatibleConfigurations; } return _p; }

inline void soap_delete___tptz__GetCompatibleConfigurations(struct soap *soap, struct __tptz__GetCompatibleConfigurations *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__GetCompatibleConfigurations(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__RemovePresetTour
#define SOAP_TYPE___tptz__RemovePresetTour (1949)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__RemovePresetTour(struct soap*, struct __tptz__RemovePresetTour *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__RemovePresetTour(struct soap*, const struct __tptz__RemovePresetTour *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__RemovePresetTour(struct soap*, const char*, int, const struct __tptz__RemovePresetTour *, const char*);
SOAP_FMAC3 struct __tptz__RemovePresetTour * SOAP_FMAC4 soap_in___tptz__RemovePresetTour(struct soap*, const char*, struct __tptz__RemovePresetTour *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__RemovePresetTour(struct soap*, const struct __tptz__RemovePresetTour *, const char*, const char*);

#ifndef soap_write___tptz__RemovePresetTour
#define soap_write___tptz__RemovePresetTour(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__RemovePresetTour(soap, data),0) || soap_put___tptz__RemovePresetTour(soap, data, "-tptz:RemovePresetTour", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__RemovePresetTour * SOAP_FMAC4 soap_get___tptz__RemovePresetTour(struct soap*, struct __tptz__RemovePresetTour *, const char*, const char*);

#ifndef soap_read___tptz__RemovePresetTour
#define soap_read___tptz__RemovePresetTour(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__RemovePresetTour(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__RemovePresetTour * SOAP_FMAC2 soap_instantiate___tptz__RemovePresetTour(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__RemovePresetTour * soap_new___tptz__RemovePresetTour(struct soap *soap, int n = -1) { return soap_instantiate___tptz__RemovePresetTour(soap, n, NULL, NULL, NULL); }

inline struct __tptz__RemovePresetTour * soap_new_req___tptz__RemovePresetTour(struct soap *soap) { struct __tptz__RemovePresetTour *_p = soap_instantiate___tptz__RemovePresetTour(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__RemovePresetTour(soap, _p); } return _p; }

inline struct __tptz__RemovePresetTour * soap_new_set___tptz__RemovePresetTour(struct soap *soap, _tptz__RemovePresetTour *tptz__RemovePresetTour) { struct __tptz__RemovePresetTour *_p = soap_instantiate___tptz__RemovePresetTour(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__RemovePresetTour(soap, _p); _p->tptz__RemovePresetTour = tptz__RemovePresetTour; } return _p; }

inline void soap_delete___tptz__RemovePresetTour(struct soap *soap, struct __tptz__RemovePresetTour *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__RemovePresetTour(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__OperatePresetTour
#define SOAP_TYPE___tptz__OperatePresetTour (1945)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__OperatePresetTour(struct soap*, struct __tptz__OperatePresetTour *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__OperatePresetTour(struct soap*, const struct __tptz__OperatePresetTour *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__OperatePresetTour(struct soap*, const char*, int, const struct __tptz__OperatePresetTour *, const char*);
SOAP_FMAC3 struct __tptz__OperatePresetTour * SOAP_FMAC4 soap_in___tptz__OperatePresetTour(struct soap*, const char*, struct __tptz__OperatePresetTour *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__OperatePresetTour(struct soap*, const struct __tptz__OperatePresetTour *, const char*, const char*);

#ifndef soap_write___tptz__OperatePresetTour
#define soap_write___tptz__OperatePresetTour(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__OperatePresetTour(soap, data),0) || soap_put___tptz__OperatePresetTour(soap, data, "-tptz:OperatePresetTour", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__OperatePresetTour * SOAP_FMAC4 soap_get___tptz__OperatePresetTour(struct soap*, struct __tptz__OperatePresetTour *, const char*, const char*);

#ifndef soap_read___tptz__OperatePresetTour
#define soap_read___tptz__OperatePresetTour(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__OperatePresetTour(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__OperatePresetTour * SOAP_FMAC2 soap_instantiate___tptz__OperatePresetTour(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__OperatePresetTour * soap_new___tptz__OperatePresetTour(struct soap *soap, int n = -1) { return soap_instantiate___tptz__OperatePresetTour(soap, n, NULL, NULL, NULL); }

inline struct __tptz__OperatePresetTour * soap_new_req___tptz__OperatePresetTour(struct soap *soap) { struct __tptz__OperatePresetTour *_p = soap_instantiate___tptz__OperatePresetTour(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__OperatePresetTour(soap, _p); } return _p; }

inline struct __tptz__OperatePresetTour * soap_new_set___tptz__OperatePresetTour(struct soap *soap, _tptz__OperatePresetTour *tptz__OperatePresetTour) { struct __tptz__OperatePresetTour *_p = soap_instantiate___tptz__OperatePresetTour(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__OperatePresetTour(soap, _p); _p->tptz__OperatePresetTour = tptz__OperatePresetTour; } return _p; }

inline void soap_delete___tptz__OperatePresetTour(struct soap *soap, struct __tptz__OperatePresetTour *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__OperatePresetTour(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__ModifyPresetTour
#define SOAP_TYPE___tptz__ModifyPresetTour (1941)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__ModifyPresetTour(struct soap*, struct __tptz__ModifyPresetTour *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__ModifyPresetTour(struct soap*, const struct __tptz__ModifyPresetTour *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__ModifyPresetTour(struct soap*, const char*, int, const struct __tptz__ModifyPresetTour *, const char*);
SOAP_FMAC3 struct __tptz__ModifyPresetTour * SOAP_FMAC4 soap_in___tptz__ModifyPresetTour(struct soap*, const char*, struct __tptz__ModifyPresetTour *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__ModifyPresetTour(struct soap*, const struct __tptz__ModifyPresetTour *, const char*, const char*);

#ifndef soap_write___tptz__ModifyPresetTour
#define soap_write___tptz__ModifyPresetTour(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__ModifyPresetTour(soap, data),0) || soap_put___tptz__ModifyPresetTour(soap, data, "-tptz:ModifyPresetTour", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__ModifyPresetTour * SOAP_FMAC4 soap_get___tptz__ModifyPresetTour(struct soap*, struct __tptz__ModifyPresetTour *, const char*, const char*);

#ifndef soap_read___tptz__ModifyPresetTour
#define soap_read___tptz__ModifyPresetTour(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__ModifyPresetTour(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__ModifyPresetTour * SOAP_FMAC2 soap_instantiate___tptz__ModifyPresetTour(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__ModifyPresetTour * soap_new___tptz__ModifyPresetTour(struct soap *soap, int n = -1) { return soap_instantiate___tptz__ModifyPresetTour(soap, n, NULL, NULL, NULL); }

inline struct __tptz__ModifyPresetTour * soap_new_req___tptz__ModifyPresetTour(struct soap *soap) { struct __tptz__ModifyPresetTour *_p = soap_instantiate___tptz__ModifyPresetTour(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__ModifyPresetTour(soap, _p); } return _p; }

inline struct __tptz__ModifyPresetTour * soap_new_set___tptz__ModifyPresetTour(struct soap *soap, _tptz__ModifyPresetTour *tptz__ModifyPresetTour) { struct __tptz__ModifyPresetTour *_p = soap_instantiate___tptz__ModifyPresetTour(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__ModifyPresetTour(soap, _p); _p->tptz__ModifyPresetTour = tptz__ModifyPresetTour; } return _p; }

inline void soap_delete___tptz__ModifyPresetTour(struct soap *soap, struct __tptz__ModifyPresetTour *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__ModifyPresetTour(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__CreatePresetTour
#define SOAP_TYPE___tptz__CreatePresetTour (1937)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__CreatePresetTour(struct soap*, struct __tptz__CreatePresetTour *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__CreatePresetTour(struct soap*, const struct __tptz__CreatePresetTour *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__CreatePresetTour(struct soap*, const char*, int, const struct __tptz__CreatePresetTour *, const char*);
SOAP_FMAC3 struct __tptz__CreatePresetTour * SOAP_FMAC4 soap_in___tptz__CreatePresetTour(struct soap*, const char*, struct __tptz__CreatePresetTour *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__CreatePresetTour(struct soap*, const struct __tptz__CreatePresetTour *, const char*, const char*);

#ifndef soap_write___tptz__CreatePresetTour
#define soap_write___tptz__CreatePresetTour(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__CreatePresetTour(soap, data),0) || soap_put___tptz__CreatePresetTour(soap, data, "-tptz:CreatePresetTour", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__CreatePresetTour * SOAP_FMAC4 soap_get___tptz__CreatePresetTour(struct soap*, struct __tptz__CreatePresetTour *, const char*, const char*);

#ifndef soap_read___tptz__CreatePresetTour
#define soap_read___tptz__CreatePresetTour(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__CreatePresetTour(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__CreatePresetTour * SOAP_FMAC2 soap_instantiate___tptz__CreatePresetTour(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__CreatePresetTour * soap_new___tptz__CreatePresetTour(struct soap *soap, int n = -1) { return soap_instantiate___tptz__CreatePresetTour(soap, n, NULL, NULL, NULL); }

inline struct __tptz__CreatePresetTour * soap_new_req___tptz__CreatePresetTour(struct soap *soap) { struct __tptz__CreatePresetTour *_p = soap_instantiate___tptz__CreatePresetTour(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__CreatePresetTour(soap, _p); } return _p; }

inline struct __tptz__CreatePresetTour * soap_new_set___tptz__CreatePresetTour(struct soap *soap, _tptz__CreatePresetTour *tptz__CreatePresetTour) { struct __tptz__CreatePresetTour *_p = soap_instantiate___tptz__CreatePresetTour(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__CreatePresetTour(soap, _p); _p->tptz__CreatePresetTour = tptz__CreatePresetTour; } return _p; }

inline void soap_delete___tptz__CreatePresetTour(struct soap *soap, struct __tptz__CreatePresetTour *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__CreatePresetTour(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__GetPresetTourOptions
#define SOAP_TYPE___tptz__GetPresetTourOptions (1933)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__GetPresetTourOptions(struct soap*, struct __tptz__GetPresetTourOptions *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__GetPresetTourOptions(struct soap*, const struct __tptz__GetPresetTourOptions *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__GetPresetTourOptions(struct soap*, const char*, int, const struct __tptz__GetPresetTourOptions *, const char*);
SOAP_FMAC3 struct __tptz__GetPresetTourOptions * SOAP_FMAC4 soap_in___tptz__GetPresetTourOptions(struct soap*, const char*, struct __tptz__GetPresetTourOptions *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__GetPresetTourOptions(struct soap*, const struct __tptz__GetPresetTourOptions *, const char*, const char*);

#ifndef soap_write___tptz__GetPresetTourOptions
#define soap_write___tptz__GetPresetTourOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__GetPresetTourOptions(soap, data),0) || soap_put___tptz__GetPresetTourOptions(soap, data, "-tptz:GetPresetTourOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__GetPresetTourOptions * SOAP_FMAC4 soap_get___tptz__GetPresetTourOptions(struct soap*, struct __tptz__GetPresetTourOptions *, const char*, const char*);

#ifndef soap_read___tptz__GetPresetTourOptions
#define soap_read___tptz__GetPresetTourOptions(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__GetPresetTourOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__GetPresetTourOptions * SOAP_FMAC2 soap_instantiate___tptz__GetPresetTourOptions(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__GetPresetTourOptions * soap_new___tptz__GetPresetTourOptions(struct soap *soap, int n = -1) { return soap_instantiate___tptz__GetPresetTourOptions(soap, n, NULL, NULL, NULL); }

inline struct __tptz__GetPresetTourOptions * soap_new_req___tptz__GetPresetTourOptions(struct soap *soap) { struct __tptz__GetPresetTourOptions *_p = soap_instantiate___tptz__GetPresetTourOptions(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GetPresetTourOptions(soap, _p); } return _p; }

inline struct __tptz__GetPresetTourOptions * soap_new_set___tptz__GetPresetTourOptions(struct soap *soap, _tptz__GetPresetTourOptions *tptz__GetPresetTourOptions) { struct __tptz__GetPresetTourOptions *_p = soap_instantiate___tptz__GetPresetTourOptions(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GetPresetTourOptions(soap, _p); _p->tptz__GetPresetTourOptions = tptz__GetPresetTourOptions; } return _p; }

inline void soap_delete___tptz__GetPresetTourOptions(struct soap *soap, struct __tptz__GetPresetTourOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__GetPresetTourOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__GetPresetTour
#define SOAP_TYPE___tptz__GetPresetTour (1929)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__GetPresetTour(struct soap*, struct __tptz__GetPresetTour *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__GetPresetTour(struct soap*, const struct __tptz__GetPresetTour *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__GetPresetTour(struct soap*, const char*, int, const struct __tptz__GetPresetTour *, const char*);
SOAP_FMAC3 struct __tptz__GetPresetTour * SOAP_FMAC4 soap_in___tptz__GetPresetTour(struct soap*, const char*, struct __tptz__GetPresetTour *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__GetPresetTour(struct soap*, const struct __tptz__GetPresetTour *, const char*, const char*);

#ifndef soap_write___tptz__GetPresetTour
#define soap_write___tptz__GetPresetTour(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__GetPresetTour(soap, data),0) || soap_put___tptz__GetPresetTour(soap, data, "-tptz:GetPresetTour", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__GetPresetTour * SOAP_FMAC4 soap_get___tptz__GetPresetTour(struct soap*, struct __tptz__GetPresetTour *, const char*, const char*);

#ifndef soap_read___tptz__GetPresetTour
#define soap_read___tptz__GetPresetTour(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__GetPresetTour(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__GetPresetTour * SOAP_FMAC2 soap_instantiate___tptz__GetPresetTour(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__GetPresetTour * soap_new___tptz__GetPresetTour(struct soap *soap, int n = -1) { return soap_instantiate___tptz__GetPresetTour(soap, n, NULL, NULL, NULL); }

inline struct __tptz__GetPresetTour * soap_new_req___tptz__GetPresetTour(struct soap *soap) { struct __tptz__GetPresetTour *_p = soap_instantiate___tptz__GetPresetTour(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GetPresetTour(soap, _p); } return _p; }

inline struct __tptz__GetPresetTour * soap_new_set___tptz__GetPresetTour(struct soap *soap, _tptz__GetPresetTour *tptz__GetPresetTour) { struct __tptz__GetPresetTour *_p = soap_instantiate___tptz__GetPresetTour(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GetPresetTour(soap, _p); _p->tptz__GetPresetTour = tptz__GetPresetTour; } return _p; }

inline void soap_delete___tptz__GetPresetTour(struct soap *soap, struct __tptz__GetPresetTour *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__GetPresetTour(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__GetPresetTours
#define SOAP_TYPE___tptz__GetPresetTours (1925)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__GetPresetTours(struct soap*, struct __tptz__GetPresetTours *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__GetPresetTours(struct soap*, const struct __tptz__GetPresetTours *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__GetPresetTours(struct soap*, const char*, int, const struct __tptz__GetPresetTours *, const char*);
SOAP_FMAC3 struct __tptz__GetPresetTours * SOAP_FMAC4 soap_in___tptz__GetPresetTours(struct soap*, const char*, struct __tptz__GetPresetTours *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__GetPresetTours(struct soap*, const struct __tptz__GetPresetTours *, const char*, const char*);

#ifndef soap_write___tptz__GetPresetTours
#define soap_write___tptz__GetPresetTours(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__GetPresetTours(soap, data),0) || soap_put___tptz__GetPresetTours(soap, data, "-tptz:GetPresetTours", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__GetPresetTours * SOAP_FMAC4 soap_get___tptz__GetPresetTours(struct soap*, struct __tptz__GetPresetTours *, const char*, const char*);

#ifndef soap_read___tptz__GetPresetTours
#define soap_read___tptz__GetPresetTours(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__GetPresetTours(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__GetPresetTours * SOAP_FMAC2 soap_instantiate___tptz__GetPresetTours(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__GetPresetTours * soap_new___tptz__GetPresetTours(struct soap *soap, int n = -1) { return soap_instantiate___tptz__GetPresetTours(soap, n, NULL, NULL, NULL); }

inline struct __tptz__GetPresetTours * soap_new_req___tptz__GetPresetTours(struct soap *soap) { struct __tptz__GetPresetTours *_p = soap_instantiate___tptz__GetPresetTours(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GetPresetTours(soap, _p); } return _p; }

inline struct __tptz__GetPresetTours * soap_new_set___tptz__GetPresetTours(struct soap *soap, _tptz__GetPresetTours *tptz__GetPresetTours) { struct __tptz__GetPresetTours *_p = soap_instantiate___tptz__GetPresetTours(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GetPresetTours(soap, _p); _p->tptz__GetPresetTours = tptz__GetPresetTours; } return _p; }

inline void soap_delete___tptz__GetPresetTours(struct soap *soap, struct __tptz__GetPresetTours *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__GetPresetTours(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__Stop
#define SOAP_TYPE___tptz__Stop (1921)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__Stop(struct soap*, struct __tptz__Stop *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__Stop(struct soap*, const struct __tptz__Stop *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__Stop(struct soap*, const char*, int, const struct __tptz__Stop *, const char*);
SOAP_FMAC3 struct __tptz__Stop * SOAP_FMAC4 soap_in___tptz__Stop(struct soap*, const char*, struct __tptz__Stop *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__Stop(struct soap*, const struct __tptz__Stop *, const char*, const char*);

#ifndef soap_write___tptz__Stop
#define soap_write___tptz__Stop(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__Stop(soap, data),0) || soap_put___tptz__Stop(soap, data, "-tptz:Stop", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__Stop * SOAP_FMAC4 soap_get___tptz__Stop(struct soap*, struct __tptz__Stop *, const char*, const char*);

#ifndef soap_read___tptz__Stop
#define soap_read___tptz__Stop(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__Stop(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__Stop * SOAP_FMAC2 soap_instantiate___tptz__Stop(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__Stop * soap_new___tptz__Stop(struct soap *soap, int n = -1) { return soap_instantiate___tptz__Stop(soap, n, NULL, NULL, NULL); }

inline struct __tptz__Stop * soap_new_req___tptz__Stop(struct soap *soap) { struct __tptz__Stop *_p = soap_instantiate___tptz__Stop(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__Stop(soap, _p); } return _p; }

inline struct __tptz__Stop * soap_new_set___tptz__Stop(struct soap *soap, _tptz__Stop *tptz__Stop) { struct __tptz__Stop *_p = soap_instantiate___tptz__Stop(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__Stop(soap, _p); _p->tptz__Stop = tptz__Stop; } return _p; }

inline void soap_delete___tptz__Stop(struct soap *soap, struct __tptz__Stop *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__Stop(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__AbsoluteMove
#define SOAP_TYPE___tptz__AbsoluteMove (1917)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__AbsoluteMove(struct soap*, struct __tptz__AbsoluteMove *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__AbsoluteMove(struct soap*, const struct __tptz__AbsoluteMove *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__AbsoluteMove(struct soap*, const char*, int, const struct __tptz__AbsoluteMove *, const char*);
SOAP_FMAC3 struct __tptz__AbsoluteMove * SOAP_FMAC4 soap_in___tptz__AbsoluteMove(struct soap*, const char*, struct __tptz__AbsoluteMove *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__AbsoluteMove(struct soap*, const struct __tptz__AbsoluteMove *, const char*, const char*);

#ifndef soap_write___tptz__AbsoluteMove
#define soap_write___tptz__AbsoluteMove(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__AbsoluteMove(soap, data),0) || soap_put___tptz__AbsoluteMove(soap, data, "-tptz:AbsoluteMove", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__AbsoluteMove * SOAP_FMAC4 soap_get___tptz__AbsoluteMove(struct soap*, struct __tptz__AbsoluteMove *, const char*, const char*);

#ifndef soap_read___tptz__AbsoluteMove
#define soap_read___tptz__AbsoluteMove(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__AbsoluteMove(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__AbsoluteMove * SOAP_FMAC2 soap_instantiate___tptz__AbsoluteMove(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__AbsoluteMove * soap_new___tptz__AbsoluteMove(struct soap *soap, int n = -1) { return soap_instantiate___tptz__AbsoluteMove(soap, n, NULL, NULL, NULL); }

inline struct __tptz__AbsoluteMove * soap_new_req___tptz__AbsoluteMove(struct soap *soap) { struct __tptz__AbsoluteMove *_p = soap_instantiate___tptz__AbsoluteMove(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__AbsoluteMove(soap, _p); } return _p; }

inline struct __tptz__AbsoluteMove * soap_new_set___tptz__AbsoluteMove(struct soap *soap, _tptz__AbsoluteMove *tptz__AbsoluteMove) { struct __tptz__AbsoluteMove *_p = soap_instantiate___tptz__AbsoluteMove(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__AbsoluteMove(soap, _p); _p->tptz__AbsoluteMove = tptz__AbsoluteMove; } return _p; }

inline void soap_delete___tptz__AbsoluteMove(struct soap *soap, struct __tptz__AbsoluteMove *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__AbsoluteMove(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__SendAuxiliaryCommand
#define SOAP_TYPE___tptz__SendAuxiliaryCommand (1913)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__SendAuxiliaryCommand(struct soap*, struct __tptz__SendAuxiliaryCommand *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__SendAuxiliaryCommand(struct soap*, const struct __tptz__SendAuxiliaryCommand *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__SendAuxiliaryCommand(struct soap*, const char*, int, const struct __tptz__SendAuxiliaryCommand *, const char*);
SOAP_FMAC3 struct __tptz__SendAuxiliaryCommand * SOAP_FMAC4 soap_in___tptz__SendAuxiliaryCommand(struct soap*, const char*, struct __tptz__SendAuxiliaryCommand *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__SendAuxiliaryCommand(struct soap*, const struct __tptz__SendAuxiliaryCommand *, const char*, const char*);

#ifndef soap_write___tptz__SendAuxiliaryCommand
#define soap_write___tptz__SendAuxiliaryCommand(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__SendAuxiliaryCommand(soap, data),0) || soap_put___tptz__SendAuxiliaryCommand(soap, data, "-tptz:SendAuxiliaryCommand", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__SendAuxiliaryCommand * SOAP_FMAC4 soap_get___tptz__SendAuxiliaryCommand(struct soap*, struct __tptz__SendAuxiliaryCommand *, const char*, const char*);

#ifndef soap_read___tptz__SendAuxiliaryCommand
#define soap_read___tptz__SendAuxiliaryCommand(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__SendAuxiliaryCommand(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__SendAuxiliaryCommand * SOAP_FMAC2 soap_instantiate___tptz__SendAuxiliaryCommand(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__SendAuxiliaryCommand * soap_new___tptz__SendAuxiliaryCommand(struct soap *soap, int n = -1) { return soap_instantiate___tptz__SendAuxiliaryCommand(soap, n, NULL, NULL, NULL); }

inline struct __tptz__SendAuxiliaryCommand * soap_new_req___tptz__SendAuxiliaryCommand(struct soap *soap) { struct __tptz__SendAuxiliaryCommand *_p = soap_instantiate___tptz__SendAuxiliaryCommand(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__SendAuxiliaryCommand(soap, _p); } return _p; }

inline struct __tptz__SendAuxiliaryCommand * soap_new_set___tptz__SendAuxiliaryCommand(struct soap *soap, _tptz__SendAuxiliaryCommand *tptz__SendAuxiliaryCommand) { struct __tptz__SendAuxiliaryCommand *_p = soap_instantiate___tptz__SendAuxiliaryCommand(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__SendAuxiliaryCommand(soap, _p); _p->tptz__SendAuxiliaryCommand = tptz__SendAuxiliaryCommand; } return _p; }

inline void soap_delete___tptz__SendAuxiliaryCommand(struct soap *soap, struct __tptz__SendAuxiliaryCommand *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__SendAuxiliaryCommand(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__RelativeMove
#define SOAP_TYPE___tptz__RelativeMove (1909)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__RelativeMove(struct soap*, struct __tptz__RelativeMove *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__RelativeMove(struct soap*, const struct __tptz__RelativeMove *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__RelativeMove(struct soap*, const char*, int, const struct __tptz__RelativeMove *, const char*);
SOAP_FMAC3 struct __tptz__RelativeMove * SOAP_FMAC4 soap_in___tptz__RelativeMove(struct soap*, const char*, struct __tptz__RelativeMove *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__RelativeMove(struct soap*, const struct __tptz__RelativeMove *, const char*, const char*);

#ifndef soap_write___tptz__RelativeMove
#define soap_write___tptz__RelativeMove(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__RelativeMove(soap, data),0) || soap_put___tptz__RelativeMove(soap, data, "-tptz:RelativeMove", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__RelativeMove * SOAP_FMAC4 soap_get___tptz__RelativeMove(struct soap*, struct __tptz__RelativeMove *, const char*, const char*);

#ifndef soap_read___tptz__RelativeMove
#define soap_read___tptz__RelativeMove(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__RelativeMove(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__RelativeMove * SOAP_FMAC2 soap_instantiate___tptz__RelativeMove(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__RelativeMove * soap_new___tptz__RelativeMove(struct soap *soap, int n = -1) { return soap_instantiate___tptz__RelativeMove(soap, n, NULL, NULL, NULL); }

inline struct __tptz__RelativeMove * soap_new_req___tptz__RelativeMove(struct soap *soap) { struct __tptz__RelativeMove *_p = soap_instantiate___tptz__RelativeMove(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__RelativeMove(soap, _p); } return _p; }

inline struct __tptz__RelativeMove * soap_new_set___tptz__RelativeMove(struct soap *soap, _tptz__RelativeMove *tptz__RelativeMove) { struct __tptz__RelativeMove *_p = soap_instantiate___tptz__RelativeMove(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__RelativeMove(soap, _p); _p->tptz__RelativeMove = tptz__RelativeMove; } return _p; }

inline void soap_delete___tptz__RelativeMove(struct soap *soap, struct __tptz__RelativeMove *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__RelativeMove(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__ContinuousMove
#define SOAP_TYPE___tptz__ContinuousMove (1905)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__ContinuousMove(struct soap*, struct __tptz__ContinuousMove *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__ContinuousMove(struct soap*, const struct __tptz__ContinuousMove *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__ContinuousMove(struct soap*, const char*, int, const struct __tptz__ContinuousMove *, const char*);
SOAP_FMAC3 struct __tptz__ContinuousMove * SOAP_FMAC4 soap_in___tptz__ContinuousMove(struct soap*, const char*, struct __tptz__ContinuousMove *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__ContinuousMove(struct soap*, const struct __tptz__ContinuousMove *, const char*, const char*);

#ifndef soap_write___tptz__ContinuousMove
#define soap_write___tptz__ContinuousMove(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__ContinuousMove(soap, data),0) || soap_put___tptz__ContinuousMove(soap, data, "-tptz:ContinuousMove", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__ContinuousMove * SOAP_FMAC4 soap_get___tptz__ContinuousMove(struct soap*, struct __tptz__ContinuousMove *, const char*, const char*);

#ifndef soap_read___tptz__ContinuousMove
#define soap_read___tptz__ContinuousMove(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__ContinuousMove(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__ContinuousMove * SOAP_FMAC2 soap_instantiate___tptz__ContinuousMove(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__ContinuousMove * soap_new___tptz__ContinuousMove(struct soap *soap, int n = -1) { return soap_instantiate___tptz__ContinuousMove(soap, n, NULL, NULL, NULL); }

inline struct __tptz__ContinuousMove * soap_new_req___tptz__ContinuousMove(struct soap *soap) { struct __tptz__ContinuousMove *_p = soap_instantiate___tptz__ContinuousMove(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__ContinuousMove(soap, _p); } return _p; }

inline struct __tptz__ContinuousMove * soap_new_set___tptz__ContinuousMove(struct soap *soap, _tptz__ContinuousMove *tptz__ContinuousMove) { struct __tptz__ContinuousMove *_p = soap_instantiate___tptz__ContinuousMove(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__ContinuousMove(soap, _p); _p->tptz__ContinuousMove = tptz__ContinuousMove; } return _p; }

inline void soap_delete___tptz__ContinuousMove(struct soap *soap, struct __tptz__ContinuousMove *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__ContinuousMove(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__SetHomePosition
#define SOAP_TYPE___tptz__SetHomePosition (1901)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__SetHomePosition(struct soap*, struct __tptz__SetHomePosition *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__SetHomePosition(struct soap*, const struct __tptz__SetHomePosition *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__SetHomePosition(struct soap*, const char*, int, const struct __tptz__SetHomePosition *, const char*);
SOAP_FMAC3 struct __tptz__SetHomePosition * SOAP_FMAC4 soap_in___tptz__SetHomePosition(struct soap*, const char*, struct __tptz__SetHomePosition *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__SetHomePosition(struct soap*, const struct __tptz__SetHomePosition *, const char*, const char*);

#ifndef soap_write___tptz__SetHomePosition
#define soap_write___tptz__SetHomePosition(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__SetHomePosition(soap, data),0) || soap_put___tptz__SetHomePosition(soap, data, "-tptz:SetHomePosition", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__SetHomePosition * SOAP_FMAC4 soap_get___tptz__SetHomePosition(struct soap*, struct __tptz__SetHomePosition *, const char*, const char*);

#ifndef soap_read___tptz__SetHomePosition
#define soap_read___tptz__SetHomePosition(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__SetHomePosition(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__SetHomePosition * SOAP_FMAC2 soap_instantiate___tptz__SetHomePosition(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__SetHomePosition * soap_new___tptz__SetHomePosition(struct soap *soap, int n = -1) { return soap_instantiate___tptz__SetHomePosition(soap, n, NULL, NULL, NULL); }

inline struct __tptz__SetHomePosition * soap_new_req___tptz__SetHomePosition(struct soap *soap) { struct __tptz__SetHomePosition *_p = soap_instantiate___tptz__SetHomePosition(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__SetHomePosition(soap, _p); } return _p; }

inline struct __tptz__SetHomePosition * soap_new_set___tptz__SetHomePosition(struct soap *soap, _tptz__SetHomePosition *tptz__SetHomePosition) { struct __tptz__SetHomePosition *_p = soap_instantiate___tptz__SetHomePosition(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__SetHomePosition(soap, _p); _p->tptz__SetHomePosition = tptz__SetHomePosition; } return _p; }

inline void soap_delete___tptz__SetHomePosition(struct soap *soap, struct __tptz__SetHomePosition *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__SetHomePosition(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__GotoHomePosition
#define SOAP_TYPE___tptz__GotoHomePosition (1897)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__GotoHomePosition(struct soap*, struct __tptz__GotoHomePosition *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__GotoHomePosition(struct soap*, const struct __tptz__GotoHomePosition *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__GotoHomePosition(struct soap*, const char*, int, const struct __tptz__GotoHomePosition *, const char*);
SOAP_FMAC3 struct __tptz__GotoHomePosition * SOAP_FMAC4 soap_in___tptz__GotoHomePosition(struct soap*, const char*, struct __tptz__GotoHomePosition *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__GotoHomePosition(struct soap*, const struct __tptz__GotoHomePosition *, const char*, const char*);

#ifndef soap_write___tptz__GotoHomePosition
#define soap_write___tptz__GotoHomePosition(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__GotoHomePosition(soap, data),0) || soap_put___tptz__GotoHomePosition(soap, data, "-tptz:GotoHomePosition", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__GotoHomePosition * SOAP_FMAC4 soap_get___tptz__GotoHomePosition(struct soap*, struct __tptz__GotoHomePosition *, const char*, const char*);

#ifndef soap_read___tptz__GotoHomePosition
#define soap_read___tptz__GotoHomePosition(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__GotoHomePosition(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__GotoHomePosition * SOAP_FMAC2 soap_instantiate___tptz__GotoHomePosition(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__GotoHomePosition * soap_new___tptz__GotoHomePosition(struct soap *soap, int n = -1) { return soap_instantiate___tptz__GotoHomePosition(soap, n, NULL, NULL, NULL); }

inline struct __tptz__GotoHomePosition * soap_new_req___tptz__GotoHomePosition(struct soap *soap) { struct __tptz__GotoHomePosition *_p = soap_instantiate___tptz__GotoHomePosition(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GotoHomePosition(soap, _p); } return _p; }

inline struct __tptz__GotoHomePosition * soap_new_set___tptz__GotoHomePosition(struct soap *soap, _tptz__GotoHomePosition *tptz__GotoHomePosition) { struct __tptz__GotoHomePosition *_p = soap_instantiate___tptz__GotoHomePosition(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GotoHomePosition(soap, _p); _p->tptz__GotoHomePosition = tptz__GotoHomePosition; } return _p; }

inline void soap_delete___tptz__GotoHomePosition(struct soap *soap, struct __tptz__GotoHomePosition *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__GotoHomePosition(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__GetConfigurationOptions
#define SOAP_TYPE___tptz__GetConfigurationOptions (1893)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__GetConfigurationOptions(struct soap*, struct __tptz__GetConfigurationOptions *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__GetConfigurationOptions(struct soap*, const struct __tptz__GetConfigurationOptions *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__GetConfigurationOptions(struct soap*, const char*, int, const struct __tptz__GetConfigurationOptions *, const char*);
SOAP_FMAC3 struct __tptz__GetConfigurationOptions * SOAP_FMAC4 soap_in___tptz__GetConfigurationOptions(struct soap*, const char*, struct __tptz__GetConfigurationOptions *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__GetConfigurationOptions(struct soap*, const struct __tptz__GetConfigurationOptions *, const char*, const char*);

#ifndef soap_write___tptz__GetConfigurationOptions
#define soap_write___tptz__GetConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__GetConfigurationOptions(soap, data),0) || soap_put___tptz__GetConfigurationOptions(soap, data, "-tptz:GetConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__GetConfigurationOptions * SOAP_FMAC4 soap_get___tptz__GetConfigurationOptions(struct soap*, struct __tptz__GetConfigurationOptions *, const char*, const char*);

#ifndef soap_read___tptz__GetConfigurationOptions
#define soap_read___tptz__GetConfigurationOptions(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__GetConfigurationOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__GetConfigurationOptions * SOAP_FMAC2 soap_instantiate___tptz__GetConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__GetConfigurationOptions * soap_new___tptz__GetConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate___tptz__GetConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline struct __tptz__GetConfigurationOptions * soap_new_req___tptz__GetConfigurationOptions(struct soap *soap) { struct __tptz__GetConfigurationOptions *_p = soap_instantiate___tptz__GetConfigurationOptions(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GetConfigurationOptions(soap, _p); } return _p; }

inline struct __tptz__GetConfigurationOptions * soap_new_set___tptz__GetConfigurationOptions(struct soap *soap, _tptz__GetConfigurationOptions *tptz__GetConfigurationOptions) { struct __tptz__GetConfigurationOptions *_p = soap_instantiate___tptz__GetConfigurationOptions(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GetConfigurationOptions(soap, _p); _p->tptz__GetConfigurationOptions = tptz__GetConfigurationOptions; } return _p; }

inline void soap_delete___tptz__GetConfigurationOptions(struct soap *soap, struct __tptz__GetConfigurationOptions *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__GetConfigurationOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__SetConfiguration
#define SOAP_TYPE___tptz__SetConfiguration (1889)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__SetConfiguration(struct soap*, struct __tptz__SetConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__SetConfiguration(struct soap*, const struct __tptz__SetConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__SetConfiguration(struct soap*, const char*, int, const struct __tptz__SetConfiguration *, const char*);
SOAP_FMAC3 struct __tptz__SetConfiguration * SOAP_FMAC4 soap_in___tptz__SetConfiguration(struct soap*, const char*, struct __tptz__SetConfiguration *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__SetConfiguration(struct soap*, const struct __tptz__SetConfiguration *, const char*, const char*);

#ifndef soap_write___tptz__SetConfiguration
#define soap_write___tptz__SetConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__SetConfiguration(soap, data),0) || soap_put___tptz__SetConfiguration(soap, data, "-tptz:SetConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__SetConfiguration * SOAP_FMAC4 soap_get___tptz__SetConfiguration(struct soap*, struct __tptz__SetConfiguration *, const char*, const char*);

#ifndef soap_read___tptz__SetConfiguration
#define soap_read___tptz__SetConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__SetConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__SetConfiguration * SOAP_FMAC2 soap_instantiate___tptz__SetConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__SetConfiguration * soap_new___tptz__SetConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tptz__SetConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tptz__SetConfiguration * soap_new_req___tptz__SetConfiguration(struct soap *soap) { struct __tptz__SetConfiguration *_p = soap_instantiate___tptz__SetConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__SetConfiguration(soap, _p); } return _p; }

inline struct __tptz__SetConfiguration * soap_new_set___tptz__SetConfiguration(struct soap *soap, _tptz__SetConfiguration *tptz__SetConfiguration) { struct __tptz__SetConfiguration *_p = soap_instantiate___tptz__SetConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__SetConfiguration(soap, _p); _p->tptz__SetConfiguration = tptz__SetConfiguration; } return _p; }

inline void soap_delete___tptz__SetConfiguration(struct soap *soap, struct __tptz__SetConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__SetConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__GetNode
#define SOAP_TYPE___tptz__GetNode (1885)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__GetNode(struct soap*, struct __tptz__GetNode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__GetNode(struct soap*, const struct __tptz__GetNode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__GetNode(struct soap*, const char*, int, const struct __tptz__GetNode *, const char*);
SOAP_FMAC3 struct __tptz__GetNode * SOAP_FMAC4 soap_in___tptz__GetNode(struct soap*, const char*, struct __tptz__GetNode *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__GetNode(struct soap*, const struct __tptz__GetNode *, const char*, const char*);

#ifndef soap_write___tptz__GetNode
#define soap_write___tptz__GetNode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__GetNode(soap, data),0) || soap_put___tptz__GetNode(soap, data, "-tptz:GetNode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__GetNode * SOAP_FMAC4 soap_get___tptz__GetNode(struct soap*, struct __tptz__GetNode *, const char*, const char*);

#ifndef soap_read___tptz__GetNode
#define soap_read___tptz__GetNode(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__GetNode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__GetNode * SOAP_FMAC2 soap_instantiate___tptz__GetNode(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__GetNode * soap_new___tptz__GetNode(struct soap *soap, int n = -1) { return soap_instantiate___tptz__GetNode(soap, n, NULL, NULL, NULL); }

inline struct __tptz__GetNode * soap_new_req___tptz__GetNode(struct soap *soap) { struct __tptz__GetNode *_p = soap_instantiate___tptz__GetNode(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GetNode(soap, _p); } return _p; }

inline struct __tptz__GetNode * soap_new_set___tptz__GetNode(struct soap *soap, _tptz__GetNode *tptz__GetNode) { struct __tptz__GetNode *_p = soap_instantiate___tptz__GetNode(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GetNode(soap, _p); _p->tptz__GetNode = tptz__GetNode; } return _p; }

inline void soap_delete___tptz__GetNode(struct soap *soap, struct __tptz__GetNode *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__GetNode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__GetNodes
#define SOAP_TYPE___tptz__GetNodes (1881)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__GetNodes(struct soap*, struct __tptz__GetNodes *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__GetNodes(struct soap*, const struct __tptz__GetNodes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__GetNodes(struct soap*, const char*, int, const struct __tptz__GetNodes *, const char*);
SOAP_FMAC3 struct __tptz__GetNodes * SOAP_FMAC4 soap_in___tptz__GetNodes(struct soap*, const char*, struct __tptz__GetNodes *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__GetNodes(struct soap*, const struct __tptz__GetNodes *, const char*, const char*);

#ifndef soap_write___tptz__GetNodes
#define soap_write___tptz__GetNodes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__GetNodes(soap, data),0) || soap_put___tptz__GetNodes(soap, data, "-tptz:GetNodes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__GetNodes * SOAP_FMAC4 soap_get___tptz__GetNodes(struct soap*, struct __tptz__GetNodes *, const char*, const char*);

#ifndef soap_read___tptz__GetNodes
#define soap_read___tptz__GetNodes(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__GetNodes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__GetNodes * SOAP_FMAC2 soap_instantiate___tptz__GetNodes(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__GetNodes * soap_new___tptz__GetNodes(struct soap *soap, int n = -1) { return soap_instantiate___tptz__GetNodes(soap, n, NULL, NULL, NULL); }

inline struct __tptz__GetNodes * soap_new_req___tptz__GetNodes(struct soap *soap) { struct __tptz__GetNodes *_p = soap_instantiate___tptz__GetNodes(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GetNodes(soap, _p); } return _p; }

inline struct __tptz__GetNodes * soap_new_set___tptz__GetNodes(struct soap *soap, _tptz__GetNodes *tptz__GetNodes) { struct __tptz__GetNodes *_p = soap_instantiate___tptz__GetNodes(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GetNodes(soap, _p); _p->tptz__GetNodes = tptz__GetNodes; } return _p; }

inline void soap_delete___tptz__GetNodes(struct soap *soap, struct __tptz__GetNodes *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__GetNodes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__GetConfiguration
#define SOAP_TYPE___tptz__GetConfiguration (1877)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__GetConfiguration(struct soap*, struct __tptz__GetConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__GetConfiguration(struct soap*, const struct __tptz__GetConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__GetConfiguration(struct soap*, const char*, int, const struct __tptz__GetConfiguration *, const char*);
SOAP_FMAC3 struct __tptz__GetConfiguration * SOAP_FMAC4 soap_in___tptz__GetConfiguration(struct soap*, const char*, struct __tptz__GetConfiguration *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__GetConfiguration(struct soap*, const struct __tptz__GetConfiguration *, const char*, const char*);

#ifndef soap_write___tptz__GetConfiguration
#define soap_write___tptz__GetConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__GetConfiguration(soap, data),0) || soap_put___tptz__GetConfiguration(soap, data, "-tptz:GetConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__GetConfiguration * SOAP_FMAC4 soap_get___tptz__GetConfiguration(struct soap*, struct __tptz__GetConfiguration *, const char*, const char*);

#ifndef soap_read___tptz__GetConfiguration
#define soap_read___tptz__GetConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__GetConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__GetConfiguration * SOAP_FMAC2 soap_instantiate___tptz__GetConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__GetConfiguration * soap_new___tptz__GetConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tptz__GetConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tptz__GetConfiguration * soap_new_req___tptz__GetConfiguration(struct soap *soap) { struct __tptz__GetConfiguration *_p = soap_instantiate___tptz__GetConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GetConfiguration(soap, _p); } return _p; }

inline struct __tptz__GetConfiguration * soap_new_set___tptz__GetConfiguration(struct soap *soap, _tptz__GetConfiguration *tptz__GetConfiguration) { struct __tptz__GetConfiguration *_p = soap_instantiate___tptz__GetConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GetConfiguration(soap, _p); _p->tptz__GetConfiguration = tptz__GetConfiguration; } return _p; }

inline void soap_delete___tptz__GetConfiguration(struct soap *soap, struct __tptz__GetConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__GetConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__GetStatus
#define SOAP_TYPE___tptz__GetStatus (1873)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__GetStatus(struct soap*, struct __tptz__GetStatus *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__GetStatus(struct soap*, const struct __tptz__GetStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__GetStatus(struct soap*, const char*, int, const struct __tptz__GetStatus *, const char*);
SOAP_FMAC3 struct __tptz__GetStatus * SOAP_FMAC4 soap_in___tptz__GetStatus(struct soap*, const char*, struct __tptz__GetStatus *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__GetStatus(struct soap*, const struct __tptz__GetStatus *, const char*, const char*);

#ifndef soap_write___tptz__GetStatus
#define soap_write___tptz__GetStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__GetStatus(soap, data),0) || soap_put___tptz__GetStatus(soap, data, "-tptz:GetStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__GetStatus * SOAP_FMAC4 soap_get___tptz__GetStatus(struct soap*, struct __tptz__GetStatus *, const char*, const char*);

#ifndef soap_read___tptz__GetStatus
#define soap_read___tptz__GetStatus(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__GetStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__GetStatus * SOAP_FMAC2 soap_instantiate___tptz__GetStatus(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__GetStatus * soap_new___tptz__GetStatus(struct soap *soap, int n = -1) { return soap_instantiate___tptz__GetStatus(soap, n, NULL, NULL, NULL); }

inline struct __tptz__GetStatus * soap_new_req___tptz__GetStatus(struct soap *soap) { struct __tptz__GetStatus *_p = soap_instantiate___tptz__GetStatus(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GetStatus(soap, _p); } return _p; }

inline struct __tptz__GetStatus * soap_new_set___tptz__GetStatus(struct soap *soap, _tptz__GetStatus *tptz__GetStatus) { struct __tptz__GetStatus *_p = soap_instantiate___tptz__GetStatus(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GetStatus(soap, _p); _p->tptz__GetStatus = tptz__GetStatus; } return _p; }

inline void soap_delete___tptz__GetStatus(struct soap *soap, struct __tptz__GetStatus *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__GetStatus(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__GotoPreset
#define SOAP_TYPE___tptz__GotoPreset (1869)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__GotoPreset(struct soap*, struct __tptz__GotoPreset *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__GotoPreset(struct soap*, const struct __tptz__GotoPreset *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__GotoPreset(struct soap*, const char*, int, const struct __tptz__GotoPreset *, const char*);
SOAP_FMAC3 struct __tptz__GotoPreset * SOAP_FMAC4 soap_in___tptz__GotoPreset(struct soap*, const char*, struct __tptz__GotoPreset *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__GotoPreset(struct soap*, const struct __tptz__GotoPreset *, const char*, const char*);

#ifndef soap_write___tptz__GotoPreset
#define soap_write___tptz__GotoPreset(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__GotoPreset(soap, data),0) || soap_put___tptz__GotoPreset(soap, data, "-tptz:GotoPreset", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__GotoPreset * SOAP_FMAC4 soap_get___tptz__GotoPreset(struct soap*, struct __tptz__GotoPreset *, const char*, const char*);

#ifndef soap_read___tptz__GotoPreset
#define soap_read___tptz__GotoPreset(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__GotoPreset(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__GotoPreset * SOAP_FMAC2 soap_instantiate___tptz__GotoPreset(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__GotoPreset * soap_new___tptz__GotoPreset(struct soap *soap, int n = -1) { return soap_instantiate___tptz__GotoPreset(soap, n, NULL, NULL, NULL); }

inline struct __tptz__GotoPreset * soap_new_req___tptz__GotoPreset(struct soap *soap) { struct __tptz__GotoPreset *_p = soap_instantiate___tptz__GotoPreset(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GotoPreset(soap, _p); } return _p; }

inline struct __tptz__GotoPreset * soap_new_set___tptz__GotoPreset(struct soap *soap, _tptz__GotoPreset *tptz__GotoPreset) { struct __tptz__GotoPreset *_p = soap_instantiate___tptz__GotoPreset(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GotoPreset(soap, _p); _p->tptz__GotoPreset = tptz__GotoPreset; } return _p; }

inline void soap_delete___tptz__GotoPreset(struct soap *soap, struct __tptz__GotoPreset *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__GotoPreset(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__RemovePreset
#define SOAP_TYPE___tptz__RemovePreset (1865)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__RemovePreset(struct soap*, struct __tptz__RemovePreset *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__RemovePreset(struct soap*, const struct __tptz__RemovePreset *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__RemovePreset(struct soap*, const char*, int, const struct __tptz__RemovePreset *, const char*);
SOAP_FMAC3 struct __tptz__RemovePreset * SOAP_FMAC4 soap_in___tptz__RemovePreset(struct soap*, const char*, struct __tptz__RemovePreset *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__RemovePreset(struct soap*, const struct __tptz__RemovePreset *, const char*, const char*);

#ifndef soap_write___tptz__RemovePreset
#define soap_write___tptz__RemovePreset(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__RemovePreset(soap, data),0) || soap_put___tptz__RemovePreset(soap, data, "-tptz:RemovePreset", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__RemovePreset * SOAP_FMAC4 soap_get___tptz__RemovePreset(struct soap*, struct __tptz__RemovePreset *, const char*, const char*);

#ifndef soap_read___tptz__RemovePreset
#define soap_read___tptz__RemovePreset(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__RemovePreset(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__RemovePreset * SOAP_FMAC2 soap_instantiate___tptz__RemovePreset(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__RemovePreset * soap_new___tptz__RemovePreset(struct soap *soap, int n = -1) { return soap_instantiate___tptz__RemovePreset(soap, n, NULL, NULL, NULL); }

inline struct __tptz__RemovePreset * soap_new_req___tptz__RemovePreset(struct soap *soap) { struct __tptz__RemovePreset *_p = soap_instantiate___tptz__RemovePreset(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__RemovePreset(soap, _p); } return _p; }

inline struct __tptz__RemovePreset * soap_new_set___tptz__RemovePreset(struct soap *soap, _tptz__RemovePreset *tptz__RemovePreset) { struct __tptz__RemovePreset *_p = soap_instantiate___tptz__RemovePreset(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__RemovePreset(soap, _p); _p->tptz__RemovePreset = tptz__RemovePreset; } return _p; }

inline void soap_delete___tptz__RemovePreset(struct soap *soap, struct __tptz__RemovePreset *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__RemovePreset(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__SetPreset
#define SOAP_TYPE___tptz__SetPreset (1861)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__SetPreset(struct soap*, struct __tptz__SetPreset *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__SetPreset(struct soap*, const struct __tptz__SetPreset *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__SetPreset(struct soap*, const char*, int, const struct __tptz__SetPreset *, const char*);
SOAP_FMAC3 struct __tptz__SetPreset * SOAP_FMAC4 soap_in___tptz__SetPreset(struct soap*, const char*, struct __tptz__SetPreset *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__SetPreset(struct soap*, const struct __tptz__SetPreset *, const char*, const char*);

#ifndef soap_write___tptz__SetPreset
#define soap_write___tptz__SetPreset(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__SetPreset(soap, data),0) || soap_put___tptz__SetPreset(soap, data, "-tptz:SetPreset", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__SetPreset * SOAP_FMAC4 soap_get___tptz__SetPreset(struct soap*, struct __tptz__SetPreset *, const char*, const char*);

#ifndef soap_read___tptz__SetPreset
#define soap_read___tptz__SetPreset(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__SetPreset(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__SetPreset * SOAP_FMAC2 soap_instantiate___tptz__SetPreset(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__SetPreset * soap_new___tptz__SetPreset(struct soap *soap, int n = -1) { return soap_instantiate___tptz__SetPreset(soap, n, NULL, NULL, NULL); }

inline struct __tptz__SetPreset * soap_new_req___tptz__SetPreset(struct soap *soap) { struct __tptz__SetPreset *_p = soap_instantiate___tptz__SetPreset(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__SetPreset(soap, _p); } return _p; }

inline struct __tptz__SetPreset * soap_new_set___tptz__SetPreset(struct soap *soap, _tptz__SetPreset *tptz__SetPreset) { struct __tptz__SetPreset *_p = soap_instantiate___tptz__SetPreset(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__SetPreset(soap, _p); _p->tptz__SetPreset = tptz__SetPreset; } return _p; }

inline void soap_delete___tptz__SetPreset(struct soap *soap, struct __tptz__SetPreset *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__SetPreset(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__GetPresets
#define SOAP_TYPE___tptz__GetPresets (1857)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__GetPresets(struct soap*, struct __tptz__GetPresets *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__GetPresets(struct soap*, const struct __tptz__GetPresets *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__GetPresets(struct soap*, const char*, int, const struct __tptz__GetPresets *, const char*);
SOAP_FMAC3 struct __tptz__GetPresets * SOAP_FMAC4 soap_in___tptz__GetPresets(struct soap*, const char*, struct __tptz__GetPresets *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__GetPresets(struct soap*, const struct __tptz__GetPresets *, const char*, const char*);

#ifndef soap_write___tptz__GetPresets
#define soap_write___tptz__GetPresets(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__GetPresets(soap, data),0) || soap_put___tptz__GetPresets(soap, data, "-tptz:GetPresets", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__GetPresets * SOAP_FMAC4 soap_get___tptz__GetPresets(struct soap*, struct __tptz__GetPresets *, const char*, const char*);

#ifndef soap_read___tptz__GetPresets
#define soap_read___tptz__GetPresets(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__GetPresets(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__GetPresets * SOAP_FMAC2 soap_instantiate___tptz__GetPresets(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__GetPresets * soap_new___tptz__GetPresets(struct soap *soap, int n = -1) { return soap_instantiate___tptz__GetPresets(soap, n, NULL, NULL, NULL); }

inline struct __tptz__GetPresets * soap_new_req___tptz__GetPresets(struct soap *soap) { struct __tptz__GetPresets *_p = soap_instantiate___tptz__GetPresets(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GetPresets(soap, _p); } return _p; }

inline struct __tptz__GetPresets * soap_new_set___tptz__GetPresets(struct soap *soap, _tptz__GetPresets *tptz__GetPresets) { struct __tptz__GetPresets *_p = soap_instantiate___tptz__GetPresets(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GetPresets(soap, _p); _p->tptz__GetPresets = tptz__GetPresets; } return _p; }

inline void soap_delete___tptz__GetPresets(struct soap *soap, struct __tptz__GetPresets *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__GetPresets(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__GetConfigurations
#define SOAP_TYPE___tptz__GetConfigurations (1853)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__GetConfigurations(struct soap*, struct __tptz__GetConfigurations *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__GetConfigurations(struct soap*, const struct __tptz__GetConfigurations *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__GetConfigurations(struct soap*, const char*, int, const struct __tptz__GetConfigurations *, const char*);
SOAP_FMAC3 struct __tptz__GetConfigurations * SOAP_FMAC4 soap_in___tptz__GetConfigurations(struct soap*, const char*, struct __tptz__GetConfigurations *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__GetConfigurations(struct soap*, const struct __tptz__GetConfigurations *, const char*, const char*);

#ifndef soap_write___tptz__GetConfigurations
#define soap_write___tptz__GetConfigurations(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__GetConfigurations(soap, data),0) || soap_put___tptz__GetConfigurations(soap, data, "-tptz:GetConfigurations", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__GetConfigurations * SOAP_FMAC4 soap_get___tptz__GetConfigurations(struct soap*, struct __tptz__GetConfigurations *, const char*, const char*);

#ifndef soap_read___tptz__GetConfigurations
#define soap_read___tptz__GetConfigurations(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__GetConfigurations(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__GetConfigurations * SOAP_FMAC2 soap_instantiate___tptz__GetConfigurations(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__GetConfigurations * soap_new___tptz__GetConfigurations(struct soap *soap, int n = -1) { return soap_instantiate___tptz__GetConfigurations(soap, n, NULL, NULL, NULL); }

inline struct __tptz__GetConfigurations * soap_new_req___tptz__GetConfigurations(struct soap *soap) { struct __tptz__GetConfigurations *_p = soap_instantiate___tptz__GetConfigurations(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GetConfigurations(soap, _p); } return _p; }

inline struct __tptz__GetConfigurations * soap_new_set___tptz__GetConfigurations(struct soap *soap, _tptz__GetConfigurations *tptz__GetConfigurations) { struct __tptz__GetConfigurations *_p = soap_instantiate___tptz__GetConfigurations(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GetConfigurations(soap, _p); _p->tptz__GetConfigurations = tptz__GetConfigurations; } return _p; }

inline void soap_delete___tptz__GetConfigurations(struct soap *soap, struct __tptz__GetConfigurations *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__GetConfigurations(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tptz__GetServiceCapabilities
#define SOAP_TYPE___tptz__GetServiceCapabilities (1849)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tptz__GetServiceCapabilities(struct soap*, struct __tptz__GetServiceCapabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tptz__GetServiceCapabilities(struct soap*, const struct __tptz__GetServiceCapabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tptz__GetServiceCapabilities(struct soap*, const char*, int, const struct __tptz__GetServiceCapabilities *, const char*);
SOAP_FMAC3 struct __tptz__GetServiceCapabilities * SOAP_FMAC4 soap_in___tptz__GetServiceCapabilities(struct soap*, const char*, struct __tptz__GetServiceCapabilities *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tptz__GetServiceCapabilities(struct soap*, const struct __tptz__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_write___tptz__GetServiceCapabilities
#define soap_write___tptz__GetServiceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tptz__GetServiceCapabilities(soap, data),0) || soap_put___tptz__GetServiceCapabilities(soap, data, "-tptz:GetServiceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tptz__GetServiceCapabilities * SOAP_FMAC4 soap_get___tptz__GetServiceCapabilities(struct soap*, struct __tptz__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_read___tptz__GetServiceCapabilities
#define soap_read___tptz__GetServiceCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get___tptz__GetServiceCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tptz__GetServiceCapabilities * SOAP_FMAC2 soap_instantiate___tptz__GetServiceCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline struct __tptz__GetServiceCapabilities * soap_new___tptz__GetServiceCapabilities(struct soap *soap, int n = -1) { return soap_instantiate___tptz__GetServiceCapabilities(soap, n, NULL, NULL, NULL); }

inline struct __tptz__GetServiceCapabilities * soap_new_req___tptz__GetServiceCapabilities(struct soap *soap) { struct __tptz__GetServiceCapabilities *_p = soap_instantiate___tptz__GetServiceCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GetServiceCapabilities(soap, _p); } return _p; }

inline struct __tptz__GetServiceCapabilities * soap_new_set___tptz__GetServiceCapabilities(struct soap *soap, _tptz__GetServiceCapabilities *tptz__GetServiceCapabilities) { struct __tptz__GetServiceCapabilities *_p = soap_instantiate___tptz__GetServiceCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tptz__GetServiceCapabilities(soap, _p); _p->tptz__GetServiceCapabilities = tptz__GetServiceCapabilities; } return _p; }

inline void soap_delete___tptz__GetServiceCapabilities(struct soap *soap, struct __tptz__GetServiceCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tptz__GetServiceCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__StartSystemRestore
#define SOAP_TYPE___tds__StartSystemRestore (1845)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__StartSystemRestore(struct soap*, struct __tds__StartSystemRestore *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__StartSystemRestore(struct soap*, const struct __tds__StartSystemRestore *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__StartSystemRestore(struct soap*, const char*, int, const struct __tds__StartSystemRestore *, const char*);
SOAP_FMAC3 struct __tds__StartSystemRestore * SOAP_FMAC4 soap_in___tds__StartSystemRestore(struct soap*, const char*, struct __tds__StartSystemRestore *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__StartSystemRestore(struct soap*, const struct __tds__StartSystemRestore *, const char*, const char*);

#ifndef soap_write___tds__StartSystemRestore
#define soap_write___tds__StartSystemRestore(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__StartSystemRestore(soap, data),0) || soap_put___tds__StartSystemRestore(soap, data, "-tds:StartSystemRestore", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__StartSystemRestore * SOAP_FMAC4 soap_get___tds__StartSystemRestore(struct soap*, struct __tds__StartSystemRestore *, const char*, const char*);

#ifndef soap_read___tds__StartSystemRestore
#define soap_read___tds__StartSystemRestore(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__StartSystemRestore(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__StartSystemRestore * SOAP_FMAC2 soap_instantiate___tds__StartSystemRestore(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__StartSystemRestore * soap_new___tds__StartSystemRestore(struct soap *soap, int n = -1) { return soap_instantiate___tds__StartSystemRestore(soap, n, NULL, NULL, NULL); }

inline struct __tds__StartSystemRestore * soap_new_req___tds__StartSystemRestore(struct soap *soap) { struct __tds__StartSystemRestore *_p = soap_instantiate___tds__StartSystemRestore(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__StartSystemRestore(soap, _p); } return _p; }

inline struct __tds__StartSystemRestore * soap_new_set___tds__StartSystemRestore(struct soap *soap, _tds__StartSystemRestore *tds__StartSystemRestore) { struct __tds__StartSystemRestore *_p = soap_instantiate___tds__StartSystemRestore(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__StartSystemRestore(soap, _p); _p->tds__StartSystemRestore = tds__StartSystemRestore; } return _p; }

inline void soap_delete___tds__StartSystemRestore(struct soap *soap, struct __tds__StartSystemRestore *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__StartSystemRestore(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__StartFirmwareUpgrade
#define SOAP_TYPE___tds__StartFirmwareUpgrade (1841)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__StartFirmwareUpgrade(struct soap*, struct __tds__StartFirmwareUpgrade *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__StartFirmwareUpgrade(struct soap*, const struct __tds__StartFirmwareUpgrade *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__StartFirmwareUpgrade(struct soap*, const char*, int, const struct __tds__StartFirmwareUpgrade *, const char*);
SOAP_FMAC3 struct __tds__StartFirmwareUpgrade * SOAP_FMAC4 soap_in___tds__StartFirmwareUpgrade(struct soap*, const char*, struct __tds__StartFirmwareUpgrade *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__StartFirmwareUpgrade(struct soap*, const struct __tds__StartFirmwareUpgrade *, const char*, const char*);

#ifndef soap_write___tds__StartFirmwareUpgrade
#define soap_write___tds__StartFirmwareUpgrade(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__StartFirmwareUpgrade(soap, data),0) || soap_put___tds__StartFirmwareUpgrade(soap, data, "-tds:StartFirmwareUpgrade", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__StartFirmwareUpgrade * SOAP_FMAC4 soap_get___tds__StartFirmwareUpgrade(struct soap*, struct __tds__StartFirmwareUpgrade *, const char*, const char*);

#ifndef soap_read___tds__StartFirmwareUpgrade
#define soap_read___tds__StartFirmwareUpgrade(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__StartFirmwareUpgrade(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__StartFirmwareUpgrade * SOAP_FMAC2 soap_instantiate___tds__StartFirmwareUpgrade(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__StartFirmwareUpgrade * soap_new___tds__StartFirmwareUpgrade(struct soap *soap, int n = -1) { return soap_instantiate___tds__StartFirmwareUpgrade(soap, n, NULL, NULL, NULL); }

inline struct __tds__StartFirmwareUpgrade * soap_new_req___tds__StartFirmwareUpgrade(struct soap *soap) { struct __tds__StartFirmwareUpgrade *_p = soap_instantiate___tds__StartFirmwareUpgrade(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__StartFirmwareUpgrade(soap, _p); } return _p; }

inline struct __tds__StartFirmwareUpgrade * soap_new_set___tds__StartFirmwareUpgrade(struct soap *soap, _tds__StartFirmwareUpgrade *tds__StartFirmwareUpgrade) { struct __tds__StartFirmwareUpgrade *_p = soap_instantiate___tds__StartFirmwareUpgrade(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__StartFirmwareUpgrade(soap, _p); _p->tds__StartFirmwareUpgrade = tds__StartFirmwareUpgrade; } return _p; }

inline void soap_delete___tds__StartFirmwareUpgrade(struct soap *soap, struct __tds__StartFirmwareUpgrade *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__StartFirmwareUpgrade(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetSystemUris
#define SOAP_TYPE___tds__GetSystemUris (1837)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetSystemUris(struct soap*, struct __tds__GetSystemUris *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetSystemUris(struct soap*, const struct __tds__GetSystemUris *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetSystemUris(struct soap*, const char*, int, const struct __tds__GetSystemUris *, const char*);
SOAP_FMAC3 struct __tds__GetSystemUris * SOAP_FMAC4 soap_in___tds__GetSystemUris(struct soap*, const char*, struct __tds__GetSystemUris *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetSystemUris(struct soap*, const struct __tds__GetSystemUris *, const char*, const char*);

#ifndef soap_write___tds__GetSystemUris
#define soap_write___tds__GetSystemUris(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetSystemUris(soap, data),0) || soap_put___tds__GetSystemUris(soap, data, "-tds:GetSystemUris", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetSystemUris * SOAP_FMAC4 soap_get___tds__GetSystemUris(struct soap*, struct __tds__GetSystemUris *, const char*, const char*);

#ifndef soap_read___tds__GetSystemUris
#define soap_read___tds__GetSystemUris(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetSystemUris(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetSystemUris * SOAP_FMAC2 soap_instantiate___tds__GetSystemUris(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetSystemUris * soap_new___tds__GetSystemUris(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetSystemUris(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetSystemUris * soap_new_req___tds__GetSystemUris(struct soap *soap) { struct __tds__GetSystemUris *_p = soap_instantiate___tds__GetSystemUris(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetSystemUris(soap, _p); } return _p; }

inline struct __tds__GetSystemUris * soap_new_set___tds__GetSystemUris(struct soap *soap, _tds__GetSystemUris *tds__GetSystemUris) { struct __tds__GetSystemUris *_p = soap_instantiate___tds__GetSystemUris(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetSystemUris(soap, _p); _p->tds__GetSystemUris = tds__GetSystemUris; } return _p; }

inline void soap_delete___tds__GetSystemUris(struct soap *soap, struct __tds__GetSystemUris *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetSystemUris(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__ScanAvailableDot11Networks
#define SOAP_TYPE___tds__ScanAvailableDot11Networks (1833)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__ScanAvailableDot11Networks(struct soap*, struct __tds__ScanAvailableDot11Networks *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__ScanAvailableDot11Networks(struct soap*, const struct __tds__ScanAvailableDot11Networks *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__ScanAvailableDot11Networks(struct soap*, const char*, int, const struct __tds__ScanAvailableDot11Networks *, const char*);
SOAP_FMAC3 struct __tds__ScanAvailableDot11Networks * SOAP_FMAC4 soap_in___tds__ScanAvailableDot11Networks(struct soap*, const char*, struct __tds__ScanAvailableDot11Networks *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__ScanAvailableDot11Networks(struct soap*, const struct __tds__ScanAvailableDot11Networks *, const char*, const char*);

#ifndef soap_write___tds__ScanAvailableDot11Networks
#define soap_write___tds__ScanAvailableDot11Networks(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__ScanAvailableDot11Networks(soap, data),0) || soap_put___tds__ScanAvailableDot11Networks(soap, data, "-tds:ScanAvailableDot11Networks", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__ScanAvailableDot11Networks * SOAP_FMAC4 soap_get___tds__ScanAvailableDot11Networks(struct soap*, struct __tds__ScanAvailableDot11Networks *, const char*, const char*);

#ifndef soap_read___tds__ScanAvailableDot11Networks
#define soap_read___tds__ScanAvailableDot11Networks(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__ScanAvailableDot11Networks(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__ScanAvailableDot11Networks * SOAP_FMAC2 soap_instantiate___tds__ScanAvailableDot11Networks(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__ScanAvailableDot11Networks * soap_new___tds__ScanAvailableDot11Networks(struct soap *soap, int n = -1) { return soap_instantiate___tds__ScanAvailableDot11Networks(soap, n, NULL, NULL, NULL); }

inline struct __tds__ScanAvailableDot11Networks * soap_new_req___tds__ScanAvailableDot11Networks(struct soap *soap) { struct __tds__ScanAvailableDot11Networks *_p = soap_instantiate___tds__ScanAvailableDot11Networks(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__ScanAvailableDot11Networks(soap, _p); } return _p; }

inline struct __tds__ScanAvailableDot11Networks * soap_new_set___tds__ScanAvailableDot11Networks(struct soap *soap, _tds__ScanAvailableDot11Networks *tds__ScanAvailableDot11Networks) { struct __tds__ScanAvailableDot11Networks *_p = soap_instantiate___tds__ScanAvailableDot11Networks(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__ScanAvailableDot11Networks(soap, _p); _p->tds__ScanAvailableDot11Networks = tds__ScanAvailableDot11Networks; } return _p; }

inline void soap_delete___tds__ScanAvailableDot11Networks(struct soap *soap, struct __tds__ScanAvailableDot11Networks *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__ScanAvailableDot11Networks(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetDot11Status
#define SOAP_TYPE___tds__GetDot11Status (1829)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetDot11Status(struct soap*, struct __tds__GetDot11Status *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetDot11Status(struct soap*, const struct __tds__GetDot11Status *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetDot11Status(struct soap*, const char*, int, const struct __tds__GetDot11Status *, const char*);
SOAP_FMAC3 struct __tds__GetDot11Status * SOAP_FMAC4 soap_in___tds__GetDot11Status(struct soap*, const char*, struct __tds__GetDot11Status *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetDot11Status(struct soap*, const struct __tds__GetDot11Status *, const char*, const char*);

#ifndef soap_write___tds__GetDot11Status
#define soap_write___tds__GetDot11Status(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetDot11Status(soap, data),0) || soap_put___tds__GetDot11Status(soap, data, "-tds:GetDot11Status", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetDot11Status * SOAP_FMAC4 soap_get___tds__GetDot11Status(struct soap*, struct __tds__GetDot11Status *, const char*, const char*);

#ifndef soap_read___tds__GetDot11Status
#define soap_read___tds__GetDot11Status(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetDot11Status(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetDot11Status * SOAP_FMAC2 soap_instantiate___tds__GetDot11Status(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetDot11Status * soap_new___tds__GetDot11Status(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetDot11Status(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetDot11Status * soap_new_req___tds__GetDot11Status(struct soap *soap) { struct __tds__GetDot11Status *_p = soap_instantiate___tds__GetDot11Status(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetDot11Status(soap, _p); } return _p; }

inline struct __tds__GetDot11Status * soap_new_set___tds__GetDot11Status(struct soap *soap, _tds__GetDot11Status *tds__GetDot11Status) { struct __tds__GetDot11Status *_p = soap_instantiate___tds__GetDot11Status(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetDot11Status(soap, _p); _p->tds__GetDot11Status = tds__GetDot11Status; } return _p; }

inline void soap_delete___tds__GetDot11Status(struct soap *soap, struct __tds__GetDot11Status *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetDot11Status(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetDot11Capabilities
#define SOAP_TYPE___tds__GetDot11Capabilities (1825)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetDot11Capabilities(struct soap*, struct __tds__GetDot11Capabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetDot11Capabilities(struct soap*, const struct __tds__GetDot11Capabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetDot11Capabilities(struct soap*, const char*, int, const struct __tds__GetDot11Capabilities *, const char*);
SOAP_FMAC3 struct __tds__GetDot11Capabilities * SOAP_FMAC4 soap_in___tds__GetDot11Capabilities(struct soap*, const char*, struct __tds__GetDot11Capabilities *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetDot11Capabilities(struct soap*, const struct __tds__GetDot11Capabilities *, const char*, const char*);

#ifndef soap_write___tds__GetDot11Capabilities
#define soap_write___tds__GetDot11Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetDot11Capabilities(soap, data),0) || soap_put___tds__GetDot11Capabilities(soap, data, "-tds:GetDot11Capabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetDot11Capabilities * SOAP_FMAC4 soap_get___tds__GetDot11Capabilities(struct soap*, struct __tds__GetDot11Capabilities *, const char*, const char*);

#ifndef soap_read___tds__GetDot11Capabilities
#define soap_read___tds__GetDot11Capabilities(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetDot11Capabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetDot11Capabilities * SOAP_FMAC2 soap_instantiate___tds__GetDot11Capabilities(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetDot11Capabilities * soap_new___tds__GetDot11Capabilities(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetDot11Capabilities(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetDot11Capabilities * soap_new_req___tds__GetDot11Capabilities(struct soap *soap) { struct __tds__GetDot11Capabilities *_p = soap_instantiate___tds__GetDot11Capabilities(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetDot11Capabilities(soap, _p); } return _p; }

inline struct __tds__GetDot11Capabilities * soap_new_set___tds__GetDot11Capabilities(struct soap *soap, _tds__GetDot11Capabilities *tds__GetDot11Capabilities) { struct __tds__GetDot11Capabilities *_p = soap_instantiate___tds__GetDot11Capabilities(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetDot11Capabilities(soap, _p); _p->tds__GetDot11Capabilities = tds__GetDot11Capabilities; } return _p; }

inline void soap_delete___tds__GetDot11Capabilities(struct soap *soap, struct __tds__GetDot11Capabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetDot11Capabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__DeleteDot1XConfiguration
#define SOAP_TYPE___tds__DeleteDot1XConfiguration (1821)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__DeleteDot1XConfiguration(struct soap*, struct __tds__DeleteDot1XConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__DeleteDot1XConfiguration(struct soap*, const struct __tds__DeleteDot1XConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__DeleteDot1XConfiguration(struct soap*, const char*, int, const struct __tds__DeleteDot1XConfiguration *, const char*);
SOAP_FMAC3 struct __tds__DeleteDot1XConfiguration * SOAP_FMAC4 soap_in___tds__DeleteDot1XConfiguration(struct soap*, const char*, struct __tds__DeleteDot1XConfiguration *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__DeleteDot1XConfiguration(struct soap*, const struct __tds__DeleteDot1XConfiguration *, const char*, const char*);

#ifndef soap_write___tds__DeleteDot1XConfiguration
#define soap_write___tds__DeleteDot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__DeleteDot1XConfiguration(soap, data),0) || soap_put___tds__DeleteDot1XConfiguration(soap, data, "-tds:DeleteDot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__DeleteDot1XConfiguration * SOAP_FMAC4 soap_get___tds__DeleteDot1XConfiguration(struct soap*, struct __tds__DeleteDot1XConfiguration *, const char*, const char*);

#ifndef soap_read___tds__DeleteDot1XConfiguration
#define soap_read___tds__DeleteDot1XConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__DeleteDot1XConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__DeleteDot1XConfiguration * SOAP_FMAC2 soap_instantiate___tds__DeleteDot1XConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__DeleteDot1XConfiguration * soap_new___tds__DeleteDot1XConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tds__DeleteDot1XConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tds__DeleteDot1XConfiguration * soap_new_req___tds__DeleteDot1XConfiguration(struct soap *soap) { struct __tds__DeleteDot1XConfiguration *_p = soap_instantiate___tds__DeleteDot1XConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__DeleteDot1XConfiguration(soap, _p); } return _p; }

inline struct __tds__DeleteDot1XConfiguration * soap_new_set___tds__DeleteDot1XConfiguration(struct soap *soap, _tds__DeleteDot1XConfiguration *tds__DeleteDot1XConfiguration) { struct __tds__DeleteDot1XConfiguration *_p = soap_instantiate___tds__DeleteDot1XConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__DeleteDot1XConfiguration(soap, _p); _p->tds__DeleteDot1XConfiguration = tds__DeleteDot1XConfiguration; } return _p; }

inline void soap_delete___tds__DeleteDot1XConfiguration(struct soap *soap, struct __tds__DeleteDot1XConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__DeleteDot1XConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetDot1XConfigurations
#define SOAP_TYPE___tds__GetDot1XConfigurations (1817)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetDot1XConfigurations(struct soap*, struct __tds__GetDot1XConfigurations *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetDot1XConfigurations(struct soap*, const struct __tds__GetDot1XConfigurations *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetDot1XConfigurations(struct soap*, const char*, int, const struct __tds__GetDot1XConfigurations *, const char*);
SOAP_FMAC3 struct __tds__GetDot1XConfigurations * SOAP_FMAC4 soap_in___tds__GetDot1XConfigurations(struct soap*, const char*, struct __tds__GetDot1XConfigurations *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetDot1XConfigurations(struct soap*, const struct __tds__GetDot1XConfigurations *, const char*, const char*);

#ifndef soap_write___tds__GetDot1XConfigurations
#define soap_write___tds__GetDot1XConfigurations(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetDot1XConfigurations(soap, data),0) || soap_put___tds__GetDot1XConfigurations(soap, data, "-tds:GetDot1XConfigurations", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetDot1XConfigurations * SOAP_FMAC4 soap_get___tds__GetDot1XConfigurations(struct soap*, struct __tds__GetDot1XConfigurations *, const char*, const char*);

#ifndef soap_read___tds__GetDot1XConfigurations
#define soap_read___tds__GetDot1XConfigurations(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetDot1XConfigurations(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetDot1XConfigurations * SOAP_FMAC2 soap_instantiate___tds__GetDot1XConfigurations(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetDot1XConfigurations * soap_new___tds__GetDot1XConfigurations(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetDot1XConfigurations(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetDot1XConfigurations * soap_new_req___tds__GetDot1XConfigurations(struct soap *soap) { struct __tds__GetDot1XConfigurations *_p = soap_instantiate___tds__GetDot1XConfigurations(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetDot1XConfigurations(soap, _p); } return _p; }

inline struct __tds__GetDot1XConfigurations * soap_new_set___tds__GetDot1XConfigurations(struct soap *soap, _tds__GetDot1XConfigurations *tds__GetDot1XConfigurations) { struct __tds__GetDot1XConfigurations *_p = soap_instantiate___tds__GetDot1XConfigurations(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetDot1XConfigurations(soap, _p); _p->tds__GetDot1XConfigurations = tds__GetDot1XConfigurations; } return _p; }

inline void soap_delete___tds__GetDot1XConfigurations(struct soap *soap, struct __tds__GetDot1XConfigurations *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetDot1XConfigurations(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetDot1XConfiguration
#define SOAP_TYPE___tds__GetDot1XConfiguration (1813)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetDot1XConfiguration(struct soap*, struct __tds__GetDot1XConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetDot1XConfiguration(struct soap*, const struct __tds__GetDot1XConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetDot1XConfiguration(struct soap*, const char*, int, const struct __tds__GetDot1XConfiguration *, const char*);
SOAP_FMAC3 struct __tds__GetDot1XConfiguration * SOAP_FMAC4 soap_in___tds__GetDot1XConfiguration(struct soap*, const char*, struct __tds__GetDot1XConfiguration *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetDot1XConfiguration(struct soap*, const struct __tds__GetDot1XConfiguration *, const char*, const char*);

#ifndef soap_write___tds__GetDot1XConfiguration
#define soap_write___tds__GetDot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetDot1XConfiguration(soap, data),0) || soap_put___tds__GetDot1XConfiguration(soap, data, "-tds:GetDot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetDot1XConfiguration * SOAP_FMAC4 soap_get___tds__GetDot1XConfiguration(struct soap*, struct __tds__GetDot1XConfiguration *, const char*, const char*);

#ifndef soap_read___tds__GetDot1XConfiguration
#define soap_read___tds__GetDot1XConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetDot1XConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetDot1XConfiguration * SOAP_FMAC2 soap_instantiate___tds__GetDot1XConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetDot1XConfiguration * soap_new___tds__GetDot1XConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetDot1XConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetDot1XConfiguration * soap_new_req___tds__GetDot1XConfiguration(struct soap *soap) { struct __tds__GetDot1XConfiguration *_p = soap_instantiate___tds__GetDot1XConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetDot1XConfiguration(soap, _p); } return _p; }

inline struct __tds__GetDot1XConfiguration * soap_new_set___tds__GetDot1XConfiguration(struct soap *soap, _tds__GetDot1XConfiguration *tds__GetDot1XConfiguration) { struct __tds__GetDot1XConfiguration *_p = soap_instantiate___tds__GetDot1XConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetDot1XConfiguration(soap, _p); _p->tds__GetDot1XConfiguration = tds__GetDot1XConfiguration; } return _p; }

inline void soap_delete___tds__GetDot1XConfiguration(struct soap *soap, struct __tds__GetDot1XConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetDot1XConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__SetDot1XConfiguration
#define SOAP_TYPE___tds__SetDot1XConfiguration (1809)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetDot1XConfiguration(struct soap*, struct __tds__SetDot1XConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetDot1XConfiguration(struct soap*, const struct __tds__SetDot1XConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetDot1XConfiguration(struct soap*, const char*, int, const struct __tds__SetDot1XConfiguration *, const char*);
SOAP_FMAC3 struct __tds__SetDot1XConfiguration * SOAP_FMAC4 soap_in___tds__SetDot1XConfiguration(struct soap*, const char*, struct __tds__SetDot1XConfiguration *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetDot1XConfiguration(struct soap*, const struct __tds__SetDot1XConfiguration *, const char*, const char*);

#ifndef soap_write___tds__SetDot1XConfiguration
#define soap_write___tds__SetDot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetDot1XConfiguration(soap, data),0) || soap_put___tds__SetDot1XConfiguration(soap, data, "-tds:SetDot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetDot1XConfiguration * SOAP_FMAC4 soap_get___tds__SetDot1XConfiguration(struct soap*, struct __tds__SetDot1XConfiguration *, const char*, const char*);

#ifndef soap_read___tds__SetDot1XConfiguration
#define soap_read___tds__SetDot1XConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__SetDot1XConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__SetDot1XConfiguration * SOAP_FMAC2 soap_instantiate___tds__SetDot1XConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetDot1XConfiguration * soap_new___tds__SetDot1XConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetDot1XConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetDot1XConfiguration * soap_new_req___tds__SetDot1XConfiguration(struct soap *soap) { struct __tds__SetDot1XConfiguration *_p = soap_instantiate___tds__SetDot1XConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetDot1XConfiguration(soap, _p); } return _p; }

inline struct __tds__SetDot1XConfiguration * soap_new_set___tds__SetDot1XConfiguration(struct soap *soap, _tds__SetDot1XConfiguration *tds__SetDot1XConfiguration) { struct __tds__SetDot1XConfiguration *_p = soap_instantiate___tds__SetDot1XConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetDot1XConfiguration(soap, _p); _p->tds__SetDot1XConfiguration = tds__SetDot1XConfiguration; } return _p; }

inline void soap_delete___tds__SetDot1XConfiguration(struct soap *soap, struct __tds__SetDot1XConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__SetDot1XConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__CreateDot1XConfiguration
#define SOAP_TYPE___tds__CreateDot1XConfiguration (1805)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__CreateDot1XConfiguration(struct soap*, struct __tds__CreateDot1XConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__CreateDot1XConfiguration(struct soap*, const struct __tds__CreateDot1XConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__CreateDot1XConfiguration(struct soap*, const char*, int, const struct __tds__CreateDot1XConfiguration *, const char*);
SOAP_FMAC3 struct __tds__CreateDot1XConfiguration * SOAP_FMAC4 soap_in___tds__CreateDot1XConfiguration(struct soap*, const char*, struct __tds__CreateDot1XConfiguration *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__CreateDot1XConfiguration(struct soap*, const struct __tds__CreateDot1XConfiguration *, const char*, const char*);

#ifndef soap_write___tds__CreateDot1XConfiguration
#define soap_write___tds__CreateDot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__CreateDot1XConfiguration(soap, data),0) || soap_put___tds__CreateDot1XConfiguration(soap, data, "-tds:CreateDot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__CreateDot1XConfiguration * SOAP_FMAC4 soap_get___tds__CreateDot1XConfiguration(struct soap*, struct __tds__CreateDot1XConfiguration *, const char*, const char*);

#ifndef soap_read___tds__CreateDot1XConfiguration
#define soap_read___tds__CreateDot1XConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__CreateDot1XConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__CreateDot1XConfiguration * SOAP_FMAC2 soap_instantiate___tds__CreateDot1XConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__CreateDot1XConfiguration * soap_new___tds__CreateDot1XConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tds__CreateDot1XConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tds__CreateDot1XConfiguration * soap_new_req___tds__CreateDot1XConfiguration(struct soap *soap) { struct __tds__CreateDot1XConfiguration *_p = soap_instantiate___tds__CreateDot1XConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__CreateDot1XConfiguration(soap, _p); } return _p; }

inline struct __tds__CreateDot1XConfiguration * soap_new_set___tds__CreateDot1XConfiguration(struct soap *soap, _tds__CreateDot1XConfiguration *tds__CreateDot1XConfiguration) { struct __tds__CreateDot1XConfiguration *_p = soap_instantiate___tds__CreateDot1XConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__CreateDot1XConfiguration(soap, _p); _p->tds__CreateDot1XConfiguration = tds__CreateDot1XConfiguration; } return _p; }

inline void soap_delete___tds__CreateDot1XConfiguration(struct soap *soap, struct __tds__CreateDot1XConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__CreateDot1XConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__LoadCACertificates
#define SOAP_TYPE___tds__LoadCACertificates (1801)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__LoadCACertificates(struct soap*, struct __tds__LoadCACertificates *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__LoadCACertificates(struct soap*, const struct __tds__LoadCACertificates *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__LoadCACertificates(struct soap*, const char*, int, const struct __tds__LoadCACertificates *, const char*);
SOAP_FMAC3 struct __tds__LoadCACertificates * SOAP_FMAC4 soap_in___tds__LoadCACertificates(struct soap*, const char*, struct __tds__LoadCACertificates *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__LoadCACertificates(struct soap*, const struct __tds__LoadCACertificates *, const char*, const char*);

#ifndef soap_write___tds__LoadCACertificates
#define soap_write___tds__LoadCACertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__LoadCACertificates(soap, data),0) || soap_put___tds__LoadCACertificates(soap, data, "-tds:LoadCACertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__LoadCACertificates * SOAP_FMAC4 soap_get___tds__LoadCACertificates(struct soap*, struct __tds__LoadCACertificates *, const char*, const char*);

#ifndef soap_read___tds__LoadCACertificates
#define soap_read___tds__LoadCACertificates(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__LoadCACertificates(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__LoadCACertificates * SOAP_FMAC2 soap_instantiate___tds__LoadCACertificates(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__LoadCACertificates * soap_new___tds__LoadCACertificates(struct soap *soap, int n = -1) { return soap_instantiate___tds__LoadCACertificates(soap, n, NULL, NULL, NULL); }

inline struct __tds__LoadCACertificates * soap_new_req___tds__LoadCACertificates(struct soap *soap) { struct __tds__LoadCACertificates *_p = soap_instantiate___tds__LoadCACertificates(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__LoadCACertificates(soap, _p); } return _p; }

inline struct __tds__LoadCACertificates * soap_new_set___tds__LoadCACertificates(struct soap *soap, _tds__LoadCACertificates *tds__LoadCACertificates) { struct __tds__LoadCACertificates *_p = soap_instantiate___tds__LoadCACertificates(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__LoadCACertificates(soap, _p); _p->tds__LoadCACertificates = tds__LoadCACertificates; } return _p; }

inline void soap_delete___tds__LoadCACertificates(struct soap *soap, struct __tds__LoadCACertificates *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__LoadCACertificates(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetCertificateInformation
#define SOAP_TYPE___tds__GetCertificateInformation (1797)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetCertificateInformation(struct soap*, struct __tds__GetCertificateInformation *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetCertificateInformation(struct soap*, const struct __tds__GetCertificateInformation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetCertificateInformation(struct soap*, const char*, int, const struct __tds__GetCertificateInformation *, const char*);
SOAP_FMAC3 struct __tds__GetCertificateInformation * SOAP_FMAC4 soap_in___tds__GetCertificateInformation(struct soap*, const char*, struct __tds__GetCertificateInformation *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetCertificateInformation(struct soap*, const struct __tds__GetCertificateInformation *, const char*, const char*);

#ifndef soap_write___tds__GetCertificateInformation
#define soap_write___tds__GetCertificateInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetCertificateInformation(soap, data),0) || soap_put___tds__GetCertificateInformation(soap, data, "-tds:GetCertificateInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetCertificateInformation * SOAP_FMAC4 soap_get___tds__GetCertificateInformation(struct soap*, struct __tds__GetCertificateInformation *, const char*, const char*);

#ifndef soap_read___tds__GetCertificateInformation
#define soap_read___tds__GetCertificateInformation(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetCertificateInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetCertificateInformation * SOAP_FMAC2 soap_instantiate___tds__GetCertificateInformation(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetCertificateInformation * soap_new___tds__GetCertificateInformation(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetCertificateInformation(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetCertificateInformation * soap_new_req___tds__GetCertificateInformation(struct soap *soap) { struct __tds__GetCertificateInformation *_p = soap_instantiate___tds__GetCertificateInformation(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetCertificateInformation(soap, _p); } return _p; }

inline struct __tds__GetCertificateInformation * soap_new_set___tds__GetCertificateInformation(struct soap *soap, _tds__GetCertificateInformation *tds__GetCertificateInformation) { struct __tds__GetCertificateInformation *_p = soap_instantiate___tds__GetCertificateInformation(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetCertificateInformation(soap, _p); _p->tds__GetCertificateInformation = tds__GetCertificateInformation; } return _p; }

inline void soap_delete___tds__GetCertificateInformation(struct soap *soap, struct __tds__GetCertificateInformation *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetCertificateInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__LoadCertificateWithPrivateKey
#define SOAP_TYPE___tds__LoadCertificateWithPrivateKey (1793)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__LoadCertificateWithPrivateKey(struct soap*, struct __tds__LoadCertificateWithPrivateKey *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__LoadCertificateWithPrivateKey(struct soap*, const struct __tds__LoadCertificateWithPrivateKey *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__LoadCertificateWithPrivateKey(struct soap*, const char*, int, const struct __tds__LoadCertificateWithPrivateKey *, const char*);
SOAP_FMAC3 struct __tds__LoadCertificateWithPrivateKey * SOAP_FMAC4 soap_in___tds__LoadCertificateWithPrivateKey(struct soap*, const char*, struct __tds__LoadCertificateWithPrivateKey *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__LoadCertificateWithPrivateKey(struct soap*, const struct __tds__LoadCertificateWithPrivateKey *, const char*, const char*);

#ifndef soap_write___tds__LoadCertificateWithPrivateKey
#define soap_write___tds__LoadCertificateWithPrivateKey(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__LoadCertificateWithPrivateKey(soap, data),0) || soap_put___tds__LoadCertificateWithPrivateKey(soap, data, "-tds:LoadCertificateWithPrivateKey", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__LoadCertificateWithPrivateKey * SOAP_FMAC4 soap_get___tds__LoadCertificateWithPrivateKey(struct soap*, struct __tds__LoadCertificateWithPrivateKey *, const char*, const char*);

#ifndef soap_read___tds__LoadCertificateWithPrivateKey
#define soap_read___tds__LoadCertificateWithPrivateKey(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__LoadCertificateWithPrivateKey(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__LoadCertificateWithPrivateKey * SOAP_FMAC2 soap_instantiate___tds__LoadCertificateWithPrivateKey(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__LoadCertificateWithPrivateKey * soap_new___tds__LoadCertificateWithPrivateKey(struct soap *soap, int n = -1) { return soap_instantiate___tds__LoadCertificateWithPrivateKey(soap, n, NULL, NULL, NULL); }

inline struct __tds__LoadCertificateWithPrivateKey * soap_new_req___tds__LoadCertificateWithPrivateKey(struct soap *soap) { struct __tds__LoadCertificateWithPrivateKey *_p = soap_instantiate___tds__LoadCertificateWithPrivateKey(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__LoadCertificateWithPrivateKey(soap, _p); } return _p; }

inline struct __tds__LoadCertificateWithPrivateKey * soap_new_set___tds__LoadCertificateWithPrivateKey(struct soap *soap, _tds__LoadCertificateWithPrivateKey *tds__LoadCertificateWithPrivateKey) { struct __tds__LoadCertificateWithPrivateKey *_p = soap_instantiate___tds__LoadCertificateWithPrivateKey(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__LoadCertificateWithPrivateKey(soap, _p); _p->tds__LoadCertificateWithPrivateKey = tds__LoadCertificateWithPrivateKey; } return _p; }

inline void soap_delete___tds__LoadCertificateWithPrivateKey(struct soap *soap, struct __tds__LoadCertificateWithPrivateKey *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__LoadCertificateWithPrivateKey(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetCACertificates
#define SOAP_TYPE___tds__GetCACertificates (1789)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetCACertificates(struct soap*, struct __tds__GetCACertificates *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetCACertificates(struct soap*, const struct __tds__GetCACertificates *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetCACertificates(struct soap*, const char*, int, const struct __tds__GetCACertificates *, const char*);
SOAP_FMAC3 struct __tds__GetCACertificates * SOAP_FMAC4 soap_in___tds__GetCACertificates(struct soap*, const char*, struct __tds__GetCACertificates *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetCACertificates(struct soap*, const struct __tds__GetCACertificates *, const char*, const char*);

#ifndef soap_write___tds__GetCACertificates
#define soap_write___tds__GetCACertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetCACertificates(soap, data),0) || soap_put___tds__GetCACertificates(soap, data, "-tds:GetCACertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetCACertificates * SOAP_FMAC4 soap_get___tds__GetCACertificates(struct soap*, struct __tds__GetCACertificates *, const char*, const char*);

#ifndef soap_read___tds__GetCACertificates
#define soap_read___tds__GetCACertificates(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetCACertificates(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetCACertificates * SOAP_FMAC2 soap_instantiate___tds__GetCACertificates(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetCACertificates * soap_new___tds__GetCACertificates(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetCACertificates(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetCACertificates * soap_new_req___tds__GetCACertificates(struct soap *soap) { struct __tds__GetCACertificates *_p = soap_instantiate___tds__GetCACertificates(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetCACertificates(soap, _p); } return _p; }

inline struct __tds__GetCACertificates * soap_new_set___tds__GetCACertificates(struct soap *soap, _tds__GetCACertificates *tds__GetCACertificates) { struct __tds__GetCACertificates *_p = soap_instantiate___tds__GetCACertificates(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetCACertificates(soap, _p); _p->tds__GetCACertificates = tds__GetCACertificates; } return _p; }

inline void soap_delete___tds__GetCACertificates(struct soap *soap, struct __tds__GetCACertificates *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetCACertificates(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__SendAuxiliaryCommand
#define SOAP_TYPE___tds__SendAuxiliaryCommand (1785)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SendAuxiliaryCommand(struct soap*, struct __tds__SendAuxiliaryCommand *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SendAuxiliaryCommand(struct soap*, const struct __tds__SendAuxiliaryCommand *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SendAuxiliaryCommand(struct soap*, const char*, int, const struct __tds__SendAuxiliaryCommand *, const char*);
SOAP_FMAC3 struct __tds__SendAuxiliaryCommand * SOAP_FMAC4 soap_in___tds__SendAuxiliaryCommand(struct soap*, const char*, struct __tds__SendAuxiliaryCommand *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SendAuxiliaryCommand(struct soap*, const struct __tds__SendAuxiliaryCommand *, const char*, const char*);

#ifndef soap_write___tds__SendAuxiliaryCommand
#define soap_write___tds__SendAuxiliaryCommand(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SendAuxiliaryCommand(soap, data),0) || soap_put___tds__SendAuxiliaryCommand(soap, data, "-tds:SendAuxiliaryCommand", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SendAuxiliaryCommand * SOAP_FMAC4 soap_get___tds__SendAuxiliaryCommand(struct soap*, struct __tds__SendAuxiliaryCommand *, const char*, const char*);

#ifndef soap_read___tds__SendAuxiliaryCommand
#define soap_read___tds__SendAuxiliaryCommand(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__SendAuxiliaryCommand(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__SendAuxiliaryCommand * SOAP_FMAC2 soap_instantiate___tds__SendAuxiliaryCommand(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SendAuxiliaryCommand * soap_new___tds__SendAuxiliaryCommand(struct soap *soap, int n = -1) { return soap_instantiate___tds__SendAuxiliaryCommand(soap, n, NULL, NULL, NULL); }

inline struct __tds__SendAuxiliaryCommand * soap_new_req___tds__SendAuxiliaryCommand(struct soap *soap) { struct __tds__SendAuxiliaryCommand *_p = soap_instantiate___tds__SendAuxiliaryCommand(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SendAuxiliaryCommand(soap, _p); } return _p; }

inline struct __tds__SendAuxiliaryCommand * soap_new_set___tds__SendAuxiliaryCommand(struct soap *soap, _tds__SendAuxiliaryCommand *tds__SendAuxiliaryCommand) { struct __tds__SendAuxiliaryCommand *_p = soap_instantiate___tds__SendAuxiliaryCommand(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SendAuxiliaryCommand(soap, _p); _p->tds__SendAuxiliaryCommand = tds__SendAuxiliaryCommand; } return _p; }

inline void soap_delete___tds__SendAuxiliaryCommand(struct soap *soap, struct __tds__SendAuxiliaryCommand *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__SendAuxiliaryCommand(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__SetRelayOutputState
#define SOAP_TYPE___tds__SetRelayOutputState (1781)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetRelayOutputState(struct soap*, struct __tds__SetRelayOutputState *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetRelayOutputState(struct soap*, const struct __tds__SetRelayOutputState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetRelayOutputState(struct soap*, const char*, int, const struct __tds__SetRelayOutputState *, const char*);
SOAP_FMAC3 struct __tds__SetRelayOutputState * SOAP_FMAC4 soap_in___tds__SetRelayOutputState(struct soap*, const char*, struct __tds__SetRelayOutputState *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetRelayOutputState(struct soap*, const struct __tds__SetRelayOutputState *, const char*, const char*);

#ifndef soap_write___tds__SetRelayOutputState
#define soap_write___tds__SetRelayOutputState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetRelayOutputState(soap, data),0) || soap_put___tds__SetRelayOutputState(soap, data, "-tds:SetRelayOutputState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetRelayOutputState * SOAP_FMAC4 soap_get___tds__SetRelayOutputState(struct soap*, struct __tds__SetRelayOutputState *, const char*, const char*);

#ifndef soap_read___tds__SetRelayOutputState
#define soap_read___tds__SetRelayOutputState(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__SetRelayOutputState(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__SetRelayOutputState * SOAP_FMAC2 soap_instantiate___tds__SetRelayOutputState(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetRelayOutputState * soap_new___tds__SetRelayOutputState(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetRelayOutputState(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetRelayOutputState * soap_new_req___tds__SetRelayOutputState(struct soap *soap) { struct __tds__SetRelayOutputState *_p = soap_instantiate___tds__SetRelayOutputState(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetRelayOutputState(soap, _p); } return _p; }

inline struct __tds__SetRelayOutputState * soap_new_set___tds__SetRelayOutputState(struct soap *soap, _tds__SetRelayOutputState *tds__SetRelayOutputState) { struct __tds__SetRelayOutputState *_p = soap_instantiate___tds__SetRelayOutputState(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetRelayOutputState(soap, _p); _p->tds__SetRelayOutputState = tds__SetRelayOutputState; } return _p; }

inline void soap_delete___tds__SetRelayOutputState(struct soap *soap, struct __tds__SetRelayOutputState *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__SetRelayOutputState(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__SetRelayOutputSettings
#define SOAP_TYPE___tds__SetRelayOutputSettings (1777)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetRelayOutputSettings(struct soap*, struct __tds__SetRelayOutputSettings *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetRelayOutputSettings(struct soap*, const struct __tds__SetRelayOutputSettings *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetRelayOutputSettings(struct soap*, const char*, int, const struct __tds__SetRelayOutputSettings *, const char*);
SOAP_FMAC3 struct __tds__SetRelayOutputSettings * SOAP_FMAC4 soap_in___tds__SetRelayOutputSettings(struct soap*, const char*, struct __tds__SetRelayOutputSettings *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetRelayOutputSettings(struct soap*, const struct __tds__SetRelayOutputSettings *, const char*, const char*);

#ifndef soap_write___tds__SetRelayOutputSettings
#define soap_write___tds__SetRelayOutputSettings(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetRelayOutputSettings(soap, data),0) || soap_put___tds__SetRelayOutputSettings(soap, data, "-tds:SetRelayOutputSettings", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetRelayOutputSettings * SOAP_FMAC4 soap_get___tds__SetRelayOutputSettings(struct soap*, struct __tds__SetRelayOutputSettings *, const char*, const char*);

#ifndef soap_read___tds__SetRelayOutputSettings
#define soap_read___tds__SetRelayOutputSettings(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__SetRelayOutputSettings(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__SetRelayOutputSettings * SOAP_FMAC2 soap_instantiate___tds__SetRelayOutputSettings(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetRelayOutputSettings * soap_new___tds__SetRelayOutputSettings(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetRelayOutputSettings(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetRelayOutputSettings * soap_new_req___tds__SetRelayOutputSettings(struct soap *soap) { struct __tds__SetRelayOutputSettings *_p = soap_instantiate___tds__SetRelayOutputSettings(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetRelayOutputSettings(soap, _p); } return _p; }

inline struct __tds__SetRelayOutputSettings * soap_new_set___tds__SetRelayOutputSettings(struct soap *soap, _tds__SetRelayOutputSettings *tds__SetRelayOutputSettings) { struct __tds__SetRelayOutputSettings *_p = soap_instantiate___tds__SetRelayOutputSettings(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetRelayOutputSettings(soap, _p); _p->tds__SetRelayOutputSettings = tds__SetRelayOutputSettings; } return _p; }

inline void soap_delete___tds__SetRelayOutputSettings(struct soap *soap, struct __tds__SetRelayOutputSettings *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__SetRelayOutputSettings(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetRelayOutputs
#define SOAP_TYPE___tds__GetRelayOutputs (1773)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetRelayOutputs(struct soap*, struct __tds__GetRelayOutputs *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetRelayOutputs(struct soap*, const struct __tds__GetRelayOutputs *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetRelayOutputs(struct soap*, const char*, int, const struct __tds__GetRelayOutputs *, const char*);
SOAP_FMAC3 struct __tds__GetRelayOutputs * SOAP_FMAC4 soap_in___tds__GetRelayOutputs(struct soap*, const char*, struct __tds__GetRelayOutputs *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetRelayOutputs(struct soap*, const struct __tds__GetRelayOutputs *, const char*, const char*);

#ifndef soap_write___tds__GetRelayOutputs
#define soap_write___tds__GetRelayOutputs(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetRelayOutputs(soap, data),0) || soap_put___tds__GetRelayOutputs(soap, data, "-tds:GetRelayOutputs", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetRelayOutputs * SOAP_FMAC4 soap_get___tds__GetRelayOutputs(struct soap*, struct __tds__GetRelayOutputs *, const char*, const char*);

#ifndef soap_read___tds__GetRelayOutputs
#define soap_read___tds__GetRelayOutputs(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetRelayOutputs(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetRelayOutputs * SOAP_FMAC2 soap_instantiate___tds__GetRelayOutputs(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetRelayOutputs * soap_new___tds__GetRelayOutputs(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetRelayOutputs(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetRelayOutputs * soap_new_req___tds__GetRelayOutputs(struct soap *soap) { struct __tds__GetRelayOutputs *_p = soap_instantiate___tds__GetRelayOutputs(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetRelayOutputs(soap, _p); } return _p; }

inline struct __tds__GetRelayOutputs * soap_new_set___tds__GetRelayOutputs(struct soap *soap, _tds__GetRelayOutputs *tds__GetRelayOutputs) { struct __tds__GetRelayOutputs *_p = soap_instantiate___tds__GetRelayOutputs(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetRelayOutputs(soap, _p); _p->tds__GetRelayOutputs = tds__GetRelayOutputs; } return _p; }

inline void soap_delete___tds__GetRelayOutputs(struct soap *soap, struct __tds__GetRelayOutputs *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetRelayOutputs(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__SetClientCertificateMode
#define SOAP_TYPE___tds__SetClientCertificateMode (1769)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetClientCertificateMode(struct soap*, struct __tds__SetClientCertificateMode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetClientCertificateMode(struct soap*, const struct __tds__SetClientCertificateMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetClientCertificateMode(struct soap*, const char*, int, const struct __tds__SetClientCertificateMode *, const char*);
SOAP_FMAC3 struct __tds__SetClientCertificateMode * SOAP_FMAC4 soap_in___tds__SetClientCertificateMode(struct soap*, const char*, struct __tds__SetClientCertificateMode *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetClientCertificateMode(struct soap*, const struct __tds__SetClientCertificateMode *, const char*, const char*);

#ifndef soap_write___tds__SetClientCertificateMode
#define soap_write___tds__SetClientCertificateMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetClientCertificateMode(soap, data),0) || soap_put___tds__SetClientCertificateMode(soap, data, "-tds:SetClientCertificateMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetClientCertificateMode * SOAP_FMAC4 soap_get___tds__SetClientCertificateMode(struct soap*, struct __tds__SetClientCertificateMode *, const char*, const char*);

#ifndef soap_read___tds__SetClientCertificateMode
#define soap_read___tds__SetClientCertificateMode(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__SetClientCertificateMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__SetClientCertificateMode * SOAP_FMAC2 soap_instantiate___tds__SetClientCertificateMode(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetClientCertificateMode * soap_new___tds__SetClientCertificateMode(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetClientCertificateMode(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetClientCertificateMode * soap_new_req___tds__SetClientCertificateMode(struct soap *soap) { struct __tds__SetClientCertificateMode *_p = soap_instantiate___tds__SetClientCertificateMode(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetClientCertificateMode(soap, _p); } return _p; }

inline struct __tds__SetClientCertificateMode * soap_new_set___tds__SetClientCertificateMode(struct soap *soap, _tds__SetClientCertificateMode *tds__SetClientCertificateMode) { struct __tds__SetClientCertificateMode *_p = soap_instantiate___tds__SetClientCertificateMode(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetClientCertificateMode(soap, _p); _p->tds__SetClientCertificateMode = tds__SetClientCertificateMode; } return _p; }

inline void soap_delete___tds__SetClientCertificateMode(struct soap *soap, struct __tds__SetClientCertificateMode *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__SetClientCertificateMode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetClientCertificateMode
#define SOAP_TYPE___tds__GetClientCertificateMode (1765)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetClientCertificateMode(struct soap*, struct __tds__GetClientCertificateMode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetClientCertificateMode(struct soap*, const struct __tds__GetClientCertificateMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetClientCertificateMode(struct soap*, const char*, int, const struct __tds__GetClientCertificateMode *, const char*);
SOAP_FMAC3 struct __tds__GetClientCertificateMode * SOAP_FMAC4 soap_in___tds__GetClientCertificateMode(struct soap*, const char*, struct __tds__GetClientCertificateMode *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetClientCertificateMode(struct soap*, const struct __tds__GetClientCertificateMode *, const char*, const char*);

#ifndef soap_write___tds__GetClientCertificateMode
#define soap_write___tds__GetClientCertificateMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetClientCertificateMode(soap, data),0) || soap_put___tds__GetClientCertificateMode(soap, data, "-tds:GetClientCertificateMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetClientCertificateMode * SOAP_FMAC4 soap_get___tds__GetClientCertificateMode(struct soap*, struct __tds__GetClientCertificateMode *, const char*, const char*);

#ifndef soap_read___tds__GetClientCertificateMode
#define soap_read___tds__GetClientCertificateMode(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetClientCertificateMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetClientCertificateMode * SOAP_FMAC2 soap_instantiate___tds__GetClientCertificateMode(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetClientCertificateMode * soap_new___tds__GetClientCertificateMode(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetClientCertificateMode(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetClientCertificateMode * soap_new_req___tds__GetClientCertificateMode(struct soap *soap) { struct __tds__GetClientCertificateMode *_p = soap_instantiate___tds__GetClientCertificateMode(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetClientCertificateMode(soap, _p); } return _p; }

inline struct __tds__GetClientCertificateMode * soap_new_set___tds__GetClientCertificateMode(struct soap *soap, _tds__GetClientCertificateMode *tds__GetClientCertificateMode) { struct __tds__GetClientCertificateMode *_p = soap_instantiate___tds__GetClientCertificateMode(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetClientCertificateMode(soap, _p); _p->tds__GetClientCertificateMode = tds__GetClientCertificateMode; } return _p; }

inline void soap_delete___tds__GetClientCertificateMode(struct soap *soap, struct __tds__GetClientCertificateMode *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetClientCertificateMode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__LoadCertificates
#define SOAP_TYPE___tds__LoadCertificates (1761)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__LoadCertificates(struct soap*, struct __tds__LoadCertificates *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__LoadCertificates(struct soap*, const struct __tds__LoadCertificates *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__LoadCertificates(struct soap*, const char*, int, const struct __tds__LoadCertificates *, const char*);
SOAP_FMAC3 struct __tds__LoadCertificates * SOAP_FMAC4 soap_in___tds__LoadCertificates(struct soap*, const char*, struct __tds__LoadCertificates *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__LoadCertificates(struct soap*, const struct __tds__LoadCertificates *, const char*, const char*);

#ifndef soap_write___tds__LoadCertificates
#define soap_write___tds__LoadCertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__LoadCertificates(soap, data),0) || soap_put___tds__LoadCertificates(soap, data, "-tds:LoadCertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__LoadCertificates * SOAP_FMAC4 soap_get___tds__LoadCertificates(struct soap*, struct __tds__LoadCertificates *, const char*, const char*);

#ifndef soap_read___tds__LoadCertificates
#define soap_read___tds__LoadCertificates(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__LoadCertificates(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__LoadCertificates * SOAP_FMAC2 soap_instantiate___tds__LoadCertificates(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__LoadCertificates * soap_new___tds__LoadCertificates(struct soap *soap, int n = -1) { return soap_instantiate___tds__LoadCertificates(soap, n, NULL, NULL, NULL); }

inline struct __tds__LoadCertificates * soap_new_req___tds__LoadCertificates(struct soap *soap) { struct __tds__LoadCertificates *_p = soap_instantiate___tds__LoadCertificates(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__LoadCertificates(soap, _p); } return _p; }

inline struct __tds__LoadCertificates * soap_new_set___tds__LoadCertificates(struct soap *soap, _tds__LoadCertificates *tds__LoadCertificates) { struct __tds__LoadCertificates *_p = soap_instantiate___tds__LoadCertificates(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__LoadCertificates(soap, _p); _p->tds__LoadCertificates = tds__LoadCertificates; } return _p; }

inline void soap_delete___tds__LoadCertificates(struct soap *soap, struct __tds__LoadCertificates *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__LoadCertificates(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetPkcs10Request
#define SOAP_TYPE___tds__GetPkcs10Request (1757)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetPkcs10Request(struct soap*, struct __tds__GetPkcs10Request *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetPkcs10Request(struct soap*, const struct __tds__GetPkcs10Request *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetPkcs10Request(struct soap*, const char*, int, const struct __tds__GetPkcs10Request *, const char*);
SOAP_FMAC3 struct __tds__GetPkcs10Request * SOAP_FMAC4 soap_in___tds__GetPkcs10Request(struct soap*, const char*, struct __tds__GetPkcs10Request *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetPkcs10Request(struct soap*, const struct __tds__GetPkcs10Request *, const char*, const char*);

#ifndef soap_write___tds__GetPkcs10Request
#define soap_write___tds__GetPkcs10Request(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetPkcs10Request(soap, data),0) || soap_put___tds__GetPkcs10Request(soap, data, "-tds:GetPkcs10Request", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetPkcs10Request * SOAP_FMAC4 soap_get___tds__GetPkcs10Request(struct soap*, struct __tds__GetPkcs10Request *, const char*, const char*);

#ifndef soap_read___tds__GetPkcs10Request
#define soap_read___tds__GetPkcs10Request(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetPkcs10Request(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetPkcs10Request * SOAP_FMAC2 soap_instantiate___tds__GetPkcs10Request(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetPkcs10Request * soap_new___tds__GetPkcs10Request(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetPkcs10Request(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetPkcs10Request * soap_new_req___tds__GetPkcs10Request(struct soap *soap) { struct __tds__GetPkcs10Request *_p = soap_instantiate___tds__GetPkcs10Request(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetPkcs10Request(soap, _p); } return _p; }

inline struct __tds__GetPkcs10Request * soap_new_set___tds__GetPkcs10Request(struct soap *soap, _tds__GetPkcs10Request *tds__GetPkcs10Request) { struct __tds__GetPkcs10Request *_p = soap_instantiate___tds__GetPkcs10Request(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetPkcs10Request(soap, _p); _p->tds__GetPkcs10Request = tds__GetPkcs10Request; } return _p; }

inline void soap_delete___tds__GetPkcs10Request(struct soap *soap, struct __tds__GetPkcs10Request *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetPkcs10Request(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__DeleteCertificates
#define SOAP_TYPE___tds__DeleteCertificates (1753)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__DeleteCertificates(struct soap*, struct __tds__DeleteCertificates *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__DeleteCertificates(struct soap*, const struct __tds__DeleteCertificates *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__DeleteCertificates(struct soap*, const char*, int, const struct __tds__DeleteCertificates *, const char*);
SOAP_FMAC3 struct __tds__DeleteCertificates * SOAP_FMAC4 soap_in___tds__DeleteCertificates(struct soap*, const char*, struct __tds__DeleteCertificates *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__DeleteCertificates(struct soap*, const struct __tds__DeleteCertificates *, const char*, const char*);

#ifndef soap_write___tds__DeleteCertificates
#define soap_write___tds__DeleteCertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__DeleteCertificates(soap, data),0) || soap_put___tds__DeleteCertificates(soap, data, "-tds:DeleteCertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__DeleteCertificates * SOAP_FMAC4 soap_get___tds__DeleteCertificates(struct soap*, struct __tds__DeleteCertificates *, const char*, const char*);

#ifndef soap_read___tds__DeleteCertificates
#define soap_read___tds__DeleteCertificates(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__DeleteCertificates(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__DeleteCertificates * SOAP_FMAC2 soap_instantiate___tds__DeleteCertificates(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__DeleteCertificates * soap_new___tds__DeleteCertificates(struct soap *soap, int n = -1) { return soap_instantiate___tds__DeleteCertificates(soap, n, NULL, NULL, NULL); }

inline struct __tds__DeleteCertificates * soap_new_req___tds__DeleteCertificates(struct soap *soap) { struct __tds__DeleteCertificates *_p = soap_instantiate___tds__DeleteCertificates(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__DeleteCertificates(soap, _p); } return _p; }

inline struct __tds__DeleteCertificates * soap_new_set___tds__DeleteCertificates(struct soap *soap, _tds__DeleteCertificates *tds__DeleteCertificates) { struct __tds__DeleteCertificates *_p = soap_instantiate___tds__DeleteCertificates(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__DeleteCertificates(soap, _p); _p->tds__DeleteCertificates = tds__DeleteCertificates; } return _p; }

inline void soap_delete___tds__DeleteCertificates(struct soap *soap, struct __tds__DeleteCertificates *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__DeleteCertificates(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__SetCertificatesStatus
#define SOAP_TYPE___tds__SetCertificatesStatus (1749)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetCertificatesStatus(struct soap*, struct __tds__SetCertificatesStatus *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetCertificatesStatus(struct soap*, const struct __tds__SetCertificatesStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetCertificatesStatus(struct soap*, const char*, int, const struct __tds__SetCertificatesStatus *, const char*);
SOAP_FMAC3 struct __tds__SetCertificatesStatus * SOAP_FMAC4 soap_in___tds__SetCertificatesStatus(struct soap*, const char*, struct __tds__SetCertificatesStatus *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetCertificatesStatus(struct soap*, const struct __tds__SetCertificatesStatus *, const char*, const char*);

#ifndef soap_write___tds__SetCertificatesStatus
#define soap_write___tds__SetCertificatesStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetCertificatesStatus(soap, data),0) || soap_put___tds__SetCertificatesStatus(soap, data, "-tds:SetCertificatesStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetCertificatesStatus * SOAP_FMAC4 soap_get___tds__SetCertificatesStatus(struct soap*, struct __tds__SetCertificatesStatus *, const char*, const char*);

#ifndef soap_read___tds__SetCertificatesStatus
#define soap_read___tds__SetCertificatesStatus(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__SetCertificatesStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__SetCertificatesStatus * SOAP_FMAC2 soap_instantiate___tds__SetCertificatesStatus(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetCertificatesStatus * soap_new___tds__SetCertificatesStatus(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetCertificatesStatus(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetCertificatesStatus * soap_new_req___tds__SetCertificatesStatus(struct soap *soap) { struct __tds__SetCertificatesStatus *_p = soap_instantiate___tds__SetCertificatesStatus(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetCertificatesStatus(soap, _p); } return _p; }

inline struct __tds__SetCertificatesStatus * soap_new_set___tds__SetCertificatesStatus(struct soap *soap, _tds__SetCertificatesStatus *tds__SetCertificatesStatus) { struct __tds__SetCertificatesStatus *_p = soap_instantiate___tds__SetCertificatesStatus(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetCertificatesStatus(soap, _p); _p->tds__SetCertificatesStatus = tds__SetCertificatesStatus; } return _p; }

inline void soap_delete___tds__SetCertificatesStatus(struct soap *soap, struct __tds__SetCertificatesStatus *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__SetCertificatesStatus(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetCertificatesStatus
#define SOAP_TYPE___tds__GetCertificatesStatus (1745)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetCertificatesStatus(struct soap*, struct __tds__GetCertificatesStatus *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetCertificatesStatus(struct soap*, const struct __tds__GetCertificatesStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetCertificatesStatus(struct soap*, const char*, int, const struct __tds__GetCertificatesStatus *, const char*);
SOAP_FMAC3 struct __tds__GetCertificatesStatus * SOAP_FMAC4 soap_in___tds__GetCertificatesStatus(struct soap*, const char*, struct __tds__GetCertificatesStatus *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetCertificatesStatus(struct soap*, const struct __tds__GetCertificatesStatus *, const char*, const char*);

#ifndef soap_write___tds__GetCertificatesStatus
#define soap_write___tds__GetCertificatesStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetCertificatesStatus(soap, data),0) || soap_put___tds__GetCertificatesStatus(soap, data, "-tds:GetCertificatesStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetCertificatesStatus * SOAP_FMAC4 soap_get___tds__GetCertificatesStatus(struct soap*, struct __tds__GetCertificatesStatus *, const char*, const char*);

#ifndef soap_read___tds__GetCertificatesStatus
#define soap_read___tds__GetCertificatesStatus(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetCertificatesStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetCertificatesStatus * SOAP_FMAC2 soap_instantiate___tds__GetCertificatesStatus(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetCertificatesStatus * soap_new___tds__GetCertificatesStatus(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetCertificatesStatus(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetCertificatesStatus * soap_new_req___tds__GetCertificatesStatus(struct soap *soap) { struct __tds__GetCertificatesStatus *_p = soap_instantiate___tds__GetCertificatesStatus(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetCertificatesStatus(soap, _p); } return _p; }

inline struct __tds__GetCertificatesStatus * soap_new_set___tds__GetCertificatesStatus(struct soap *soap, _tds__GetCertificatesStatus *tds__GetCertificatesStatus) { struct __tds__GetCertificatesStatus *_p = soap_instantiate___tds__GetCertificatesStatus(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetCertificatesStatus(soap, _p); _p->tds__GetCertificatesStatus = tds__GetCertificatesStatus; } return _p; }

inline void soap_delete___tds__GetCertificatesStatus(struct soap *soap, struct __tds__GetCertificatesStatus *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetCertificatesStatus(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetCertificates
#define SOAP_TYPE___tds__GetCertificates (1741)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetCertificates(struct soap*, struct __tds__GetCertificates *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetCertificates(struct soap*, const struct __tds__GetCertificates *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetCertificates(struct soap*, const char*, int, const struct __tds__GetCertificates *, const char*);
SOAP_FMAC3 struct __tds__GetCertificates * SOAP_FMAC4 soap_in___tds__GetCertificates(struct soap*, const char*, struct __tds__GetCertificates *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetCertificates(struct soap*, const struct __tds__GetCertificates *, const char*, const char*);

#ifndef soap_write___tds__GetCertificates
#define soap_write___tds__GetCertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetCertificates(soap, data),0) || soap_put___tds__GetCertificates(soap, data, "-tds:GetCertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetCertificates * SOAP_FMAC4 soap_get___tds__GetCertificates(struct soap*, struct __tds__GetCertificates *, const char*, const char*);

#ifndef soap_read___tds__GetCertificates
#define soap_read___tds__GetCertificates(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetCertificates(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetCertificates * SOAP_FMAC2 soap_instantiate___tds__GetCertificates(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetCertificates * soap_new___tds__GetCertificates(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetCertificates(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetCertificates * soap_new_req___tds__GetCertificates(struct soap *soap) { struct __tds__GetCertificates *_p = soap_instantiate___tds__GetCertificates(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetCertificates(soap, _p); } return _p; }

inline struct __tds__GetCertificates * soap_new_set___tds__GetCertificates(struct soap *soap, _tds__GetCertificates *tds__GetCertificates) { struct __tds__GetCertificates *_p = soap_instantiate___tds__GetCertificates(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetCertificates(soap, _p); _p->tds__GetCertificates = tds__GetCertificates; } return _p; }

inline void soap_delete___tds__GetCertificates(struct soap *soap, struct __tds__GetCertificates *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetCertificates(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__CreateCertificate
#define SOAP_TYPE___tds__CreateCertificate (1737)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__CreateCertificate(struct soap*, struct __tds__CreateCertificate *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__CreateCertificate(struct soap*, const struct __tds__CreateCertificate *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__CreateCertificate(struct soap*, const char*, int, const struct __tds__CreateCertificate *, const char*);
SOAP_FMAC3 struct __tds__CreateCertificate * SOAP_FMAC4 soap_in___tds__CreateCertificate(struct soap*, const char*, struct __tds__CreateCertificate *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__CreateCertificate(struct soap*, const struct __tds__CreateCertificate *, const char*, const char*);

#ifndef soap_write___tds__CreateCertificate
#define soap_write___tds__CreateCertificate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__CreateCertificate(soap, data),0) || soap_put___tds__CreateCertificate(soap, data, "-tds:CreateCertificate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__CreateCertificate * SOAP_FMAC4 soap_get___tds__CreateCertificate(struct soap*, struct __tds__CreateCertificate *, const char*, const char*);

#ifndef soap_read___tds__CreateCertificate
#define soap_read___tds__CreateCertificate(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__CreateCertificate(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__CreateCertificate * SOAP_FMAC2 soap_instantiate___tds__CreateCertificate(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__CreateCertificate * soap_new___tds__CreateCertificate(struct soap *soap, int n = -1) { return soap_instantiate___tds__CreateCertificate(soap, n, NULL, NULL, NULL); }

inline struct __tds__CreateCertificate * soap_new_req___tds__CreateCertificate(struct soap *soap) { struct __tds__CreateCertificate *_p = soap_instantiate___tds__CreateCertificate(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__CreateCertificate(soap, _p); } return _p; }

inline struct __tds__CreateCertificate * soap_new_set___tds__CreateCertificate(struct soap *soap, _tds__CreateCertificate *tds__CreateCertificate) { struct __tds__CreateCertificate *_p = soap_instantiate___tds__CreateCertificate(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__CreateCertificate(soap, _p); _p->tds__CreateCertificate = tds__CreateCertificate; } return _p; }

inline void soap_delete___tds__CreateCertificate(struct soap *soap, struct __tds__CreateCertificate *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__CreateCertificate(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__SetAccessPolicy
#define SOAP_TYPE___tds__SetAccessPolicy (1733)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetAccessPolicy(struct soap*, struct __tds__SetAccessPolicy *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetAccessPolicy(struct soap*, const struct __tds__SetAccessPolicy *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetAccessPolicy(struct soap*, const char*, int, const struct __tds__SetAccessPolicy *, const char*);
SOAP_FMAC3 struct __tds__SetAccessPolicy * SOAP_FMAC4 soap_in___tds__SetAccessPolicy(struct soap*, const char*, struct __tds__SetAccessPolicy *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetAccessPolicy(struct soap*, const struct __tds__SetAccessPolicy *, const char*, const char*);

#ifndef soap_write___tds__SetAccessPolicy
#define soap_write___tds__SetAccessPolicy(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetAccessPolicy(soap, data),0) || soap_put___tds__SetAccessPolicy(soap, data, "-tds:SetAccessPolicy", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetAccessPolicy * SOAP_FMAC4 soap_get___tds__SetAccessPolicy(struct soap*, struct __tds__SetAccessPolicy *, const char*, const char*);

#ifndef soap_read___tds__SetAccessPolicy
#define soap_read___tds__SetAccessPolicy(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__SetAccessPolicy(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__SetAccessPolicy * SOAP_FMAC2 soap_instantiate___tds__SetAccessPolicy(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetAccessPolicy * soap_new___tds__SetAccessPolicy(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetAccessPolicy(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetAccessPolicy * soap_new_req___tds__SetAccessPolicy(struct soap *soap) { struct __tds__SetAccessPolicy *_p = soap_instantiate___tds__SetAccessPolicy(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetAccessPolicy(soap, _p); } return _p; }

inline struct __tds__SetAccessPolicy * soap_new_set___tds__SetAccessPolicy(struct soap *soap, _tds__SetAccessPolicy *tds__SetAccessPolicy) { struct __tds__SetAccessPolicy *_p = soap_instantiate___tds__SetAccessPolicy(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetAccessPolicy(soap, _p); _p->tds__SetAccessPolicy = tds__SetAccessPolicy; } return _p; }

inline void soap_delete___tds__SetAccessPolicy(struct soap *soap, struct __tds__SetAccessPolicy *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__SetAccessPolicy(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetAccessPolicy
#define SOAP_TYPE___tds__GetAccessPolicy (1729)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetAccessPolicy(struct soap*, struct __tds__GetAccessPolicy *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetAccessPolicy(struct soap*, const struct __tds__GetAccessPolicy *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetAccessPolicy(struct soap*, const char*, int, const struct __tds__GetAccessPolicy *, const char*);
SOAP_FMAC3 struct __tds__GetAccessPolicy * SOAP_FMAC4 soap_in___tds__GetAccessPolicy(struct soap*, const char*, struct __tds__GetAccessPolicy *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetAccessPolicy(struct soap*, const struct __tds__GetAccessPolicy *, const char*, const char*);

#ifndef soap_write___tds__GetAccessPolicy
#define soap_write___tds__GetAccessPolicy(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetAccessPolicy(soap, data),0) || soap_put___tds__GetAccessPolicy(soap, data, "-tds:GetAccessPolicy", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetAccessPolicy * SOAP_FMAC4 soap_get___tds__GetAccessPolicy(struct soap*, struct __tds__GetAccessPolicy *, const char*, const char*);

#ifndef soap_read___tds__GetAccessPolicy
#define soap_read___tds__GetAccessPolicy(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetAccessPolicy(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetAccessPolicy * SOAP_FMAC2 soap_instantiate___tds__GetAccessPolicy(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetAccessPolicy * soap_new___tds__GetAccessPolicy(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetAccessPolicy(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetAccessPolicy * soap_new_req___tds__GetAccessPolicy(struct soap *soap) { struct __tds__GetAccessPolicy *_p = soap_instantiate___tds__GetAccessPolicy(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetAccessPolicy(soap, _p); } return _p; }

inline struct __tds__GetAccessPolicy * soap_new_set___tds__GetAccessPolicy(struct soap *soap, _tds__GetAccessPolicy *tds__GetAccessPolicy) { struct __tds__GetAccessPolicy *_p = soap_instantiate___tds__GetAccessPolicy(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetAccessPolicy(soap, _p); _p->tds__GetAccessPolicy = tds__GetAccessPolicy; } return _p; }

inline void soap_delete___tds__GetAccessPolicy(struct soap *soap, struct __tds__GetAccessPolicy *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetAccessPolicy(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__RemoveIPAddressFilter
#define SOAP_TYPE___tds__RemoveIPAddressFilter (1725)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__RemoveIPAddressFilter(struct soap*, struct __tds__RemoveIPAddressFilter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__RemoveIPAddressFilter(struct soap*, const struct __tds__RemoveIPAddressFilter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__RemoveIPAddressFilter(struct soap*, const char*, int, const struct __tds__RemoveIPAddressFilter *, const char*);
SOAP_FMAC3 struct __tds__RemoveIPAddressFilter * SOAP_FMAC4 soap_in___tds__RemoveIPAddressFilter(struct soap*, const char*, struct __tds__RemoveIPAddressFilter *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__RemoveIPAddressFilter(struct soap*, const struct __tds__RemoveIPAddressFilter *, const char*, const char*);

#ifndef soap_write___tds__RemoveIPAddressFilter
#define soap_write___tds__RemoveIPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__RemoveIPAddressFilter(soap, data),0) || soap_put___tds__RemoveIPAddressFilter(soap, data, "-tds:RemoveIPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__RemoveIPAddressFilter * SOAP_FMAC4 soap_get___tds__RemoveIPAddressFilter(struct soap*, struct __tds__RemoveIPAddressFilter *, const char*, const char*);

#ifndef soap_read___tds__RemoveIPAddressFilter
#define soap_read___tds__RemoveIPAddressFilter(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__RemoveIPAddressFilter(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__RemoveIPAddressFilter * SOAP_FMAC2 soap_instantiate___tds__RemoveIPAddressFilter(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__RemoveIPAddressFilter * soap_new___tds__RemoveIPAddressFilter(struct soap *soap, int n = -1) { return soap_instantiate___tds__RemoveIPAddressFilter(soap, n, NULL, NULL, NULL); }

inline struct __tds__RemoveIPAddressFilter * soap_new_req___tds__RemoveIPAddressFilter(struct soap *soap) { struct __tds__RemoveIPAddressFilter *_p = soap_instantiate___tds__RemoveIPAddressFilter(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__RemoveIPAddressFilter(soap, _p); } return _p; }

inline struct __tds__RemoveIPAddressFilter * soap_new_set___tds__RemoveIPAddressFilter(struct soap *soap, _tds__RemoveIPAddressFilter *tds__RemoveIPAddressFilter) { struct __tds__RemoveIPAddressFilter *_p = soap_instantiate___tds__RemoveIPAddressFilter(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__RemoveIPAddressFilter(soap, _p); _p->tds__RemoveIPAddressFilter = tds__RemoveIPAddressFilter; } return _p; }

inline void soap_delete___tds__RemoveIPAddressFilter(struct soap *soap, struct __tds__RemoveIPAddressFilter *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__RemoveIPAddressFilter(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__AddIPAddressFilter
#define SOAP_TYPE___tds__AddIPAddressFilter (1721)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__AddIPAddressFilter(struct soap*, struct __tds__AddIPAddressFilter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__AddIPAddressFilter(struct soap*, const struct __tds__AddIPAddressFilter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__AddIPAddressFilter(struct soap*, const char*, int, const struct __tds__AddIPAddressFilter *, const char*);
SOAP_FMAC3 struct __tds__AddIPAddressFilter * SOAP_FMAC4 soap_in___tds__AddIPAddressFilter(struct soap*, const char*, struct __tds__AddIPAddressFilter *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__AddIPAddressFilter(struct soap*, const struct __tds__AddIPAddressFilter *, const char*, const char*);

#ifndef soap_write___tds__AddIPAddressFilter
#define soap_write___tds__AddIPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__AddIPAddressFilter(soap, data),0) || soap_put___tds__AddIPAddressFilter(soap, data, "-tds:AddIPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__AddIPAddressFilter * SOAP_FMAC4 soap_get___tds__AddIPAddressFilter(struct soap*, struct __tds__AddIPAddressFilter *, const char*, const char*);

#ifndef soap_read___tds__AddIPAddressFilter
#define soap_read___tds__AddIPAddressFilter(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__AddIPAddressFilter(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__AddIPAddressFilter * SOAP_FMAC2 soap_instantiate___tds__AddIPAddressFilter(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__AddIPAddressFilter * soap_new___tds__AddIPAddressFilter(struct soap *soap, int n = -1) { return soap_instantiate___tds__AddIPAddressFilter(soap, n, NULL, NULL, NULL); }

inline struct __tds__AddIPAddressFilter * soap_new_req___tds__AddIPAddressFilter(struct soap *soap) { struct __tds__AddIPAddressFilter *_p = soap_instantiate___tds__AddIPAddressFilter(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__AddIPAddressFilter(soap, _p); } return _p; }

inline struct __tds__AddIPAddressFilter * soap_new_set___tds__AddIPAddressFilter(struct soap *soap, _tds__AddIPAddressFilter *tds__AddIPAddressFilter) { struct __tds__AddIPAddressFilter *_p = soap_instantiate___tds__AddIPAddressFilter(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__AddIPAddressFilter(soap, _p); _p->tds__AddIPAddressFilter = tds__AddIPAddressFilter; } return _p; }

inline void soap_delete___tds__AddIPAddressFilter(struct soap *soap, struct __tds__AddIPAddressFilter *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__AddIPAddressFilter(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__SetIPAddressFilter
#define SOAP_TYPE___tds__SetIPAddressFilter (1717)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetIPAddressFilter(struct soap*, struct __tds__SetIPAddressFilter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetIPAddressFilter(struct soap*, const struct __tds__SetIPAddressFilter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetIPAddressFilter(struct soap*, const char*, int, const struct __tds__SetIPAddressFilter *, const char*);
SOAP_FMAC3 struct __tds__SetIPAddressFilter * SOAP_FMAC4 soap_in___tds__SetIPAddressFilter(struct soap*, const char*, struct __tds__SetIPAddressFilter *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetIPAddressFilter(struct soap*, const struct __tds__SetIPAddressFilter *, const char*, const char*);

#ifndef soap_write___tds__SetIPAddressFilter
#define soap_write___tds__SetIPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetIPAddressFilter(soap, data),0) || soap_put___tds__SetIPAddressFilter(soap, data, "-tds:SetIPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetIPAddressFilter * SOAP_FMAC4 soap_get___tds__SetIPAddressFilter(struct soap*, struct __tds__SetIPAddressFilter *, const char*, const char*);

#ifndef soap_read___tds__SetIPAddressFilter
#define soap_read___tds__SetIPAddressFilter(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__SetIPAddressFilter(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__SetIPAddressFilter * SOAP_FMAC2 soap_instantiate___tds__SetIPAddressFilter(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetIPAddressFilter * soap_new___tds__SetIPAddressFilter(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetIPAddressFilter(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetIPAddressFilter * soap_new_req___tds__SetIPAddressFilter(struct soap *soap) { struct __tds__SetIPAddressFilter *_p = soap_instantiate___tds__SetIPAddressFilter(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetIPAddressFilter(soap, _p); } return _p; }

inline struct __tds__SetIPAddressFilter * soap_new_set___tds__SetIPAddressFilter(struct soap *soap, _tds__SetIPAddressFilter *tds__SetIPAddressFilter) { struct __tds__SetIPAddressFilter *_p = soap_instantiate___tds__SetIPAddressFilter(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetIPAddressFilter(soap, _p); _p->tds__SetIPAddressFilter = tds__SetIPAddressFilter; } return _p; }

inline void soap_delete___tds__SetIPAddressFilter(struct soap *soap, struct __tds__SetIPAddressFilter *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__SetIPAddressFilter(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetIPAddressFilter
#define SOAP_TYPE___tds__GetIPAddressFilter (1713)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetIPAddressFilter(struct soap*, struct __tds__GetIPAddressFilter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetIPAddressFilter(struct soap*, const struct __tds__GetIPAddressFilter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetIPAddressFilter(struct soap*, const char*, int, const struct __tds__GetIPAddressFilter *, const char*);
SOAP_FMAC3 struct __tds__GetIPAddressFilter * SOAP_FMAC4 soap_in___tds__GetIPAddressFilter(struct soap*, const char*, struct __tds__GetIPAddressFilter *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetIPAddressFilter(struct soap*, const struct __tds__GetIPAddressFilter *, const char*, const char*);

#ifndef soap_write___tds__GetIPAddressFilter
#define soap_write___tds__GetIPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetIPAddressFilter(soap, data),0) || soap_put___tds__GetIPAddressFilter(soap, data, "-tds:GetIPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetIPAddressFilter * SOAP_FMAC4 soap_get___tds__GetIPAddressFilter(struct soap*, struct __tds__GetIPAddressFilter *, const char*, const char*);

#ifndef soap_read___tds__GetIPAddressFilter
#define soap_read___tds__GetIPAddressFilter(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetIPAddressFilter(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetIPAddressFilter * SOAP_FMAC2 soap_instantiate___tds__GetIPAddressFilter(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetIPAddressFilter * soap_new___tds__GetIPAddressFilter(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetIPAddressFilter(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetIPAddressFilter * soap_new_req___tds__GetIPAddressFilter(struct soap *soap) { struct __tds__GetIPAddressFilter *_p = soap_instantiate___tds__GetIPAddressFilter(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetIPAddressFilter(soap, _p); } return _p; }

inline struct __tds__GetIPAddressFilter * soap_new_set___tds__GetIPAddressFilter(struct soap *soap, _tds__GetIPAddressFilter *tds__GetIPAddressFilter) { struct __tds__GetIPAddressFilter *_p = soap_instantiate___tds__GetIPAddressFilter(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetIPAddressFilter(soap, _p); _p->tds__GetIPAddressFilter = tds__GetIPAddressFilter; } return _p; }

inline void soap_delete___tds__GetIPAddressFilter(struct soap *soap, struct __tds__GetIPAddressFilter *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetIPAddressFilter(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__SetZeroConfiguration
#define SOAP_TYPE___tds__SetZeroConfiguration (1709)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetZeroConfiguration(struct soap*, struct __tds__SetZeroConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetZeroConfiguration(struct soap*, const struct __tds__SetZeroConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetZeroConfiguration(struct soap*, const char*, int, const struct __tds__SetZeroConfiguration *, const char*);
SOAP_FMAC3 struct __tds__SetZeroConfiguration * SOAP_FMAC4 soap_in___tds__SetZeroConfiguration(struct soap*, const char*, struct __tds__SetZeroConfiguration *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetZeroConfiguration(struct soap*, const struct __tds__SetZeroConfiguration *, const char*, const char*);

#ifndef soap_write___tds__SetZeroConfiguration
#define soap_write___tds__SetZeroConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetZeroConfiguration(soap, data),0) || soap_put___tds__SetZeroConfiguration(soap, data, "-tds:SetZeroConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetZeroConfiguration * SOAP_FMAC4 soap_get___tds__SetZeroConfiguration(struct soap*, struct __tds__SetZeroConfiguration *, const char*, const char*);

#ifndef soap_read___tds__SetZeroConfiguration
#define soap_read___tds__SetZeroConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__SetZeroConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__SetZeroConfiguration * SOAP_FMAC2 soap_instantiate___tds__SetZeroConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetZeroConfiguration * soap_new___tds__SetZeroConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetZeroConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetZeroConfiguration * soap_new_req___tds__SetZeroConfiguration(struct soap *soap) { struct __tds__SetZeroConfiguration *_p = soap_instantiate___tds__SetZeroConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetZeroConfiguration(soap, _p); } return _p; }

inline struct __tds__SetZeroConfiguration * soap_new_set___tds__SetZeroConfiguration(struct soap *soap, _tds__SetZeroConfiguration *tds__SetZeroConfiguration) { struct __tds__SetZeroConfiguration *_p = soap_instantiate___tds__SetZeroConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetZeroConfiguration(soap, _p); _p->tds__SetZeroConfiguration = tds__SetZeroConfiguration; } return _p; }

inline void soap_delete___tds__SetZeroConfiguration(struct soap *soap, struct __tds__SetZeroConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__SetZeroConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetZeroConfiguration
#define SOAP_TYPE___tds__GetZeroConfiguration (1705)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetZeroConfiguration(struct soap*, struct __tds__GetZeroConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetZeroConfiguration(struct soap*, const struct __tds__GetZeroConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetZeroConfiguration(struct soap*, const char*, int, const struct __tds__GetZeroConfiguration *, const char*);
SOAP_FMAC3 struct __tds__GetZeroConfiguration * SOAP_FMAC4 soap_in___tds__GetZeroConfiguration(struct soap*, const char*, struct __tds__GetZeroConfiguration *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetZeroConfiguration(struct soap*, const struct __tds__GetZeroConfiguration *, const char*, const char*);

#ifndef soap_write___tds__GetZeroConfiguration
#define soap_write___tds__GetZeroConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetZeroConfiguration(soap, data),0) || soap_put___tds__GetZeroConfiguration(soap, data, "-tds:GetZeroConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetZeroConfiguration * SOAP_FMAC4 soap_get___tds__GetZeroConfiguration(struct soap*, struct __tds__GetZeroConfiguration *, const char*, const char*);

#ifndef soap_read___tds__GetZeroConfiguration
#define soap_read___tds__GetZeroConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetZeroConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetZeroConfiguration * SOAP_FMAC2 soap_instantiate___tds__GetZeroConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetZeroConfiguration * soap_new___tds__GetZeroConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetZeroConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetZeroConfiguration * soap_new_req___tds__GetZeroConfiguration(struct soap *soap) { struct __tds__GetZeroConfiguration *_p = soap_instantiate___tds__GetZeroConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetZeroConfiguration(soap, _p); } return _p; }

inline struct __tds__GetZeroConfiguration * soap_new_set___tds__GetZeroConfiguration(struct soap *soap, _tds__GetZeroConfiguration *tds__GetZeroConfiguration) { struct __tds__GetZeroConfiguration *_p = soap_instantiate___tds__GetZeroConfiguration(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetZeroConfiguration(soap, _p); _p->tds__GetZeroConfiguration = tds__GetZeroConfiguration; } return _p; }

inline void soap_delete___tds__GetZeroConfiguration(struct soap *soap, struct __tds__GetZeroConfiguration *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetZeroConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__SetNetworkDefaultGateway
#define SOAP_TYPE___tds__SetNetworkDefaultGateway (1701)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetNetworkDefaultGateway(struct soap*, struct __tds__SetNetworkDefaultGateway *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetNetworkDefaultGateway(struct soap*, const struct __tds__SetNetworkDefaultGateway *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetNetworkDefaultGateway(struct soap*, const char*, int, const struct __tds__SetNetworkDefaultGateway *, const char*);
SOAP_FMAC3 struct __tds__SetNetworkDefaultGateway * SOAP_FMAC4 soap_in___tds__SetNetworkDefaultGateway(struct soap*, const char*, struct __tds__SetNetworkDefaultGateway *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetNetworkDefaultGateway(struct soap*, const struct __tds__SetNetworkDefaultGateway *, const char*, const char*);

#ifndef soap_write___tds__SetNetworkDefaultGateway
#define soap_write___tds__SetNetworkDefaultGateway(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetNetworkDefaultGateway(soap, data),0) || soap_put___tds__SetNetworkDefaultGateway(soap, data, "-tds:SetNetworkDefaultGateway", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetNetworkDefaultGateway * SOAP_FMAC4 soap_get___tds__SetNetworkDefaultGateway(struct soap*, struct __tds__SetNetworkDefaultGateway *, const char*, const char*);

#ifndef soap_read___tds__SetNetworkDefaultGateway
#define soap_read___tds__SetNetworkDefaultGateway(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__SetNetworkDefaultGateway(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__SetNetworkDefaultGateway * SOAP_FMAC2 soap_instantiate___tds__SetNetworkDefaultGateway(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetNetworkDefaultGateway * soap_new___tds__SetNetworkDefaultGateway(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetNetworkDefaultGateway(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetNetworkDefaultGateway * soap_new_req___tds__SetNetworkDefaultGateway(struct soap *soap) { struct __tds__SetNetworkDefaultGateway *_p = soap_instantiate___tds__SetNetworkDefaultGateway(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetNetworkDefaultGateway(soap, _p); } return _p; }

inline struct __tds__SetNetworkDefaultGateway * soap_new_set___tds__SetNetworkDefaultGateway(struct soap *soap, _tds__SetNetworkDefaultGateway *tds__SetNetworkDefaultGateway) { struct __tds__SetNetworkDefaultGateway *_p = soap_instantiate___tds__SetNetworkDefaultGateway(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetNetworkDefaultGateway(soap, _p); _p->tds__SetNetworkDefaultGateway = tds__SetNetworkDefaultGateway; } return _p; }

inline void soap_delete___tds__SetNetworkDefaultGateway(struct soap *soap, struct __tds__SetNetworkDefaultGateway *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__SetNetworkDefaultGateway(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetNetworkDefaultGateway
#define SOAP_TYPE___tds__GetNetworkDefaultGateway (1697)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetNetworkDefaultGateway(struct soap*, struct __tds__GetNetworkDefaultGateway *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetNetworkDefaultGateway(struct soap*, const struct __tds__GetNetworkDefaultGateway *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetNetworkDefaultGateway(struct soap*, const char*, int, const struct __tds__GetNetworkDefaultGateway *, const char*);
SOAP_FMAC3 struct __tds__GetNetworkDefaultGateway * SOAP_FMAC4 soap_in___tds__GetNetworkDefaultGateway(struct soap*, const char*, struct __tds__GetNetworkDefaultGateway *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetNetworkDefaultGateway(struct soap*, const struct __tds__GetNetworkDefaultGateway *, const char*, const char*);

#ifndef soap_write___tds__GetNetworkDefaultGateway
#define soap_write___tds__GetNetworkDefaultGateway(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetNetworkDefaultGateway(soap, data),0) || soap_put___tds__GetNetworkDefaultGateway(soap, data, "-tds:GetNetworkDefaultGateway", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetNetworkDefaultGateway * SOAP_FMAC4 soap_get___tds__GetNetworkDefaultGateway(struct soap*, struct __tds__GetNetworkDefaultGateway *, const char*, const char*);

#ifndef soap_read___tds__GetNetworkDefaultGateway
#define soap_read___tds__GetNetworkDefaultGateway(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetNetworkDefaultGateway(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetNetworkDefaultGateway * SOAP_FMAC2 soap_instantiate___tds__GetNetworkDefaultGateway(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetNetworkDefaultGateway * soap_new___tds__GetNetworkDefaultGateway(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetNetworkDefaultGateway(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetNetworkDefaultGateway * soap_new_req___tds__GetNetworkDefaultGateway(struct soap *soap) { struct __tds__GetNetworkDefaultGateway *_p = soap_instantiate___tds__GetNetworkDefaultGateway(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetNetworkDefaultGateway(soap, _p); } return _p; }

inline struct __tds__GetNetworkDefaultGateway * soap_new_set___tds__GetNetworkDefaultGateway(struct soap *soap, _tds__GetNetworkDefaultGateway *tds__GetNetworkDefaultGateway) { struct __tds__GetNetworkDefaultGateway *_p = soap_instantiate___tds__GetNetworkDefaultGateway(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetNetworkDefaultGateway(soap, _p); _p->tds__GetNetworkDefaultGateway = tds__GetNetworkDefaultGateway; } return _p; }

inline void soap_delete___tds__GetNetworkDefaultGateway(struct soap *soap, struct __tds__GetNetworkDefaultGateway *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetNetworkDefaultGateway(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__SetNetworkProtocols
#define SOAP_TYPE___tds__SetNetworkProtocols (1693)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetNetworkProtocols(struct soap*, struct __tds__SetNetworkProtocols *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetNetworkProtocols(struct soap*, const struct __tds__SetNetworkProtocols *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetNetworkProtocols(struct soap*, const char*, int, const struct __tds__SetNetworkProtocols *, const char*);
SOAP_FMAC3 struct __tds__SetNetworkProtocols * SOAP_FMAC4 soap_in___tds__SetNetworkProtocols(struct soap*, const char*, struct __tds__SetNetworkProtocols *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetNetworkProtocols(struct soap*, const struct __tds__SetNetworkProtocols *, const char*, const char*);

#ifndef soap_write___tds__SetNetworkProtocols
#define soap_write___tds__SetNetworkProtocols(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetNetworkProtocols(soap, data),0) || soap_put___tds__SetNetworkProtocols(soap, data, "-tds:SetNetworkProtocols", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetNetworkProtocols * SOAP_FMAC4 soap_get___tds__SetNetworkProtocols(struct soap*, struct __tds__SetNetworkProtocols *, const char*, const char*);

#ifndef soap_read___tds__SetNetworkProtocols
#define soap_read___tds__SetNetworkProtocols(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__SetNetworkProtocols(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__SetNetworkProtocols * SOAP_FMAC2 soap_instantiate___tds__SetNetworkProtocols(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetNetworkProtocols * soap_new___tds__SetNetworkProtocols(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetNetworkProtocols(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetNetworkProtocols * soap_new_req___tds__SetNetworkProtocols(struct soap *soap) { struct __tds__SetNetworkProtocols *_p = soap_instantiate___tds__SetNetworkProtocols(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetNetworkProtocols(soap, _p); } return _p; }

inline struct __tds__SetNetworkProtocols * soap_new_set___tds__SetNetworkProtocols(struct soap *soap, _tds__SetNetworkProtocols *tds__SetNetworkProtocols) { struct __tds__SetNetworkProtocols *_p = soap_instantiate___tds__SetNetworkProtocols(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetNetworkProtocols(soap, _p); _p->tds__SetNetworkProtocols = tds__SetNetworkProtocols; } return _p; }

inline void soap_delete___tds__SetNetworkProtocols(struct soap *soap, struct __tds__SetNetworkProtocols *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__SetNetworkProtocols(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetNetworkProtocols
#define SOAP_TYPE___tds__GetNetworkProtocols (1689)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetNetworkProtocols(struct soap*, struct __tds__GetNetworkProtocols *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetNetworkProtocols(struct soap*, const struct __tds__GetNetworkProtocols *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetNetworkProtocols(struct soap*, const char*, int, const struct __tds__GetNetworkProtocols *, const char*);
SOAP_FMAC3 struct __tds__GetNetworkProtocols * SOAP_FMAC4 soap_in___tds__GetNetworkProtocols(struct soap*, const char*, struct __tds__GetNetworkProtocols *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetNetworkProtocols(struct soap*, const struct __tds__GetNetworkProtocols *, const char*, const char*);

#ifndef soap_write___tds__GetNetworkProtocols
#define soap_write___tds__GetNetworkProtocols(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetNetworkProtocols(soap, data),0) || soap_put___tds__GetNetworkProtocols(soap, data, "-tds:GetNetworkProtocols", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetNetworkProtocols * SOAP_FMAC4 soap_get___tds__GetNetworkProtocols(struct soap*, struct __tds__GetNetworkProtocols *, const char*, const char*);

#ifndef soap_read___tds__GetNetworkProtocols
#define soap_read___tds__GetNetworkProtocols(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetNetworkProtocols(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetNetworkProtocols * SOAP_FMAC2 soap_instantiate___tds__GetNetworkProtocols(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetNetworkProtocols * soap_new___tds__GetNetworkProtocols(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetNetworkProtocols(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetNetworkProtocols * soap_new_req___tds__GetNetworkProtocols(struct soap *soap) { struct __tds__GetNetworkProtocols *_p = soap_instantiate___tds__GetNetworkProtocols(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetNetworkProtocols(soap, _p); } return _p; }

inline struct __tds__GetNetworkProtocols * soap_new_set___tds__GetNetworkProtocols(struct soap *soap, _tds__GetNetworkProtocols *tds__GetNetworkProtocols) { struct __tds__GetNetworkProtocols *_p = soap_instantiate___tds__GetNetworkProtocols(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetNetworkProtocols(soap, _p); _p->tds__GetNetworkProtocols = tds__GetNetworkProtocols; } return _p; }

inline void soap_delete___tds__GetNetworkProtocols(struct soap *soap, struct __tds__GetNetworkProtocols *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetNetworkProtocols(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__SetNetworkInterfaces
#define SOAP_TYPE___tds__SetNetworkInterfaces (1685)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetNetworkInterfaces(struct soap*, struct __tds__SetNetworkInterfaces *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetNetworkInterfaces(struct soap*, const struct __tds__SetNetworkInterfaces *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetNetworkInterfaces(struct soap*, const char*, int, const struct __tds__SetNetworkInterfaces *, const char*);
SOAP_FMAC3 struct __tds__SetNetworkInterfaces * SOAP_FMAC4 soap_in___tds__SetNetworkInterfaces(struct soap*, const char*, struct __tds__SetNetworkInterfaces *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetNetworkInterfaces(struct soap*, const struct __tds__SetNetworkInterfaces *, const char*, const char*);

#ifndef soap_write___tds__SetNetworkInterfaces
#define soap_write___tds__SetNetworkInterfaces(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetNetworkInterfaces(soap, data),0) || soap_put___tds__SetNetworkInterfaces(soap, data, "-tds:SetNetworkInterfaces", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetNetworkInterfaces * SOAP_FMAC4 soap_get___tds__SetNetworkInterfaces(struct soap*, struct __tds__SetNetworkInterfaces *, const char*, const char*);

#ifndef soap_read___tds__SetNetworkInterfaces
#define soap_read___tds__SetNetworkInterfaces(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__SetNetworkInterfaces(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__SetNetworkInterfaces * SOAP_FMAC2 soap_instantiate___tds__SetNetworkInterfaces(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetNetworkInterfaces * soap_new___tds__SetNetworkInterfaces(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetNetworkInterfaces(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetNetworkInterfaces * soap_new_req___tds__SetNetworkInterfaces(struct soap *soap) { struct __tds__SetNetworkInterfaces *_p = soap_instantiate___tds__SetNetworkInterfaces(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetNetworkInterfaces(soap, _p); } return _p; }

inline struct __tds__SetNetworkInterfaces * soap_new_set___tds__SetNetworkInterfaces(struct soap *soap, _tds__SetNetworkInterfaces *tds__SetNetworkInterfaces) { struct __tds__SetNetworkInterfaces *_p = soap_instantiate___tds__SetNetworkInterfaces(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetNetworkInterfaces(soap, _p); _p->tds__SetNetworkInterfaces = tds__SetNetworkInterfaces; } return _p; }

inline void soap_delete___tds__SetNetworkInterfaces(struct soap *soap, struct __tds__SetNetworkInterfaces *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__SetNetworkInterfaces(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetNetworkInterfaces
#define SOAP_TYPE___tds__GetNetworkInterfaces (1681)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetNetworkInterfaces(struct soap*, struct __tds__GetNetworkInterfaces *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetNetworkInterfaces(struct soap*, const struct __tds__GetNetworkInterfaces *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetNetworkInterfaces(struct soap*, const char*, int, const struct __tds__GetNetworkInterfaces *, const char*);
SOAP_FMAC3 struct __tds__GetNetworkInterfaces * SOAP_FMAC4 soap_in___tds__GetNetworkInterfaces(struct soap*, const char*, struct __tds__GetNetworkInterfaces *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetNetworkInterfaces(struct soap*, const struct __tds__GetNetworkInterfaces *, const char*, const char*);

#ifndef soap_write___tds__GetNetworkInterfaces
#define soap_write___tds__GetNetworkInterfaces(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetNetworkInterfaces(soap, data),0) || soap_put___tds__GetNetworkInterfaces(soap, data, "-tds:GetNetworkInterfaces", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetNetworkInterfaces * SOAP_FMAC4 soap_get___tds__GetNetworkInterfaces(struct soap*, struct __tds__GetNetworkInterfaces *, const char*, const char*);

#ifndef soap_read___tds__GetNetworkInterfaces
#define soap_read___tds__GetNetworkInterfaces(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetNetworkInterfaces(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetNetworkInterfaces * SOAP_FMAC2 soap_instantiate___tds__GetNetworkInterfaces(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetNetworkInterfaces * soap_new___tds__GetNetworkInterfaces(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetNetworkInterfaces(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetNetworkInterfaces * soap_new_req___tds__GetNetworkInterfaces(struct soap *soap) { struct __tds__GetNetworkInterfaces *_p = soap_instantiate___tds__GetNetworkInterfaces(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetNetworkInterfaces(soap, _p); } return _p; }

inline struct __tds__GetNetworkInterfaces * soap_new_set___tds__GetNetworkInterfaces(struct soap *soap, _tds__GetNetworkInterfaces *tds__GetNetworkInterfaces) { struct __tds__GetNetworkInterfaces *_p = soap_instantiate___tds__GetNetworkInterfaces(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetNetworkInterfaces(soap, _p); _p->tds__GetNetworkInterfaces = tds__GetNetworkInterfaces; } return _p; }

inline void soap_delete___tds__GetNetworkInterfaces(struct soap *soap, struct __tds__GetNetworkInterfaces *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetNetworkInterfaces(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__SetDynamicDNS
#define SOAP_TYPE___tds__SetDynamicDNS (1677)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetDynamicDNS(struct soap*, struct __tds__SetDynamicDNS *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetDynamicDNS(struct soap*, const struct __tds__SetDynamicDNS *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetDynamicDNS(struct soap*, const char*, int, const struct __tds__SetDynamicDNS *, const char*);
SOAP_FMAC3 struct __tds__SetDynamicDNS * SOAP_FMAC4 soap_in___tds__SetDynamicDNS(struct soap*, const char*, struct __tds__SetDynamicDNS *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetDynamicDNS(struct soap*, const struct __tds__SetDynamicDNS *, const char*, const char*);

#ifndef soap_write___tds__SetDynamicDNS
#define soap_write___tds__SetDynamicDNS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetDynamicDNS(soap, data),0) || soap_put___tds__SetDynamicDNS(soap, data, "-tds:SetDynamicDNS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetDynamicDNS * SOAP_FMAC4 soap_get___tds__SetDynamicDNS(struct soap*, struct __tds__SetDynamicDNS *, const char*, const char*);

#ifndef soap_read___tds__SetDynamicDNS
#define soap_read___tds__SetDynamicDNS(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__SetDynamicDNS(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__SetDynamicDNS * SOAP_FMAC2 soap_instantiate___tds__SetDynamicDNS(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetDynamicDNS * soap_new___tds__SetDynamicDNS(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetDynamicDNS(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetDynamicDNS * soap_new_req___tds__SetDynamicDNS(struct soap *soap) { struct __tds__SetDynamicDNS *_p = soap_instantiate___tds__SetDynamicDNS(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetDynamicDNS(soap, _p); } return _p; }

inline struct __tds__SetDynamicDNS * soap_new_set___tds__SetDynamicDNS(struct soap *soap, _tds__SetDynamicDNS *tds__SetDynamicDNS) { struct __tds__SetDynamicDNS *_p = soap_instantiate___tds__SetDynamicDNS(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetDynamicDNS(soap, _p); _p->tds__SetDynamicDNS = tds__SetDynamicDNS; } return _p; }

inline void soap_delete___tds__SetDynamicDNS(struct soap *soap, struct __tds__SetDynamicDNS *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__SetDynamicDNS(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetDynamicDNS
#define SOAP_TYPE___tds__GetDynamicDNS (1673)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetDynamicDNS(struct soap*, struct __tds__GetDynamicDNS *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetDynamicDNS(struct soap*, const struct __tds__GetDynamicDNS *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetDynamicDNS(struct soap*, const char*, int, const struct __tds__GetDynamicDNS *, const char*);
SOAP_FMAC3 struct __tds__GetDynamicDNS * SOAP_FMAC4 soap_in___tds__GetDynamicDNS(struct soap*, const char*, struct __tds__GetDynamicDNS *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetDynamicDNS(struct soap*, const struct __tds__GetDynamicDNS *, const char*, const char*);

#ifndef soap_write___tds__GetDynamicDNS
#define soap_write___tds__GetDynamicDNS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetDynamicDNS(soap, data),0) || soap_put___tds__GetDynamicDNS(soap, data, "-tds:GetDynamicDNS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetDynamicDNS * SOAP_FMAC4 soap_get___tds__GetDynamicDNS(struct soap*, struct __tds__GetDynamicDNS *, const char*, const char*);

#ifndef soap_read___tds__GetDynamicDNS
#define soap_read___tds__GetDynamicDNS(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetDynamicDNS(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetDynamicDNS * SOAP_FMAC2 soap_instantiate___tds__GetDynamicDNS(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetDynamicDNS * soap_new___tds__GetDynamicDNS(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetDynamicDNS(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetDynamicDNS * soap_new_req___tds__GetDynamicDNS(struct soap *soap) { struct __tds__GetDynamicDNS *_p = soap_instantiate___tds__GetDynamicDNS(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetDynamicDNS(soap, _p); } return _p; }

inline struct __tds__GetDynamicDNS * soap_new_set___tds__GetDynamicDNS(struct soap *soap, _tds__GetDynamicDNS *tds__GetDynamicDNS) { struct __tds__GetDynamicDNS *_p = soap_instantiate___tds__GetDynamicDNS(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetDynamicDNS(soap, _p); _p->tds__GetDynamicDNS = tds__GetDynamicDNS; } return _p; }

inline void soap_delete___tds__GetDynamicDNS(struct soap *soap, struct __tds__GetDynamicDNS *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetDynamicDNS(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__SetNTP
#define SOAP_TYPE___tds__SetNTP (1669)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetNTP(struct soap*, struct __tds__SetNTP *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetNTP(struct soap*, const struct __tds__SetNTP *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetNTP(struct soap*, const char*, int, const struct __tds__SetNTP *, const char*);
SOAP_FMAC3 struct __tds__SetNTP * SOAP_FMAC4 soap_in___tds__SetNTP(struct soap*, const char*, struct __tds__SetNTP *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetNTP(struct soap*, const struct __tds__SetNTP *, const char*, const char*);

#ifndef soap_write___tds__SetNTP
#define soap_write___tds__SetNTP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetNTP(soap, data),0) || soap_put___tds__SetNTP(soap, data, "-tds:SetNTP", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetNTP * SOAP_FMAC4 soap_get___tds__SetNTP(struct soap*, struct __tds__SetNTP *, const char*, const char*);

#ifndef soap_read___tds__SetNTP
#define soap_read___tds__SetNTP(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__SetNTP(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__SetNTP * SOAP_FMAC2 soap_instantiate___tds__SetNTP(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetNTP * soap_new___tds__SetNTP(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetNTP(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetNTP * soap_new_req___tds__SetNTP(struct soap *soap) { struct __tds__SetNTP *_p = soap_instantiate___tds__SetNTP(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetNTP(soap, _p); } return _p; }

inline struct __tds__SetNTP * soap_new_set___tds__SetNTP(struct soap *soap, _tds__SetNTP *tds__SetNTP) { struct __tds__SetNTP *_p = soap_instantiate___tds__SetNTP(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetNTP(soap, _p); _p->tds__SetNTP = tds__SetNTP; } return _p; }

inline void soap_delete___tds__SetNTP(struct soap *soap, struct __tds__SetNTP *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__SetNTP(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetNTP
#define SOAP_TYPE___tds__GetNTP (1665)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetNTP(struct soap*, struct __tds__GetNTP *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetNTP(struct soap*, const struct __tds__GetNTP *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetNTP(struct soap*, const char*, int, const struct __tds__GetNTP *, const char*);
SOAP_FMAC3 struct __tds__GetNTP * SOAP_FMAC4 soap_in___tds__GetNTP(struct soap*, const char*, struct __tds__GetNTP *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetNTP(struct soap*, const struct __tds__GetNTP *, const char*, const char*);

#ifndef soap_write___tds__GetNTP
#define soap_write___tds__GetNTP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetNTP(soap, data),0) || soap_put___tds__GetNTP(soap, data, "-tds:GetNTP", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetNTP * SOAP_FMAC4 soap_get___tds__GetNTP(struct soap*, struct __tds__GetNTP *, const char*, const char*);

#ifndef soap_read___tds__GetNTP
#define soap_read___tds__GetNTP(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetNTP(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetNTP * SOAP_FMAC2 soap_instantiate___tds__GetNTP(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetNTP * soap_new___tds__GetNTP(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetNTP(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetNTP * soap_new_req___tds__GetNTP(struct soap *soap) { struct __tds__GetNTP *_p = soap_instantiate___tds__GetNTP(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetNTP(soap, _p); } return _p; }

inline struct __tds__GetNTP * soap_new_set___tds__GetNTP(struct soap *soap, _tds__GetNTP *tds__GetNTP) { struct __tds__GetNTP *_p = soap_instantiate___tds__GetNTP(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetNTP(soap, _p); _p->tds__GetNTP = tds__GetNTP; } return _p; }

inline void soap_delete___tds__GetNTP(struct soap *soap, struct __tds__GetNTP *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetNTP(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__SetDNS
#define SOAP_TYPE___tds__SetDNS (1661)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetDNS(struct soap*, struct __tds__SetDNS *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetDNS(struct soap*, const struct __tds__SetDNS *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetDNS(struct soap*, const char*, int, const struct __tds__SetDNS *, const char*);
SOAP_FMAC3 struct __tds__SetDNS * SOAP_FMAC4 soap_in___tds__SetDNS(struct soap*, const char*, struct __tds__SetDNS *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetDNS(struct soap*, const struct __tds__SetDNS *, const char*, const char*);

#ifndef soap_write___tds__SetDNS
#define soap_write___tds__SetDNS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetDNS(soap, data),0) || soap_put___tds__SetDNS(soap, data, "-tds:SetDNS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetDNS * SOAP_FMAC4 soap_get___tds__SetDNS(struct soap*, struct __tds__SetDNS *, const char*, const char*);

#ifndef soap_read___tds__SetDNS
#define soap_read___tds__SetDNS(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__SetDNS(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__SetDNS * SOAP_FMAC2 soap_instantiate___tds__SetDNS(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetDNS * soap_new___tds__SetDNS(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetDNS(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetDNS * soap_new_req___tds__SetDNS(struct soap *soap) { struct __tds__SetDNS *_p = soap_instantiate___tds__SetDNS(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetDNS(soap, _p); } return _p; }

inline struct __tds__SetDNS * soap_new_set___tds__SetDNS(struct soap *soap, _tds__SetDNS *tds__SetDNS) { struct __tds__SetDNS *_p = soap_instantiate___tds__SetDNS(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetDNS(soap, _p); _p->tds__SetDNS = tds__SetDNS; } return _p; }

inline void soap_delete___tds__SetDNS(struct soap *soap, struct __tds__SetDNS *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__SetDNS(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetDNS
#define SOAP_TYPE___tds__GetDNS (1657)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetDNS(struct soap*, struct __tds__GetDNS *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetDNS(struct soap*, const struct __tds__GetDNS *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetDNS(struct soap*, const char*, int, const struct __tds__GetDNS *, const char*);
SOAP_FMAC3 struct __tds__GetDNS * SOAP_FMAC4 soap_in___tds__GetDNS(struct soap*, const char*, struct __tds__GetDNS *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetDNS(struct soap*, const struct __tds__GetDNS *, const char*, const char*);

#ifndef soap_write___tds__GetDNS
#define soap_write___tds__GetDNS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetDNS(soap, data),0) || soap_put___tds__GetDNS(soap, data, "-tds:GetDNS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetDNS * SOAP_FMAC4 soap_get___tds__GetDNS(struct soap*, struct __tds__GetDNS *, const char*, const char*);

#ifndef soap_read___tds__GetDNS
#define soap_read___tds__GetDNS(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetDNS(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetDNS * SOAP_FMAC2 soap_instantiate___tds__GetDNS(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetDNS * soap_new___tds__GetDNS(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetDNS(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetDNS * soap_new_req___tds__GetDNS(struct soap *soap) { struct __tds__GetDNS *_p = soap_instantiate___tds__GetDNS(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetDNS(soap, _p); } return _p; }

inline struct __tds__GetDNS * soap_new_set___tds__GetDNS(struct soap *soap, _tds__GetDNS *tds__GetDNS) { struct __tds__GetDNS *_p = soap_instantiate___tds__GetDNS(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetDNS(soap, _p); _p->tds__GetDNS = tds__GetDNS; } return _p; }

inline void soap_delete___tds__GetDNS(struct soap *soap, struct __tds__GetDNS *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetDNS(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__SetHostnameFromDHCP
#define SOAP_TYPE___tds__SetHostnameFromDHCP (1653)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetHostnameFromDHCP(struct soap*, struct __tds__SetHostnameFromDHCP *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetHostnameFromDHCP(struct soap*, const struct __tds__SetHostnameFromDHCP *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetHostnameFromDHCP(struct soap*, const char*, int, const struct __tds__SetHostnameFromDHCP *, const char*);
SOAP_FMAC3 struct __tds__SetHostnameFromDHCP * SOAP_FMAC4 soap_in___tds__SetHostnameFromDHCP(struct soap*, const char*, struct __tds__SetHostnameFromDHCP *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetHostnameFromDHCP(struct soap*, const struct __tds__SetHostnameFromDHCP *, const char*, const char*);

#ifndef soap_write___tds__SetHostnameFromDHCP
#define soap_write___tds__SetHostnameFromDHCP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetHostnameFromDHCP(soap, data),0) || soap_put___tds__SetHostnameFromDHCP(soap, data, "-tds:SetHostnameFromDHCP", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetHostnameFromDHCP * SOAP_FMAC4 soap_get___tds__SetHostnameFromDHCP(struct soap*, struct __tds__SetHostnameFromDHCP *, const char*, const char*);

#ifndef soap_read___tds__SetHostnameFromDHCP
#define soap_read___tds__SetHostnameFromDHCP(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__SetHostnameFromDHCP(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__SetHostnameFromDHCP * SOAP_FMAC2 soap_instantiate___tds__SetHostnameFromDHCP(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetHostnameFromDHCP * soap_new___tds__SetHostnameFromDHCP(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetHostnameFromDHCP(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetHostnameFromDHCP * soap_new_req___tds__SetHostnameFromDHCP(struct soap *soap) { struct __tds__SetHostnameFromDHCP *_p = soap_instantiate___tds__SetHostnameFromDHCP(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetHostnameFromDHCP(soap, _p); } return _p; }

inline struct __tds__SetHostnameFromDHCP * soap_new_set___tds__SetHostnameFromDHCP(struct soap *soap, _tds__SetHostnameFromDHCP *tds__SetHostnameFromDHCP) { struct __tds__SetHostnameFromDHCP *_p = soap_instantiate___tds__SetHostnameFromDHCP(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetHostnameFromDHCP(soap, _p); _p->tds__SetHostnameFromDHCP = tds__SetHostnameFromDHCP; } return _p; }

inline void soap_delete___tds__SetHostnameFromDHCP(struct soap *soap, struct __tds__SetHostnameFromDHCP *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__SetHostnameFromDHCP(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__SetHostname
#define SOAP_TYPE___tds__SetHostname (1649)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetHostname(struct soap*, struct __tds__SetHostname *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetHostname(struct soap*, const struct __tds__SetHostname *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetHostname(struct soap*, const char*, int, const struct __tds__SetHostname *, const char*);
SOAP_FMAC3 struct __tds__SetHostname * SOAP_FMAC4 soap_in___tds__SetHostname(struct soap*, const char*, struct __tds__SetHostname *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetHostname(struct soap*, const struct __tds__SetHostname *, const char*, const char*);

#ifndef soap_write___tds__SetHostname
#define soap_write___tds__SetHostname(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetHostname(soap, data),0) || soap_put___tds__SetHostname(soap, data, "-tds:SetHostname", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetHostname * SOAP_FMAC4 soap_get___tds__SetHostname(struct soap*, struct __tds__SetHostname *, const char*, const char*);

#ifndef soap_read___tds__SetHostname
#define soap_read___tds__SetHostname(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__SetHostname(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__SetHostname * SOAP_FMAC2 soap_instantiate___tds__SetHostname(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetHostname * soap_new___tds__SetHostname(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetHostname(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetHostname * soap_new_req___tds__SetHostname(struct soap *soap) { struct __tds__SetHostname *_p = soap_instantiate___tds__SetHostname(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetHostname(soap, _p); } return _p; }

inline struct __tds__SetHostname * soap_new_set___tds__SetHostname(struct soap *soap, _tds__SetHostname *tds__SetHostname) { struct __tds__SetHostname *_p = soap_instantiate___tds__SetHostname(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetHostname(soap, _p); _p->tds__SetHostname = tds__SetHostname; } return _p; }

inline void soap_delete___tds__SetHostname(struct soap *soap, struct __tds__SetHostname *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__SetHostname(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetHostname
#define SOAP_TYPE___tds__GetHostname (1645)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetHostname(struct soap*, struct __tds__GetHostname *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetHostname(struct soap*, const struct __tds__GetHostname *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetHostname(struct soap*, const char*, int, const struct __tds__GetHostname *, const char*);
SOAP_FMAC3 struct __tds__GetHostname * SOAP_FMAC4 soap_in___tds__GetHostname(struct soap*, const char*, struct __tds__GetHostname *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetHostname(struct soap*, const struct __tds__GetHostname *, const char*, const char*);

#ifndef soap_write___tds__GetHostname
#define soap_write___tds__GetHostname(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetHostname(soap, data),0) || soap_put___tds__GetHostname(soap, data, "-tds:GetHostname", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetHostname * SOAP_FMAC4 soap_get___tds__GetHostname(struct soap*, struct __tds__GetHostname *, const char*, const char*);

#ifndef soap_read___tds__GetHostname
#define soap_read___tds__GetHostname(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetHostname(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetHostname * SOAP_FMAC2 soap_instantiate___tds__GetHostname(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetHostname * soap_new___tds__GetHostname(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetHostname(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetHostname * soap_new_req___tds__GetHostname(struct soap *soap) { struct __tds__GetHostname *_p = soap_instantiate___tds__GetHostname(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetHostname(soap, _p); } return _p; }

inline struct __tds__GetHostname * soap_new_set___tds__GetHostname(struct soap *soap, _tds__GetHostname *tds__GetHostname) { struct __tds__GetHostname *_p = soap_instantiate___tds__GetHostname(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetHostname(soap, _p); _p->tds__GetHostname = tds__GetHostname; } return _p; }

inline void soap_delete___tds__GetHostname(struct soap *soap, struct __tds__GetHostname *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetHostname(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__SetDPAddresses
#define SOAP_TYPE___tds__SetDPAddresses (1641)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetDPAddresses(struct soap*, struct __tds__SetDPAddresses *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetDPAddresses(struct soap*, const struct __tds__SetDPAddresses *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetDPAddresses(struct soap*, const char*, int, const struct __tds__SetDPAddresses *, const char*);
SOAP_FMAC3 struct __tds__SetDPAddresses * SOAP_FMAC4 soap_in___tds__SetDPAddresses(struct soap*, const char*, struct __tds__SetDPAddresses *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetDPAddresses(struct soap*, const struct __tds__SetDPAddresses *, const char*, const char*);

#ifndef soap_write___tds__SetDPAddresses
#define soap_write___tds__SetDPAddresses(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetDPAddresses(soap, data),0) || soap_put___tds__SetDPAddresses(soap, data, "-tds:SetDPAddresses", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetDPAddresses * SOAP_FMAC4 soap_get___tds__SetDPAddresses(struct soap*, struct __tds__SetDPAddresses *, const char*, const char*);

#ifndef soap_read___tds__SetDPAddresses
#define soap_read___tds__SetDPAddresses(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__SetDPAddresses(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__SetDPAddresses * SOAP_FMAC2 soap_instantiate___tds__SetDPAddresses(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetDPAddresses * soap_new___tds__SetDPAddresses(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetDPAddresses(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetDPAddresses * soap_new_req___tds__SetDPAddresses(struct soap *soap) { struct __tds__SetDPAddresses *_p = soap_instantiate___tds__SetDPAddresses(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetDPAddresses(soap, _p); } return _p; }

inline struct __tds__SetDPAddresses * soap_new_set___tds__SetDPAddresses(struct soap *soap, _tds__SetDPAddresses *tds__SetDPAddresses) { struct __tds__SetDPAddresses *_p = soap_instantiate___tds__SetDPAddresses(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetDPAddresses(soap, _p); _p->tds__SetDPAddresses = tds__SetDPAddresses; } return _p; }

inline void soap_delete___tds__SetDPAddresses(struct soap *soap, struct __tds__SetDPAddresses *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__SetDPAddresses(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetCapabilities
#define SOAP_TYPE___tds__GetCapabilities (1637)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetCapabilities(struct soap*, struct __tds__GetCapabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetCapabilities(struct soap*, const struct __tds__GetCapabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetCapabilities(struct soap*, const char*, int, const struct __tds__GetCapabilities *, const char*);
SOAP_FMAC3 struct __tds__GetCapabilities * SOAP_FMAC4 soap_in___tds__GetCapabilities(struct soap*, const char*, struct __tds__GetCapabilities *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetCapabilities(struct soap*, const struct __tds__GetCapabilities *, const char*, const char*);

#ifndef soap_write___tds__GetCapabilities
#define soap_write___tds__GetCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetCapabilities(soap, data),0) || soap_put___tds__GetCapabilities(soap, data, "-tds:GetCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetCapabilities * SOAP_FMAC4 soap_get___tds__GetCapabilities(struct soap*, struct __tds__GetCapabilities *, const char*, const char*);

#ifndef soap_read___tds__GetCapabilities
#define soap_read___tds__GetCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetCapabilities * SOAP_FMAC2 soap_instantiate___tds__GetCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetCapabilities * soap_new___tds__GetCapabilities(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetCapabilities(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetCapabilities * soap_new_req___tds__GetCapabilities(struct soap *soap) { struct __tds__GetCapabilities *_p = soap_instantiate___tds__GetCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetCapabilities(soap, _p); } return _p; }

inline struct __tds__GetCapabilities * soap_new_set___tds__GetCapabilities(struct soap *soap, _tds__GetCapabilities *tds__GetCapabilities) { struct __tds__GetCapabilities *_p = soap_instantiate___tds__GetCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetCapabilities(soap, _p); _p->tds__GetCapabilities = tds__GetCapabilities; } return _p; }

inline void soap_delete___tds__GetCapabilities(struct soap *soap, struct __tds__GetCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetWsdlUrl
#define SOAP_TYPE___tds__GetWsdlUrl (1633)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetWsdlUrl(struct soap*, struct __tds__GetWsdlUrl *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetWsdlUrl(struct soap*, const struct __tds__GetWsdlUrl *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetWsdlUrl(struct soap*, const char*, int, const struct __tds__GetWsdlUrl *, const char*);
SOAP_FMAC3 struct __tds__GetWsdlUrl * SOAP_FMAC4 soap_in___tds__GetWsdlUrl(struct soap*, const char*, struct __tds__GetWsdlUrl *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetWsdlUrl(struct soap*, const struct __tds__GetWsdlUrl *, const char*, const char*);

#ifndef soap_write___tds__GetWsdlUrl
#define soap_write___tds__GetWsdlUrl(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetWsdlUrl(soap, data),0) || soap_put___tds__GetWsdlUrl(soap, data, "-tds:GetWsdlUrl", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetWsdlUrl * SOAP_FMAC4 soap_get___tds__GetWsdlUrl(struct soap*, struct __tds__GetWsdlUrl *, const char*, const char*);

#ifndef soap_read___tds__GetWsdlUrl
#define soap_read___tds__GetWsdlUrl(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetWsdlUrl(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetWsdlUrl * SOAP_FMAC2 soap_instantiate___tds__GetWsdlUrl(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetWsdlUrl * soap_new___tds__GetWsdlUrl(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetWsdlUrl(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetWsdlUrl * soap_new_req___tds__GetWsdlUrl(struct soap *soap) { struct __tds__GetWsdlUrl *_p = soap_instantiate___tds__GetWsdlUrl(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetWsdlUrl(soap, _p); } return _p; }

inline struct __tds__GetWsdlUrl * soap_new_set___tds__GetWsdlUrl(struct soap *soap, _tds__GetWsdlUrl *tds__GetWsdlUrl) { struct __tds__GetWsdlUrl *_p = soap_instantiate___tds__GetWsdlUrl(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetWsdlUrl(soap, _p); _p->tds__GetWsdlUrl = tds__GetWsdlUrl; } return _p; }

inline void soap_delete___tds__GetWsdlUrl(struct soap *soap, struct __tds__GetWsdlUrl *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetWsdlUrl(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__SetUser
#define SOAP_TYPE___tds__SetUser (1629)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetUser(struct soap*, struct __tds__SetUser *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetUser(struct soap*, const struct __tds__SetUser *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetUser(struct soap*, const char*, int, const struct __tds__SetUser *, const char*);
SOAP_FMAC3 struct __tds__SetUser * SOAP_FMAC4 soap_in___tds__SetUser(struct soap*, const char*, struct __tds__SetUser *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetUser(struct soap*, const struct __tds__SetUser *, const char*, const char*);

#ifndef soap_write___tds__SetUser
#define soap_write___tds__SetUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetUser(soap, data),0) || soap_put___tds__SetUser(soap, data, "-tds:SetUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetUser * SOAP_FMAC4 soap_get___tds__SetUser(struct soap*, struct __tds__SetUser *, const char*, const char*);

#ifndef soap_read___tds__SetUser
#define soap_read___tds__SetUser(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__SetUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__SetUser * SOAP_FMAC2 soap_instantiate___tds__SetUser(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetUser * soap_new___tds__SetUser(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetUser(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetUser * soap_new_req___tds__SetUser(struct soap *soap) { struct __tds__SetUser *_p = soap_instantiate___tds__SetUser(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetUser(soap, _p); } return _p; }

inline struct __tds__SetUser * soap_new_set___tds__SetUser(struct soap *soap, _tds__SetUser *tds__SetUser) { struct __tds__SetUser *_p = soap_instantiate___tds__SetUser(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetUser(soap, _p); _p->tds__SetUser = tds__SetUser; } return _p; }

inline void soap_delete___tds__SetUser(struct soap *soap, struct __tds__SetUser *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__SetUser(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__DeleteUsers
#define SOAP_TYPE___tds__DeleteUsers (1625)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__DeleteUsers(struct soap*, struct __tds__DeleteUsers *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__DeleteUsers(struct soap*, const struct __tds__DeleteUsers *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__DeleteUsers(struct soap*, const char*, int, const struct __tds__DeleteUsers *, const char*);
SOAP_FMAC3 struct __tds__DeleteUsers * SOAP_FMAC4 soap_in___tds__DeleteUsers(struct soap*, const char*, struct __tds__DeleteUsers *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__DeleteUsers(struct soap*, const struct __tds__DeleteUsers *, const char*, const char*);

#ifndef soap_write___tds__DeleteUsers
#define soap_write___tds__DeleteUsers(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__DeleteUsers(soap, data),0) || soap_put___tds__DeleteUsers(soap, data, "-tds:DeleteUsers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__DeleteUsers * SOAP_FMAC4 soap_get___tds__DeleteUsers(struct soap*, struct __tds__DeleteUsers *, const char*, const char*);

#ifndef soap_read___tds__DeleteUsers
#define soap_read___tds__DeleteUsers(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__DeleteUsers(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__DeleteUsers * SOAP_FMAC2 soap_instantiate___tds__DeleteUsers(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__DeleteUsers * soap_new___tds__DeleteUsers(struct soap *soap, int n = -1) { return soap_instantiate___tds__DeleteUsers(soap, n, NULL, NULL, NULL); }

inline struct __tds__DeleteUsers * soap_new_req___tds__DeleteUsers(struct soap *soap) { struct __tds__DeleteUsers *_p = soap_instantiate___tds__DeleteUsers(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__DeleteUsers(soap, _p); } return _p; }

inline struct __tds__DeleteUsers * soap_new_set___tds__DeleteUsers(struct soap *soap, _tds__DeleteUsers *tds__DeleteUsers) { struct __tds__DeleteUsers *_p = soap_instantiate___tds__DeleteUsers(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__DeleteUsers(soap, _p); _p->tds__DeleteUsers = tds__DeleteUsers; } return _p; }

inline void soap_delete___tds__DeleteUsers(struct soap *soap, struct __tds__DeleteUsers *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__DeleteUsers(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__CreateUsers
#define SOAP_TYPE___tds__CreateUsers (1621)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__CreateUsers(struct soap*, struct __tds__CreateUsers *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__CreateUsers(struct soap*, const struct __tds__CreateUsers *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__CreateUsers(struct soap*, const char*, int, const struct __tds__CreateUsers *, const char*);
SOAP_FMAC3 struct __tds__CreateUsers * SOAP_FMAC4 soap_in___tds__CreateUsers(struct soap*, const char*, struct __tds__CreateUsers *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__CreateUsers(struct soap*, const struct __tds__CreateUsers *, const char*, const char*);

#ifndef soap_write___tds__CreateUsers
#define soap_write___tds__CreateUsers(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__CreateUsers(soap, data),0) || soap_put___tds__CreateUsers(soap, data, "-tds:CreateUsers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__CreateUsers * SOAP_FMAC4 soap_get___tds__CreateUsers(struct soap*, struct __tds__CreateUsers *, const char*, const char*);

#ifndef soap_read___tds__CreateUsers
#define soap_read___tds__CreateUsers(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__CreateUsers(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__CreateUsers * SOAP_FMAC2 soap_instantiate___tds__CreateUsers(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__CreateUsers * soap_new___tds__CreateUsers(struct soap *soap, int n = -1) { return soap_instantiate___tds__CreateUsers(soap, n, NULL, NULL, NULL); }

inline struct __tds__CreateUsers * soap_new_req___tds__CreateUsers(struct soap *soap) { struct __tds__CreateUsers *_p = soap_instantiate___tds__CreateUsers(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__CreateUsers(soap, _p); } return _p; }

inline struct __tds__CreateUsers * soap_new_set___tds__CreateUsers(struct soap *soap, _tds__CreateUsers *tds__CreateUsers) { struct __tds__CreateUsers *_p = soap_instantiate___tds__CreateUsers(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__CreateUsers(soap, _p); _p->tds__CreateUsers = tds__CreateUsers; } return _p; }

inline void soap_delete___tds__CreateUsers(struct soap *soap, struct __tds__CreateUsers *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__CreateUsers(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetUsers
#define SOAP_TYPE___tds__GetUsers (1617)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetUsers(struct soap*, struct __tds__GetUsers *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetUsers(struct soap*, const struct __tds__GetUsers *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetUsers(struct soap*, const char*, int, const struct __tds__GetUsers *, const char*);
SOAP_FMAC3 struct __tds__GetUsers * SOAP_FMAC4 soap_in___tds__GetUsers(struct soap*, const char*, struct __tds__GetUsers *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetUsers(struct soap*, const struct __tds__GetUsers *, const char*, const char*);

#ifndef soap_write___tds__GetUsers
#define soap_write___tds__GetUsers(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetUsers(soap, data),0) || soap_put___tds__GetUsers(soap, data, "-tds:GetUsers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetUsers * SOAP_FMAC4 soap_get___tds__GetUsers(struct soap*, struct __tds__GetUsers *, const char*, const char*);

#ifndef soap_read___tds__GetUsers
#define soap_read___tds__GetUsers(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetUsers(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetUsers * SOAP_FMAC2 soap_instantiate___tds__GetUsers(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetUsers * soap_new___tds__GetUsers(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetUsers(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetUsers * soap_new_req___tds__GetUsers(struct soap *soap) { struct __tds__GetUsers *_p = soap_instantiate___tds__GetUsers(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetUsers(soap, _p); } return _p; }

inline struct __tds__GetUsers * soap_new_set___tds__GetUsers(struct soap *soap, _tds__GetUsers *tds__GetUsers) { struct __tds__GetUsers *_p = soap_instantiate___tds__GetUsers(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetUsers(soap, _p); _p->tds__GetUsers = tds__GetUsers; } return _p; }

inline void soap_delete___tds__GetUsers(struct soap *soap, struct __tds__GetUsers *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetUsers(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__SetRemoteUser
#define SOAP_TYPE___tds__SetRemoteUser (1613)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetRemoteUser(struct soap*, struct __tds__SetRemoteUser *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetRemoteUser(struct soap*, const struct __tds__SetRemoteUser *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetRemoteUser(struct soap*, const char*, int, const struct __tds__SetRemoteUser *, const char*);
SOAP_FMAC3 struct __tds__SetRemoteUser * SOAP_FMAC4 soap_in___tds__SetRemoteUser(struct soap*, const char*, struct __tds__SetRemoteUser *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetRemoteUser(struct soap*, const struct __tds__SetRemoteUser *, const char*, const char*);

#ifndef soap_write___tds__SetRemoteUser
#define soap_write___tds__SetRemoteUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetRemoteUser(soap, data),0) || soap_put___tds__SetRemoteUser(soap, data, "-tds:SetRemoteUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetRemoteUser * SOAP_FMAC4 soap_get___tds__SetRemoteUser(struct soap*, struct __tds__SetRemoteUser *, const char*, const char*);

#ifndef soap_read___tds__SetRemoteUser
#define soap_read___tds__SetRemoteUser(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__SetRemoteUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__SetRemoteUser * SOAP_FMAC2 soap_instantiate___tds__SetRemoteUser(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetRemoteUser * soap_new___tds__SetRemoteUser(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetRemoteUser(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetRemoteUser * soap_new_req___tds__SetRemoteUser(struct soap *soap) { struct __tds__SetRemoteUser *_p = soap_instantiate___tds__SetRemoteUser(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetRemoteUser(soap, _p); } return _p; }

inline struct __tds__SetRemoteUser * soap_new_set___tds__SetRemoteUser(struct soap *soap, _tds__SetRemoteUser *tds__SetRemoteUser) { struct __tds__SetRemoteUser *_p = soap_instantiate___tds__SetRemoteUser(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetRemoteUser(soap, _p); _p->tds__SetRemoteUser = tds__SetRemoteUser; } return _p; }

inline void soap_delete___tds__SetRemoteUser(struct soap *soap, struct __tds__SetRemoteUser *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__SetRemoteUser(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetRemoteUser
#define SOAP_TYPE___tds__GetRemoteUser (1609)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetRemoteUser(struct soap*, struct __tds__GetRemoteUser *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetRemoteUser(struct soap*, const struct __tds__GetRemoteUser *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetRemoteUser(struct soap*, const char*, int, const struct __tds__GetRemoteUser *, const char*);
SOAP_FMAC3 struct __tds__GetRemoteUser * SOAP_FMAC4 soap_in___tds__GetRemoteUser(struct soap*, const char*, struct __tds__GetRemoteUser *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetRemoteUser(struct soap*, const struct __tds__GetRemoteUser *, const char*, const char*);

#ifndef soap_write___tds__GetRemoteUser
#define soap_write___tds__GetRemoteUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetRemoteUser(soap, data),0) || soap_put___tds__GetRemoteUser(soap, data, "-tds:GetRemoteUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetRemoteUser * SOAP_FMAC4 soap_get___tds__GetRemoteUser(struct soap*, struct __tds__GetRemoteUser *, const char*, const char*);

#ifndef soap_read___tds__GetRemoteUser
#define soap_read___tds__GetRemoteUser(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetRemoteUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetRemoteUser * SOAP_FMAC2 soap_instantiate___tds__GetRemoteUser(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetRemoteUser * soap_new___tds__GetRemoteUser(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetRemoteUser(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetRemoteUser * soap_new_req___tds__GetRemoteUser(struct soap *soap) { struct __tds__GetRemoteUser *_p = soap_instantiate___tds__GetRemoteUser(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetRemoteUser(soap, _p); } return _p; }

inline struct __tds__GetRemoteUser * soap_new_set___tds__GetRemoteUser(struct soap *soap, _tds__GetRemoteUser *tds__GetRemoteUser) { struct __tds__GetRemoteUser *_p = soap_instantiate___tds__GetRemoteUser(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetRemoteUser(soap, _p); _p->tds__GetRemoteUser = tds__GetRemoteUser; } return _p; }

inline void soap_delete___tds__GetRemoteUser(struct soap *soap, struct __tds__GetRemoteUser *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetRemoteUser(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetEndpointReference
#define SOAP_TYPE___tds__GetEndpointReference (1605)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetEndpointReference(struct soap*, struct __tds__GetEndpointReference *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetEndpointReference(struct soap*, const struct __tds__GetEndpointReference *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetEndpointReference(struct soap*, const char*, int, const struct __tds__GetEndpointReference *, const char*);
SOAP_FMAC3 struct __tds__GetEndpointReference * SOAP_FMAC4 soap_in___tds__GetEndpointReference(struct soap*, const char*, struct __tds__GetEndpointReference *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetEndpointReference(struct soap*, const struct __tds__GetEndpointReference *, const char*, const char*);

#ifndef soap_write___tds__GetEndpointReference
#define soap_write___tds__GetEndpointReference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetEndpointReference(soap, data),0) || soap_put___tds__GetEndpointReference(soap, data, "-tds:GetEndpointReference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetEndpointReference * SOAP_FMAC4 soap_get___tds__GetEndpointReference(struct soap*, struct __tds__GetEndpointReference *, const char*, const char*);

#ifndef soap_read___tds__GetEndpointReference
#define soap_read___tds__GetEndpointReference(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetEndpointReference(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetEndpointReference * SOAP_FMAC2 soap_instantiate___tds__GetEndpointReference(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetEndpointReference * soap_new___tds__GetEndpointReference(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetEndpointReference(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetEndpointReference * soap_new_req___tds__GetEndpointReference(struct soap *soap) { struct __tds__GetEndpointReference *_p = soap_instantiate___tds__GetEndpointReference(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetEndpointReference(soap, _p); } return _p; }

inline struct __tds__GetEndpointReference * soap_new_set___tds__GetEndpointReference(struct soap *soap, _tds__GetEndpointReference *tds__GetEndpointReference) { struct __tds__GetEndpointReference *_p = soap_instantiate___tds__GetEndpointReference(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetEndpointReference(soap, _p); _p->tds__GetEndpointReference = tds__GetEndpointReference; } return _p; }

inline void soap_delete___tds__GetEndpointReference(struct soap *soap, struct __tds__GetEndpointReference *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetEndpointReference(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetDPAddresses
#define SOAP_TYPE___tds__GetDPAddresses (1601)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetDPAddresses(struct soap*, struct __tds__GetDPAddresses *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetDPAddresses(struct soap*, const struct __tds__GetDPAddresses *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetDPAddresses(struct soap*, const char*, int, const struct __tds__GetDPAddresses *, const char*);
SOAP_FMAC3 struct __tds__GetDPAddresses * SOAP_FMAC4 soap_in___tds__GetDPAddresses(struct soap*, const char*, struct __tds__GetDPAddresses *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetDPAddresses(struct soap*, const struct __tds__GetDPAddresses *, const char*, const char*);

#ifndef soap_write___tds__GetDPAddresses
#define soap_write___tds__GetDPAddresses(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetDPAddresses(soap, data),0) || soap_put___tds__GetDPAddresses(soap, data, "-tds:GetDPAddresses", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetDPAddresses * SOAP_FMAC4 soap_get___tds__GetDPAddresses(struct soap*, struct __tds__GetDPAddresses *, const char*, const char*);

#ifndef soap_read___tds__GetDPAddresses
#define soap_read___tds__GetDPAddresses(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetDPAddresses(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetDPAddresses * SOAP_FMAC2 soap_instantiate___tds__GetDPAddresses(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetDPAddresses * soap_new___tds__GetDPAddresses(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetDPAddresses(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetDPAddresses * soap_new_req___tds__GetDPAddresses(struct soap *soap) { struct __tds__GetDPAddresses *_p = soap_instantiate___tds__GetDPAddresses(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetDPAddresses(soap, _p); } return _p; }

inline struct __tds__GetDPAddresses * soap_new_set___tds__GetDPAddresses(struct soap *soap, _tds__GetDPAddresses *tds__GetDPAddresses) { struct __tds__GetDPAddresses *_p = soap_instantiate___tds__GetDPAddresses(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetDPAddresses(soap, _p); _p->tds__GetDPAddresses = tds__GetDPAddresses; } return _p; }

inline void soap_delete___tds__GetDPAddresses(struct soap *soap, struct __tds__GetDPAddresses *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetDPAddresses(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__SetRemoteDiscoveryMode
#define SOAP_TYPE___tds__SetRemoteDiscoveryMode (1597)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetRemoteDiscoveryMode(struct soap*, struct __tds__SetRemoteDiscoveryMode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetRemoteDiscoveryMode(struct soap*, const struct __tds__SetRemoteDiscoveryMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetRemoteDiscoveryMode(struct soap*, const char*, int, const struct __tds__SetRemoteDiscoveryMode *, const char*);
SOAP_FMAC3 struct __tds__SetRemoteDiscoveryMode * SOAP_FMAC4 soap_in___tds__SetRemoteDiscoveryMode(struct soap*, const char*, struct __tds__SetRemoteDiscoveryMode *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetRemoteDiscoveryMode(struct soap*, const struct __tds__SetRemoteDiscoveryMode *, const char*, const char*);

#ifndef soap_write___tds__SetRemoteDiscoveryMode
#define soap_write___tds__SetRemoteDiscoveryMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetRemoteDiscoveryMode(soap, data),0) || soap_put___tds__SetRemoteDiscoveryMode(soap, data, "-tds:SetRemoteDiscoveryMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetRemoteDiscoveryMode * SOAP_FMAC4 soap_get___tds__SetRemoteDiscoveryMode(struct soap*, struct __tds__SetRemoteDiscoveryMode *, const char*, const char*);

#ifndef soap_read___tds__SetRemoteDiscoveryMode
#define soap_read___tds__SetRemoteDiscoveryMode(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__SetRemoteDiscoveryMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__SetRemoteDiscoveryMode * SOAP_FMAC2 soap_instantiate___tds__SetRemoteDiscoveryMode(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetRemoteDiscoveryMode * soap_new___tds__SetRemoteDiscoveryMode(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetRemoteDiscoveryMode(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetRemoteDiscoveryMode * soap_new_req___tds__SetRemoteDiscoveryMode(struct soap *soap) { struct __tds__SetRemoteDiscoveryMode *_p = soap_instantiate___tds__SetRemoteDiscoveryMode(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetRemoteDiscoveryMode(soap, _p); } return _p; }

inline struct __tds__SetRemoteDiscoveryMode * soap_new_set___tds__SetRemoteDiscoveryMode(struct soap *soap, _tds__SetRemoteDiscoveryMode *tds__SetRemoteDiscoveryMode) { struct __tds__SetRemoteDiscoveryMode *_p = soap_instantiate___tds__SetRemoteDiscoveryMode(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetRemoteDiscoveryMode(soap, _p); _p->tds__SetRemoteDiscoveryMode = tds__SetRemoteDiscoveryMode; } return _p; }

inline void soap_delete___tds__SetRemoteDiscoveryMode(struct soap *soap, struct __tds__SetRemoteDiscoveryMode *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__SetRemoteDiscoveryMode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetRemoteDiscoveryMode
#define SOAP_TYPE___tds__GetRemoteDiscoveryMode (1593)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetRemoteDiscoveryMode(struct soap*, struct __tds__GetRemoteDiscoveryMode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetRemoteDiscoveryMode(struct soap*, const struct __tds__GetRemoteDiscoveryMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetRemoteDiscoveryMode(struct soap*, const char*, int, const struct __tds__GetRemoteDiscoveryMode *, const char*);
SOAP_FMAC3 struct __tds__GetRemoteDiscoveryMode * SOAP_FMAC4 soap_in___tds__GetRemoteDiscoveryMode(struct soap*, const char*, struct __tds__GetRemoteDiscoveryMode *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetRemoteDiscoveryMode(struct soap*, const struct __tds__GetRemoteDiscoveryMode *, const char*, const char*);

#ifndef soap_write___tds__GetRemoteDiscoveryMode
#define soap_write___tds__GetRemoteDiscoveryMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetRemoteDiscoveryMode(soap, data),0) || soap_put___tds__GetRemoteDiscoveryMode(soap, data, "-tds:GetRemoteDiscoveryMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetRemoteDiscoveryMode * SOAP_FMAC4 soap_get___tds__GetRemoteDiscoveryMode(struct soap*, struct __tds__GetRemoteDiscoveryMode *, const char*, const char*);

#ifndef soap_read___tds__GetRemoteDiscoveryMode
#define soap_read___tds__GetRemoteDiscoveryMode(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetRemoteDiscoveryMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetRemoteDiscoveryMode * SOAP_FMAC2 soap_instantiate___tds__GetRemoteDiscoveryMode(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetRemoteDiscoveryMode * soap_new___tds__GetRemoteDiscoveryMode(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetRemoteDiscoveryMode(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetRemoteDiscoveryMode * soap_new_req___tds__GetRemoteDiscoveryMode(struct soap *soap) { struct __tds__GetRemoteDiscoveryMode *_p = soap_instantiate___tds__GetRemoteDiscoveryMode(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetRemoteDiscoveryMode(soap, _p); } return _p; }

inline struct __tds__GetRemoteDiscoveryMode * soap_new_set___tds__GetRemoteDiscoveryMode(struct soap *soap, _tds__GetRemoteDiscoveryMode *tds__GetRemoteDiscoveryMode) { struct __tds__GetRemoteDiscoveryMode *_p = soap_instantiate___tds__GetRemoteDiscoveryMode(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetRemoteDiscoveryMode(soap, _p); _p->tds__GetRemoteDiscoveryMode = tds__GetRemoteDiscoveryMode; } return _p; }

inline void soap_delete___tds__GetRemoteDiscoveryMode(struct soap *soap, struct __tds__GetRemoteDiscoveryMode *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetRemoteDiscoveryMode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__SetDiscoveryMode
#define SOAP_TYPE___tds__SetDiscoveryMode (1589)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetDiscoveryMode(struct soap*, struct __tds__SetDiscoveryMode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetDiscoveryMode(struct soap*, const struct __tds__SetDiscoveryMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetDiscoveryMode(struct soap*, const char*, int, const struct __tds__SetDiscoveryMode *, const char*);
SOAP_FMAC3 struct __tds__SetDiscoveryMode * SOAP_FMAC4 soap_in___tds__SetDiscoveryMode(struct soap*, const char*, struct __tds__SetDiscoveryMode *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetDiscoveryMode(struct soap*, const struct __tds__SetDiscoveryMode *, const char*, const char*);

#ifndef soap_write___tds__SetDiscoveryMode
#define soap_write___tds__SetDiscoveryMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetDiscoveryMode(soap, data),0) || soap_put___tds__SetDiscoveryMode(soap, data, "-tds:SetDiscoveryMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetDiscoveryMode * SOAP_FMAC4 soap_get___tds__SetDiscoveryMode(struct soap*, struct __tds__SetDiscoveryMode *, const char*, const char*);

#ifndef soap_read___tds__SetDiscoveryMode
#define soap_read___tds__SetDiscoveryMode(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__SetDiscoveryMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__SetDiscoveryMode * SOAP_FMAC2 soap_instantiate___tds__SetDiscoveryMode(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetDiscoveryMode * soap_new___tds__SetDiscoveryMode(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetDiscoveryMode(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetDiscoveryMode * soap_new_req___tds__SetDiscoveryMode(struct soap *soap) { struct __tds__SetDiscoveryMode *_p = soap_instantiate___tds__SetDiscoveryMode(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetDiscoveryMode(soap, _p); } return _p; }

inline struct __tds__SetDiscoveryMode * soap_new_set___tds__SetDiscoveryMode(struct soap *soap, _tds__SetDiscoveryMode *tds__SetDiscoveryMode) { struct __tds__SetDiscoveryMode *_p = soap_instantiate___tds__SetDiscoveryMode(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetDiscoveryMode(soap, _p); _p->tds__SetDiscoveryMode = tds__SetDiscoveryMode; } return _p; }

inline void soap_delete___tds__SetDiscoveryMode(struct soap *soap, struct __tds__SetDiscoveryMode *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__SetDiscoveryMode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetDiscoveryMode
#define SOAP_TYPE___tds__GetDiscoveryMode (1585)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetDiscoveryMode(struct soap*, struct __tds__GetDiscoveryMode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetDiscoveryMode(struct soap*, const struct __tds__GetDiscoveryMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetDiscoveryMode(struct soap*, const char*, int, const struct __tds__GetDiscoveryMode *, const char*);
SOAP_FMAC3 struct __tds__GetDiscoveryMode * SOAP_FMAC4 soap_in___tds__GetDiscoveryMode(struct soap*, const char*, struct __tds__GetDiscoveryMode *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetDiscoveryMode(struct soap*, const struct __tds__GetDiscoveryMode *, const char*, const char*);

#ifndef soap_write___tds__GetDiscoveryMode
#define soap_write___tds__GetDiscoveryMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetDiscoveryMode(soap, data),0) || soap_put___tds__GetDiscoveryMode(soap, data, "-tds:GetDiscoveryMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetDiscoveryMode * SOAP_FMAC4 soap_get___tds__GetDiscoveryMode(struct soap*, struct __tds__GetDiscoveryMode *, const char*, const char*);

#ifndef soap_read___tds__GetDiscoveryMode
#define soap_read___tds__GetDiscoveryMode(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetDiscoveryMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetDiscoveryMode * SOAP_FMAC2 soap_instantiate___tds__GetDiscoveryMode(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetDiscoveryMode * soap_new___tds__GetDiscoveryMode(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetDiscoveryMode(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetDiscoveryMode * soap_new_req___tds__GetDiscoveryMode(struct soap *soap) { struct __tds__GetDiscoveryMode *_p = soap_instantiate___tds__GetDiscoveryMode(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetDiscoveryMode(soap, _p); } return _p; }

inline struct __tds__GetDiscoveryMode * soap_new_set___tds__GetDiscoveryMode(struct soap *soap, _tds__GetDiscoveryMode *tds__GetDiscoveryMode) { struct __tds__GetDiscoveryMode *_p = soap_instantiate___tds__GetDiscoveryMode(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetDiscoveryMode(soap, _p); _p->tds__GetDiscoveryMode = tds__GetDiscoveryMode; } return _p; }

inline void soap_delete___tds__GetDiscoveryMode(struct soap *soap, struct __tds__GetDiscoveryMode *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetDiscoveryMode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__RemoveScopes
#define SOAP_TYPE___tds__RemoveScopes (1581)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__RemoveScopes(struct soap*, struct __tds__RemoveScopes *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__RemoveScopes(struct soap*, const struct __tds__RemoveScopes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__RemoveScopes(struct soap*, const char*, int, const struct __tds__RemoveScopes *, const char*);
SOAP_FMAC3 struct __tds__RemoveScopes * SOAP_FMAC4 soap_in___tds__RemoveScopes(struct soap*, const char*, struct __tds__RemoveScopes *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__RemoveScopes(struct soap*, const struct __tds__RemoveScopes *, const char*, const char*);

#ifndef soap_write___tds__RemoveScopes
#define soap_write___tds__RemoveScopes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__RemoveScopes(soap, data),0) || soap_put___tds__RemoveScopes(soap, data, "-tds:RemoveScopes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__RemoveScopes * SOAP_FMAC4 soap_get___tds__RemoveScopes(struct soap*, struct __tds__RemoveScopes *, const char*, const char*);

#ifndef soap_read___tds__RemoveScopes
#define soap_read___tds__RemoveScopes(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__RemoveScopes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__RemoveScopes * SOAP_FMAC2 soap_instantiate___tds__RemoveScopes(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__RemoveScopes * soap_new___tds__RemoveScopes(struct soap *soap, int n = -1) { return soap_instantiate___tds__RemoveScopes(soap, n, NULL, NULL, NULL); }

inline struct __tds__RemoveScopes * soap_new_req___tds__RemoveScopes(struct soap *soap) { struct __tds__RemoveScopes *_p = soap_instantiate___tds__RemoveScopes(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__RemoveScopes(soap, _p); } return _p; }

inline struct __tds__RemoveScopes * soap_new_set___tds__RemoveScopes(struct soap *soap, _tds__RemoveScopes *tds__RemoveScopes) { struct __tds__RemoveScopes *_p = soap_instantiate___tds__RemoveScopes(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__RemoveScopes(soap, _p); _p->tds__RemoveScopes = tds__RemoveScopes; } return _p; }

inline void soap_delete___tds__RemoveScopes(struct soap *soap, struct __tds__RemoveScopes *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__RemoveScopes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__AddScopes
#define SOAP_TYPE___tds__AddScopes (1577)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__AddScopes(struct soap*, struct __tds__AddScopes *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__AddScopes(struct soap*, const struct __tds__AddScopes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__AddScopes(struct soap*, const char*, int, const struct __tds__AddScopes *, const char*);
SOAP_FMAC3 struct __tds__AddScopes * SOAP_FMAC4 soap_in___tds__AddScopes(struct soap*, const char*, struct __tds__AddScopes *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__AddScopes(struct soap*, const struct __tds__AddScopes *, const char*, const char*);

#ifndef soap_write___tds__AddScopes
#define soap_write___tds__AddScopes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__AddScopes(soap, data),0) || soap_put___tds__AddScopes(soap, data, "-tds:AddScopes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__AddScopes * SOAP_FMAC4 soap_get___tds__AddScopes(struct soap*, struct __tds__AddScopes *, const char*, const char*);

#ifndef soap_read___tds__AddScopes
#define soap_read___tds__AddScopes(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__AddScopes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__AddScopes * SOAP_FMAC2 soap_instantiate___tds__AddScopes(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__AddScopes * soap_new___tds__AddScopes(struct soap *soap, int n = -1) { return soap_instantiate___tds__AddScopes(soap, n, NULL, NULL, NULL); }

inline struct __tds__AddScopes * soap_new_req___tds__AddScopes(struct soap *soap) { struct __tds__AddScopes *_p = soap_instantiate___tds__AddScopes(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__AddScopes(soap, _p); } return _p; }

inline struct __tds__AddScopes * soap_new_set___tds__AddScopes(struct soap *soap, _tds__AddScopes *tds__AddScopes) { struct __tds__AddScopes *_p = soap_instantiate___tds__AddScopes(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__AddScopes(soap, _p); _p->tds__AddScopes = tds__AddScopes; } return _p; }

inline void soap_delete___tds__AddScopes(struct soap *soap, struct __tds__AddScopes *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__AddScopes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__SetScopes
#define SOAP_TYPE___tds__SetScopes (1573)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetScopes(struct soap*, struct __tds__SetScopes *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetScopes(struct soap*, const struct __tds__SetScopes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetScopes(struct soap*, const char*, int, const struct __tds__SetScopes *, const char*);
SOAP_FMAC3 struct __tds__SetScopes * SOAP_FMAC4 soap_in___tds__SetScopes(struct soap*, const char*, struct __tds__SetScopes *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetScopes(struct soap*, const struct __tds__SetScopes *, const char*, const char*);

#ifndef soap_write___tds__SetScopes
#define soap_write___tds__SetScopes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetScopes(soap, data),0) || soap_put___tds__SetScopes(soap, data, "-tds:SetScopes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetScopes * SOAP_FMAC4 soap_get___tds__SetScopes(struct soap*, struct __tds__SetScopes *, const char*, const char*);

#ifndef soap_read___tds__SetScopes
#define soap_read___tds__SetScopes(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__SetScopes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__SetScopes * SOAP_FMAC2 soap_instantiate___tds__SetScopes(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetScopes * soap_new___tds__SetScopes(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetScopes(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetScopes * soap_new_req___tds__SetScopes(struct soap *soap) { struct __tds__SetScopes *_p = soap_instantiate___tds__SetScopes(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetScopes(soap, _p); } return _p; }

inline struct __tds__SetScopes * soap_new_set___tds__SetScopes(struct soap *soap, _tds__SetScopes *tds__SetScopes) { struct __tds__SetScopes *_p = soap_instantiate___tds__SetScopes(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetScopes(soap, _p); _p->tds__SetScopes = tds__SetScopes; } return _p; }

inline void soap_delete___tds__SetScopes(struct soap *soap, struct __tds__SetScopes *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__SetScopes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetScopes
#define SOAP_TYPE___tds__GetScopes (1569)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetScopes(struct soap*, struct __tds__GetScopes *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetScopes(struct soap*, const struct __tds__GetScopes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetScopes(struct soap*, const char*, int, const struct __tds__GetScopes *, const char*);
SOAP_FMAC3 struct __tds__GetScopes * SOAP_FMAC4 soap_in___tds__GetScopes(struct soap*, const char*, struct __tds__GetScopes *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetScopes(struct soap*, const struct __tds__GetScopes *, const char*, const char*);

#ifndef soap_write___tds__GetScopes
#define soap_write___tds__GetScopes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetScopes(soap, data),0) || soap_put___tds__GetScopes(soap, data, "-tds:GetScopes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetScopes * SOAP_FMAC4 soap_get___tds__GetScopes(struct soap*, struct __tds__GetScopes *, const char*, const char*);

#ifndef soap_read___tds__GetScopes
#define soap_read___tds__GetScopes(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetScopes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetScopes * SOAP_FMAC2 soap_instantiate___tds__GetScopes(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetScopes * soap_new___tds__GetScopes(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetScopes(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetScopes * soap_new_req___tds__GetScopes(struct soap *soap) { struct __tds__GetScopes *_p = soap_instantiate___tds__GetScopes(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetScopes(soap, _p); } return _p; }

inline struct __tds__GetScopes * soap_new_set___tds__GetScopes(struct soap *soap, _tds__GetScopes *tds__GetScopes) { struct __tds__GetScopes *_p = soap_instantiate___tds__GetScopes(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetScopes(soap, _p); _p->tds__GetScopes = tds__GetScopes; } return _p; }

inline void soap_delete___tds__GetScopes(struct soap *soap, struct __tds__GetScopes *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetScopes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetSystemSupportInformation
#define SOAP_TYPE___tds__GetSystemSupportInformation (1565)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetSystemSupportInformation(struct soap*, struct __tds__GetSystemSupportInformation *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetSystemSupportInformation(struct soap*, const struct __tds__GetSystemSupportInformation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetSystemSupportInformation(struct soap*, const char*, int, const struct __tds__GetSystemSupportInformation *, const char*);
SOAP_FMAC3 struct __tds__GetSystemSupportInformation * SOAP_FMAC4 soap_in___tds__GetSystemSupportInformation(struct soap*, const char*, struct __tds__GetSystemSupportInformation *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetSystemSupportInformation(struct soap*, const struct __tds__GetSystemSupportInformation *, const char*, const char*);

#ifndef soap_write___tds__GetSystemSupportInformation
#define soap_write___tds__GetSystemSupportInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetSystemSupportInformation(soap, data),0) || soap_put___tds__GetSystemSupportInformation(soap, data, "-tds:GetSystemSupportInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetSystemSupportInformation * SOAP_FMAC4 soap_get___tds__GetSystemSupportInformation(struct soap*, struct __tds__GetSystemSupportInformation *, const char*, const char*);

#ifndef soap_read___tds__GetSystemSupportInformation
#define soap_read___tds__GetSystemSupportInformation(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetSystemSupportInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetSystemSupportInformation * SOAP_FMAC2 soap_instantiate___tds__GetSystemSupportInformation(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetSystemSupportInformation * soap_new___tds__GetSystemSupportInformation(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetSystemSupportInformation(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetSystemSupportInformation * soap_new_req___tds__GetSystemSupportInformation(struct soap *soap) { struct __tds__GetSystemSupportInformation *_p = soap_instantiate___tds__GetSystemSupportInformation(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetSystemSupportInformation(soap, _p); } return _p; }

inline struct __tds__GetSystemSupportInformation * soap_new_set___tds__GetSystemSupportInformation(struct soap *soap, _tds__GetSystemSupportInformation *tds__GetSystemSupportInformation) { struct __tds__GetSystemSupportInformation *_p = soap_instantiate___tds__GetSystemSupportInformation(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetSystemSupportInformation(soap, _p); _p->tds__GetSystemSupportInformation = tds__GetSystemSupportInformation; } return _p; }

inline void soap_delete___tds__GetSystemSupportInformation(struct soap *soap, struct __tds__GetSystemSupportInformation *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetSystemSupportInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetSystemLog
#define SOAP_TYPE___tds__GetSystemLog (1561)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetSystemLog(struct soap*, struct __tds__GetSystemLog *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetSystemLog(struct soap*, const struct __tds__GetSystemLog *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetSystemLog(struct soap*, const char*, int, const struct __tds__GetSystemLog *, const char*);
SOAP_FMAC3 struct __tds__GetSystemLog * SOAP_FMAC4 soap_in___tds__GetSystemLog(struct soap*, const char*, struct __tds__GetSystemLog *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetSystemLog(struct soap*, const struct __tds__GetSystemLog *, const char*, const char*);

#ifndef soap_write___tds__GetSystemLog
#define soap_write___tds__GetSystemLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetSystemLog(soap, data),0) || soap_put___tds__GetSystemLog(soap, data, "-tds:GetSystemLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetSystemLog * SOAP_FMAC4 soap_get___tds__GetSystemLog(struct soap*, struct __tds__GetSystemLog *, const char*, const char*);

#ifndef soap_read___tds__GetSystemLog
#define soap_read___tds__GetSystemLog(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetSystemLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetSystemLog * SOAP_FMAC2 soap_instantiate___tds__GetSystemLog(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetSystemLog * soap_new___tds__GetSystemLog(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetSystemLog(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetSystemLog * soap_new_req___tds__GetSystemLog(struct soap *soap) { struct __tds__GetSystemLog *_p = soap_instantiate___tds__GetSystemLog(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetSystemLog(soap, _p); } return _p; }

inline struct __tds__GetSystemLog * soap_new_set___tds__GetSystemLog(struct soap *soap, _tds__GetSystemLog *tds__GetSystemLog) { struct __tds__GetSystemLog *_p = soap_instantiate___tds__GetSystemLog(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetSystemLog(soap, _p); _p->tds__GetSystemLog = tds__GetSystemLog; } return _p; }

inline void soap_delete___tds__GetSystemLog(struct soap *soap, struct __tds__GetSystemLog *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetSystemLog(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetSystemBackup
#define SOAP_TYPE___tds__GetSystemBackup (1557)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetSystemBackup(struct soap*, struct __tds__GetSystemBackup *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetSystemBackup(struct soap*, const struct __tds__GetSystemBackup *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetSystemBackup(struct soap*, const char*, int, const struct __tds__GetSystemBackup *, const char*);
SOAP_FMAC3 struct __tds__GetSystemBackup * SOAP_FMAC4 soap_in___tds__GetSystemBackup(struct soap*, const char*, struct __tds__GetSystemBackup *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetSystemBackup(struct soap*, const struct __tds__GetSystemBackup *, const char*, const char*);

#ifndef soap_write___tds__GetSystemBackup
#define soap_write___tds__GetSystemBackup(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetSystemBackup(soap, data),0) || soap_put___tds__GetSystemBackup(soap, data, "-tds:GetSystemBackup", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetSystemBackup * SOAP_FMAC4 soap_get___tds__GetSystemBackup(struct soap*, struct __tds__GetSystemBackup *, const char*, const char*);

#ifndef soap_read___tds__GetSystemBackup
#define soap_read___tds__GetSystemBackup(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetSystemBackup(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetSystemBackup * SOAP_FMAC2 soap_instantiate___tds__GetSystemBackup(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetSystemBackup * soap_new___tds__GetSystemBackup(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetSystemBackup(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetSystemBackup * soap_new_req___tds__GetSystemBackup(struct soap *soap) { struct __tds__GetSystemBackup *_p = soap_instantiate___tds__GetSystemBackup(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetSystemBackup(soap, _p); } return _p; }

inline struct __tds__GetSystemBackup * soap_new_set___tds__GetSystemBackup(struct soap *soap, _tds__GetSystemBackup *tds__GetSystemBackup) { struct __tds__GetSystemBackup *_p = soap_instantiate___tds__GetSystemBackup(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetSystemBackup(soap, _p); _p->tds__GetSystemBackup = tds__GetSystemBackup; } return _p; }

inline void soap_delete___tds__GetSystemBackup(struct soap *soap, struct __tds__GetSystemBackup *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetSystemBackup(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__RestoreSystem
#define SOAP_TYPE___tds__RestoreSystem (1553)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__RestoreSystem(struct soap*, struct __tds__RestoreSystem *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__RestoreSystem(struct soap*, const struct __tds__RestoreSystem *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__RestoreSystem(struct soap*, const char*, int, const struct __tds__RestoreSystem *, const char*);
SOAP_FMAC3 struct __tds__RestoreSystem * SOAP_FMAC4 soap_in___tds__RestoreSystem(struct soap*, const char*, struct __tds__RestoreSystem *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__RestoreSystem(struct soap*, const struct __tds__RestoreSystem *, const char*, const char*);

#ifndef soap_write___tds__RestoreSystem
#define soap_write___tds__RestoreSystem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__RestoreSystem(soap, data),0) || soap_put___tds__RestoreSystem(soap, data, "-tds:RestoreSystem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__RestoreSystem * SOAP_FMAC4 soap_get___tds__RestoreSystem(struct soap*, struct __tds__RestoreSystem *, const char*, const char*);

#ifndef soap_read___tds__RestoreSystem
#define soap_read___tds__RestoreSystem(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__RestoreSystem(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__RestoreSystem * SOAP_FMAC2 soap_instantiate___tds__RestoreSystem(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__RestoreSystem * soap_new___tds__RestoreSystem(struct soap *soap, int n = -1) { return soap_instantiate___tds__RestoreSystem(soap, n, NULL, NULL, NULL); }

inline struct __tds__RestoreSystem * soap_new_req___tds__RestoreSystem(struct soap *soap) { struct __tds__RestoreSystem *_p = soap_instantiate___tds__RestoreSystem(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__RestoreSystem(soap, _p); } return _p; }

inline struct __tds__RestoreSystem * soap_new_set___tds__RestoreSystem(struct soap *soap, _tds__RestoreSystem *tds__RestoreSystem) { struct __tds__RestoreSystem *_p = soap_instantiate___tds__RestoreSystem(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__RestoreSystem(soap, _p); _p->tds__RestoreSystem = tds__RestoreSystem; } return _p; }

inline void soap_delete___tds__RestoreSystem(struct soap *soap, struct __tds__RestoreSystem *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__RestoreSystem(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__SystemReboot
#define SOAP_TYPE___tds__SystemReboot (1549)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SystemReboot(struct soap*, struct __tds__SystemReboot *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SystemReboot(struct soap*, const struct __tds__SystemReboot *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SystemReboot(struct soap*, const char*, int, const struct __tds__SystemReboot *, const char*);
SOAP_FMAC3 struct __tds__SystemReboot * SOAP_FMAC4 soap_in___tds__SystemReboot(struct soap*, const char*, struct __tds__SystemReboot *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SystemReboot(struct soap*, const struct __tds__SystemReboot *, const char*, const char*);

#ifndef soap_write___tds__SystemReboot
#define soap_write___tds__SystemReboot(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SystemReboot(soap, data),0) || soap_put___tds__SystemReboot(soap, data, "-tds:SystemReboot", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SystemReboot * SOAP_FMAC4 soap_get___tds__SystemReboot(struct soap*, struct __tds__SystemReboot *, const char*, const char*);

#ifndef soap_read___tds__SystemReboot
#define soap_read___tds__SystemReboot(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__SystemReboot(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__SystemReboot * SOAP_FMAC2 soap_instantiate___tds__SystemReboot(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SystemReboot * soap_new___tds__SystemReboot(struct soap *soap, int n = -1) { return soap_instantiate___tds__SystemReboot(soap, n, NULL, NULL, NULL); }

inline struct __tds__SystemReboot * soap_new_req___tds__SystemReboot(struct soap *soap) { struct __tds__SystemReboot *_p = soap_instantiate___tds__SystemReboot(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SystemReboot(soap, _p); } return _p; }

inline struct __tds__SystemReboot * soap_new_set___tds__SystemReboot(struct soap *soap, _tds__SystemReboot *tds__SystemReboot) { struct __tds__SystemReboot *_p = soap_instantiate___tds__SystemReboot(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SystemReboot(soap, _p); _p->tds__SystemReboot = tds__SystemReboot; } return _p; }

inline void soap_delete___tds__SystemReboot(struct soap *soap, struct __tds__SystemReboot *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__SystemReboot(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__UpgradeSystemFirmware
#define SOAP_TYPE___tds__UpgradeSystemFirmware (1545)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__UpgradeSystemFirmware(struct soap*, struct __tds__UpgradeSystemFirmware *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__UpgradeSystemFirmware(struct soap*, const struct __tds__UpgradeSystemFirmware *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__UpgradeSystemFirmware(struct soap*, const char*, int, const struct __tds__UpgradeSystemFirmware *, const char*);
SOAP_FMAC3 struct __tds__UpgradeSystemFirmware * SOAP_FMAC4 soap_in___tds__UpgradeSystemFirmware(struct soap*, const char*, struct __tds__UpgradeSystemFirmware *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__UpgradeSystemFirmware(struct soap*, const struct __tds__UpgradeSystemFirmware *, const char*, const char*);

#ifndef soap_write___tds__UpgradeSystemFirmware
#define soap_write___tds__UpgradeSystemFirmware(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__UpgradeSystemFirmware(soap, data),0) || soap_put___tds__UpgradeSystemFirmware(soap, data, "-tds:UpgradeSystemFirmware", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__UpgradeSystemFirmware * SOAP_FMAC4 soap_get___tds__UpgradeSystemFirmware(struct soap*, struct __tds__UpgradeSystemFirmware *, const char*, const char*);

#ifndef soap_read___tds__UpgradeSystemFirmware
#define soap_read___tds__UpgradeSystemFirmware(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__UpgradeSystemFirmware(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__UpgradeSystemFirmware * SOAP_FMAC2 soap_instantiate___tds__UpgradeSystemFirmware(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__UpgradeSystemFirmware * soap_new___tds__UpgradeSystemFirmware(struct soap *soap, int n = -1) { return soap_instantiate___tds__UpgradeSystemFirmware(soap, n, NULL, NULL, NULL); }

inline struct __tds__UpgradeSystemFirmware * soap_new_req___tds__UpgradeSystemFirmware(struct soap *soap) { struct __tds__UpgradeSystemFirmware *_p = soap_instantiate___tds__UpgradeSystemFirmware(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__UpgradeSystemFirmware(soap, _p); } return _p; }

inline struct __tds__UpgradeSystemFirmware * soap_new_set___tds__UpgradeSystemFirmware(struct soap *soap, _tds__UpgradeSystemFirmware *tds__UpgradeSystemFirmware) { struct __tds__UpgradeSystemFirmware *_p = soap_instantiate___tds__UpgradeSystemFirmware(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__UpgradeSystemFirmware(soap, _p); _p->tds__UpgradeSystemFirmware = tds__UpgradeSystemFirmware; } return _p; }

inline void soap_delete___tds__UpgradeSystemFirmware(struct soap *soap, struct __tds__UpgradeSystemFirmware *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__UpgradeSystemFirmware(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__SetSystemFactoryDefault
#define SOAP_TYPE___tds__SetSystemFactoryDefault (1541)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetSystemFactoryDefault(struct soap*, struct __tds__SetSystemFactoryDefault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetSystemFactoryDefault(struct soap*, const struct __tds__SetSystemFactoryDefault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetSystemFactoryDefault(struct soap*, const char*, int, const struct __tds__SetSystemFactoryDefault *, const char*);
SOAP_FMAC3 struct __tds__SetSystemFactoryDefault * SOAP_FMAC4 soap_in___tds__SetSystemFactoryDefault(struct soap*, const char*, struct __tds__SetSystemFactoryDefault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetSystemFactoryDefault(struct soap*, const struct __tds__SetSystemFactoryDefault *, const char*, const char*);

#ifndef soap_write___tds__SetSystemFactoryDefault
#define soap_write___tds__SetSystemFactoryDefault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetSystemFactoryDefault(soap, data),0) || soap_put___tds__SetSystemFactoryDefault(soap, data, "-tds:SetSystemFactoryDefault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetSystemFactoryDefault * SOAP_FMAC4 soap_get___tds__SetSystemFactoryDefault(struct soap*, struct __tds__SetSystemFactoryDefault *, const char*, const char*);

#ifndef soap_read___tds__SetSystemFactoryDefault
#define soap_read___tds__SetSystemFactoryDefault(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__SetSystemFactoryDefault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__SetSystemFactoryDefault * SOAP_FMAC2 soap_instantiate___tds__SetSystemFactoryDefault(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetSystemFactoryDefault * soap_new___tds__SetSystemFactoryDefault(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetSystemFactoryDefault(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetSystemFactoryDefault * soap_new_req___tds__SetSystemFactoryDefault(struct soap *soap) { struct __tds__SetSystemFactoryDefault *_p = soap_instantiate___tds__SetSystemFactoryDefault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetSystemFactoryDefault(soap, _p); } return _p; }

inline struct __tds__SetSystemFactoryDefault * soap_new_set___tds__SetSystemFactoryDefault(struct soap *soap, _tds__SetSystemFactoryDefault *tds__SetSystemFactoryDefault) { struct __tds__SetSystemFactoryDefault *_p = soap_instantiate___tds__SetSystemFactoryDefault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetSystemFactoryDefault(soap, _p); _p->tds__SetSystemFactoryDefault = tds__SetSystemFactoryDefault; } return _p; }

inline void soap_delete___tds__SetSystemFactoryDefault(struct soap *soap, struct __tds__SetSystemFactoryDefault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__SetSystemFactoryDefault(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetSystemDateAndTime
#define SOAP_TYPE___tds__GetSystemDateAndTime (1537)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetSystemDateAndTime(struct soap*, struct __tds__GetSystemDateAndTime *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetSystemDateAndTime(struct soap*, const struct __tds__GetSystemDateAndTime *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetSystemDateAndTime(struct soap*, const char*, int, const struct __tds__GetSystemDateAndTime *, const char*);
SOAP_FMAC3 struct __tds__GetSystemDateAndTime * SOAP_FMAC4 soap_in___tds__GetSystemDateAndTime(struct soap*, const char*, struct __tds__GetSystemDateAndTime *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetSystemDateAndTime(struct soap*, const struct __tds__GetSystemDateAndTime *, const char*, const char*);

#ifndef soap_write___tds__GetSystemDateAndTime
#define soap_write___tds__GetSystemDateAndTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetSystemDateAndTime(soap, data),0) || soap_put___tds__GetSystemDateAndTime(soap, data, "-tds:GetSystemDateAndTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetSystemDateAndTime * SOAP_FMAC4 soap_get___tds__GetSystemDateAndTime(struct soap*, struct __tds__GetSystemDateAndTime *, const char*, const char*);

#ifndef soap_read___tds__GetSystemDateAndTime
#define soap_read___tds__GetSystemDateAndTime(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetSystemDateAndTime(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetSystemDateAndTime * SOAP_FMAC2 soap_instantiate___tds__GetSystemDateAndTime(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetSystemDateAndTime * soap_new___tds__GetSystemDateAndTime(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetSystemDateAndTime(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetSystemDateAndTime * soap_new_req___tds__GetSystemDateAndTime(struct soap *soap) { struct __tds__GetSystemDateAndTime *_p = soap_instantiate___tds__GetSystemDateAndTime(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetSystemDateAndTime(soap, _p); } return _p; }

inline struct __tds__GetSystemDateAndTime * soap_new_set___tds__GetSystemDateAndTime(struct soap *soap, _tds__GetSystemDateAndTime *tds__GetSystemDateAndTime) { struct __tds__GetSystemDateAndTime *_p = soap_instantiate___tds__GetSystemDateAndTime(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetSystemDateAndTime(soap, _p); _p->tds__GetSystemDateAndTime = tds__GetSystemDateAndTime; } return _p; }

inline void soap_delete___tds__GetSystemDateAndTime(struct soap *soap, struct __tds__GetSystemDateAndTime *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetSystemDateAndTime(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__SetSystemDateAndTime
#define SOAP_TYPE___tds__SetSystemDateAndTime (1533)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetSystemDateAndTime(struct soap*, struct __tds__SetSystemDateAndTime *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetSystemDateAndTime(struct soap*, const struct __tds__SetSystemDateAndTime *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetSystemDateAndTime(struct soap*, const char*, int, const struct __tds__SetSystemDateAndTime *, const char*);
SOAP_FMAC3 struct __tds__SetSystemDateAndTime * SOAP_FMAC4 soap_in___tds__SetSystemDateAndTime(struct soap*, const char*, struct __tds__SetSystemDateAndTime *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetSystemDateAndTime(struct soap*, const struct __tds__SetSystemDateAndTime *, const char*, const char*);

#ifndef soap_write___tds__SetSystemDateAndTime
#define soap_write___tds__SetSystemDateAndTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetSystemDateAndTime(soap, data),0) || soap_put___tds__SetSystemDateAndTime(soap, data, "-tds:SetSystemDateAndTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetSystemDateAndTime * SOAP_FMAC4 soap_get___tds__SetSystemDateAndTime(struct soap*, struct __tds__SetSystemDateAndTime *, const char*, const char*);

#ifndef soap_read___tds__SetSystemDateAndTime
#define soap_read___tds__SetSystemDateAndTime(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__SetSystemDateAndTime(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__SetSystemDateAndTime * SOAP_FMAC2 soap_instantiate___tds__SetSystemDateAndTime(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetSystemDateAndTime * soap_new___tds__SetSystemDateAndTime(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetSystemDateAndTime(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetSystemDateAndTime * soap_new_req___tds__SetSystemDateAndTime(struct soap *soap) { struct __tds__SetSystemDateAndTime *_p = soap_instantiate___tds__SetSystemDateAndTime(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetSystemDateAndTime(soap, _p); } return _p; }

inline struct __tds__SetSystemDateAndTime * soap_new_set___tds__SetSystemDateAndTime(struct soap *soap, _tds__SetSystemDateAndTime *tds__SetSystemDateAndTime) { struct __tds__SetSystemDateAndTime *_p = soap_instantiate___tds__SetSystemDateAndTime(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__SetSystemDateAndTime(soap, _p); _p->tds__SetSystemDateAndTime = tds__SetSystemDateAndTime; } return _p; }

inline void soap_delete___tds__SetSystemDateAndTime(struct soap *soap, struct __tds__SetSystemDateAndTime *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__SetSystemDateAndTime(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetDeviceInformation
#define SOAP_TYPE___tds__GetDeviceInformation (1529)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetDeviceInformation(struct soap*, struct __tds__GetDeviceInformation *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetDeviceInformation(struct soap*, const struct __tds__GetDeviceInformation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetDeviceInformation(struct soap*, const char*, int, const struct __tds__GetDeviceInformation *, const char*);
SOAP_FMAC3 struct __tds__GetDeviceInformation * SOAP_FMAC4 soap_in___tds__GetDeviceInformation(struct soap*, const char*, struct __tds__GetDeviceInformation *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetDeviceInformation(struct soap*, const struct __tds__GetDeviceInformation *, const char*, const char*);

#ifndef soap_write___tds__GetDeviceInformation
#define soap_write___tds__GetDeviceInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetDeviceInformation(soap, data),0) || soap_put___tds__GetDeviceInformation(soap, data, "-tds:GetDeviceInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetDeviceInformation * SOAP_FMAC4 soap_get___tds__GetDeviceInformation(struct soap*, struct __tds__GetDeviceInformation *, const char*, const char*);

#ifndef soap_read___tds__GetDeviceInformation
#define soap_read___tds__GetDeviceInformation(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetDeviceInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetDeviceInformation * SOAP_FMAC2 soap_instantiate___tds__GetDeviceInformation(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetDeviceInformation * soap_new___tds__GetDeviceInformation(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetDeviceInformation(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetDeviceInformation * soap_new_req___tds__GetDeviceInformation(struct soap *soap) { struct __tds__GetDeviceInformation *_p = soap_instantiate___tds__GetDeviceInformation(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetDeviceInformation(soap, _p); } return _p; }

inline struct __tds__GetDeviceInformation * soap_new_set___tds__GetDeviceInformation(struct soap *soap, _tds__GetDeviceInformation *tds__GetDeviceInformation) { struct __tds__GetDeviceInformation *_p = soap_instantiate___tds__GetDeviceInformation(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetDeviceInformation(soap, _p); _p->tds__GetDeviceInformation = tds__GetDeviceInformation; } return _p; }

inline void soap_delete___tds__GetDeviceInformation(struct soap *soap, struct __tds__GetDeviceInformation *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetDeviceInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetServiceCapabilities
#define SOAP_TYPE___tds__GetServiceCapabilities (1525)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetServiceCapabilities(struct soap*, struct __tds__GetServiceCapabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetServiceCapabilities(struct soap*, const struct __tds__GetServiceCapabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetServiceCapabilities(struct soap*, const char*, int, const struct __tds__GetServiceCapabilities *, const char*);
SOAP_FMAC3 struct __tds__GetServiceCapabilities * SOAP_FMAC4 soap_in___tds__GetServiceCapabilities(struct soap*, const char*, struct __tds__GetServiceCapabilities *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetServiceCapabilities(struct soap*, const struct __tds__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_write___tds__GetServiceCapabilities
#define soap_write___tds__GetServiceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetServiceCapabilities(soap, data),0) || soap_put___tds__GetServiceCapabilities(soap, data, "-tds:GetServiceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetServiceCapabilities * SOAP_FMAC4 soap_get___tds__GetServiceCapabilities(struct soap*, struct __tds__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_read___tds__GetServiceCapabilities
#define soap_read___tds__GetServiceCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetServiceCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetServiceCapabilities * SOAP_FMAC2 soap_instantiate___tds__GetServiceCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetServiceCapabilities * soap_new___tds__GetServiceCapabilities(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetServiceCapabilities(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetServiceCapabilities * soap_new_req___tds__GetServiceCapabilities(struct soap *soap) { struct __tds__GetServiceCapabilities *_p = soap_instantiate___tds__GetServiceCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetServiceCapabilities(soap, _p); } return _p; }

inline struct __tds__GetServiceCapabilities * soap_new_set___tds__GetServiceCapabilities(struct soap *soap, _tds__GetServiceCapabilities *tds__GetServiceCapabilities) { struct __tds__GetServiceCapabilities *_p = soap_instantiate___tds__GetServiceCapabilities(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetServiceCapabilities(soap, _p); _p->tds__GetServiceCapabilities = tds__GetServiceCapabilities; } return _p; }

inline void soap_delete___tds__GetServiceCapabilities(struct soap *soap, struct __tds__GetServiceCapabilities *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetServiceCapabilities(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___tds__GetServices
#define SOAP_TYPE___tds__GetServices (1521)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetServices(struct soap*, struct __tds__GetServices *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetServices(struct soap*, const struct __tds__GetServices *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetServices(struct soap*, const char*, int, const struct __tds__GetServices *, const char*);
SOAP_FMAC3 struct __tds__GetServices * SOAP_FMAC4 soap_in___tds__GetServices(struct soap*, const char*, struct __tds__GetServices *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetServices(struct soap*, const struct __tds__GetServices *, const char*, const char*);

#ifndef soap_write___tds__GetServices
#define soap_write___tds__GetServices(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetServices(soap, data),0) || soap_put___tds__GetServices(soap, data, "-tds:GetServices", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetServices * SOAP_FMAC4 soap_get___tds__GetServices(struct soap*, struct __tds__GetServices *, const char*, const char*);

#ifndef soap_read___tds__GetServices
#define soap_read___tds__GetServices(soap, data) ( soap_begin_recv(soap) || !soap_get___tds__GetServices(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __tds__GetServices * SOAP_FMAC2 soap_instantiate___tds__GetServices(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetServices * soap_new___tds__GetServices(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetServices(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetServices * soap_new_req___tds__GetServices(struct soap *soap) { struct __tds__GetServices *_p = soap_instantiate___tds__GetServices(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetServices(soap, _p); } return _p; }

inline struct __tds__GetServices * soap_new_set___tds__GetServices(struct soap *soap, _tds__GetServices *tds__GetServices) { struct __tds__GetServices *_p = soap_instantiate___tds__GetServices(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___tds__GetServices(soap, _p); _p->tds__GetServices = tds__GetServices; } return _p; }

inline void soap_delete___tds__GetServices(struct soap *soap, struct __tds__GetServices *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___tds__GetServices(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_SOAP_ENV__Envelope
#define SOAP_TYPE_SOAP_ENV__Envelope (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Envelope(struct soap*, struct SOAP_ENV__Envelope *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Envelope(struct soap*, const struct SOAP_ENV__Envelope *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Envelope(struct soap*, const char*, int, const struct SOAP_ENV__Envelope *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Envelope * SOAP_FMAC4 soap_in_SOAP_ENV__Envelope(struct soap*, const char*, struct SOAP_ENV__Envelope *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Envelope(struct soap*, const struct SOAP_ENV__Envelope *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Envelope
#define soap_write_SOAP_ENV__Envelope(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Envelope(soap, data),0) || soap_put_SOAP_ENV__Envelope(soap, data, "SOAP-ENV:Envelope", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Envelope * SOAP_FMAC4 soap_get_SOAP_ENV__Envelope(struct soap*, struct SOAP_ENV__Envelope *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Envelope
#define soap_read_SOAP_ENV__Envelope(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Envelope(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Envelope * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Envelope(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Envelope * soap_new_SOAP_ENV__Envelope(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Envelope(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Envelope * soap_new_req_SOAP_ENV__Envelope(struct soap *soap) { struct SOAP_ENV__Envelope *_p = soap_instantiate_SOAP_ENV__Envelope(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Envelope(soap, _p); } return _p; }

inline struct SOAP_ENV__Envelope * soap_new_set_SOAP_ENV__Envelope(struct soap *soap, struct SOAP_ENV__Header *SOAP_ENV__Header, char *SOAP_ENV__Body) { struct SOAP_ENV__Envelope *_p = soap_instantiate_SOAP_ENV__Envelope(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Envelope(soap, _p); _p->SOAP_ENV__Header = SOAP_ENV__Header; _p->SOAP_ENV__Body = SOAP_ENV__Body; } return _p; }

inline void soap_delete_SOAP_ENV__Envelope(struct soap *soap, struct SOAP_ENV__Envelope *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Envelope(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data),0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data),0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data),0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data),0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data),0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); _p->wsa5__MessageID = wsa5__MessageID; _p->wsa5__RelatesTo = wsa5__RelatesTo; _p->wsa5__From = wsa5__From; _p->wsa5__ReplyTo = wsa5__ReplyTo; _p->wsa5__FaultTo = wsa5__FaultTo; _p->wsa5__To = wsa5__To; _p->wsa5__Action = wsa5__Action; _p->chan__ChannelInstance = chan__ChannelInstance; } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_chan__ChannelInstanceType
#define SOAP_TYPE_chan__ChannelInstanceType (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_chan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_chan__ChannelInstanceType(struct soap*, const struct chan__ChannelInstanceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_chan__ChannelInstanceType(struct soap*, const char*, int, const struct chan__ChannelInstanceType *, const char*);
SOAP_FMAC3 struct chan__ChannelInstanceType * SOAP_FMAC4 soap_in_chan__ChannelInstanceType(struct soap*, const char*, struct chan__ChannelInstanceType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_chan__ChannelInstanceType(struct soap*, const struct chan__ChannelInstanceType *, const char*, const char*);

#ifndef soap_write_chan__ChannelInstanceType
#define soap_write_chan__ChannelInstanceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_chan__ChannelInstanceType(soap, data),0) || soap_put_chan__ChannelInstanceType(soap, data, "chan:ChannelInstanceType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct chan__ChannelInstanceType * SOAP_FMAC4 soap_get_chan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *, const char*, const char*);

#ifndef soap_read_chan__ChannelInstanceType
#define soap_read_chan__ChannelInstanceType(soap, data) ( soap_begin_recv(soap) || !soap_get_chan__ChannelInstanceType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct chan__ChannelInstanceType * SOAP_FMAC2 soap_instantiate_chan__ChannelInstanceType(struct soap*, int, const char*, const char*, size_t*);

inline struct chan__ChannelInstanceType * soap_new_chan__ChannelInstanceType(struct soap *soap, int n = -1) { return soap_instantiate_chan__ChannelInstanceType(soap, n, NULL, NULL, NULL); }

inline struct chan__ChannelInstanceType * soap_new_req_chan__ChannelInstanceType(struct soap *soap, int __item) { struct chan__ChannelInstanceType *_p = soap_instantiate_chan__ChannelInstanceType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_chan__ChannelInstanceType(soap, _p); _p->__item = __item; } return _p; }

inline struct chan__ChannelInstanceType * soap_new_set_chan__ChannelInstanceType(struct soap *soap, int __item, enum _wsa5__IsReferenceParameter wsa5__IsReferenceParameter) { struct chan__ChannelInstanceType *_p = soap_instantiate_chan__ChannelInstanceType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_chan__ChannelInstanceType(soap, _p); _p->__item = __item; _p->wsa5__IsReferenceParameter = wsa5__IsReferenceParameter; } return _p; }

inline void soap_delete_chan__ChannelInstanceType(struct soap *soap, struct chan__ChannelInstanceType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_chan__ChannelInstanceType(struct soap*, int, int, void*, size_t, const void*, size_t);

/* _wsa5__ProblemAction is a typedef element/attribute synonym for wsa5__ProblemActionType */

#ifndef SOAP_TYPE__wsa5__ProblemAction
#define SOAP_TYPE__wsa5__ProblemAction (39)
#endif

#define soap_default__wsa5__ProblemAction(soap, a) soap_default_wsa5__ProblemActionType(soap, a)


#define soap_serialize__wsa5__ProblemAction soap_serialize_wsa5__ProblemActionType


#define soap_out__wsa5__ProblemAction soap_out_wsa5__ProblemActionType


#define soap_in__wsa5__ProblemAction soap_in_wsa5__ProblemActionType


#define soap_put__wsa5__ProblemAction soap_put_wsa5__ProblemActionType


#define soap_get__wsa5__ProblemAction soap_get_wsa5__ProblemActionType


#define soap_instantiate__wsa5__ProblemAction soap_instantiate_wsa5__ProblemActionType


#define soap_copy__wsa5__ProblemAction soap_copy_wsa5__ProblemActionType

/* _wsa5__FaultTo is a typedef element/attribute synonym for wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__FaultTo
#define SOAP_TYPE__wsa5__FaultTo (32)
#endif

#define soap_default__wsa5__FaultTo(soap, a) soap_default_wsa5__EndpointReferenceType(soap, a)


#define soap_serialize__wsa5__FaultTo soap_serialize_wsa5__EndpointReferenceType


#define soap_out__wsa5__FaultTo soap_out_wsa5__EndpointReferenceType


#define soap_in__wsa5__FaultTo soap_in_wsa5__EndpointReferenceType


#define soap_put__wsa5__FaultTo soap_put_wsa5__EndpointReferenceType


#define soap_get__wsa5__FaultTo soap_get_wsa5__EndpointReferenceType


#define soap_instantiate__wsa5__FaultTo soap_instantiate_wsa5__EndpointReferenceType


#define soap_copy__wsa5__FaultTo soap_copy_wsa5__EndpointReferenceType

/* _wsa5__From is a typedef element/attribute synonym for wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__From
#define SOAP_TYPE__wsa5__From (31)
#endif

#define soap_default__wsa5__From(soap, a) soap_default_wsa5__EndpointReferenceType(soap, a)


#define soap_serialize__wsa5__From soap_serialize_wsa5__EndpointReferenceType


#define soap_out__wsa5__From soap_out_wsa5__EndpointReferenceType


#define soap_in__wsa5__From soap_in_wsa5__EndpointReferenceType


#define soap_put__wsa5__From soap_put_wsa5__EndpointReferenceType


#define soap_get__wsa5__From soap_get_wsa5__EndpointReferenceType


#define soap_instantiate__wsa5__From soap_instantiate_wsa5__EndpointReferenceType


#define soap_copy__wsa5__From soap_copy_wsa5__EndpointReferenceType

/* _wsa5__ReplyTo is a typedef element/attribute synonym for wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__ReplyTo
#define SOAP_TYPE__wsa5__ReplyTo (30)
#endif

#define soap_default__wsa5__ReplyTo(soap, a) soap_default_wsa5__EndpointReferenceType(soap, a)


#define soap_serialize__wsa5__ReplyTo soap_serialize_wsa5__EndpointReferenceType


#define soap_out__wsa5__ReplyTo soap_out_wsa5__EndpointReferenceType


#define soap_in__wsa5__ReplyTo soap_in_wsa5__EndpointReferenceType


#define soap_put__wsa5__ReplyTo soap_put_wsa5__EndpointReferenceType


#define soap_get__wsa5__ReplyTo soap_get_wsa5__EndpointReferenceType


#define soap_instantiate__wsa5__ReplyTo soap_instantiate_wsa5__EndpointReferenceType


#define soap_copy__wsa5__ReplyTo soap_copy_wsa5__EndpointReferenceType

/* _wsa5__RelatesTo is a typedef element/attribute synonym for wsa5__RelatesToType */

#ifndef SOAP_TYPE__wsa5__RelatesTo
#define SOAP_TYPE__wsa5__RelatesTo (29)
#endif

#define soap_default__wsa5__RelatesTo(soap, a) soap_default_wsa5__RelatesToType(soap, a)


#define soap_serialize__wsa5__RelatesTo soap_serialize_wsa5__RelatesToType


#define soap_out__wsa5__RelatesTo soap_out_wsa5__RelatesToType


#define soap_in__wsa5__RelatesTo soap_in_wsa5__RelatesToType


#define soap_put__wsa5__RelatesTo soap_put_wsa5__RelatesToType


#define soap_get__wsa5__RelatesTo soap_get_wsa5__RelatesToType


#define soap_instantiate__wsa5__RelatesTo soap_instantiate_wsa5__RelatesToType


#define soap_copy__wsa5__RelatesTo soap_copy_wsa5__RelatesToType

/* _wsa5__Metadata is a typedef element/attribute synonym for wsa5__MetadataType */

#ifndef SOAP_TYPE__wsa5__Metadata
#define SOAP_TYPE__wsa5__Metadata (27)
#endif

#define soap_default__wsa5__Metadata(soap, a) soap_default_wsa5__MetadataType(soap, a)


#define soap_serialize__wsa5__Metadata soap_serialize_wsa5__MetadataType


#define soap_out__wsa5__Metadata soap_out_wsa5__MetadataType


#define soap_in__wsa5__Metadata soap_in_wsa5__MetadataType


#define soap_put__wsa5__Metadata soap_put_wsa5__MetadataType


#define soap_get__wsa5__Metadata soap_get_wsa5__MetadataType


#define soap_instantiate__wsa5__Metadata soap_instantiate_wsa5__MetadataType


#define soap_copy__wsa5__Metadata soap_copy_wsa5__MetadataType

/* _wsa5__ReferenceParameters is a typedef element/attribute synonym for wsa5__ReferenceParametersType */

#ifndef SOAP_TYPE__wsa5__ReferenceParameters
#define SOAP_TYPE__wsa5__ReferenceParameters (26)
#endif

#define soap_default__wsa5__ReferenceParameters(soap, a) soap_default_wsa5__ReferenceParametersType(soap, a)


#define soap_serialize__wsa5__ReferenceParameters soap_serialize_wsa5__ReferenceParametersType


#define soap_out__wsa5__ReferenceParameters soap_out_wsa5__ReferenceParametersType


#define soap_in__wsa5__ReferenceParameters soap_in_wsa5__ReferenceParametersType


#define soap_put__wsa5__ReferenceParameters soap_put_wsa5__ReferenceParametersType


#define soap_get__wsa5__ReferenceParameters soap_get_wsa5__ReferenceParametersType


#define soap_instantiate__wsa5__ReferenceParameters soap_instantiate_wsa5__ReferenceParametersType


#define soap_copy__wsa5__ReferenceParameters soap_copy_wsa5__ReferenceParametersType

/* _wsa5__EndpointReference is a typedef element/attribute synonym for wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__EndpointReference
#define SOAP_TYPE__wsa5__EndpointReference (25)
#endif

#define soap_default__wsa5__EndpointReference(soap, a) soap_default_wsa5__EndpointReferenceType(soap, a)


#define soap_serialize__wsa5__EndpointReference soap_serialize_wsa5__EndpointReferenceType


#define soap_out__wsa5__EndpointReference soap_out_wsa5__EndpointReferenceType


#define soap_in__wsa5__EndpointReference soap_in_wsa5__EndpointReferenceType


#define soap_put__wsa5__EndpointReference soap_put_wsa5__EndpointReferenceType


#define soap_get__wsa5__EndpointReference soap_get_wsa5__EndpointReferenceType


#define soap_instantiate__wsa5__EndpointReference soap_instantiate_wsa5__EndpointReferenceType


#define soap_copy__wsa5__EndpointReference soap_copy_wsa5__EndpointReferenceType

#ifndef SOAP_TYPE_wsa5__ProblemActionType
#define SOAP_TYPE_wsa5__ProblemActionType (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__ProblemActionType(struct soap*, struct wsa5__ProblemActionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__ProblemActionType(struct soap*, const struct wsa5__ProblemActionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__ProblemActionType(struct soap*, const char*, int, const struct wsa5__ProblemActionType *, const char*);
SOAP_FMAC3 struct wsa5__ProblemActionType * SOAP_FMAC4 soap_in_wsa5__ProblemActionType(struct soap*, const char*, struct wsa5__ProblemActionType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__ProblemActionType(struct soap*, const struct wsa5__ProblemActionType *, const char*, const char*);

#ifndef soap_write_wsa5__ProblemActionType
#define soap_write_wsa5__ProblemActionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__ProblemActionType(soap, data),0) || soap_put_wsa5__ProblemActionType(soap, data, "wsa5:ProblemActionType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__ProblemActionType * SOAP_FMAC4 soap_get_wsa5__ProblemActionType(struct soap*, struct wsa5__ProblemActionType *, const char*, const char*);

#ifndef soap_read_wsa5__ProblemActionType
#define soap_read_wsa5__ProblemActionType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__ProblemActionType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct wsa5__ProblemActionType * SOAP_FMAC2 soap_instantiate_wsa5__ProblemActionType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsa5__ProblemActionType * soap_new_wsa5__ProblemActionType(struct soap *soap, int n = -1) { return soap_instantiate_wsa5__ProblemActionType(soap, n, NULL, NULL, NULL); }

inline struct wsa5__ProblemActionType * soap_new_req_wsa5__ProblemActionType(struct soap *soap) { struct wsa5__ProblemActionType *_p = soap_instantiate_wsa5__ProblemActionType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa5__ProblemActionType(soap, _p); } return _p; }

inline struct wsa5__ProblemActionType * soap_new_set_wsa5__ProblemActionType(struct soap *soap, char *Action, char *SoapAction, char *__anyAttribute) { struct wsa5__ProblemActionType *_p = soap_instantiate_wsa5__ProblemActionType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa5__ProblemActionType(soap, _p); _p->Action = Action; _p->SoapAction = SoapAction; _p->__anyAttribute = __anyAttribute; } return _p; }

inline void soap_delete_wsa5__ProblemActionType(struct soap *soap, struct wsa5__ProblemActionType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsa5__ProblemActionType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsa5__RelatesToType
#define SOAP_TYPE_wsa5__RelatesToType (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__RelatesToType(struct soap*, struct wsa5__RelatesToType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__RelatesToType(struct soap*, const struct wsa5__RelatesToType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__RelatesToType(struct soap*, const char*, int, const struct wsa5__RelatesToType *, const char*);
SOAP_FMAC3 struct wsa5__RelatesToType * SOAP_FMAC4 soap_in_wsa5__RelatesToType(struct soap*, const char*, struct wsa5__RelatesToType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__RelatesToType(struct soap*, const struct wsa5__RelatesToType *, const char*, const char*);

#ifndef soap_write_wsa5__RelatesToType
#define soap_write_wsa5__RelatesToType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__RelatesToType(soap, data),0) || soap_put_wsa5__RelatesToType(soap, data, "wsa5:RelatesToType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__RelatesToType * SOAP_FMAC4 soap_get_wsa5__RelatesToType(struct soap*, struct wsa5__RelatesToType *, const char*, const char*);

#ifndef soap_read_wsa5__RelatesToType
#define soap_read_wsa5__RelatesToType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__RelatesToType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct wsa5__RelatesToType * SOAP_FMAC2 soap_instantiate_wsa5__RelatesToType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsa5__RelatesToType * soap_new_wsa5__RelatesToType(struct soap *soap, int n = -1) { return soap_instantiate_wsa5__RelatesToType(soap, n, NULL, NULL, NULL); }

inline struct wsa5__RelatesToType * soap_new_req_wsa5__RelatesToType(struct soap *soap) { struct wsa5__RelatesToType *_p = soap_instantiate_wsa5__RelatesToType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa5__RelatesToType(soap, _p); } return _p; }

inline struct wsa5__RelatesToType * soap_new_set_wsa5__RelatesToType(struct soap *soap, char *__item, char *RelationshipType, char *__anyAttribute) { struct wsa5__RelatesToType *_p = soap_instantiate_wsa5__RelatesToType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa5__RelatesToType(soap, _p); _p->__item = __item; _p->RelationshipType = RelationshipType; _p->__anyAttribute = __anyAttribute; } return _p; }

inline void soap_delete_wsa5__RelatesToType(struct soap *soap, struct wsa5__RelatesToType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsa5__RelatesToType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsa5__MetadataType
#define SOAP_TYPE_wsa5__MetadataType (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__MetadataType(struct soap*, struct wsa5__MetadataType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__MetadataType(struct soap*, const struct wsa5__MetadataType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__MetadataType(struct soap*, const char*, int, const struct wsa5__MetadataType *, const char*);
SOAP_FMAC3 struct wsa5__MetadataType * SOAP_FMAC4 soap_in_wsa5__MetadataType(struct soap*, const char*, struct wsa5__MetadataType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__MetadataType(struct soap*, const struct wsa5__MetadataType *, const char*, const char*);

#ifndef soap_write_wsa5__MetadataType
#define soap_write_wsa5__MetadataType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__MetadataType(soap, data),0) || soap_put_wsa5__MetadataType(soap, data, "wsa5:MetadataType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__MetadataType * SOAP_FMAC4 soap_get_wsa5__MetadataType(struct soap*, struct wsa5__MetadataType *, const char*, const char*);

#ifndef soap_read_wsa5__MetadataType
#define soap_read_wsa5__MetadataType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__MetadataType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct wsa5__MetadataType * SOAP_FMAC2 soap_instantiate_wsa5__MetadataType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsa5__MetadataType * soap_new_wsa5__MetadataType(struct soap *soap, int n = -1) { return soap_instantiate_wsa5__MetadataType(soap, n, NULL, NULL, NULL); }

inline struct wsa5__MetadataType * soap_new_req_wsa5__MetadataType(struct soap *soap, int __size, char **__any) { struct wsa5__MetadataType *_p = soap_instantiate_wsa5__MetadataType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa5__MetadataType(soap, _p); _p->__size = __size; _p->__any = __any; } return _p; }

inline struct wsa5__MetadataType * soap_new_set_wsa5__MetadataType(struct soap *soap, int __size, char **__any, char *__anyAttribute) { struct wsa5__MetadataType *_p = soap_instantiate_wsa5__MetadataType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa5__MetadataType(soap, _p); _p->__size = __size; _p->__any = __any; _p->__anyAttribute = __anyAttribute; } return _p; }

inline void soap_delete_wsa5__MetadataType(struct soap *soap, struct wsa5__MetadataType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsa5__MetadataType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsa5__ReferenceParametersType
#define SOAP_TYPE_wsa5__ReferenceParametersType (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__ReferenceParametersType(struct soap*, const struct wsa5__ReferenceParametersType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__ReferenceParametersType(struct soap*, const char*, int, const struct wsa5__ReferenceParametersType *, const char*);
SOAP_FMAC3 struct wsa5__ReferenceParametersType * SOAP_FMAC4 soap_in_wsa5__ReferenceParametersType(struct soap*, const char*, struct wsa5__ReferenceParametersType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__ReferenceParametersType(struct soap*, const struct wsa5__ReferenceParametersType *, const char*, const char*);

#ifndef soap_write_wsa5__ReferenceParametersType
#define soap_write_wsa5__ReferenceParametersType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__ReferenceParametersType(soap, data),0) || soap_put_wsa5__ReferenceParametersType(soap, data, "wsa5:ReferenceParametersType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__ReferenceParametersType * SOAP_FMAC4 soap_get_wsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *, const char*, const char*);

#ifndef soap_read_wsa5__ReferenceParametersType
#define soap_read_wsa5__ReferenceParametersType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__ReferenceParametersType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct wsa5__ReferenceParametersType * SOAP_FMAC2 soap_instantiate_wsa5__ReferenceParametersType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsa5__ReferenceParametersType * soap_new_wsa5__ReferenceParametersType(struct soap *soap, int n = -1) { return soap_instantiate_wsa5__ReferenceParametersType(soap, n, NULL, NULL, NULL); }

inline struct wsa5__ReferenceParametersType * soap_new_req_wsa5__ReferenceParametersType(struct soap *soap, int __size, char **__any) { struct wsa5__ReferenceParametersType *_p = soap_instantiate_wsa5__ReferenceParametersType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa5__ReferenceParametersType(soap, _p); _p->__size = __size; _p->__any = __any; } return _p; }

inline struct wsa5__ReferenceParametersType * soap_new_set_wsa5__ReferenceParametersType(struct soap *soap, int *chan__ChannelInstance, int __size, char **__any, char *__anyAttribute) { struct wsa5__ReferenceParametersType *_p = soap_instantiate_wsa5__ReferenceParametersType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa5__ReferenceParametersType(soap, _p); _p->chan__ChannelInstance = chan__ChannelInstance; _p->__size = __size; _p->__any = __any; _p->__anyAttribute = __anyAttribute; } return _p; }

inline void soap_delete_wsa5__ReferenceParametersType(struct soap *soap, struct wsa5__ReferenceParametersType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsa5__ReferenceParametersType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsa5__EndpointReferenceType
#define SOAP_TYPE_wsa5__EndpointReferenceType (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__EndpointReferenceType(struct soap*, struct wsa5__EndpointReferenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__EndpointReferenceType(struct soap*, const struct wsa5__EndpointReferenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__EndpointReferenceType(struct soap*, const char*, int, const struct wsa5__EndpointReferenceType *, const char*);
SOAP_FMAC3 struct wsa5__EndpointReferenceType * SOAP_FMAC4 soap_in_wsa5__EndpointReferenceType(struct soap*, const char*, struct wsa5__EndpointReferenceType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__EndpointReferenceType(struct soap*, const struct wsa5__EndpointReferenceType *, const char*, const char*);

#ifndef soap_write_wsa5__EndpointReferenceType
#define soap_write_wsa5__EndpointReferenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__EndpointReferenceType(soap, data),0) || soap_put_wsa5__EndpointReferenceType(soap, data, "wsa5:EndpointReferenceType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__EndpointReferenceType * SOAP_FMAC4 soap_get_wsa5__EndpointReferenceType(struct soap*, struct wsa5__EndpointReferenceType *, const char*, const char*);

#ifndef soap_read_wsa5__EndpointReferenceType
#define soap_read_wsa5__EndpointReferenceType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__EndpointReferenceType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct wsa5__EndpointReferenceType * SOAP_FMAC2 soap_instantiate_wsa5__EndpointReferenceType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsa5__EndpointReferenceType * soap_new_wsa5__EndpointReferenceType(struct soap *soap, int n = -1) { return soap_instantiate_wsa5__EndpointReferenceType(soap, n, NULL, NULL, NULL); }

inline struct wsa5__EndpointReferenceType * soap_new_req_wsa5__EndpointReferenceType(struct soap *soap, char *Address, int __size, char **__any) { struct wsa5__EndpointReferenceType *_p = soap_instantiate_wsa5__EndpointReferenceType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa5__EndpointReferenceType(soap, _p); _p->Address = Address; _p->__size = __size; _p->__any = __any; } return _p; }

inline struct wsa5__EndpointReferenceType * soap_new_set_wsa5__EndpointReferenceType(struct soap *soap, char *Address, struct wsa5__ReferenceParametersType *ReferenceParameters, struct wsa5__MetadataType *Metadata, int __size, char **__any, char *__anyAttribute) { struct wsa5__EndpointReferenceType *_p = soap_instantiate_wsa5__EndpointReferenceType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_wsa5__EndpointReferenceType(soap, _p); _p->Address = Address; _p->ReferenceParameters = ReferenceParameters; _p->Metadata = Metadata; _p->__size = __size; _p->__any = __any; _p->__anyAttribute = __anyAttribute; } return _p; }

inline void soap_delete_wsa5__EndpointReferenceType(struct soap *soap, struct wsa5__EndpointReferenceType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsa5__EndpointReferenceType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__xop__Include
#define SOAP_TYPE__xop__Include (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__xop__Include(struct soap*, struct _xop__Include *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__xop__Include(struct soap*, struct _xop__Include const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__xop__Include(struct soap*, const char*, int, const struct _xop__Include *, const char*);
SOAP_FMAC3 struct _xop__Include * SOAP_FMAC4 soap_in__xop__Include(struct soap*, const char*, struct _xop__Include *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put__xop__Include(struct soap*, const struct _xop__Include *, const char*, const char*);

#ifndef soap_write__xop__Include
#define soap_write__xop__Include(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__xop__Include(soap, data),0) || soap_put__xop__Include(soap, data, "xop:Include", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _xop__Include * SOAP_FMAC4 soap_get__xop__Include(struct soap*, struct _xop__Include *, const char*, const char*);

#ifndef soap_read__xop__Include
#define soap_read__xop__Include(soap, data) ( soap_begin_recv(soap) || !soap_get__xop__Include(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct _xop__Include * SOAP_FMAC2 soap_instantiate__xop__Include(struct soap*, int, const char*, const char*, size_t*);

inline struct _xop__Include * soap_new__xop__Include(struct soap *soap, int n = -1) { return soap_instantiate__xop__Include(soap, n, NULL, NULL, NULL); }

inline struct _xop__Include * soap_new_req__xop__Include(struct soap *soap) { struct _xop__Include *_p = soap_instantiate__xop__Include(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__xop__Include(soap, _p); } return _p; }

inline struct _xop__Include * soap_new_set__xop__Include(struct soap *soap, unsigned char *__ptr, int __size, char *id, char *type, char *options) { struct _xop__Include *_p = soap_instantiate__xop__Include(soap, -1, NULL, NULL, NULL); if (_p) { soap_default__xop__Include(soap, _p); _p->__ptr = __ptr; _p->__size = __size; _p->id = id; _p->type = type; _p->options = options; } return _p; }

inline void soap_delete__xop__Include(struct soap *soap, struct _xop__Include *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__xop__Include(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__tt__union_ColorOptions
#define SOAP_TYPE__tt__union_ColorOptions (1428)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tt__union_ColorOptions(struct soap*, int, const union _tt__union_ColorOptions *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__union_ColorOptions(struct soap*, int, const union _tt__union_ColorOptions *);
SOAP_FMAC3 union _tt__union_ColorOptions * SOAP_FMAC4 soap_in__tt__union_ColorOptions(struct soap*, int*, union _tt__union_ColorOptions *);

#ifndef SOAP_TYPE__tt__union_EventStream
#define SOAP_TYPE__tt__union_EventStream (1350)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tt__union_EventStream(struct soap*, int, const union _tt__union_EventStream *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__union_EventStream(struct soap*, int, const union _tt__union_EventStream *);
SOAP_FMAC3 union _tt__union_EventStream * SOAP_FMAC4 soap_in__tt__union_EventStream(struct soap*, int*, union _tt__union_EventStream *);

#ifndef SOAP_TYPE__tt__union_PTZStream
#define SOAP_TYPE__tt__union_PTZStream (1345)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tt__union_PTZStream(struct soap*, int, const union _tt__union_PTZStream *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__union_PTZStream(struct soap*, int, const union _tt__union_PTZStream *);
SOAP_FMAC3 union _tt__union_PTZStream * SOAP_FMAC4 soap_in__tt__union_PTZStream(struct soap*, int*, union _tt__union_PTZStream *);

#ifndef SOAP_TYPE__tt__union_VideoAnalyticsStream
#define SOAP_TYPE__tt__union_VideoAnalyticsStream (1341)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tt__union_VideoAnalyticsStream(struct soap*, int, const union _tt__union_VideoAnalyticsStream *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__union_VideoAnalyticsStream(struct soap*, int, const union _tt__union_VideoAnalyticsStream *);
SOAP_FMAC3 union _tt__union_VideoAnalyticsStream * SOAP_FMAC4 soap_in__tt__union_VideoAnalyticsStream(struct soap*, int*, union _tt__union_VideoAnalyticsStream *);

#ifndef SOAP_TYPE__tt__union_MetadataStream
#define SOAP_TYPE__tt__union_MetadataStream (1331)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tt__union_MetadataStream(struct soap*, int, const union _tt__union_MetadataStream *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__union_MetadataStream(struct soap*, int, const union _tt__union_MetadataStream *);
SOAP_FMAC3 union _tt__union_MetadataStream * SOAP_FMAC4 soap_in__tt__union_MetadataStream(struct soap*, int*, union _tt__union_MetadataStream *);

#ifndef SOAP_TYPE__tt__union_PTZPresetTourPresetDetail
#define SOAP_TYPE__tt__union_PTZPresetTourPresetDetail (1173)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tt__union_PTZPresetTourPresetDetail(struct soap*, int, const union _tt__union_PTZPresetTourPresetDetail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__union_PTZPresetTourPresetDetail(struct soap*, int, const union _tt__union_PTZPresetTourPresetDetail *);
SOAP_FMAC3 union _tt__union_PTZPresetTourPresetDetail * SOAP_FMAC4 soap_in__tt__union_PTZPresetTourPresetDetail(struct soap*, int*, union _tt__union_PTZPresetTourPresetDetail *);

#ifndef SOAP_TYPE_PointerTo_tptz__GetCompatibleConfigurations
#define SOAP_TYPE_PointerTo_tptz__GetCompatibleConfigurations (1950)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__GetCompatibleConfigurations(struct soap*, _tptz__GetCompatibleConfigurations *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__GetCompatibleConfigurations(struct soap*, const char *, int, _tptz__GetCompatibleConfigurations *const*, const char *);
SOAP_FMAC3 _tptz__GetCompatibleConfigurations ** SOAP_FMAC4 soap_in_PointerTo_tptz__GetCompatibleConfigurations(struct soap*, const char*, _tptz__GetCompatibleConfigurations **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__GetCompatibleConfigurations(struct soap*, _tptz__GetCompatibleConfigurations *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__GetCompatibleConfigurations
#define soap_write_PointerTo_tptz__GetCompatibleConfigurations(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__GetCompatibleConfigurations(soap, data),0) || soap_put_PointerTo_tptz__GetCompatibleConfigurations(soap, data, "tptz:GetCompatibleConfigurations", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetCompatibleConfigurations ** SOAP_FMAC4 soap_get_PointerTo_tptz__GetCompatibleConfigurations(struct soap*, _tptz__GetCompatibleConfigurations **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__GetCompatibleConfigurations
#define soap_read_PointerTo_tptz__GetCompatibleConfigurations(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__GetCompatibleConfigurations(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tptz__RemovePresetTour
#define SOAP_TYPE_PointerTo_tptz__RemovePresetTour (1946)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__RemovePresetTour(struct soap*, _tptz__RemovePresetTour *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__RemovePresetTour(struct soap*, const char *, int, _tptz__RemovePresetTour *const*, const char *);
SOAP_FMAC3 _tptz__RemovePresetTour ** SOAP_FMAC4 soap_in_PointerTo_tptz__RemovePresetTour(struct soap*, const char*, _tptz__RemovePresetTour **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__RemovePresetTour(struct soap*, _tptz__RemovePresetTour *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__RemovePresetTour
#define soap_write_PointerTo_tptz__RemovePresetTour(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__RemovePresetTour(soap, data),0) || soap_put_PointerTo_tptz__RemovePresetTour(soap, data, "tptz:RemovePresetTour", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__RemovePresetTour ** SOAP_FMAC4 soap_get_PointerTo_tptz__RemovePresetTour(struct soap*, _tptz__RemovePresetTour **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__RemovePresetTour
#define soap_read_PointerTo_tptz__RemovePresetTour(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__RemovePresetTour(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tptz__OperatePresetTour
#define SOAP_TYPE_PointerTo_tptz__OperatePresetTour (1942)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__OperatePresetTour(struct soap*, _tptz__OperatePresetTour *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__OperatePresetTour(struct soap*, const char *, int, _tptz__OperatePresetTour *const*, const char *);
SOAP_FMAC3 _tptz__OperatePresetTour ** SOAP_FMAC4 soap_in_PointerTo_tptz__OperatePresetTour(struct soap*, const char*, _tptz__OperatePresetTour **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__OperatePresetTour(struct soap*, _tptz__OperatePresetTour *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__OperatePresetTour
#define soap_write_PointerTo_tptz__OperatePresetTour(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__OperatePresetTour(soap, data),0) || soap_put_PointerTo_tptz__OperatePresetTour(soap, data, "tptz:OperatePresetTour", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__OperatePresetTour ** SOAP_FMAC4 soap_get_PointerTo_tptz__OperatePresetTour(struct soap*, _tptz__OperatePresetTour **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__OperatePresetTour
#define soap_read_PointerTo_tptz__OperatePresetTour(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__OperatePresetTour(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tptz__ModifyPresetTour
#define SOAP_TYPE_PointerTo_tptz__ModifyPresetTour (1938)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__ModifyPresetTour(struct soap*, _tptz__ModifyPresetTour *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__ModifyPresetTour(struct soap*, const char *, int, _tptz__ModifyPresetTour *const*, const char *);
SOAP_FMAC3 _tptz__ModifyPresetTour ** SOAP_FMAC4 soap_in_PointerTo_tptz__ModifyPresetTour(struct soap*, const char*, _tptz__ModifyPresetTour **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__ModifyPresetTour(struct soap*, _tptz__ModifyPresetTour *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__ModifyPresetTour
#define soap_write_PointerTo_tptz__ModifyPresetTour(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__ModifyPresetTour(soap, data),0) || soap_put_PointerTo_tptz__ModifyPresetTour(soap, data, "tptz:ModifyPresetTour", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__ModifyPresetTour ** SOAP_FMAC4 soap_get_PointerTo_tptz__ModifyPresetTour(struct soap*, _tptz__ModifyPresetTour **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__ModifyPresetTour
#define soap_read_PointerTo_tptz__ModifyPresetTour(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__ModifyPresetTour(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tptz__CreatePresetTour
#define SOAP_TYPE_PointerTo_tptz__CreatePresetTour (1934)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__CreatePresetTour(struct soap*, _tptz__CreatePresetTour *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__CreatePresetTour(struct soap*, const char *, int, _tptz__CreatePresetTour *const*, const char *);
SOAP_FMAC3 _tptz__CreatePresetTour ** SOAP_FMAC4 soap_in_PointerTo_tptz__CreatePresetTour(struct soap*, const char*, _tptz__CreatePresetTour **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__CreatePresetTour(struct soap*, _tptz__CreatePresetTour *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__CreatePresetTour
#define soap_write_PointerTo_tptz__CreatePresetTour(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__CreatePresetTour(soap, data),0) || soap_put_PointerTo_tptz__CreatePresetTour(soap, data, "tptz:CreatePresetTour", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__CreatePresetTour ** SOAP_FMAC4 soap_get_PointerTo_tptz__CreatePresetTour(struct soap*, _tptz__CreatePresetTour **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__CreatePresetTour
#define soap_read_PointerTo_tptz__CreatePresetTour(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__CreatePresetTour(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tptz__GetPresetTourOptions
#define SOAP_TYPE_PointerTo_tptz__GetPresetTourOptions (1930)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__GetPresetTourOptions(struct soap*, _tptz__GetPresetTourOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__GetPresetTourOptions(struct soap*, const char *, int, _tptz__GetPresetTourOptions *const*, const char *);
SOAP_FMAC3 _tptz__GetPresetTourOptions ** SOAP_FMAC4 soap_in_PointerTo_tptz__GetPresetTourOptions(struct soap*, const char*, _tptz__GetPresetTourOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__GetPresetTourOptions(struct soap*, _tptz__GetPresetTourOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__GetPresetTourOptions
#define soap_write_PointerTo_tptz__GetPresetTourOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__GetPresetTourOptions(soap, data),0) || soap_put_PointerTo_tptz__GetPresetTourOptions(soap, data, "tptz:GetPresetTourOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetPresetTourOptions ** SOAP_FMAC4 soap_get_PointerTo_tptz__GetPresetTourOptions(struct soap*, _tptz__GetPresetTourOptions **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__GetPresetTourOptions
#define soap_read_PointerTo_tptz__GetPresetTourOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__GetPresetTourOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tptz__GetPresetTour
#define SOAP_TYPE_PointerTo_tptz__GetPresetTour (1926)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__GetPresetTour(struct soap*, _tptz__GetPresetTour *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__GetPresetTour(struct soap*, const char *, int, _tptz__GetPresetTour *const*, const char *);
SOAP_FMAC3 _tptz__GetPresetTour ** SOAP_FMAC4 soap_in_PointerTo_tptz__GetPresetTour(struct soap*, const char*, _tptz__GetPresetTour **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__GetPresetTour(struct soap*, _tptz__GetPresetTour *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__GetPresetTour
#define soap_write_PointerTo_tptz__GetPresetTour(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__GetPresetTour(soap, data),0) || soap_put_PointerTo_tptz__GetPresetTour(soap, data, "tptz:GetPresetTour", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetPresetTour ** SOAP_FMAC4 soap_get_PointerTo_tptz__GetPresetTour(struct soap*, _tptz__GetPresetTour **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__GetPresetTour
#define soap_read_PointerTo_tptz__GetPresetTour(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__GetPresetTour(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tptz__GetPresetTours
#define SOAP_TYPE_PointerTo_tptz__GetPresetTours (1922)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__GetPresetTours(struct soap*, _tptz__GetPresetTours *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__GetPresetTours(struct soap*, const char *, int, _tptz__GetPresetTours *const*, const char *);
SOAP_FMAC3 _tptz__GetPresetTours ** SOAP_FMAC4 soap_in_PointerTo_tptz__GetPresetTours(struct soap*, const char*, _tptz__GetPresetTours **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__GetPresetTours(struct soap*, _tptz__GetPresetTours *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__GetPresetTours
#define soap_write_PointerTo_tptz__GetPresetTours(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__GetPresetTours(soap, data),0) || soap_put_PointerTo_tptz__GetPresetTours(soap, data, "tptz:GetPresetTours", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetPresetTours ** SOAP_FMAC4 soap_get_PointerTo_tptz__GetPresetTours(struct soap*, _tptz__GetPresetTours **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__GetPresetTours
#define soap_read_PointerTo_tptz__GetPresetTours(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__GetPresetTours(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tptz__Stop
#define SOAP_TYPE_PointerTo_tptz__Stop (1918)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__Stop(struct soap*, _tptz__Stop *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__Stop(struct soap*, const char *, int, _tptz__Stop *const*, const char *);
SOAP_FMAC3 _tptz__Stop ** SOAP_FMAC4 soap_in_PointerTo_tptz__Stop(struct soap*, const char*, _tptz__Stop **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__Stop(struct soap*, _tptz__Stop *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__Stop
#define soap_write_PointerTo_tptz__Stop(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__Stop(soap, data),0) || soap_put_PointerTo_tptz__Stop(soap, data, "tptz:Stop", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__Stop ** SOAP_FMAC4 soap_get_PointerTo_tptz__Stop(struct soap*, _tptz__Stop **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__Stop
#define soap_read_PointerTo_tptz__Stop(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__Stop(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tptz__AbsoluteMove
#define SOAP_TYPE_PointerTo_tptz__AbsoluteMove (1914)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__AbsoluteMove(struct soap*, _tptz__AbsoluteMove *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__AbsoluteMove(struct soap*, const char *, int, _tptz__AbsoluteMove *const*, const char *);
SOAP_FMAC3 _tptz__AbsoluteMove ** SOAP_FMAC4 soap_in_PointerTo_tptz__AbsoluteMove(struct soap*, const char*, _tptz__AbsoluteMove **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__AbsoluteMove(struct soap*, _tptz__AbsoluteMove *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__AbsoluteMove
#define soap_write_PointerTo_tptz__AbsoluteMove(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__AbsoluteMove(soap, data),0) || soap_put_PointerTo_tptz__AbsoluteMove(soap, data, "tptz:AbsoluteMove", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__AbsoluteMove ** SOAP_FMAC4 soap_get_PointerTo_tptz__AbsoluteMove(struct soap*, _tptz__AbsoluteMove **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__AbsoluteMove
#define soap_read_PointerTo_tptz__AbsoluteMove(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__AbsoluteMove(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tptz__SendAuxiliaryCommand
#define SOAP_TYPE_PointerTo_tptz__SendAuxiliaryCommand (1910)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__SendAuxiliaryCommand(struct soap*, _tptz__SendAuxiliaryCommand *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__SendAuxiliaryCommand(struct soap*, const char *, int, _tptz__SendAuxiliaryCommand *const*, const char *);
SOAP_FMAC3 _tptz__SendAuxiliaryCommand ** SOAP_FMAC4 soap_in_PointerTo_tptz__SendAuxiliaryCommand(struct soap*, const char*, _tptz__SendAuxiliaryCommand **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__SendAuxiliaryCommand(struct soap*, _tptz__SendAuxiliaryCommand *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__SendAuxiliaryCommand
#define soap_write_PointerTo_tptz__SendAuxiliaryCommand(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__SendAuxiliaryCommand(soap, data),0) || soap_put_PointerTo_tptz__SendAuxiliaryCommand(soap, data, "tptz:SendAuxiliaryCommand", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__SendAuxiliaryCommand ** SOAP_FMAC4 soap_get_PointerTo_tptz__SendAuxiliaryCommand(struct soap*, _tptz__SendAuxiliaryCommand **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__SendAuxiliaryCommand
#define soap_read_PointerTo_tptz__SendAuxiliaryCommand(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__SendAuxiliaryCommand(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tptz__RelativeMove
#define SOAP_TYPE_PointerTo_tptz__RelativeMove (1906)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__RelativeMove(struct soap*, _tptz__RelativeMove *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__RelativeMove(struct soap*, const char *, int, _tptz__RelativeMove *const*, const char *);
SOAP_FMAC3 _tptz__RelativeMove ** SOAP_FMAC4 soap_in_PointerTo_tptz__RelativeMove(struct soap*, const char*, _tptz__RelativeMove **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__RelativeMove(struct soap*, _tptz__RelativeMove *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__RelativeMove
#define soap_write_PointerTo_tptz__RelativeMove(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__RelativeMove(soap, data),0) || soap_put_PointerTo_tptz__RelativeMove(soap, data, "tptz:RelativeMove", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__RelativeMove ** SOAP_FMAC4 soap_get_PointerTo_tptz__RelativeMove(struct soap*, _tptz__RelativeMove **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__RelativeMove
#define soap_read_PointerTo_tptz__RelativeMove(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__RelativeMove(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tptz__ContinuousMove
#define SOAP_TYPE_PointerTo_tptz__ContinuousMove (1902)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__ContinuousMove(struct soap*, _tptz__ContinuousMove *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__ContinuousMove(struct soap*, const char *, int, _tptz__ContinuousMove *const*, const char *);
SOAP_FMAC3 _tptz__ContinuousMove ** SOAP_FMAC4 soap_in_PointerTo_tptz__ContinuousMove(struct soap*, const char*, _tptz__ContinuousMove **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__ContinuousMove(struct soap*, _tptz__ContinuousMove *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__ContinuousMove
#define soap_write_PointerTo_tptz__ContinuousMove(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__ContinuousMove(soap, data),0) || soap_put_PointerTo_tptz__ContinuousMove(soap, data, "tptz:ContinuousMove", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__ContinuousMove ** SOAP_FMAC4 soap_get_PointerTo_tptz__ContinuousMove(struct soap*, _tptz__ContinuousMove **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__ContinuousMove
#define soap_read_PointerTo_tptz__ContinuousMove(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__ContinuousMove(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tptz__SetHomePosition
#define SOAP_TYPE_PointerTo_tptz__SetHomePosition (1898)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__SetHomePosition(struct soap*, _tptz__SetHomePosition *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__SetHomePosition(struct soap*, const char *, int, _tptz__SetHomePosition *const*, const char *);
SOAP_FMAC3 _tptz__SetHomePosition ** SOAP_FMAC4 soap_in_PointerTo_tptz__SetHomePosition(struct soap*, const char*, _tptz__SetHomePosition **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__SetHomePosition(struct soap*, _tptz__SetHomePosition *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__SetHomePosition
#define soap_write_PointerTo_tptz__SetHomePosition(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__SetHomePosition(soap, data),0) || soap_put_PointerTo_tptz__SetHomePosition(soap, data, "tptz:SetHomePosition", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__SetHomePosition ** SOAP_FMAC4 soap_get_PointerTo_tptz__SetHomePosition(struct soap*, _tptz__SetHomePosition **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__SetHomePosition
#define soap_read_PointerTo_tptz__SetHomePosition(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__SetHomePosition(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tptz__GotoHomePosition
#define SOAP_TYPE_PointerTo_tptz__GotoHomePosition (1894)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__GotoHomePosition(struct soap*, _tptz__GotoHomePosition *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__GotoHomePosition(struct soap*, const char *, int, _tptz__GotoHomePosition *const*, const char *);
SOAP_FMAC3 _tptz__GotoHomePosition ** SOAP_FMAC4 soap_in_PointerTo_tptz__GotoHomePosition(struct soap*, const char*, _tptz__GotoHomePosition **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__GotoHomePosition(struct soap*, _tptz__GotoHomePosition *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__GotoHomePosition
#define soap_write_PointerTo_tptz__GotoHomePosition(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__GotoHomePosition(soap, data),0) || soap_put_PointerTo_tptz__GotoHomePosition(soap, data, "tptz:GotoHomePosition", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GotoHomePosition ** SOAP_FMAC4 soap_get_PointerTo_tptz__GotoHomePosition(struct soap*, _tptz__GotoHomePosition **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__GotoHomePosition
#define soap_read_PointerTo_tptz__GotoHomePosition(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__GotoHomePosition(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tptz__GetConfigurationOptions
#define SOAP_TYPE_PointerTo_tptz__GetConfigurationOptions (1890)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__GetConfigurationOptions(struct soap*, _tptz__GetConfigurationOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__GetConfigurationOptions(struct soap*, const char *, int, _tptz__GetConfigurationOptions *const*, const char *);
SOAP_FMAC3 _tptz__GetConfigurationOptions ** SOAP_FMAC4 soap_in_PointerTo_tptz__GetConfigurationOptions(struct soap*, const char*, _tptz__GetConfigurationOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__GetConfigurationOptions(struct soap*, _tptz__GetConfigurationOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__GetConfigurationOptions
#define soap_write_PointerTo_tptz__GetConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__GetConfigurationOptions(soap, data),0) || soap_put_PointerTo_tptz__GetConfigurationOptions(soap, data, "tptz:GetConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetConfigurationOptions ** SOAP_FMAC4 soap_get_PointerTo_tptz__GetConfigurationOptions(struct soap*, _tptz__GetConfigurationOptions **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__GetConfigurationOptions
#define soap_read_PointerTo_tptz__GetConfigurationOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__GetConfigurationOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tptz__SetConfiguration
#define SOAP_TYPE_PointerTo_tptz__SetConfiguration (1886)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__SetConfiguration(struct soap*, _tptz__SetConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__SetConfiguration(struct soap*, const char *, int, _tptz__SetConfiguration *const*, const char *);
SOAP_FMAC3 _tptz__SetConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tptz__SetConfiguration(struct soap*, const char*, _tptz__SetConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__SetConfiguration(struct soap*, _tptz__SetConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__SetConfiguration
#define soap_write_PointerTo_tptz__SetConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__SetConfiguration(soap, data),0) || soap_put_PointerTo_tptz__SetConfiguration(soap, data, "tptz:SetConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__SetConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tptz__SetConfiguration(struct soap*, _tptz__SetConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__SetConfiguration
#define soap_read_PointerTo_tptz__SetConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__SetConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tptz__GetNode
#define SOAP_TYPE_PointerTo_tptz__GetNode (1882)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__GetNode(struct soap*, _tptz__GetNode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__GetNode(struct soap*, const char *, int, _tptz__GetNode *const*, const char *);
SOAP_FMAC3 _tptz__GetNode ** SOAP_FMAC4 soap_in_PointerTo_tptz__GetNode(struct soap*, const char*, _tptz__GetNode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__GetNode(struct soap*, _tptz__GetNode *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__GetNode
#define soap_write_PointerTo_tptz__GetNode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__GetNode(soap, data),0) || soap_put_PointerTo_tptz__GetNode(soap, data, "tptz:GetNode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetNode ** SOAP_FMAC4 soap_get_PointerTo_tptz__GetNode(struct soap*, _tptz__GetNode **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__GetNode
#define soap_read_PointerTo_tptz__GetNode(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__GetNode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tptz__GetNodes
#define SOAP_TYPE_PointerTo_tptz__GetNodes (1878)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__GetNodes(struct soap*, _tptz__GetNodes *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__GetNodes(struct soap*, const char *, int, _tptz__GetNodes *const*, const char *);
SOAP_FMAC3 _tptz__GetNodes ** SOAP_FMAC4 soap_in_PointerTo_tptz__GetNodes(struct soap*, const char*, _tptz__GetNodes **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__GetNodes(struct soap*, _tptz__GetNodes *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__GetNodes
#define soap_write_PointerTo_tptz__GetNodes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__GetNodes(soap, data),0) || soap_put_PointerTo_tptz__GetNodes(soap, data, "tptz:GetNodes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetNodes ** SOAP_FMAC4 soap_get_PointerTo_tptz__GetNodes(struct soap*, _tptz__GetNodes **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__GetNodes
#define soap_read_PointerTo_tptz__GetNodes(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__GetNodes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tptz__GetConfiguration
#define SOAP_TYPE_PointerTo_tptz__GetConfiguration (1874)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__GetConfiguration(struct soap*, _tptz__GetConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__GetConfiguration(struct soap*, const char *, int, _tptz__GetConfiguration *const*, const char *);
SOAP_FMAC3 _tptz__GetConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tptz__GetConfiguration(struct soap*, const char*, _tptz__GetConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__GetConfiguration(struct soap*, _tptz__GetConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__GetConfiguration
#define soap_write_PointerTo_tptz__GetConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__GetConfiguration(soap, data),0) || soap_put_PointerTo_tptz__GetConfiguration(soap, data, "tptz:GetConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tptz__GetConfiguration(struct soap*, _tptz__GetConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__GetConfiguration
#define soap_read_PointerTo_tptz__GetConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__GetConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tptz__GetStatus
#define SOAP_TYPE_PointerTo_tptz__GetStatus (1870)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__GetStatus(struct soap*, _tptz__GetStatus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__GetStatus(struct soap*, const char *, int, _tptz__GetStatus *const*, const char *);
SOAP_FMAC3 _tptz__GetStatus ** SOAP_FMAC4 soap_in_PointerTo_tptz__GetStatus(struct soap*, const char*, _tptz__GetStatus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__GetStatus(struct soap*, _tptz__GetStatus *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__GetStatus
#define soap_write_PointerTo_tptz__GetStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__GetStatus(soap, data),0) || soap_put_PointerTo_tptz__GetStatus(soap, data, "tptz:GetStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetStatus ** SOAP_FMAC4 soap_get_PointerTo_tptz__GetStatus(struct soap*, _tptz__GetStatus **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__GetStatus
#define soap_read_PointerTo_tptz__GetStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__GetStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tptz__GotoPreset
#define SOAP_TYPE_PointerTo_tptz__GotoPreset (1866)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__GotoPreset(struct soap*, _tptz__GotoPreset *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__GotoPreset(struct soap*, const char *, int, _tptz__GotoPreset *const*, const char *);
SOAP_FMAC3 _tptz__GotoPreset ** SOAP_FMAC4 soap_in_PointerTo_tptz__GotoPreset(struct soap*, const char*, _tptz__GotoPreset **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__GotoPreset(struct soap*, _tptz__GotoPreset *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__GotoPreset
#define soap_write_PointerTo_tptz__GotoPreset(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__GotoPreset(soap, data),0) || soap_put_PointerTo_tptz__GotoPreset(soap, data, "tptz:GotoPreset", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GotoPreset ** SOAP_FMAC4 soap_get_PointerTo_tptz__GotoPreset(struct soap*, _tptz__GotoPreset **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__GotoPreset
#define soap_read_PointerTo_tptz__GotoPreset(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__GotoPreset(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tptz__RemovePreset
#define SOAP_TYPE_PointerTo_tptz__RemovePreset (1862)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__RemovePreset(struct soap*, _tptz__RemovePreset *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__RemovePreset(struct soap*, const char *, int, _tptz__RemovePreset *const*, const char *);
SOAP_FMAC3 _tptz__RemovePreset ** SOAP_FMAC4 soap_in_PointerTo_tptz__RemovePreset(struct soap*, const char*, _tptz__RemovePreset **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__RemovePreset(struct soap*, _tptz__RemovePreset *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__RemovePreset
#define soap_write_PointerTo_tptz__RemovePreset(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__RemovePreset(soap, data),0) || soap_put_PointerTo_tptz__RemovePreset(soap, data, "tptz:RemovePreset", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__RemovePreset ** SOAP_FMAC4 soap_get_PointerTo_tptz__RemovePreset(struct soap*, _tptz__RemovePreset **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__RemovePreset
#define soap_read_PointerTo_tptz__RemovePreset(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__RemovePreset(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tptz__SetPreset
#define SOAP_TYPE_PointerTo_tptz__SetPreset (1858)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__SetPreset(struct soap*, _tptz__SetPreset *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__SetPreset(struct soap*, const char *, int, _tptz__SetPreset *const*, const char *);
SOAP_FMAC3 _tptz__SetPreset ** SOAP_FMAC4 soap_in_PointerTo_tptz__SetPreset(struct soap*, const char*, _tptz__SetPreset **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__SetPreset(struct soap*, _tptz__SetPreset *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__SetPreset
#define soap_write_PointerTo_tptz__SetPreset(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__SetPreset(soap, data),0) || soap_put_PointerTo_tptz__SetPreset(soap, data, "tptz:SetPreset", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__SetPreset ** SOAP_FMAC4 soap_get_PointerTo_tptz__SetPreset(struct soap*, _tptz__SetPreset **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__SetPreset
#define soap_read_PointerTo_tptz__SetPreset(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__SetPreset(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tptz__GetPresets
#define SOAP_TYPE_PointerTo_tptz__GetPresets (1854)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__GetPresets(struct soap*, _tptz__GetPresets *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__GetPresets(struct soap*, const char *, int, _tptz__GetPresets *const*, const char *);
SOAP_FMAC3 _tptz__GetPresets ** SOAP_FMAC4 soap_in_PointerTo_tptz__GetPresets(struct soap*, const char*, _tptz__GetPresets **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__GetPresets(struct soap*, _tptz__GetPresets *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__GetPresets
#define soap_write_PointerTo_tptz__GetPresets(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__GetPresets(soap, data),0) || soap_put_PointerTo_tptz__GetPresets(soap, data, "tptz:GetPresets", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetPresets ** SOAP_FMAC4 soap_get_PointerTo_tptz__GetPresets(struct soap*, _tptz__GetPresets **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__GetPresets
#define soap_read_PointerTo_tptz__GetPresets(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__GetPresets(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tptz__GetConfigurations
#define SOAP_TYPE_PointerTo_tptz__GetConfigurations (1850)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__GetConfigurations(struct soap*, _tptz__GetConfigurations *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__GetConfigurations(struct soap*, const char *, int, _tptz__GetConfigurations *const*, const char *);
SOAP_FMAC3 _tptz__GetConfigurations ** SOAP_FMAC4 soap_in_PointerTo_tptz__GetConfigurations(struct soap*, const char*, _tptz__GetConfigurations **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__GetConfigurations(struct soap*, _tptz__GetConfigurations *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__GetConfigurations
#define soap_write_PointerTo_tptz__GetConfigurations(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__GetConfigurations(soap, data),0) || soap_put_PointerTo_tptz__GetConfigurations(soap, data, "tptz:GetConfigurations", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetConfigurations ** SOAP_FMAC4 soap_get_PointerTo_tptz__GetConfigurations(struct soap*, _tptz__GetConfigurations **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__GetConfigurations
#define soap_read_PointerTo_tptz__GetConfigurations(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__GetConfigurations(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tptz__GetServiceCapabilities
#define SOAP_TYPE_PointerTo_tptz__GetServiceCapabilities (1846)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tptz__GetServiceCapabilities(struct soap*, _tptz__GetServiceCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tptz__GetServiceCapabilities(struct soap*, const char *, int, _tptz__GetServiceCapabilities *const*, const char *);
SOAP_FMAC3 _tptz__GetServiceCapabilities ** SOAP_FMAC4 soap_in_PointerTo_tptz__GetServiceCapabilities(struct soap*, const char*, _tptz__GetServiceCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tptz__GetServiceCapabilities(struct soap*, _tptz__GetServiceCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tptz__GetServiceCapabilities
#define soap_write_PointerTo_tptz__GetServiceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tptz__GetServiceCapabilities(soap, data),0) || soap_put_PointerTo_tptz__GetServiceCapabilities(soap, data, "tptz:GetServiceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tptz__GetServiceCapabilities ** SOAP_FMAC4 soap_get_PointerTo_tptz__GetServiceCapabilities(struct soap*, _tptz__GetServiceCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTo_tptz__GetServiceCapabilities
#define soap_read_PointerTo_tptz__GetServiceCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tptz__GetServiceCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__StartSystemRestore
#define SOAP_TYPE_PointerTo_tds__StartSystemRestore (1842)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__StartSystemRestore(struct soap*, _tds__StartSystemRestore *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__StartSystemRestore(struct soap*, const char *, int, _tds__StartSystemRestore *const*, const char *);
SOAP_FMAC3 _tds__StartSystemRestore ** SOAP_FMAC4 soap_in_PointerTo_tds__StartSystemRestore(struct soap*, const char*, _tds__StartSystemRestore **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__StartSystemRestore(struct soap*, _tds__StartSystemRestore *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__StartSystemRestore
#define soap_write_PointerTo_tds__StartSystemRestore(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__StartSystemRestore(soap, data),0) || soap_put_PointerTo_tds__StartSystemRestore(soap, data, "tds:StartSystemRestore", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__StartSystemRestore ** SOAP_FMAC4 soap_get_PointerTo_tds__StartSystemRestore(struct soap*, _tds__StartSystemRestore **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__StartSystemRestore
#define soap_read_PointerTo_tds__StartSystemRestore(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__StartSystemRestore(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__StartFirmwareUpgrade
#define SOAP_TYPE_PointerTo_tds__StartFirmwareUpgrade (1838)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__StartFirmwareUpgrade(struct soap*, _tds__StartFirmwareUpgrade *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__StartFirmwareUpgrade(struct soap*, const char *, int, _tds__StartFirmwareUpgrade *const*, const char *);
SOAP_FMAC3 _tds__StartFirmwareUpgrade ** SOAP_FMAC4 soap_in_PointerTo_tds__StartFirmwareUpgrade(struct soap*, const char*, _tds__StartFirmwareUpgrade **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__StartFirmwareUpgrade(struct soap*, _tds__StartFirmwareUpgrade *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__StartFirmwareUpgrade
#define soap_write_PointerTo_tds__StartFirmwareUpgrade(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__StartFirmwareUpgrade(soap, data),0) || soap_put_PointerTo_tds__StartFirmwareUpgrade(soap, data, "tds:StartFirmwareUpgrade", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__StartFirmwareUpgrade ** SOAP_FMAC4 soap_get_PointerTo_tds__StartFirmwareUpgrade(struct soap*, _tds__StartFirmwareUpgrade **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__StartFirmwareUpgrade
#define soap_read_PointerTo_tds__StartFirmwareUpgrade(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__StartFirmwareUpgrade(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetSystemUris
#define SOAP_TYPE_PointerTo_tds__GetSystemUris (1834)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetSystemUris(struct soap*, _tds__GetSystemUris *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetSystemUris(struct soap*, const char *, int, _tds__GetSystemUris *const*, const char *);
SOAP_FMAC3 _tds__GetSystemUris ** SOAP_FMAC4 soap_in_PointerTo_tds__GetSystemUris(struct soap*, const char*, _tds__GetSystemUris **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetSystemUris(struct soap*, _tds__GetSystemUris *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetSystemUris
#define soap_write_PointerTo_tds__GetSystemUris(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetSystemUris(soap, data),0) || soap_put_PointerTo_tds__GetSystemUris(soap, data, "tds:GetSystemUris", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemUris ** SOAP_FMAC4 soap_get_PointerTo_tds__GetSystemUris(struct soap*, _tds__GetSystemUris **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetSystemUris
#define soap_read_PointerTo_tds__GetSystemUris(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetSystemUris(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__ScanAvailableDot11Networks
#define SOAP_TYPE_PointerTo_tds__ScanAvailableDot11Networks (1830)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__ScanAvailableDot11Networks(struct soap*, _tds__ScanAvailableDot11Networks *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__ScanAvailableDot11Networks(struct soap*, const char *, int, _tds__ScanAvailableDot11Networks *const*, const char *);
SOAP_FMAC3 _tds__ScanAvailableDot11Networks ** SOAP_FMAC4 soap_in_PointerTo_tds__ScanAvailableDot11Networks(struct soap*, const char*, _tds__ScanAvailableDot11Networks **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__ScanAvailableDot11Networks(struct soap*, _tds__ScanAvailableDot11Networks *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__ScanAvailableDot11Networks
#define soap_write_PointerTo_tds__ScanAvailableDot11Networks(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__ScanAvailableDot11Networks(soap, data),0) || soap_put_PointerTo_tds__ScanAvailableDot11Networks(soap, data, "tds:ScanAvailableDot11Networks", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__ScanAvailableDot11Networks ** SOAP_FMAC4 soap_get_PointerTo_tds__ScanAvailableDot11Networks(struct soap*, _tds__ScanAvailableDot11Networks **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__ScanAvailableDot11Networks
#define soap_read_PointerTo_tds__ScanAvailableDot11Networks(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__ScanAvailableDot11Networks(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetDot11Status
#define SOAP_TYPE_PointerTo_tds__GetDot11Status (1826)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetDot11Status(struct soap*, _tds__GetDot11Status *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetDot11Status(struct soap*, const char *, int, _tds__GetDot11Status *const*, const char *);
SOAP_FMAC3 _tds__GetDot11Status ** SOAP_FMAC4 soap_in_PointerTo_tds__GetDot11Status(struct soap*, const char*, _tds__GetDot11Status **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetDot11Status(struct soap*, _tds__GetDot11Status *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetDot11Status
#define soap_write_PointerTo_tds__GetDot11Status(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetDot11Status(soap, data),0) || soap_put_PointerTo_tds__GetDot11Status(soap, data, "tds:GetDot11Status", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDot11Status ** SOAP_FMAC4 soap_get_PointerTo_tds__GetDot11Status(struct soap*, _tds__GetDot11Status **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetDot11Status
#define soap_read_PointerTo_tds__GetDot11Status(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetDot11Status(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetDot11Capabilities
#define SOAP_TYPE_PointerTo_tds__GetDot11Capabilities (1822)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetDot11Capabilities(struct soap*, _tds__GetDot11Capabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetDot11Capabilities(struct soap*, const char *, int, _tds__GetDot11Capabilities *const*, const char *);
SOAP_FMAC3 _tds__GetDot11Capabilities ** SOAP_FMAC4 soap_in_PointerTo_tds__GetDot11Capabilities(struct soap*, const char*, _tds__GetDot11Capabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetDot11Capabilities(struct soap*, _tds__GetDot11Capabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetDot11Capabilities
#define soap_write_PointerTo_tds__GetDot11Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetDot11Capabilities(soap, data),0) || soap_put_PointerTo_tds__GetDot11Capabilities(soap, data, "tds:GetDot11Capabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDot11Capabilities ** SOAP_FMAC4 soap_get_PointerTo_tds__GetDot11Capabilities(struct soap*, _tds__GetDot11Capabilities **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetDot11Capabilities
#define soap_read_PointerTo_tds__GetDot11Capabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetDot11Capabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__DeleteDot1XConfiguration
#define SOAP_TYPE_PointerTo_tds__DeleteDot1XConfiguration (1818)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__DeleteDot1XConfiguration(struct soap*, _tds__DeleteDot1XConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__DeleteDot1XConfiguration(struct soap*, const char *, int, _tds__DeleteDot1XConfiguration *const*, const char *);
SOAP_FMAC3 _tds__DeleteDot1XConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tds__DeleteDot1XConfiguration(struct soap*, const char*, _tds__DeleteDot1XConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__DeleteDot1XConfiguration(struct soap*, _tds__DeleteDot1XConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__DeleteDot1XConfiguration
#define soap_write_PointerTo_tds__DeleteDot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__DeleteDot1XConfiguration(soap, data),0) || soap_put_PointerTo_tds__DeleteDot1XConfiguration(soap, data, "tds:DeleteDot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__DeleteDot1XConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tds__DeleteDot1XConfiguration(struct soap*, _tds__DeleteDot1XConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__DeleteDot1XConfiguration
#define soap_read_PointerTo_tds__DeleteDot1XConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__DeleteDot1XConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetDot1XConfigurations
#define SOAP_TYPE_PointerTo_tds__GetDot1XConfigurations (1814)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetDot1XConfigurations(struct soap*, _tds__GetDot1XConfigurations *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetDot1XConfigurations(struct soap*, const char *, int, _tds__GetDot1XConfigurations *const*, const char *);
SOAP_FMAC3 _tds__GetDot1XConfigurations ** SOAP_FMAC4 soap_in_PointerTo_tds__GetDot1XConfigurations(struct soap*, const char*, _tds__GetDot1XConfigurations **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetDot1XConfigurations(struct soap*, _tds__GetDot1XConfigurations *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetDot1XConfigurations
#define soap_write_PointerTo_tds__GetDot1XConfigurations(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetDot1XConfigurations(soap, data),0) || soap_put_PointerTo_tds__GetDot1XConfigurations(soap, data, "tds:GetDot1XConfigurations", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDot1XConfigurations ** SOAP_FMAC4 soap_get_PointerTo_tds__GetDot1XConfigurations(struct soap*, _tds__GetDot1XConfigurations **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetDot1XConfigurations
#define soap_read_PointerTo_tds__GetDot1XConfigurations(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetDot1XConfigurations(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetDot1XConfiguration
#define SOAP_TYPE_PointerTo_tds__GetDot1XConfiguration (1810)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetDot1XConfiguration(struct soap*, _tds__GetDot1XConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetDot1XConfiguration(struct soap*, const char *, int, _tds__GetDot1XConfiguration *const*, const char *);
SOAP_FMAC3 _tds__GetDot1XConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tds__GetDot1XConfiguration(struct soap*, const char*, _tds__GetDot1XConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetDot1XConfiguration(struct soap*, _tds__GetDot1XConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetDot1XConfiguration
#define soap_write_PointerTo_tds__GetDot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetDot1XConfiguration(soap, data),0) || soap_put_PointerTo_tds__GetDot1XConfiguration(soap, data, "tds:GetDot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDot1XConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tds__GetDot1XConfiguration(struct soap*, _tds__GetDot1XConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetDot1XConfiguration
#define soap_read_PointerTo_tds__GetDot1XConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetDot1XConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetDot1XConfiguration
#define SOAP_TYPE_PointerTo_tds__SetDot1XConfiguration (1806)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetDot1XConfiguration(struct soap*, _tds__SetDot1XConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetDot1XConfiguration(struct soap*, const char *, int, _tds__SetDot1XConfiguration *const*, const char *);
SOAP_FMAC3 _tds__SetDot1XConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tds__SetDot1XConfiguration(struct soap*, const char*, _tds__SetDot1XConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetDot1XConfiguration(struct soap*, _tds__SetDot1XConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetDot1XConfiguration
#define soap_write_PointerTo_tds__SetDot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetDot1XConfiguration(soap, data),0) || soap_put_PointerTo_tds__SetDot1XConfiguration(soap, data, "tds:SetDot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDot1XConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tds__SetDot1XConfiguration(struct soap*, _tds__SetDot1XConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetDot1XConfiguration
#define soap_read_PointerTo_tds__SetDot1XConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetDot1XConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__CreateDot1XConfiguration
#define SOAP_TYPE_PointerTo_tds__CreateDot1XConfiguration (1802)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__CreateDot1XConfiguration(struct soap*, _tds__CreateDot1XConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__CreateDot1XConfiguration(struct soap*, const char *, int, _tds__CreateDot1XConfiguration *const*, const char *);
SOAP_FMAC3 _tds__CreateDot1XConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tds__CreateDot1XConfiguration(struct soap*, const char*, _tds__CreateDot1XConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__CreateDot1XConfiguration(struct soap*, _tds__CreateDot1XConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__CreateDot1XConfiguration
#define soap_write_PointerTo_tds__CreateDot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__CreateDot1XConfiguration(soap, data),0) || soap_put_PointerTo_tds__CreateDot1XConfiguration(soap, data, "tds:CreateDot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__CreateDot1XConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tds__CreateDot1XConfiguration(struct soap*, _tds__CreateDot1XConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__CreateDot1XConfiguration
#define soap_read_PointerTo_tds__CreateDot1XConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__CreateDot1XConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__LoadCACertificates
#define SOAP_TYPE_PointerTo_tds__LoadCACertificates (1798)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__LoadCACertificates(struct soap*, _tds__LoadCACertificates *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__LoadCACertificates(struct soap*, const char *, int, _tds__LoadCACertificates *const*, const char *);
SOAP_FMAC3 _tds__LoadCACertificates ** SOAP_FMAC4 soap_in_PointerTo_tds__LoadCACertificates(struct soap*, const char*, _tds__LoadCACertificates **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__LoadCACertificates(struct soap*, _tds__LoadCACertificates *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__LoadCACertificates
#define soap_write_PointerTo_tds__LoadCACertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__LoadCACertificates(soap, data),0) || soap_put_PointerTo_tds__LoadCACertificates(soap, data, "tds:LoadCACertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__LoadCACertificates ** SOAP_FMAC4 soap_get_PointerTo_tds__LoadCACertificates(struct soap*, _tds__LoadCACertificates **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__LoadCACertificates
#define soap_read_PointerTo_tds__LoadCACertificates(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__LoadCACertificates(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetCertificateInformation
#define SOAP_TYPE_PointerTo_tds__GetCertificateInformation (1794)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetCertificateInformation(struct soap*, _tds__GetCertificateInformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetCertificateInformation(struct soap*, const char *, int, _tds__GetCertificateInformation *const*, const char *);
SOAP_FMAC3 _tds__GetCertificateInformation ** SOAP_FMAC4 soap_in_PointerTo_tds__GetCertificateInformation(struct soap*, const char*, _tds__GetCertificateInformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetCertificateInformation(struct soap*, _tds__GetCertificateInformation *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetCertificateInformation
#define soap_write_PointerTo_tds__GetCertificateInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetCertificateInformation(soap, data),0) || soap_put_PointerTo_tds__GetCertificateInformation(soap, data, "tds:GetCertificateInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCertificateInformation ** SOAP_FMAC4 soap_get_PointerTo_tds__GetCertificateInformation(struct soap*, _tds__GetCertificateInformation **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetCertificateInformation
#define soap_read_PointerTo_tds__GetCertificateInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetCertificateInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__LoadCertificateWithPrivateKey
#define SOAP_TYPE_PointerTo_tds__LoadCertificateWithPrivateKey (1790)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__LoadCertificateWithPrivateKey(struct soap*, _tds__LoadCertificateWithPrivateKey *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__LoadCertificateWithPrivateKey(struct soap*, const char *, int, _tds__LoadCertificateWithPrivateKey *const*, const char *);
SOAP_FMAC3 _tds__LoadCertificateWithPrivateKey ** SOAP_FMAC4 soap_in_PointerTo_tds__LoadCertificateWithPrivateKey(struct soap*, const char*, _tds__LoadCertificateWithPrivateKey **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__LoadCertificateWithPrivateKey(struct soap*, _tds__LoadCertificateWithPrivateKey *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__LoadCertificateWithPrivateKey
#define soap_write_PointerTo_tds__LoadCertificateWithPrivateKey(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__LoadCertificateWithPrivateKey(soap, data),0) || soap_put_PointerTo_tds__LoadCertificateWithPrivateKey(soap, data, "tds:LoadCertificateWithPrivateKey", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__LoadCertificateWithPrivateKey ** SOAP_FMAC4 soap_get_PointerTo_tds__LoadCertificateWithPrivateKey(struct soap*, _tds__LoadCertificateWithPrivateKey **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__LoadCertificateWithPrivateKey
#define soap_read_PointerTo_tds__LoadCertificateWithPrivateKey(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__LoadCertificateWithPrivateKey(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetCACertificates
#define SOAP_TYPE_PointerTo_tds__GetCACertificates (1786)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetCACertificates(struct soap*, _tds__GetCACertificates *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetCACertificates(struct soap*, const char *, int, _tds__GetCACertificates *const*, const char *);
SOAP_FMAC3 _tds__GetCACertificates ** SOAP_FMAC4 soap_in_PointerTo_tds__GetCACertificates(struct soap*, const char*, _tds__GetCACertificates **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetCACertificates(struct soap*, _tds__GetCACertificates *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetCACertificates
#define soap_write_PointerTo_tds__GetCACertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetCACertificates(soap, data),0) || soap_put_PointerTo_tds__GetCACertificates(soap, data, "tds:GetCACertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCACertificates ** SOAP_FMAC4 soap_get_PointerTo_tds__GetCACertificates(struct soap*, _tds__GetCACertificates **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetCACertificates
#define soap_read_PointerTo_tds__GetCACertificates(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetCACertificates(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SendAuxiliaryCommand
#define SOAP_TYPE_PointerTo_tds__SendAuxiliaryCommand (1782)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SendAuxiliaryCommand(struct soap*, _tds__SendAuxiliaryCommand *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SendAuxiliaryCommand(struct soap*, const char *, int, _tds__SendAuxiliaryCommand *const*, const char *);
SOAP_FMAC3 _tds__SendAuxiliaryCommand ** SOAP_FMAC4 soap_in_PointerTo_tds__SendAuxiliaryCommand(struct soap*, const char*, _tds__SendAuxiliaryCommand **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SendAuxiliaryCommand(struct soap*, _tds__SendAuxiliaryCommand *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SendAuxiliaryCommand
#define soap_write_PointerTo_tds__SendAuxiliaryCommand(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SendAuxiliaryCommand(soap, data),0) || soap_put_PointerTo_tds__SendAuxiliaryCommand(soap, data, "tds:SendAuxiliaryCommand", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SendAuxiliaryCommand ** SOAP_FMAC4 soap_get_PointerTo_tds__SendAuxiliaryCommand(struct soap*, _tds__SendAuxiliaryCommand **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SendAuxiliaryCommand
#define soap_read_PointerTo_tds__SendAuxiliaryCommand(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__SendAuxiliaryCommand(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetRelayOutputState
#define SOAP_TYPE_PointerTo_tds__SetRelayOutputState (1778)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetRelayOutputState(struct soap*, const char *, int, _tds__SetRelayOutputState *const*, const char *);
SOAP_FMAC3 _tds__SetRelayOutputState ** SOAP_FMAC4 soap_in_PointerTo_tds__SetRelayOutputState(struct soap*, const char*, _tds__SetRelayOutputState **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetRelayOutputState
#define soap_write_PointerTo_tds__SetRelayOutputState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetRelayOutputState(soap, data),0) || soap_put_PointerTo_tds__SetRelayOutputState(soap, data, "tds:SetRelayOutputState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetRelayOutputState ** SOAP_FMAC4 soap_get_PointerTo_tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetRelayOutputState
#define soap_read_PointerTo_tds__SetRelayOutputState(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetRelayOutputState(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetRelayOutputSettings
#define SOAP_TYPE_PointerTo_tds__SetRelayOutputSettings (1774)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetRelayOutputSettings(struct soap*, const char *, int, _tds__SetRelayOutputSettings *const*, const char *);
SOAP_FMAC3 _tds__SetRelayOutputSettings ** SOAP_FMAC4 soap_in_PointerTo_tds__SetRelayOutputSettings(struct soap*, const char*, _tds__SetRelayOutputSettings **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetRelayOutputSettings
#define soap_write_PointerTo_tds__SetRelayOutputSettings(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetRelayOutputSettings(soap, data),0) || soap_put_PointerTo_tds__SetRelayOutputSettings(soap, data, "tds:SetRelayOutputSettings", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetRelayOutputSettings ** SOAP_FMAC4 soap_get_PointerTo_tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetRelayOutputSettings
#define soap_read_PointerTo_tds__SetRelayOutputSettings(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetRelayOutputSettings(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetRelayOutputs
#define SOAP_TYPE_PointerTo_tds__GetRelayOutputs (1770)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetRelayOutputs(struct soap*, const char *, int, _tds__GetRelayOutputs *const*, const char *);
SOAP_FMAC3 _tds__GetRelayOutputs ** SOAP_FMAC4 soap_in_PointerTo_tds__GetRelayOutputs(struct soap*, const char*, _tds__GetRelayOutputs **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetRelayOutputs
#define soap_write_PointerTo_tds__GetRelayOutputs(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetRelayOutputs(soap, data),0) || soap_put_PointerTo_tds__GetRelayOutputs(soap, data, "tds:GetRelayOutputs", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetRelayOutputs ** SOAP_FMAC4 soap_get_PointerTo_tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetRelayOutputs
#define soap_read_PointerTo_tds__GetRelayOutputs(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetRelayOutputs(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetClientCertificateMode
#define SOAP_TYPE_PointerTo_tds__SetClientCertificateMode (1766)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetClientCertificateMode(struct soap*, const char *, int, _tds__SetClientCertificateMode *const*, const char *);
SOAP_FMAC3 _tds__SetClientCertificateMode ** SOAP_FMAC4 soap_in_PointerTo_tds__SetClientCertificateMode(struct soap*, const char*, _tds__SetClientCertificateMode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetClientCertificateMode
#define soap_write_PointerTo_tds__SetClientCertificateMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetClientCertificateMode(soap, data),0) || soap_put_PointerTo_tds__SetClientCertificateMode(soap, data, "tds:SetClientCertificateMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetClientCertificateMode ** SOAP_FMAC4 soap_get_PointerTo_tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetClientCertificateMode
#define soap_read_PointerTo_tds__SetClientCertificateMode(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetClientCertificateMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetClientCertificateMode
#define SOAP_TYPE_PointerTo_tds__GetClientCertificateMode (1762)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetClientCertificateMode(struct soap*, const char *, int, _tds__GetClientCertificateMode *const*, const char *);
SOAP_FMAC3 _tds__GetClientCertificateMode ** SOAP_FMAC4 soap_in_PointerTo_tds__GetClientCertificateMode(struct soap*, const char*, _tds__GetClientCertificateMode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetClientCertificateMode
#define soap_write_PointerTo_tds__GetClientCertificateMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetClientCertificateMode(soap, data),0) || soap_put_PointerTo_tds__GetClientCertificateMode(soap, data, "tds:GetClientCertificateMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetClientCertificateMode ** SOAP_FMAC4 soap_get_PointerTo_tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetClientCertificateMode
#define soap_read_PointerTo_tds__GetClientCertificateMode(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetClientCertificateMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__LoadCertificates
#define SOAP_TYPE_PointerTo_tds__LoadCertificates (1758)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__LoadCertificates(struct soap*, _tds__LoadCertificates *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__LoadCertificates(struct soap*, const char *, int, _tds__LoadCertificates *const*, const char *);
SOAP_FMAC3 _tds__LoadCertificates ** SOAP_FMAC4 soap_in_PointerTo_tds__LoadCertificates(struct soap*, const char*, _tds__LoadCertificates **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__LoadCertificates(struct soap*, _tds__LoadCertificates *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__LoadCertificates
#define soap_write_PointerTo_tds__LoadCertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__LoadCertificates(soap, data),0) || soap_put_PointerTo_tds__LoadCertificates(soap, data, "tds:LoadCertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__LoadCertificates ** SOAP_FMAC4 soap_get_PointerTo_tds__LoadCertificates(struct soap*, _tds__LoadCertificates **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__LoadCertificates
#define soap_read_PointerTo_tds__LoadCertificates(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__LoadCertificates(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetPkcs10Request
#define SOAP_TYPE_PointerTo_tds__GetPkcs10Request (1754)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetPkcs10Request(struct soap*, const char *, int, _tds__GetPkcs10Request *const*, const char *);
SOAP_FMAC3 _tds__GetPkcs10Request ** SOAP_FMAC4 soap_in_PointerTo_tds__GetPkcs10Request(struct soap*, const char*, _tds__GetPkcs10Request **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetPkcs10Request
#define soap_write_PointerTo_tds__GetPkcs10Request(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetPkcs10Request(soap, data),0) || soap_put_PointerTo_tds__GetPkcs10Request(soap, data, "tds:GetPkcs10Request", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetPkcs10Request ** SOAP_FMAC4 soap_get_PointerTo_tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetPkcs10Request
#define soap_read_PointerTo_tds__GetPkcs10Request(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetPkcs10Request(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__DeleteCertificates
#define SOAP_TYPE_PointerTo_tds__DeleteCertificates (1750)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__DeleteCertificates(struct soap*, const char *, int, _tds__DeleteCertificates *const*, const char *);
SOAP_FMAC3 _tds__DeleteCertificates ** SOAP_FMAC4 soap_in_PointerTo_tds__DeleteCertificates(struct soap*, const char*, _tds__DeleteCertificates **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__DeleteCertificates
#define soap_write_PointerTo_tds__DeleteCertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__DeleteCertificates(soap, data),0) || soap_put_PointerTo_tds__DeleteCertificates(soap, data, "tds:DeleteCertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__DeleteCertificates ** SOAP_FMAC4 soap_get_PointerTo_tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__DeleteCertificates
#define soap_read_PointerTo_tds__DeleteCertificates(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__DeleteCertificates(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetCertificatesStatus
#define SOAP_TYPE_PointerTo_tds__SetCertificatesStatus (1746)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetCertificatesStatus(struct soap*, const char *, int, _tds__SetCertificatesStatus *const*, const char *);
SOAP_FMAC3 _tds__SetCertificatesStatus ** SOAP_FMAC4 soap_in_PointerTo_tds__SetCertificatesStatus(struct soap*, const char*, _tds__SetCertificatesStatus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetCertificatesStatus
#define soap_write_PointerTo_tds__SetCertificatesStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetCertificatesStatus(soap, data),0) || soap_put_PointerTo_tds__SetCertificatesStatus(soap, data, "tds:SetCertificatesStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetCertificatesStatus ** SOAP_FMAC4 soap_get_PointerTo_tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetCertificatesStatus
#define soap_read_PointerTo_tds__SetCertificatesStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetCertificatesStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetCertificatesStatus
#define SOAP_TYPE_PointerTo_tds__GetCertificatesStatus (1742)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetCertificatesStatus(struct soap*, const char *, int, _tds__GetCertificatesStatus *const*, const char *);
SOAP_FMAC3 _tds__GetCertificatesStatus ** SOAP_FMAC4 soap_in_PointerTo_tds__GetCertificatesStatus(struct soap*, const char*, _tds__GetCertificatesStatus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetCertificatesStatus
#define soap_write_PointerTo_tds__GetCertificatesStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetCertificatesStatus(soap, data),0) || soap_put_PointerTo_tds__GetCertificatesStatus(soap, data, "tds:GetCertificatesStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCertificatesStatus ** SOAP_FMAC4 soap_get_PointerTo_tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetCertificatesStatus
#define soap_read_PointerTo_tds__GetCertificatesStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetCertificatesStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetCertificates
#define SOAP_TYPE_PointerTo_tds__GetCertificates (1738)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetCertificates(struct soap*, _tds__GetCertificates *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetCertificates(struct soap*, const char *, int, _tds__GetCertificates *const*, const char *);
SOAP_FMAC3 _tds__GetCertificates ** SOAP_FMAC4 soap_in_PointerTo_tds__GetCertificates(struct soap*, const char*, _tds__GetCertificates **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetCertificates(struct soap*, _tds__GetCertificates *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetCertificates
#define soap_write_PointerTo_tds__GetCertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetCertificates(soap, data),0) || soap_put_PointerTo_tds__GetCertificates(soap, data, "tds:GetCertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCertificates ** SOAP_FMAC4 soap_get_PointerTo_tds__GetCertificates(struct soap*, _tds__GetCertificates **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetCertificates
#define soap_read_PointerTo_tds__GetCertificates(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetCertificates(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__CreateCertificate
#define SOAP_TYPE_PointerTo_tds__CreateCertificate (1734)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__CreateCertificate(struct soap*, _tds__CreateCertificate *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__CreateCertificate(struct soap*, const char *, int, _tds__CreateCertificate *const*, const char *);
SOAP_FMAC3 _tds__CreateCertificate ** SOAP_FMAC4 soap_in_PointerTo_tds__CreateCertificate(struct soap*, const char*, _tds__CreateCertificate **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__CreateCertificate(struct soap*, _tds__CreateCertificate *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__CreateCertificate
#define soap_write_PointerTo_tds__CreateCertificate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__CreateCertificate(soap, data),0) || soap_put_PointerTo_tds__CreateCertificate(soap, data, "tds:CreateCertificate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__CreateCertificate ** SOAP_FMAC4 soap_get_PointerTo_tds__CreateCertificate(struct soap*, _tds__CreateCertificate **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__CreateCertificate
#define soap_read_PointerTo_tds__CreateCertificate(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__CreateCertificate(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetAccessPolicy
#define SOAP_TYPE_PointerTo_tds__SetAccessPolicy (1730)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetAccessPolicy(struct soap*, const char *, int, _tds__SetAccessPolicy *const*, const char *);
SOAP_FMAC3 _tds__SetAccessPolicy ** SOAP_FMAC4 soap_in_PointerTo_tds__SetAccessPolicy(struct soap*, const char*, _tds__SetAccessPolicy **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetAccessPolicy
#define soap_write_PointerTo_tds__SetAccessPolicy(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetAccessPolicy(soap, data),0) || soap_put_PointerTo_tds__SetAccessPolicy(soap, data, "tds:SetAccessPolicy", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetAccessPolicy ** SOAP_FMAC4 soap_get_PointerTo_tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetAccessPolicy
#define soap_read_PointerTo_tds__SetAccessPolicy(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetAccessPolicy(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetAccessPolicy
#define SOAP_TYPE_PointerTo_tds__GetAccessPolicy (1726)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetAccessPolicy(struct soap*, const char *, int, _tds__GetAccessPolicy *const*, const char *);
SOAP_FMAC3 _tds__GetAccessPolicy ** SOAP_FMAC4 soap_in_PointerTo_tds__GetAccessPolicy(struct soap*, const char*, _tds__GetAccessPolicy **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetAccessPolicy
#define soap_write_PointerTo_tds__GetAccessPolicy(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetAccessPolicy(soap, data),0) || soap_put_PointerTo_tds__GetAccessPolicy(soap, data, "tds:GetAccessPolicy", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetAccessPolicy ** SOAP_FMAC4 soap_get_PointerTo_tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetAccessPolicy
#define soap_read_PointerTo_tds__GetAccessPolicy(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetAccessPolicy(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__RemoveIPAddressFilter
#define SOAP_TYPE_PointerTo_tds__RemoveIPAddressFilter (1722)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__RemoveIPAddressFilter(struct soap*, const char *, int, _tds__RemoveIPAddressFilter *const*, const char *);
SOAP_FMAC3 _tds__RemoveIPAddressFilter ** SOAP_FMAC4 soap_in_PointerTo_tds__RemoveIPAddressFilter(struct soap*, const char*, _tds__RemoveIPAddressFilter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__RemoveIPAddressFilter
#define soap_write_PointerTo_tds__RemoveIPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__RemoveIPAddressFilter(soap, data),0) || soap_put_PointerTo_tds__RemoveIPAddressFilter(soap, data, "tds:RemoveIPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__RemoveIPAddressFilter ** SOAP_FMAC4 soap_get_PointerTo_tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__RemoveIPAddressFilter
#define soap_read_PointerTo_tds__RemoveIPAddressFilter(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__RemoveIPAddressFilter(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__AddIPAddressFilter
#define SOAP_TYPE_PointerTo_tds__AddIPAddressFilter (1718)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__AddIPAddressFilter(struct soap*, const char *, int, _tds__AddIPAddressFilter *const*, const char *);
SOAP_FMAC3 _tds__AddIPAddressFilter ** SOAP_FMAC4 soap_in_PointerTo_tds__AddIPAddressFilter(struct soap*, const char*, _tds__AddIPAddressFilter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__AddIPAddressFilter
#define soap_write_PointerTo_tds__AddIPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__AddIPAddressFilter(soap, data),0) || soap_put_PointerTo_tds__AddIPAddressFilter(soap, data, "tds:AddIPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__AddIPAddressFilter ** SOAP_FMAC4 soap_get_PointerTo_tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__AddIPAddressFilter
#define soap_read_PointerTo_tds__AddIPAddressFilter(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__AddIPAddressFilter(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetIPAddressFilter
#define SOAP_TYPE_PointerTo_tds__SetIPAddressFilter (1714)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetIPAddressFilter(struct soap*, const char *, int, _tds__SetIPAddressFilter *const*, const char *);
SOAP_FMAC3 _tds__SetIPAddressFilter ** SOAP_FMAC4 soap_in_PointerTo_tds__SetIPAddressFilter(struct soap*, const char*, _tds__SetIPAddressFilter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetIPAddressFilter
#define soap_write_PointerTo_tds__SetIPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetIPAddressFilter(soap, data),0) || soap_put_PointerTo_tds__SetIPAddressFilter(soap, data, "tds:SetIPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetIPAddressFilter ** SOAP_FMAC4 soap_get_PointerTo_tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetIPAddressFilter
#define soap_read_PointerTo_tds__SetIPAddressFilter(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetIPAddressFilter(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetIPAddressFilter
#define SOAP_TYPE_PointerTo_tds__GetIPAddressFilter (1710)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetIPAddressFilter(struct soap*, const char *, int, _tds__GetIPAddressFilter *const*, const char *);
SOAP_FMAC3 _tds__GetIPAddressFilter ** SOAP_FMAC4 soap_in_PointerTo_tds__GetIPAddressFilter(struct soap*, const char*, _tds__GetIPAddressFilter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetIPAddressFilter
#define soap_write_PointerTo_tds__GetIPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetIPAddressFilter(soap, data),0) || soap_put_PointerTo_tds__GetIPAddressFilter(soap, data, "tds:GetIPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetIPAddressFilter ** SOAP_FMAC4 soap_get_PointerTo_tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetIPAddressFilter
#define soap_read_PointerTo_tds__GetIPAddressFilter(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetIPAddressFilter(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetZeroConfiguration
#define SOAP_TYPE_PointerTo_tds__SetZeroConfiguration (1706)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetZeroConfiguration(struct soap*, const char *, int, _tds__SetZeroConfiguration *const*, const char *);
SOAP_FMAC3 _tds__SetZeroConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tds__SetZeroConfiguration(struct soap*, const char*, _tds__SetZeroConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetZeroConfiguration
#define soap_write_PointerTo_tds__SetZeroConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetZeroConfiguration(soap, data),0) || soap_put_PointerTo_tds__SetZeroConfiguration(soap, data, "tds:SetZeroConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetZeroConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetZeroConfiguration
#define soap_read_PointerTo_tds__SetZeroConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetZeroConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetZeroConfiguration
#define SOAP_TYPE_PointerTo_tds__GetZeroConfiguration (1702)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetZeroConfiguration(struct soap*, const char *, int, _tds__GetZeroConfiguration *const*, const char *);
SOAP_FMAC3 _tds__GetZeroConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tds__GetZeroConfiguration(struct soap*, const char*, _tds__GetZeroConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetZeroConfiguration
#define soap_write_PointerTo_tds__GetZeroConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetZeroConfiguration(soap, data),0) || soap_put_PointerTo_tds__GetZeroConfiguration(soap, data, "tds:GetZeroConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetZeroConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetZeroConfiguration
#define soap_read_PointerTo_tds__GetZeroConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetZeroConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetNetworkDefaultGateway
#define SOAP_TYPE_PointerTo_tds__SetNetworkDefaultGateway (1698)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetNetworkDefaultGateway(struct soap*, const char *, int, _tds__SetNetworkDefaultGateway *const*, const char *);
SOAP_FMAC3 _tds__SetNetworkDefaultGateway ** SOAP_FMAC4 soap_in_PointerTo_tds__SetNetworkDefaultGateway(struct soap*, const char*, _tds__SetNetworkDefaultGateway **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetNetworkDefaultGateway
#define soap_write_PointerTo_tds__SetNetworkDefaultGateway(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetNetworkDefaultGateway(soap, data),0) || soap_put_PointerTo_tds__SetNetworkDefaultGateway(soap, data, "tds:SetNetworkDefaultGateway", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetNetworkDefaultGateway ** SOAP_FMAC4 soap_get_PointerTo_tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetNetworkDefaultGateway
#define soap_read_PointerTo_tds__SetNetworkDefaultGateway(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetNetworkDefaultGateway(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetNetworkDefaultGateway
#define SOAP_TYPE_PointerTo_tds__GetNetworkDefaultGateway (1694)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetNetworkDefaultGateway(struct soap*, const char *, int, _tds__GetNetworkDefaultGateway *const*, const char *);
SOAP_FMAC3 _tds__GetNetworkDefaultGateway ** SOAP_FMAC4 soap_in_PointerTo_tds__GetNetworkDefaultGateway(struct soap*, const char*, _tds__GetNetworkDefaultGateway **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetNetworkDefaultGateway
#define soap_write_PointerTo_tds__GetNetworkDefaultGateway(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetNetworkDefaultGateway(soap, data),0) || soap_put_PointerTo_tds__GetNetworkDefaultGateway(soap, data, "tds:GetNetworkDefaultGateway", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetNetworkDefaultGateway ** SOAP_FMAC4 soap_get_PointerTo_tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetNetworkDefaultGateway
#define soap_read_PointerTo_tds__GetNetworkDefaultGateway(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetNetworkDefaultGateway(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetNetworkProtocols
#define SOAP_TYPE_PointerTo_tds__SetNetworkProtocols (1690)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetNetworkProtocols(struct soap*, const char *, int, _tds__SetNetworkProtocols *const*, const char *);
SOAP_FMAC3 _tds__SetNetworkProtocols ** SOAP_FMAC4 soap_in_PointerTo_tds__SetNetworkProtocols(struct soap*, const char*, _tds__SetNetworkProtocols **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetNetworkProtocols
#define soap_write_PointerTo_tds__SetNetworkProtocols(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetNetworkProtocols(soap, data),0) || soap_put_PointerTo_tds__SetNetworkProtocols(soap, data, "tds:SetNetworkProtocols", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetNetworkProtocols ** SOAP_FMAC4 soap_get_PointerTo_tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetNetworkProtocols
#define soap_read_PointerTo_tds__SetNetworkProtocols(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetNetworkProtocols(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetNetworkProtocols
#define SOAP_TYPE_PointerTo_tds__GetNetworkProtocols (1686)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetNetworkProtocols(struct soap*, const char *, int, _tds__GetNetworkProtocols *const*, const char *);
SOAP_FMAC3 _tds__GetNetworkProtocols ** SOAP_FMAC4 soap_in_PointerTo_tds__GetNetworkProtocols(struct soap*, const char*, _tds__GetNetworkProtocols **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetNetworkProtocols
#define soap_write_PointerTo_tds__GetNetworkProtocols(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetNetworkProtocols(soap, data),0) || soap_put_PointerTo_tds__GetNetworkProtocols(soap, data, "tds:GetNetworkProtocols", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetNetworkProtocols ** SOAP_FMAC4 soap_get_PointerTo_tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetNetworkProtocols
#define soap_read_PointerTo_tds__GetNetworkProtocols(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetNetworkProtocols(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetNetworkInterfaces
#define SOAP_TYPE_PointerTo_tds__SetNetworkInterfaces (1682)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetNetworkInterfaces(struct soap*, const char *, int, _tds__SetNetworkInterfaces *const*, const char *);
SOAP_FMAC3 _tds__SetNetworkInterfaces ** SOAP_FMAC4 soap_in_PointerTo_tds__SetNetworkInterfaces(struct soap*, const char*, _tds__SetNetworkInterfaces **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetNetworkInterfaces
#define soap_write_PointerTo_tds__SetNetworkInterfaces(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetNetworkInterfaces(soap, data),0) || soap_put_PointerTo_tds__SetNetworkInterfaces(soap, data, "tds:SetNetworkInterfaces", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetNetworkInterfaces ** SOAP_FMAC4 soap_get_PointerTo_tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetNetworkInterfaces
#define soap_read_PointerTo_tds__SetNetworkInterfaces(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetNetworkInterfaces(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetNetworkInterfaces
#define SOAP_TYPE_PointerTo_tds__GetNetworkInterfaces (1678)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetNetworkInterfaces(struct soap*, const char *, int, _tds__GetNetworkInterfaces *const*, const char *);
SOAP_FMAC3 _tds__GetNetworkInterfaces ** SOAP_FMAC4 soap_in_PointerTo_tds__GetNetworkInterfaces(struct soap*, const char*, _tds__GetNetworkInterfaces **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetNetworkInterfaces
#define soap_write_PointerTo_tds__GetNetworkInterfaces(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetNetworkInterfaces(soap, data),0) || soap_put_PointerTo_tds__GetNetworkInterfaces(soap, data, "tds:GetNetworkInterfaces", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetNetworkInterfaces ** SOAP_FMAC4 soap_get_PointerTo_tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetNetworkInterfaces
#define soap_read_PointerTo_tds__GetNetworkInterfaces(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetNetworkInterfaces(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetDynamicDNS
#define SOAP_TYPE_PointerTo_tds__SetDynamicDNS (1674)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetDynamicDNS(struct soap*, const char *, int, _tds__SetDynamicDNS *const*, const char *);
SOAP_FMAC3 _tds__SetDynamicDNS ** SOAP_FMAC4 soap_in_PointerTo_tds__SetDynamicDNS(struct soap*, const char*, _tds__SetDynamicDNS **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetDynamicDNS
#define soap_write_PointerTo_tds__SetDynamicDNS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetDynamicDNS(soap, data),0) || soap_put_PointerTo_tds__SetDynamicDNS(soap, data, "tds:SetDynamicDNS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDynamicDNS ** SOAP_FMAC4 soap_get_PointerTo_tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetDynamicDNS
#define soap_read_PointerTo_tds__SetDynamicDNS(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetDynamicDNS(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetDynamicDNS
#define SOAP_TYPE_PointerTo_tds__GetDynamicDNS (1670)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetDynamicDNS(struct soap*, const char *, int, _tds__GetDynamicDNS *const*, const char *);
SOAP_FMAC3 _tds__GetDynamicDNS ** SOAP_FMAC4 soap_in_PointerTo_tds__GetDynamicDNS(struct soap*, const char*, _tds__GetDynamicDNS **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetDynamicDNS
#define soap_write_PointerTo_tds__GetDynamicDNS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetDynamicDNS(soap, data),0) || soap_put_PointerTo_tds__GetDynamicDNS(soap, data, "tds:GetDynamicDNS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDynamicDNS ** SOAP_FMAC4 soap_get_PointerTo_tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetDynamicDNS
#define soap_read_PointerTo_tds__GetDynamicDNS(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetDynamicDNS(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetNTP
#define SOAP_TYPE_PointerTo_tds__SetNTP (1666)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetNTP(struct soap*, _tds__SetNTP *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetNTP(struct soap*, const char *, int, _tds__SetNTP *const*, const char *);
SOAP_FMAC3 _tds__SetNTP ** SOAP_FMAC4 soap_in_PointerTo_tds__SetNTP(struct soap*, const char*, _tds__SetNTP **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetNTP(struct soap*, _tds__SetNTP *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetNTP
#define soap_write_PointerTo_tds__SetNTP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetNTP(soap, data),0) || soap_put_PointerTo_tds__SetNTP(soap, data, "tds:SetNTP", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetNTP ** SOAP_FMAC4 soap_get_PointerTo_tds__SetNTP(struct soap*, _tds__SetNTP **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetNTP
#define soap_read_PointerTo_tds__SetNTP(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetNTP(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetNTP
#define SOAP_TYPE_PointerTo_tds__GetNTP (1662)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetNTP(struct soap*, _tds__GetNTP *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetNTP(struct soap*, const char *, int, _tds__GetNTP *const*, const char *);
SOAP_FMAC3 _tds__GetNTP ** SOAP_FMAC4 soap_in_PointerTo_tds__GetNTP(struct soap*, const char*, _tds__GetNTP **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetNTP(struct soap*, _tds__GetNTP *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetNTP
#define soap_write_PointerTo_tds__GetNTP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetNTP(soap, data),0) || soap_put_PointerTo_tds__GetNTP(soap, data, "tds:GetNTP", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetNTP ** SOAP_FMAC4 soap_get_PointerTo_tds__GetNTP(struct soap*, _tds__GetNTP **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetNTP
#define soap_read_PointerTo_tds__GetNTP(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetNTP(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetDNS
#define SOAP_TYPE_PointerTo_tds__SetDNS (1658)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetDNS(struct soap*, _tds__SetDNS *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetDNS(struct soap*, const char *, int, _tds__SetDNS *const*, const char *);
SOAP_FMAC3 _tds__SetDNS ** SOAP_FMAC4 soap_in_PointerTo_tds__SetDNS(struct soap*, const char*, _tds__SetDNS **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetDNS(struct soap*, _tds__SetDNS *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetDNS
#define soap_write_PointerTo_tds__SetDNS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetDNS(soap, data),0) || soap_put_PointerTo_tds__SetDNS(soap, data, "tds:SetDNS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDNS ** SOAP_FMAC4 soap_get_PointerTo_tds__SetDNS(struct soap*, _tds__SetDNS **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetDNS
#define soap_read_PointerTo_tds__SetDNS(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetDNS(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetDNS
#define SOAP_TYPE_PointerTo_tds__GetDNS (1654)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetDNS(struct soap*, _tds__GetDNS *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetDNS(struct soap*, const char *, int, _tds__GetDNS *const*, const char *);
SOAP_FMAC3 _tds__GetDNS ** SOAP_FMAC4 soap_in_PointerTo_tds__GetDNS(struct soap*, const char*, _tds__GetDNS **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetDNS(struct soap*, _tds__GetDNS *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetDNS
#define soap_write_PointerTo_tds__GetDNS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetDNS(soap, data),0) || soap_put_PointerTo_tds__GetDNS(soap, data, "tds:GetDNS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDNS ** SOAP_FMAC4 soap_get_PointerTo_tds__GetDNS(struct soap*, _tds__GetDNS **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetDNS
#define soap_read_PointerTo_tds__GetDNS(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetDNS(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetHostnameFromDHCP
#define SOAP_TYPE_PointerTo_tds__SetHostnameFromDHCP (1650)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetHostnameFromDHCP(struct soap*, _tds__SetHostnameFromDHCP *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetHostnameFromDHCP(struct soap*, const char *, int, _tds__SetHostnameFromDHCP *const*, const char *);
SOAP_FMAC3 _tds__SetHostnameFromDHCP ** SOAP_FMAC4 soap_in_PointerTo_tds__SetHostnameFromDHCP(struct soap*, const char*, _tds__SetHostnameFromDHCP **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetHostnameFromDHCP(struct soap*, _tds__SetHostnameFromDHCP *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetHostnameFromDHCP
#define soap_write_PointerTo_tds__SetHostnameFromDHCP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetHostnameFromDHCP(soap, data),0) || soap_put_PointerTo_tds__SetHostnameFromDHCP(soap, data, "tds:SetHostnameFromDHCP", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetHostnameFromDHCP ** SOAP_FMAC4 soap_get_PointerTo_tds__SetHostnameFromDHCP(struct soap*, _tds__SetHostnameFromDHCP **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetHostnameFromDHCP
#define soap_read_PointerTo_tds__SetHostnameFromDHCP(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetHostnameFromDHCP(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetHostname
#define SOAP_TYPE_PointerTo_tds__SetHostname (1646)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetHostname(struct soap*, _tds__SetHostname *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetHostname(struct soap*, const char *, int, _tds__SetHostname *const*, const char *);
SOAP_FMAC3 _tds__SetHostname ** SOAP_FMAC4 soap_in_PointerTo_tds__SetHostname(struct soap*, const char*, _tds__SetHostname **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetHostname(struct soap*, _tds__SetHostname *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetHostname
#define soap_write_PointerTo_tds__SetHostname(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetHostname(soap, data),0) || soap_put_PointerTo_tds__SetHostname(soap, data, "tds:SetHostname", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetHostname ** SOAP_FMAC4 soap_get_PointerTo_tds__SetHostname(struct soap*, _tds__SetHostname **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetHostname
#define soap_read_PointerTo_tds__SetHostname(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetHostname(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetHostname
#define SOAP_TYPE_PointerTo_tds__GetHostname (1642)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetHostname(struct soap*, _tds__GetHostname *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetHostname(struct soap*, const char *, int, _tds__GetHostname *const*, const char *);
SOAP_FMAC3 _tds__GetHostname ** SOAP_FMAC4 soap_in_PointerTo_tds__GetHostname(struct soap*, const char*, _tds__GetHostname **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetHostname(struct soap*, _tds__GetHostname *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetHostname
#define soap_write_PointerTo_tds__GetHostname(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetHostname(soap, data),0) || soap_put_PointerTo_tds__GetHostname(soap, data, "tds:GetHostname", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetHostname ** SOAP_FMAC4 soap_get_PointerTo_tds__GetHostname(struct soap*, _tds__GetHostname **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetHostname
#define soap_read_PointerTo_tds__GetHostname(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetHostname(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetDPAddresses
#define SOAP_TYPE_PointerTo_tds__SetDPAddresses (1638)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetDPAddresses(struct soap*, const char *, int, _tds__SetDPAddresses *const*, const char *);
SOAP_FMAC3 _tds__SetDPAddresses ** SOAP_FMAC4 soap_in_PointerTo_tds__SetDPAddresses(struct soap*, const char*, _tds__SetDPAddresses **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetDPAddresses
#define soap_write_PointerTo_tds__SetDPAddresses(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetDPAddresses(soap, data),0) || soap_put_PointerTo_tds__SetDPAddresses(soap, data, "tds:SetDPAddresses", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDPAddresses ** SOAP_FMAC4 soap_get_PointerTo_tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetDPAddresses
#define soap_read_PointerTo_tds__SetDPAddresses(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetDPAddresses(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetCapabilities
#define SOAP_TYPE_PointerTo_tds__GetCapabilities (1634)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetCapabilities(struct soap*, _tds__GetCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetCapabilities(struct soap*, const char *, int, _tds__GetCapabilities *const*, const char *);
SOAP_FMAC3 _tds__GetCapabilities ** SOAP_FMAC4 soap_in_PointerTo_tds__GetCapabilities(struct soap*, const char*, _tds__GetCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetCapabilities(struct soap*, _tds__GetCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetCapabilities
#define soap_write_PointerTo_tds__GetCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetCapabilities(soap, data),0) || soap_put_PointerTo_tds__GetCapabilities(soap, data, "tds:GetCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCapabilities ** SOAP_FMAC4 soap_get_PointerTo_tds__GetCapabilities(struct soap*, _tds__GetCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetCapabilities
#define soap_read_PointerTo_tds__GetCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetWsdlUrl
#define SOAP_TYPE_PointerTo_tds__GetWsdlUrl (1630)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetWsdlUrl(struct soap*, const char *, int, _tds__GetWsdlUrl *const*, const char *);
SOAP_FMAC3 _tds__GetWsdlUrl ** SOAP_FMAC4 soap_in_PointerTo_tds__GetWsdlUrl(struct soap*, const char*, _tds__GetWsdlUrl **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetWsdlUrl
#define soap_write_PointerTo_tds__GetWsdlUrl(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetWsdlUrl(soap, data),0) || soap_put_PointerTo_tds__GetWsdlUrl(soap, data, "tds:GetWsdlUrl", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetWsdlUrl ** SOAP_FMAC4 soap_get_PointerTo_tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetWsdlUrl
#define soap_read_PointerTo_tds__GetWsdlUrl(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetWsdlUrl(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetUser
#define SOAP_TYPE_PointerTo_tds__SetUser (1626)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetUser(struct soap*, _tds__SetUser *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetUser(struct soap*, const char *, int, _tds__SetUser *const*, const char *);
SOAP_FMAC3 _tds__SetUser ** SOAP_FMAC4 soap_in_PointerTo_tds__SetUser(struct soap*, const char*, _tds__SetUser **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetUser(struct soap*, _tds__SetUser *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetUser
#define soap_write_PointerTo_tds__SetUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetUser(soap, data),0) || soap_put_PointerTo_tds__SetUser(soap, data, "tds:SetUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetUser ** SOAP_FMAC4 soap_get_PointerTo_tds__SetUser(struct soap*, _tds__SetUser **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetUser
#define soap_read_PointerTo_tds__SetUser(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__DeleteUsers
#define SOAP_TYPE_PointerTo_tds__DeleteUsers (1622)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__DeleteUsers(struct soap*, _tds__DeleteUsers *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__DeleteUsers(struct soap*, const char *, int, _tds__DeleteUsers *const*, const char *);
SOAP_FMAC3 _tds__DeleteUsers ** SOAP_FMAC4 soap_in_PointerTo_tds__DeleteUsers(struct soap*, const char*, _tds__DeleteUsers **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__DeleteUsers(struct soap*, _tds__DeleteUsers *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__DeleteUsers
#define soap_write_PointerTo_tds__DeleteUsers(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__DeleteUsers(soap, data),0) || soap_put_PointerTo_tds__DeleteUsers(soap, data, "tds:DeleteUsers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__DeleteUsers ** SOAP_FMAC4 soap_get_PointerTo_tds__DeleteUsers(struct soap*, _tds__DeleteUsers **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__DeleteUsers
#define soap_read_PointerTo_tds__DeleteUsers(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__DeleteUsers(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__CreateUsers
#define SOAP_TYPE_PointerTo_tds__CreateUsers (1618)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__CreateUsers(struct soap*, _tds__CreateUsers *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__CreateUsers(struct soap*, const char *, int, _tds__CreateUsers *const*, const char *);
SOAP_FMAC3 _tds__CreateUsers ** SOAP_FMAC4 soap_in_PointerTo_tds__CreateUsers(struct soap*, const char*, _tds__CreateUsers **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__CreateUsers(struct soap*, _tds__CreateUsers *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__CreateUsers
#define soap_write_PointerTo_tds__CreateUsers(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__CreateUsers(soap, data),0) || soap_put_PointerTo_tds__CreateUsers(soap, data, "tds:CreateUsers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__CreateUsers ** SOAP_FMAC4 soap_get_PointerTo_tds__CreateUsers(struct soap*, _tds__CreateUsers **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__CreateUsers
#define soap_read_PointerTo_tds__CreateUsers(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__CreateUsers(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetUsers
#define SOAP_TYPE_PointerTo_tds__GetUsers (1614)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetUsers(struct soap*, _tds__GetUsers *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetUsers(struct soap*, const char *, int, _tds__GetUsers *const*, const char *);
SOAP_FMAC3 _tds__GetUsers ** SOAP_FMAC4 soap_in_PointerTo_tds__GetUsers(struct soap*, const char*, _tds__GetUsers **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetUsers(struct soap*, _tds__GetUsers *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetUsers
#define soap_write_PointerTo_tds__GetUsers(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetUsers(soap, data),0) || soap_put_PointerTo_tds__GetUsers(soap, data, "tds:GetUsers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetUsers ** SOAP_FMAC4 soap_get_PointerTo_tds__GetUsers(struct soap*, _tds__GetUsers **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetUsers
#define soap_read_PointerTo_tds__GetUsers(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetUsers(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetRemoteUser
#define SOAP_TYPE_PointerTo_tds__SetRemoteUser (1610)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetRemoteUser(struct soap*, _tds__SetRemoteUser *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetRemoteUser(struct soap*, const char *, int, _tds__SetRemoteUser *const*, const char *);
SOAP_FMAC3 _tds__SetRemoteUser ** SOAP_FMAC4 soap_in_PointerTo_tds__SetRemoteUser(struct soap*, const char*, _tds__SetRemoteUser **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetRemoteUser(struct soap*, _tds__SetRemoteUser *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetRemoteUser
#define soap_write_PointerTo_tds__SetRemoteUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetRemoteUser(soap, data),0) || soap_put_PointerTo_tds__SetRemoteUser(soap, data, "tds:SetRemoteUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetRemoteUser ** SOAP_FMAC4 soap_get_PointerTo_tds__SetRemoteUser(struct soap*, _tds__SetRemoteUser **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetRemoteUser
#define soap_read_PointerTo_tds__SetRemoteUser(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetRemoteUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetRemoteUser
#define SOAP_TYPE_PointerTo_tds__GetRemoteUser (1606)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetRemoteUser(struct soap*, _tds__GetRemoteUser *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetRemoteUser(struct soap*, const char *, int, _tds__GetRemoteUser *const*, const char *);
SOAP_FMAC3 _tds__GetRemoteUser ** SOAP_FMAC4 soap_in_PointerTo_tds__GetRemoteUser(struct soap*, const char*, _tds__GetRemoteUser **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetRemoteUser(struct soap*, _tds__GetRemoteUser *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetRemoteUser
#define soap_write_PointerTo_tds__GetRemoteUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetRemoteUser(soap, data),0) || soap_put_PointerTo_tds__GetRemoteUser(soap, data, "tds:GetRemoteUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetRemoteUser ** SOAP_FMAC4 soap_get_PointerTo_tds__GetRemoteUser(struct soap*, _tds__GetRemoteUser **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetRemoteUser
#define soap_read_PointerTo_tds__GetRemoteUser(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetRemoteUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetEndpointReference
#define SOAP_TYPE_PointerTo_tds__GetEndpointReference (1602)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetEndpointReference(struct soap*, _tds__GetEndpointReference *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetEndpointReference(struct soap*, const char *, int, _tds__GetEndpointReference *const*, const char *);
SOAP_FMAC3 _tds__GetEndpointReference ** SOAP_FMAC4 soap_in_PointerTo_tds__GetEndpointReference(struct soap*, const char*, _tds__GetEndpointReference **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetEndpointReference(struct soap*, _tds__GetEndpointReference *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetEndpointReference
#define soap_write_PointerTo_tds__GetEndpointReference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetEndpointReference(soap, data),0) || soap_put_PointerTo_tds__GetEndpointReference(soap, data, "tds:GetEndpointReference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetEndpointReference ** SOAP_FMAC4 soap_get_PointerTo_tds__GetEndpointReference(struct soap*, _tds__GetEndpointReference **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetEndpointReference
#define soap_read_PointerTo_tds__GetEndpointReference(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetEndpointReference(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetDPAddresses
#define SOAP_TYPE_PointerTo_tds__GetDPAddresses (1598)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetDPAddresses(struct soap*, const char *, int, _tds__GetDPAddresses *const*, const char *);
SOAP_FMAC3 _tds__GetDPAddresses ** SOAP_FMAC4 soap_in_PointerTo_tds__GetDPAddresses(struct soap*, const char*, _tds__GetDPAddresses **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetDPAddresses
#define soap_write_PointerTo_tds__GetDPAddresses(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetDPAddresses(soap, data),0) || soap_put_PointerTo_tds__GetDPAddresses(soap, data, "tds:GetDPAddresses", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDPAddresses ** SOAP_FMAC4 soap_get_PointerTo_tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetDPAddresses
#define soap_read_PointerTo_tds__GetDPAddresses(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetDPAddresses(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetRemoteDiscoveryMode
#define SOAP_TYPE_PointerTo_tds__SetRemoteDiscoveryMode (1594)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetRemoteDiscoveryMode(struct soap*, const char *, int, _tds__SetRemoteDiscoveryMode *const*, const char *);
SOAP_FMAC3 _tds__SetRemoteDiscoveryMode ** SOAP_FMAC4 soap_in_PointerTo_tds__SetRemoteDiscoveryMode(struct soap*, const char*, _tds__SetRemoteDiscoveryMode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetRemoteDiscoveryMode
#define soap_write_PointerTo_tds__SetRemoteDiscoveryMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetRemoteDiscoveryMode(soap, data),0) || soap_put_PointerTo_tds__SetRemoteDiscoveryMode(soap, data, "tds:SetRemoteDiscoveryMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetRemoteDiscoveryMode ** SOAP_FMAC4 soap_get_PointerTo_tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetRemoteDiscoveryMode
#define soap_read_PointerTo_tds__SetRemoteDiscoveryMode(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetRemoteDiscoveryMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetRemoteDiscoveryMode
#define SOAP_TYPE_PointerTo_tds__GetRemoteDiscoveryMode (1590)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetRemoteDiscoveryMode(struct soap*, const char *, int, _tds__GetRemoteDiscoveryMode *const*, const char *);
SOAP_FMAC3 _tds__GetRemoteDiscoveryMode ** SOAP_FMAC4 soap_in_PointerTo_tds__GetRemoteDiscoveryMode(struct soap*, const char*, _tds__GetRemoteDiscoveryMode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetRemoteDiscoveryMode
#define soap_write_PointerTo_tds__GetRemoteDiscoveryMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetRemoteDiscoveryMode(soap, data),0) || soap_put_PointerTo_tds__GetRemoteDiscoveryMode(soap, data, "tds:GetRemoteDiscoveryMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetRemoteDiscoveryMode ** SOAP_FMAC4 soap_get_PointerTo_tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetRemoteDiscoveryMode
#define soap_read_PointerTo_tds__GetRemoteDiscoveryMode(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetRemoteDiscoveryMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetDiscoveryMode
#define SOAP_TYPE_PointerTo_tds__SetDiscoveryMode (1586)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetDiscoveryMode(struct soap*, const char *, int, _tds__SetDiscoveryMode *const*, const char *);
SOAP_FMAC3 _tds__SetDiscoveryMode ** SOAP_FMAC4 soap_in_PointerTo_tds__SetDiscoveryMode(struct soap*, const char*, _tds__SetDiscoveryMode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetDiscoveryMode
#define soap_write_PointerTo_tds__SetDiscoveryMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetDiscoveryMode(soap, data),0) || soap_put_PointerTo_tds__SetDiscoveryMode(soap, data, "tds:SetDiscoveryMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDiscoveryMode ** SOAP_FMAC4 soap_get_PointerTo_tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetDiscoveryMode
#define soap_read_PointerTo_tds__SetDiscoveryMode(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetDiscoveryMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetDiscoveryMode
#define SOAP_TYPE_PointerTo_tds__GetDiscoveryMode (1582)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetDiscoveryMode(struct soap*, const char *, int, _tds__GetDiscoveryMode *const*, const char *);
SOAP_FMAC3 _tds__GetDiscoveryMode ** SOAP_FMAC4 soap_in_PointerTo_tds__GetDiscoveryMode(struct soap*, const char*, _tds__GetDiscoveryMode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetDiscoveryMode
#define soap_write_PointerTo_tds__GetDiscoveryMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetDiscoveryMode(soap, data),0) || soap_put_PointerTo_tds__GetDiscoveryMode(soap, data, "tds:GetDiscoveryMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDiscoveryMode ** SOAP_FMAC4 soap_get_PointerTo_tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetDiscoveryMode
#define soap_read_PointerTo_tds__GetDiscoveryMode(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetDiscoveryMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__RemoveScopes
#define SOAP_TYPE_PointerTo_tds__RemoveScopes (1578)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__RemoveScopes(struct soap*, _tds__RemoveScopes *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__RemoveScopes(struct soap*, const char *, int, _tds__RemoveScopes *const*, const char *);
SOAP_FMAC3 _tds__RemoveScopes ** SOAP_FMAC4 soap_in_PointerTo_tds__RemoveScopes(struct soap*, const char*, _tds__RemoveScopes **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__RemoveScopes(struct soap*, _tds__RemoveScopes *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__RemoveScopes
#define soap_write_PointerTo_tds__RemoveScopes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__RemoveScopes(soap, data),0) || soap_put_PointerTo_tds__RemoveScopes(soap, data, "tds:RemoveScopes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__RemoveScopes ** SOAP_FMAC4 soap_get_PointerTo_tds__RemoveScopes(struct soap*, _tds__RemoveScopes **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__RemoveScopes
#define soap_read_PointerTo_tds__RemoveScopes(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__RemoveScopes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__AddScopes
#define SOAP_TYPE_PointerTo_tds__AddScopes (1574)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__AddScopes(struct soap*, _tds__AddScopes *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__AddScopes(struct soap*, const char *, int, _tds__AddScopes *const*, const char *);
SOAP_FMAC3 _tds__AddScopes ** SOAP_FMAC4 soap_in_PointerTo_tds__AddScopes(struct soap*, const char*, _tds__AddScopes **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__AddScopes(struct soap*, _tds__AddScopes *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__AddScopes
#define soap_write_PointerTo_tds__AddScopes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__AddScopes(soap, data),0) || soap_put_PointerTo_tds__AddScopes(soap, data, "tds:AddScopes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__AddScopes ** SOAP_FMAC4 soap_get_PointerTo_tds__AddScopes(struct soap*, _tds__AddScopes **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__AddScopes
#define soap_read_PointerTo_tds__AddScopes(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__AddScopes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetScopes
#define SOAP_TYPE_PointerTo_tds__SetScopes (1570)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetScopes(struct soap*, _tds__SetScopes *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetScopes(struct soap*, const char *, int, _tds__SetScopes *const*, const char *);
SOAP_FMAC3 _tds__SetScopes ** SOAP_FMAC4 soap_in_PointerTo_tds__SetScopes(struct soap*, const char*, _tds__SetScopes **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetScopes(struct soap*, _tds__SetScopes *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetScopes
#define soap_write_PointerTo_tds__SetScopes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetScopes(soap, data),0) || soap_put_PointerTo_tds__SetScopes(soap, data, "tds:SetScopes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetScopes ** SOAP_FMAC4 soap_get_PointerTo_tds__SetScopes(struct soap*, _tds__SetScopes **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetScopes
#define soap_read_PointerTo_tds__SetScopes(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetScopes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetScopes
#define SOAP_TYPE_PointerTo_tds__GetScopes (1566)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetScopes(struct soap*, _tds__GetScopes *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetScopes(struct soap*, const char *, int, _tds__GetScopes *const*, const char *);
SOAP_FMAC3 _tds__GetScopes ** SOAP_FMAC4 soap_in_PointerTo_tds__GetScopes(struct soap*, const char*, _tds__GetScopes **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetScopes(struct soap*, _tds__GetScopes *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetScopes
#define soap_write_PointerTo_tds__GetScopes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetScopes(soap, data),0) || soap_put_PointerTo_tds__GetScopes(soap, data, "tds:GetScopes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetScopes ** SOAP_FMAC4 soap_get_PointerTo_tds__GetScopes(struct soap*, _tds__GetScopes **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetScopes
#define soap_read_PointerTo_tds__GetScopes(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetScopes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetSystemSupportInformation
#define SOAP_TYPE_PointerTo_tds__GetSystemSupportInformation (1562)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetSystemSupportInformation(struct soap*, const char *, int, _tds__GetSystemSupportInformation *const*, const char *);
SOAP_FMAC3 _tds__GetSystemSupportInformation ** SOAP_FMAC4 soap_in_PointerTo_tds__GetSystemSupportInformation(struct soap*, const char*, _tds__GetSystemSupportInformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetSystemSupportInformation
#define soap_write_PointerTo_tds__GetSystemSupportInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetSystemSupportInformation(soap, data),0) || soap_put_PointerTo_tds__GetSystemSupportInformation(soap, data, "tds:GetSystemSupportInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemSupportInformation ** SOAP_FMAC4 soap_get_PointerTo_tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetSystemSupportInformation
#define soap_read_PointerTo_tds__GetSystemSupportInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetSystemSupportInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetSystemLog
#define SOAP_TYPE_PointerTo_tds__GetSystemLog (1558)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetSystemLog(struct soap*, _tds__GetSystemLog *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetSystemLog(struct soap*, const char *, int, _tds__GetSystemLog *const*, const char *);
SOAP_FMAC3 _tds__GetSystemLog ** SOAP_FMAC4 soap_in_PointerTo_tds__GetSystemLog(struct soap*, const char*, _tds__GetSystemLog **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetSystemLog(struct soap*, _tds__GetSystemLog *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetSystemLog
#define soap_write_PointerTo_tds__GetSystemLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetSystemLog(soap, data),0) || soap_put_PointerTo_tds__GetSystemLog(soap, data, "tds:GetSystemLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemLog ** SOAP_FMAC4 soap_get_PointerTo_tds__GetSystemLog(struct soap*, _tds__GetSystemLog **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetSystemLog
#define soap_read_PointerTo_tds__GetSystemLog(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetSystemLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetSystemBackup
#define SOAP_TYPE_PointerTo_tds__GetSystemBackup (1554)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetSystemBackup(struct soap*, const char *, int, _tds__GetSystemBackup *const*, const char *);
SOAP_FMAC3 _tds__GetSystemBackup ** SOAP_FMAC4 soap_in_PointerTo_tds__GetSystemBackup(struct soap*, const char*, _tds__GetSystemBackup **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetSystemBackup
#define soap_write_PointerTo_tds__GetSystemBackup(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetSystemBackup(soap, data),0) || soap_put_PointerTo_tds__GetSystemBackup(soap, data, "tds:GetSystemBackup", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemBackup ** SOAP_FMAC4 soap_get_PointerTo_tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetSystemBackup
#define soap_read_PointerTo_tds__GetSystemBackup(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetSystemBackup(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__RestoreSystem
#define SOAP_TYPE_PointerTo_tds__RestoreSystem (1550)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__RestoreSystem(struct soap*, _tds__RestoreSystem *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__RestoreSystem(struct soap*, const char *, int, _tds__RestoreSystem *const*, const char *);
SOAP_FMAC3 _tds__RestoreSystem ** SOAP_FMAC4 soap_in_PointerTo_tds__RestoreSystem(struct soap*, const char*, _tds__RestoreSystem **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__RestoreSystem(struct soap*, _tds__RestoreSystem *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__RestoreSystem
#define soap_write_PointerTo_tds__RestoreSystem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__RestoreSystem(soap, data),0) || soap_put_PointerTo_tds__RestoreSystem(soap, data, "tds:RestoreSystem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__RestoreSystem ** SOAP_FMAC4 soap_get_PointerTo_tds__RestoreSystem(struct soap*, _tds__RestoreSystem **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__RestoreSystem
#define soap_read_PointerTo_tds__RestoreSystem(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__RestoreSystem(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SystemReboot
#define SOAP_TYPE_PointerTo_tds__SystemReboot (1546)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SystemReboot(struct soap*, _tds__SystemReboot *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SystemReboot(struct soap*, const char *, int, _tds__SystemReboot *const*, const char *);
SOAP_FMAC3 _tds__SystemReboot ** SOAP_FMAC4 soap_in_PointerTo_tds__SystemReboot(struct soap*, const char*, _tds__SystemReboot **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SystemReboot(struct soap*, _tds__SystemReboot *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SystemReboot
#define soap_write_PointerTo_tds__SystemReboot(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SystemReboot(soap, data),0) || soap_put_PointerTo_tds__SystemReboot(soap, data, "tds:SystemReboot", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SystemReboot ** SOAP_FMAC4 soap_get_PointerTo_tds__SystemReboot(struct soap*, _tds__SystemReboot **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SystemReboot
#define soap_read_PointerTo_tds__SystemReboot(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__SystemReboot(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__UpgradeSystemFirmware
#define SOAP_TYPE_PointerTo_tds__UpgradeSystemFirmware (1542)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__UpgradeSystemFirmware(struct soap*, const char *, int, _tds__UpgradeSystemFirmware *const*, const char *);
SOAP_FMAC3 _tds__UpgradeSystemFirmware ** SOAP_FMAC4 soap_in_PointerTo_tds__UpgradeSystemFirmware(struct soap*, const char*, _tds__UpgradeSystemFirmware **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__UpgradeSystemFirmware
#define soap_write_PointerTo_tds__UpgradeSystemFirmware(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__UpgradeSystemFirmware(soap, data),0) || soap_put_PointerTo_tds__UpgradeSystemFirmware(soap, data, "tds:UpgradeSystemFirmware", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__UpgradeSystemFirmware ** SOAP_FMAC4 soap_get_PointerTo_tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__UpgradeSystemFirmware
#define soap_read_PointerTo_tds__UpgradeSystemFirmware(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__UpgradeSystemFirmware(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetSystemFactoryDefault
#define SOAP_TYPE_PointerTo_tds__SetSystemFactoryDefault (1538)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetSystemFactoryDefault(struct soap*, const char *, int, _tds__SetSystemFactoryDefault *const*, const char *);
SOAP_FMAC3 _tds__SetSystemFactoryDefault ** SOAP_FMAC4 soap_in_PointerTo_tds__SetSystemFactoryDefault(struct soap*, const char*, _tds__SetSystemFactoryDefault **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetSystemFactoryDefault
#define soap_write_PointerTo_tds__SetSystemFactoryDefault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetSystemFactoryDefault(soap, data),0) || soap_put_PointerTo_tds__SetSystemFactoryDefault(soap, data, "tds:SetSystemFactoryDefault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetSystemFactoryDefault ** SOAP_FMAC4 soap_get_PointerTo_tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetSystemFactoryDefault
#define soap_read_PointerTo_tds__SetSystemFactoryDefault(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetSystemFactoryDefault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetSystemDateAndTime
#define SOAP_TYPE_PointerTo_tds__GetSystemDateAndTime (1534)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetSystemDateAndTime(struct soap*, const char *, int, _tds__GetSystemDateAndTime *const*, const char *);
SOAP_FMAC3 _tds__GetSystemDateAndTime ** SOAP_FMAC4 soap_in_PointerTo_tds__GetSystemDateAndTime(struct soap*, const char*, _tds__GetSystemDateAndTime **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetSystemDateAndTime
#define soap_write_PointerTo_tds__GetSystemDateAndTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetSystemDateAndTime(soap, data),0) || soap_put_PointerTo_tds__GetSystemDateAndTime(soap, data, "tds:GetSystemDateAndTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemDateAndTime ** SOAP_FMAC4 soap_get_PointerTo_tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetSystemDateAndTime
#define soap_read_PointerTo_tds__GetSystemDateAndTime(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetSystemDateAndTime(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetSystemDateAndTime
#define SOAP_TYPE_PointerTo_tds__SetSystemDateAndTime (1530)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetSystemDateAndTime(struct soap*, const char *, int, _tds__SetSystemDateAndTime *const*, const char *);
SOAP_FMAC3 _tds__SetSystemDateAndTime ** SOAP_FMAC4 soap_in_PointerTo_tds__SetSystemDateAndTime(struct soap*, const char*, _tds__SetSystemDateAndTime **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetSystemDateAndTime
#define soap_write_PointerTo_tds__SetSystemDateAndTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetSystemDateAndTime(soap, data),0) || soap_put_PointerTo_tds__SetSystemDateAndTime(soap, data, "tds:SetSystemDateAndTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetSystemDateAndTime ** SOAP_FMAC4 soap_get_PointerTo_tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetSystemDateAndTime
#define soap_read_PointerTo_tds__SetSystemDateAndTime(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetSystemDateAndTime(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetDeviceInformation
#define SOAP_TYPE_PointerTo_tds__GetDeviceInformation (1526)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetDeviceInformation(struct soap*, const char *, int, _tds__GetDeviceInformation *const*, const char *);
SOAP_FMAC3 _tds__GetDeviceInformation ** SOAP_FMAC4 soap_in_PointerTo_tds__GetDeviceInformation(struct soap*, const char*, _tds__GetDeviceInformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetDeviceInformation
#define soap_write_PointerTo_tds__GetDeviceInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetDeviceInformation(soap, data),0) || soap_put_PointerTo_tds__GetDeviceInformation(soap, data, "tds:GetDeviceInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDeviceInformation ** SOAP_FMAC4 soap_get_PointerTo_tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetDeviceInformation
#define soap_read_PointerTo_tds__GetDeviceInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetDeviceInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetServiceCapabilities
#define SOAP_TYPE_PointerTo_tds__GetServiceCapabilities (1522)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetServiceCapabilities(struct soap*, const char *, int, _tds__GetServiceCapabilities *const*, const char *);
SOAP_FMAC3 _tds__GetServiceCapabilities ** SOAP_FMAC4 soap_in_PointerTo_tds__GetServiceCapabilities(struct soap*, const char*, _tds__GetServiceCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetServiceCapabilities
#define soap_write_PointerTo_tds__GetServiceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetServiceCapabilities(soap, data),0) || soap_put_PointerTo_tds__GetServiceCapabilities(soap, data, "tds:GetServiceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetServiceCapabilities ** SOAP_FMAC4 soap_get_PointerTo_tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetServiceCapabilities
#define soap_read_PointerTo_tds__GetServiceCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetServiceCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetServices
#define SOAP_TYPE_PointerTo_tds__GetServices (1518)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetServices(struct soap*, _tds__GetServices *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetServices(struct soap*, const char *, int, _tds__GetServices *const*, const char *);
SOAP_FMAC3 _tds__GetServices ** SOAP_FMAC4 soap_in_PointerTo_tds__GetServices(struct soap*, const char*, _tds__GetServices **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetServices(struct soap*, _tds__GetServices *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetServices
#define soap_write_PointerTo_tds__GetServices(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetServices(soap, data),0) || soap_put_PointerTo_tds__GetServices(soap, data, "tds:GetServices", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetServices ** SOAP_FMAC4 soap_get_PointerTo_tds__GetServices(struct soap*, _tds__GetServices **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetServices
#define soap_read_PointerTo_tds__GetServices(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetServices(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToxsd__NCName
#define SOAP_TYPE_PointerToxsd__NCName (1517)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__NCName(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__NCName(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToxsd__NCName(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__NCName(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__NCName
#define soap_write_PointerToxsd__NCName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToxsd__NCName(soap, data),0) || soap_put_PointerToxsd__NCName(soap, data, "xsd:NCName", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToxsd__NCName(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerToxsd__NCName
#define soap_read_PointerToxsd__NCName(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxsd__NCName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic
#define SOAP_TYPE_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic (1516)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic(struct soap*, std::vector<_wstop__TopicNamespaceType_Topic >*const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic(struct soap*, const char *, int, std::vector<_wstop__TopicNamespaceType_Topic >*const*, const char *);
SOAP_FMAC3 std::vector<_wstop__TopicNamespaceType_Topic >** SOAP_FMAC4 soap_in_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic(struct soap*, const char*, std::vector<_wstop__TopicNamespaceType_Topic >**, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic(struct soap*, std::vector<_wstop__TopicNamespaceType_Topic >*const*, const char*, const char*);

#ifndef soap_write_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic
#define soap_write_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic(soap, data),0) || soap_put_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic(soap, data, "", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::vector<_wstop__TopicNamespaceType_Topic >** SOAP_FMAC4 soap_get_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic(struct soap*, std::vector<_wstop__TopicNamespaceType_Topic >**, const char*, const char*);

#ifndef soap_read_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic
#define soap_read_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowstop__ConcreteTopicExpression
#define SOAP_TYPE_PointerTowstop__ConcreteTopicExpression (1514)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowstop__ConcreteTopicExpression(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowstop__ConcreteTopicExpression(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTowstop__ConcreteTopicExpression(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowstop__ConcreteTopicExpression(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTowstop__ConcreteTopicExpression
#define soap_write_PointerTowstop__ConcreteTopicExpression(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowstop__ConcreteTopicExpression(soap, data),0) || soap_put_PointerTowstop__ConcreteTopicExpression(soap, data, "wstop:ConcreteTopicExpression", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTowstop__ConcreteTopicExpression(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTowstop__ConcreteTopicExpression
#define soap_read_PointerTowstop__ConcreteTopicExpression(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowstop__ConcreteTopicExpression(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToxsd__QName
#define SOAP_TYPE_PointerToxsd__QName (1513)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__QName(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__QName(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToxsd__QName(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__QName(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__QName
#define soap_write_PointerToxsd__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToxsd__QName(soap, data),0) || soap_put_PointerToxsd__QName(soap, data, "xsd:QName", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToxsd__QName(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerToxsd__QName
#define soap_read_PointerToxsd__QName(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxsd__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowstop__TopicType
#define SOAP_TYPE_PointerTowstop__TopicType (1511)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowstop__TopicType(struct soap*, wstop__TopicType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowstop__TopicType(struct soap*, const char *, int, wstop__TopicType *const*, const char *);
SOAP_FMAC3 wstop__TopicType ** SOAP_FMAC4 soap_in_PointerTowstop__TopicType(struct soap*, const char*, wstop__TopicType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowstop__TopicType(struct soap*, wstop__TopicType *const*, const char*, const char*);

#ifndef soap_write_PointerTowstop__TopicType
#define soap_write_PointerTowstop__TopicType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowstop__TopicType(soap, data),0) || soap_put_PointerTowstop__TopicType(soap, data, "wstop:TopicType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wstop__TopicType ** SOAP_FMAC4 soap_get_PointerTowstop__TopicType(struct soap*, wstop__TopicType **, const char*, const char*);

#ifndef soap_read_PointerTowstop__TopicType
#define soap_read_PointerTowstop__TopicType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowstop__TopicType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowstop__QueryExpressionType
#define SOAP_TYPE_PointerTowstop__QueryExpressionType (1510)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowstop__QueryExpressionType(struct soap*, wstop__QueryExpressionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowstop__QueryExpressionType(struct soap*, const char *, int, wstop__QueryExpressionType *const*, const char *);
SOAP_FMAC3 wstop__QueryExpressionType ** SOAP_FMAC4 soap_in_PointerTowstop__QueryExpressionType(struct soap*, const char*, wstop__QueryExpressionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowstop__QueryExpressionType(struct soap*, wstop__QueryExpressionType *const*, const char*, const char*);

#ifndef soap_write_PointerTowstop__QueryExpressionType
#define soap_write_PointerTowstop__QueryExpressionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowstop__QueryExpressionType(soap, data),0) || soap_put_PointerTowstop__QueryExpressionType(soap, data, "wstop:QueryExpressionType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wstop__QueryExpressionType ** SOAP_FMAC4 soap_get_PointerTowstop__QueryExpressionType(struct soap*, wstop__QueryExpressionType **, const char*, const char*);

#ifndef soap_read_PointerTowstop__QueryExpressionType
#define soap_read_PointerTowstop__QueryExpressionType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowstop__QueryExpressionType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDConfigurationExtension
#define SOAP_TYPE_PointerTott__OSDConfigurationExtension (1507)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDConfigurationExtension(struct soap*, tt__OSDConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDConfigurationExtension(struct soap*, const char *, int, tt__OSDConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__OSDConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__OSDConfigurationExtension(struct soap*, const char*, tt__OSDConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDConfigurationExtension(struct soap*, tt__OSDConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDConfigurationExtension
#define soap_write_PointerTott__OSDConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDConfigurationExtension(soap, data),0) || soap_put_PointerTott__OSDConfigurationExtension(soap, data, "tt:OSDConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__OSDConfigurationExtension(struct soap*, tt__OSDConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDConfigurationExtension
#define soap_read_PointerTott__OSDConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__OSDConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDImgConfiguration
#define SOAP_TYPE_PointerTott__OSDImgConfiguration (1506)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDImgConfiguration(struct soap*, tt__OSDImgConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDImgConfiguration(struct soap*, const char *, int, tt__OSDImgConfiguration *const*, const char *);
SOAP_FMAC3 tt__OSDImgConfiguration ** SOAP_FMAC4 soap_in_PointerTott__OSDImgConfiguration(struct soap*, const char*, tt__OSDImgConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDImgConfiguration(struct soap*, tt__OSDImgConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDImgConfiguration
#define soap_write_PointerTott__OSDImgConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDImgConfiguration(soap, data),0) || soap_put_PointerTott__OSDImgConfiguration(soap, data, "tt:OSDImgConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDImgConfiguration ** SOAP_FMAC4 soap_get_PointerTott__OSDImgConfiguration(struct soap*, tt__OSDImgConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDImgConfiguration
#define soap_read_PointerTott__OSDImgConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__OSDImgConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDTextConfiguration
#define SOAP_TYPE_PointerTott__OSDTextConfiguration (1505)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDTextConfiguration(struct soap*, tt__OSDTextConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDTextConfiguration(struct soap*, const char *, int, tt__OSDTextConfiguration *const*, const char *);
SOAP_FMAC3 tt__OSDTextConfiguration ** SOAP_FMAC4 soap_in_PointerTott__OSDTextConfiguration(struct soap*, const char*, tt__OSDTextConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDTextConfiguration(struct soap*, tt__OSDTextConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDTextConfiguration
#define soap_write_PointerTott__OSDTextConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDTextConfiguration(soap, data),0) || soap_put_PointerTott__OSDTextConfiguration(soap, data, "tt:OSDTextConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDTextConfiguration ** SOAP_FMAC4 soap_get_PointerTott__OSDTextConfiguration(struct soap*, tt__OSDTextConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDTextConfiguration
#define soap_read_PointerTott__OSDTextConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__OSDTextConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDPosConfiguration
#define SOAP_TYPE_PointerTott__OSDPosConfiguration (1504)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDPosConfiguration(struct soap*, tt__OSDPosConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDPosConfiguration(struct soap*, const char *, int, tt__OSDPosConfiguration *const*, const char *);
SOAP_FMAC3 tt__OSDPosConfiguration ** SOAP_FMAC4 soap_in_PointerTott__OSDPosConfiguration(struct soap*, const char*, tt__OSDPosConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDPosConfiguration(struct soap*, tt__OSDPosConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDPosConfiguration
#define soap_write_PointerTott__OSDPosConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDPosConfiguration(soap, data),0) || soap_put_PointerTott__OSDPosConfiguration(soap, data, "tt:OSDPosConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDPosConfiguration ** SOAP_FMAC4 soap_get_PointerTott__OSDPosConfiguration(struct soap*, tt__OSDPosConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDPosConfiguration
#define soap_read_PointerTott__OSDPosConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__OSDPosConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDReference
#define SOAP_TYPE_PointerTott__OSDReference (1503)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDReference(struct soap*, tt__OSDReference *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDReference(struct soap*, const char *, int, tt__OSDReference *const*, const char *);
SOAP_FMAC3 tt__OSDReference ** SOAP_FMAC4 soap_in_PointerTott__OSDReference(struct soap*, const char*, tt__OSDReference **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDReference(struct soap*, tt__OSDReference *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDReference
#define soap_write_PointerTott__OSDReference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDReference(soap, data),0) || soap_put_PointerTott__OSDReference(soap, data, "tt:OSDReference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDReference ** SOAP_FMAC4 soap_get_PointerTott__OSDReference(struct soap*, tt__OSDReference **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDReference
#define soap_read_PointerTott__OSDReference(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__OSDReference(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MetadataInput
#define SOAP_TYPE_PointerTott__MetadataInput (1502)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MetadataInput(struct soap*, tt__MetadataInput *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MetadataInput(struct soap*, const char *, int, tt__MetadataInput *const*, const char *);
SOAP_FMAC3 tt__MetadataInput ** SOAP_FMAC4 soap_in_PointerTott__MetadataInput(struct soap*, const char*, tt__MetadataInput **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MetadataInput(struct soap*, tt__MetadataInput *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MetadataInput
#define soap_write_PointerTott__MetadataInput(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MetadataInput(soap, data),0) || soap_put_PointerTott__MetadataInput(soap, data, "tt:MetadataInput", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataInput ** SOAP_FMAC4 soap_get_PointerTott__MetadataInput(struct soap*, tt__MetadataInput **, const char*, const char*);

#ifndef soap_read_PointerTott__MetadataInput
#define soap_read_PointerTott__MetadataInput(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__MetadataInput(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SourceIdentification
#define SOAP_TYPE_PointerTott__SourceIdentification (1501)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SourceIdentification(struct soap*, tt__SourceIdentification *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SourceIdentification(struct soap*, const char *, int, tt__SourceIdentification *const*, const char *);
SOAP_FMAC3 tt__SourceIdentification ** SOAP_FMAC4 soap_in_PointerTott__SourceIdentification(struct soap*, const char*, tt__SourceIdentification **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SourceIdentification(struct soap*, tt__SourceIdentification *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SourceIdentification
#define soap_write_PointerTott__SourceIdentification(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SourceIdentification(soap, data),0) || soap_put_PointerTott__SourceIdentification(soap, data, "tt:SourceIdentification", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SourceIdentification ** SOAP_FMAC4 soap_get_PointerTott__SourceIdentification(struct soap*, tt__SourceIdentification **, const char*, const char*);

#ifndef soap_read_PointerTott__SourceIdentification
#define soap_read_PointerTott__SourceIdentification(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__SourceIdentification(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AnalyticsDeviceEngineConfiguration
#define SOAP_TYPE_PointerTott__AnalyticsDeviceEngineConfiguration (1500)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AnalyticsDeviceEngineConfiguration(struct soap*, tt__AnalyticsDeviceEngineConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AnalyticsDeviceEngineConfiguration(struct soap*, const char *, int, tt__AnalyticsDeviceEngineConfiguration *const*, const char *);
SOAP_FMAC3 tt__AnalyticsDeviceEngineConfiguration ** SOAP_FMAC4 soap_in_PointerTott__AnalyticsDeviceEngineConfiguration(struct soap*, const char*, tt__AnalyticsDeviceEngineConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AnalyticsDeviceEngineConfiguration(struct soap*, tt__AnalyticsDeviceEngineConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AnalyticsDeviceEngineConfiguration
#define soap_write_PointerTott__AnalyticsDeviceEngineConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AnalyticsDeviceEngineConfiguration(soap, data),0) || soap_put_PointerTott__AnalyticsDeviceEngineConfiguration(soap, data, "tt:AnalyticsDeviceEngineConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsDeviceEngineConfiguration ** SOAP_FMAC4 soap_get_PointerTott__AnalyticsDeviceEngineConfiguration(struct soap*, tt__AnalyticsDeviceEngineConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__AnalyticsDeviceEngineConfiguration
#define soap_read_PointerTott__AnalyticsDeviceEngineConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AnalyticsDeviceEngineConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ObjectExtension
#define SOAP_TYPE_PointerTott__ObjectExtension (1499)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ObjectExtension(struct soap*, tt__ObjectExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ObjectExtension(struct soap*, const char *, int, tt__ObjectExtension *const*, const char *);
SOAP_FMAC3 tt__ObjectExtension ** SOAP_FMAC4 soap_in_PointerTott__ObjectExtension(struct soap*, const char*, tt__ObjectExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ObjectExtension(struct soap*, tt__ObjectExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ObjectExtension
#define soap_write_PointerTott__ObjectExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ObjectExtension(soap, data),0) || soap_put_PointerTott__ObjectExtension(soap, data, "tt:ObjectExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ObjectExtension ** SOAP_FMAC4 soap_get_PointerTott__ObjectExtension(struct soap*, tt__ObjectExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__ObjectExtension
#define soap_read_PointerTott__ObjectExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ObjectExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Behaviour
#define SOAP_TYPE_PointerTott__Behaviour (1498)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Behaviour(struct soap*, tt__Behaviour *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Behaviour(struct soap*, const char *, int, tt__Behaviour *const*, const char *);
SOAP_FMAC3 tt__Behaviour ** SOAP_FMAC4 soap_in_PointerTott__Behaviour(struct soap*, const char*, tt__Behaviour **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Behaviour(struct soap*, tt__Behaviour *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Behaviour
#define soap_write_PointerTott__Behaviour(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Behaviour(soap, data),0) || soap_put_PointerTott__Behaviour(soap, data, "tt:Behaviour", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Behaviour ** SOAP_FMAC4 soap_get_PointerTott__Behaviour(struct soap*, tt__Behaviour **, const char*, const char*);

#ifndef soap_read_PointerTott__Behaviour
#define soap_read_PointerTott__Behaviour(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Behaviour(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Appearance
#define SOAP_TYPE_PointerTott__Appearance (1497)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Appearance(struct soap*, tt__Appearance *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Appearance(struct soap*, const char *, int, tt__Appearance *const*, const char *);
SOAP_FMAC3 tt__Appearance ** SOAP_FMAC4 soap_in_PointerTott__Appearance(struct soap*, const char*, tt__Appearance **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Appearance(struct soap*, tt__Appearance *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Appearance
#define soap_write_PointerTott__Appearance(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Appearance(soap, data),0) || soap_put_PointerTott__Appearance(soap, data, "tt:Appearance", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Appearance ** SOAP_FMAC4 soap_get_PointerTott__Appearance(struct soap*, tt__Appearance **, const char*, const char*);

#ifndef soap_read_PointerTott__Appearance
#define soap_read_PointerTott__Appearance(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Appearance(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZConfigurationExtension
#define SOAP_TYPE_PointerTott__PTZConfigurationExtension (1496)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZConfigurationExtension(struct soap*, tt__PTZConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZConfigurationExtension(struct soap*, const char *, int, tt__PTZConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__PTZConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__PTZConfigurationExtension(struct soap*, const char*, tt__PTZConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZConfigurationExtension(struct soap*, tt__PTZConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZConfigurationExtension
#define soap_write_PointerTott__PTZConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZConfigurationExtension(soap, data),0) || soap_put_PointerTott__PTZConfigurationExtension(soap, data, "tt:PTZConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__PTZConfigurationExtension(struct soap*, tt__PTZConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZConfigurationExtension
#define soap_read_PointerTott__PTZConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ZoomLimits
#define SOAP_TYPE_PointerTott__ZoomLimits (1495)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ZoomLimits(struct soap*, tt__ZoomLimits *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ZoomLimits(struct soap*, const char *, int, tt__ZoomLimits *const*, const char *);
SOAP_FMAC3 tt__ZoomLimits ** SOAP_FMAC4 soap_in_PointerTott__ZoomLimits(struct soap*, const char*, tt__ZoomLimits **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ZoomLimits(struct soap*, tt__ZoomLimits *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ZoomLimits
#define soap_write_PointerTott__ZoomLimits(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ZoomLimits(soap, data),0) || soap_put_PointerTott__ZoomLimits(soap, data, "tt:ZoomLimits", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ZoomLimits ** SOAP_FMAC4 soap_get_PointerTott__ZoomLimits(struct soap*, tt__ZoomLimits **, const char*, const char*);

#ifndef soap_read_PointerTott__ZoomLimits
#define soap_read_PointerTott__ZoomLimits(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ZoomLimits(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PanTiltLimits
#define SOAP_TYPE_PointerTott__PanTiltLimits (1494)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PanTiltLimits(struct soap*, tt__PanTiltLimits *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PanTiltLimits(struct soap*, const char *, int, tt__PanTiltLimits *const*, const char *);
SOAP_FMAC3 tt__PanTiltLimits ** SOAP_FMAC4 soap_in_PointerTott__PanTiltLimits(struct soap*, const char*, tt__PanTiltLimits **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PanTiltLimits(struct soap*, tt__PanTiltLimits *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PanTiltLimits
#define soap_write_PointerTott__PanTiltLimits(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PanTiltLimits(soap, data),0) || soap_put_PointerTott__PanTiltLimits(soap, data, "tt:PanTiltLimits", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PanTiltLimits ** SOAP_FMAC4 soap_get_PointerTott__PanTiltLimits(struct soap*, tt__PanTiltLimits **, const char*, const char*);

#ifndef soap_read_PointerTott__PanTiltLimits
#define soap_read_PointerTott__PanTiltLimits(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PanTiltLimits(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZNodeExtension
#define SOAP_TYPE_PointerTott__PTZNodeExtension (1493)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZNodeExtension(struct soap*, tt__PTZNodeExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZNodeExtension(struct soap*, const char *, int, tt__PTZNodeExtension *const*, const char *);
SOAP_FMAC3 tt__PTZNodeExtension ** SOAP_FMAC4 soap_in_PointerTott__PTZNodeExtension(struct soap*, const char*, tt__PTZNodeExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZNodeExtension(struct soap*, tt__PTZNodeExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZNodeExtension
#define soap_write_PointerTott__PTZNodeExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZNodeExtension(soap, data),0) || soap_put_PointerTott__PTZNodeExtension(soap, data, "tt:PTZNodeExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZNodeExtension ** SOAP_FMAC4 soap_get_PointerTott__PTZNodeExtension(struct soap*, tt__PTZNodeExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZNodeExtension
#define soap_read_PointerTott__PTZNodeExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZNodeExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkInterfaceExtension
#define SOAP_TYPE_PointerTott__NetworkInterfaceExtension (1492)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkInterfaceExtension(struct soap*, tt__NetworkInterfaceExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkInterfaceExtension(struct soap*, const char *, int, tt__NetworkInterfaceExtension *const*, const char *);
SOAP_FMAC3 tt__NetworkInterfaceExtension ** SOAP_FMAC4 soap_in_PointerTott__NetworkInterfaceExtension(struct soap*, const char*, tt__NetworkInterfaceExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkInterfaceExtension(struct soap*, tt__NetworkInterfaceExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkInterfaceExtension
#define soap_write_PointerTott__NetworkInterfaceExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkInterfaceExtension(soap, data),0) || soap_put_PointerTott__NetworkInterfaceExtension(soap, data, "tt:NetworkInterfaceExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceExtension ** SOAP_FMAC4 soap_get_PointerTott__NetworkInterfaceExtension(struct soap*, tt__NetworkInterfaceExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkInterfaceExtension
#define soap_read_PointerTott__NetworkInterfaceExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__NetworkInterfaceExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IPv6NetworkInterface
#define SOAP_TYPE_PointerTott__IPv6NetworkInterface (1491)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPv6NetworkInterface(struct soap*, tt__IPv6NetworkInterface *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPv6NetworkInterface(struct soap*, const char *, int, tt__IPv6NetworkInterface *const*, const char *);
SOAP_FMAC3 tt__IPv6NetworkInterface ** SOAP_FMAC4 soap_in_PointerTott__IPv6NetworkInterface(struct soap*, const char*, tt__IPv6NetworkInterface **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPv6NetworkInterface(struct soap*, tt__IPv6NetworkInterface *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IPv6NetworkInterface
#define soap_write_PointerTott__IPv6NetworkInterface(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IPv6NetworkInterface(soap, data),0) || soap_put_PointerTott__IPv6NetworkInterface(soap, data, "tt:IPv6NetworkInterface", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv6NetworkInterface ** SOAP_FMAC4 soap_get_PointerTott__IPv6NetworkInterface(struct soap*, tt__IPv6NetworkInterface **, const char*, const char*);

#ifndef soap_read_PointerTott__IPv6NetworkInterface
#define soap_read_PointerTott__IPv6NetworkInterface(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__IPv6NetworkInterface(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IPv4NetworkInterface
#define SOAP_TYPE_PointerTott__IPv4NetworkInterface (1490)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPv4NetworkInterface(struct soap*, tt__IPv4NetworkInterface *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPv4NetworkInterface(struct soap*, const char *, int, tt__IPv4NetworkInterface *const*, const char *);
SOAP_FMAC3 tt__IPv4NetworkInterface ** SOAP_FMAC4 soap_in_PointerTott__IPv4NetworkInterface(struct soap*, const char*, tt__IPv4NetworkInterface **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPv4NetworkInterface(struct soap*, tt__IPv4NetworkInterface *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IPv4NetworkInterface
#define soap_write_PointerTott__IPv4NetworkInterface(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IPv4NetworkInterface(soap, data),0) || soap_put_PointerTott__IPv4NetworkInterface(soap, data, "tt:IPv4NetworkInterface", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv4NetworkInterface ** SOAP_FMAC4 soap_get_PointerTott__IPv4NetworkInterface(struct soap*, tt__IPv4NetworkInterface **, const char*, const char*);

#ifndef soap_read_PointerTott__IPv4NetworkInterface
#define soap_read_PointerTott__IPv4NetworkInterface(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__IPv4NetworkInterface(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkInterfaceLink
#define SOAP_TYPE_PointerTott__NetworkInterfaceLink (1489)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkInterfaceLink(struct soap*, tt__NetworkInterfaceLink *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkInterfaceLink(struct soap*, const char *, int, tt__NetworkInterfaceLink *const*, const char *);
SOAP_FMAC3 tt__NetworkInterfaceLink ** SOAP_FMAC4 soap_in_PointerTott__NetworkInterfaceLink(struct soap*, const char*, tt__NetworkInterfaceLink **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkInterfaceLink(struct soap*, tt__NetworkInterfaceLink *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkInterfaceLink
#define soap_write_PointerTott__NetworkInterfaceLink(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkInterfaceLink(soap, data),0) || soap_put_PointerTott__NetworkInterfaceLink(soap, data, "tt:NetworkInterfaceLink", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceLink ** SOAP_FMAC4 soap_get_PointerTott__NetworkInterfaceLink(struct soap*, tt__NetworkInterfaceLink **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkInterfaceLink
#define soap_read_PointerTott__NetworkInterfaceLink(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__NetworkInterfaceLink(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkInterfaceInfo
#define SOAP_TYPE_PointerTott__NetworkInterfaceInfo (1488)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkInterfaceInfo(struct soap*, tt__NetworkInterfaceInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkInterfaceInfo(struct soap*, const char *, int, tt__NetworkInterfaceInfo *const*, const char *);
SOAP_FMAC3 tt__NetworkInterfaceInfo ** SOAP_FMAC4 soap_in_PointerTott__NetworkInterfaceInfo(struct soap*, const char*, tt__NetworkInterfaceInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkInterfaceInfo(struct soap*, tt__NetworkInterfaceInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkInterfaceInfo
#define soap_write_PointerTott__NetworkInterfaceInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkInterfaceInfo(soap, data),0) || soap_put_PointerTott__NetworkInterfaceInfo(soap, data, "tt:NetworkInterfaceInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceInfo ** SOAP_FMAC4 soap_get_PointerTott__NetworkInterfaceInfo(struct soap*, tt__NetworkInterfaceInfo **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkInterfaceInfo
#define soap_read_PointerTott__NetworkInterfaceInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__NetworkInterfaceInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoOutputExtension
#define SOAP_TYPE_PointerTott__VideoOutputExtension (1487)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoOutputExtension(struct soap*, tt__VideoOutputExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoOutputExtension(struct soap*, const char *, int, tt__VideoOutputExtension *const*, const char *);
SOAP_FMAC3 tt__VideoOutputExtension ** SOAP_FMAC4 soap_in_PointerTott__VideoOutputExtension(struct soap*, const char*, tt__VideoOutputExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoOutputExtension(struct soap*, tt__VideoOutputExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoOutputExtension
#define soap_write_PointerTott__VideoOutputExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoOutputExtension(soap, data),0) || soap_put_PointerTott__VideoOutputExtension(soap, data, "tt:VideoOutputExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoOutputExtension ** SOAP_FMAC4 soap_get_PointerTott__VideoOutputExtension(struct soap*, tt__VideoOutputExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoOutputExtension
#define soap_read_PointerTott__VideoOutputExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__VideoOutputExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Layout
#define SOAP_TYPE_PointerTott__Layout (1486)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Layout(struct soap*, tt__Layout *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Layout(struct soap*, const char *, int, tt__Layout *const*, const char *);
SOAP_FMAC3 tt__Layout ** SOAP_FMAC4 soap_in_PointerTott__Layout(struct soap*, const char*, tt__Layout **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Layout(struct soap*, tt__Layout *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Layout
#define soap_write_PointerTott__Layout(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Layout(soap, data),0) || soap_put_PointerTott__Layout(soap, data, "tt:Layout", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Layout ** SOAP_FMAC4 soap_get_PointerTott__Layout(struct soap*, tt__Layout **, const char*, const char*);

#ifndef soap_read_PointerTott__Layout
#define soap_read_PointerTott__Layout(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Layout(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MetadataConfigurationExtension
#define SOAP_TYPE_PointerTott__MetadataConfigurationExtension (1485)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MetadataConfigurationExtension(struct soap*, tt__MetadataConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MetadataConfigurationExtension(struct soap*, const char *, int, tt__MetadataConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__MetadataConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__MetadataConfigurationExtension(struct soap*, const char*, tt__MetadataConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MetadataConfigurationExtension(struct soap*, tt__MetadataConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MetadataConfigurationExtension
#define soap_write_PointerTott__MetadataConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MetadataConfigurationExtension(soap, data),0) || soap_put_PointerTott__MetadataConfigurationExtension(soap, data, "tt:MetadataConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__MetadataConfigurationExtension(struct soap*, tt__MetadataConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__MetadataConfigurationExtension
#define soap_read_PointerTott__MetadataConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__MetadataConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__EventSubscription
#define SOAP_TYPE_PointerTott__EventSubscription (1484)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__EventSubscription(struct soap*, tt__EventSubscription *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__EventSubscription(struct soap*, const char *, int, tt__EventSubscription *const*, const char *);
SOAP_FMAC3 tt__EventSubscription ** SOAP_FMAC4 soap_in_PointerTott__EventSubscription(struct soap*, const char*, tt__EventSubscription **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__EventSubscription(struct soap*, tt__EventSubscription *const*, const char*, const char*);

#ifndef soap_write_PointerTott__EventSubscription
#define soap_write_PointerTott__EventSubscription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__EventSubscription(soap, data),0) || soap_put_PointerTott__EventSubscription(soap, data, "tt:EventSubscription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EventSubscription ** SOAP_FMAC4 soap_get_PointerTott__EventSubscription(struct soap*, tt__EventSubscription **, const char*, const char*);

#ifndef soap_read_PointerTott__EventSubscription
#define soap_read_PointerTott__EventSubscription(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__EventSubscription(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZFilter
#define SOAP_TYPE_PointerTott__PTZFilter (1483)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZFilter(struct soap*, tt__PTZFilter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZFilter(struct soap*, const char *, int, tt__PTZFilter *const*, const char *);
SOAP_FMAC3 tt__PTZFilter ** SOAP_FMAC4 soap_in_PointerTott__PTZFilter(struct soap*, const char*, tt__PTZFilter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZFilter(struct soap*, tt__PTZFilter *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZFilter
#define soap_write_PointerTott__PTZFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZFilter(soap, data),0) || soap_put_PointerTott__PTZFilter(soap, data, "tt:PTZFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZFilter ** SOAP_FMAC4 soap_get_PointerTott__PTZFilter(struct soap*, tt__PTZFilter **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZFilter
#define soap_read_PointerTott__PTZFilter(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZFilter(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RuleEngineConfiguration
#define SOAP_TYPE_PointerTott__RuleEngineConfiguration (1482)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RuleEngineConfiguration(struct soap*, tt__RuleEngineConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RuleEngineConfiguration(struct soap*, const char *, int, tt__RuleEngineConfiguration *const*, const char *);
SOAP_FMAC3 tt__RuleEngineConfiguration ** SOAP_FMAC4 soap_in_PointerTott__RuleEngineConfiguration(struct soap*, const char*, tt__RuleEngineConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RuleEngineConfiguration(struct soap*, tt__RuleEngineConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RuleEngineConfiguration
#define soap_write_PointerTott__RuleEngineConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RuleEngineConfiguration(soap, data),0) || soap_put_PointerTott__RuleEngineConfiguration(soap, data, "tt:RuleEngineConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RuleEngineConfiguration ** SOAP_FMAC4 soap_get_PointerTott__RuleEngineConfiguration(struct soap*, tt__RuleEngineConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__RuleEngineConfiguration
#define soap_read_PointerTott__RuleEngineConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__RuleEngineConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AnalyticsEngineConfiguration
#define SOAP_TYPE_PointerTott__AnalyticsEngineConfiguration (1481)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AnalyticsEngineConfiguration(struct soap*, tt__AnalyticsEngineConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AnalyticsEngineConfiguration(struct soap*, const char *, int, tt__AnalyticsEngineConfiguration *const*, const char *);
SOAP_FMAC3 tt__AnalyticsEngineConfiguration ** SOAP_FMAC4 soap_in_PointerTott__AnalyticsEngineConfiguration(struct soap*, const char*, tt__AnalyticsEngineConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AnalyticsEngineConfiguration(struct soap*, tt__AnalyticsEngineConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AnalyticsEngineConfiguration
#define soap_write_PointerTott__AnalyticsEngineConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AnalyticsEngineConfiguration(soap, data),0) || soap_put_PointerTott__AnalyticsEngineConfiguration(soap, data, "tt:AnalyticsEngineConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsEngineConfiguration ** SOAP_FMAC4 soap_get_PointerTott__AnalyticsEngineConfiguration(struct soap*, tt__AnalyticsEngineConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__AnalyticsEngineConfiguration
#define soap_read_PointerTott__AnalyticsEngineConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AnalyticsEngineConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MulticastConfiguration
#define SOAP_TYPE_PointerTott__MulticastConfiguration (1480)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MulticastConfiguration(struct soap*, tt__MulticastConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MulticastConfiguration(struct soap*, const char *, int, tt__MulticastConfiguration *const*, const char *);
SOAP_FMAC3 tt__MulticastConfiguration ** SOAP_FMAC4 soap_in_PointerTott__MulticastConfiguration(struct soap*, const char*, tt__MulticastConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MulticastConfiguration(struct soap*, tt__MulticastConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MulticastConfiguration
#define soap_write_PointerTott__MulticastConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MulticastConfiguration(soap, data),0) || soap_put_PointerTott__MulticastConfiguration(soap, data, "tt:MulticastConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MulticastConfiguration ** SOAP_FMAC4 soap_get_PointerTott__MulticastConfiguration(struct soap*, tt__MulticastConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__MulticastConfiguration
#define soap_read_PointerTott__MulticastConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__MulticastConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__H264Configuration
#define SOAP_TYPE_PointerTott__H264Configuration (1479)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__H264Configuration(struct soap*, tt__H264Configuration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__H264Configuration(struct soap*, const char *, int, tt__H264Configuration *const*, const char *);
SOAP_FMAC3 tt__H264Configuration ** SOAP_FMAC4 soap_in_PointerTott__H264Configuration(struct soap*, const char*, tt__H264Configuration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__H264Configuration(struct soap*, tt__H264Configuration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__H264Configuration
#define soap_write_PointerTott__H264Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__H264Configuration(soap, data),0) || soap_put_PointerTott__H264Configuration(soap, data, "tt:H264Configuration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__H264Configuration ** SOAP_FMAC4 soap_get_PointerTott__H264Configuration(struct soap*, tt__H264Configuration **, const char*, const char*);

#ifndef soap_read_PointerTott__H264Configuration
#define soap_read_PointerTott__H264Configuration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__H264Configuration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Mpeg4Configuration
#define SOAP_TYPE_PointerTott__Mpeg4Configuration (1478)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Mpeg4Configuration(struct soap*, tt__Mpeg4Configuration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Mpeg4Configuration(struct soap*, const char *, int, tt__Mpeg4Configuration *const*, const char *);
SOAP_FMAC3 tt__Mpeg4Configuration ** SOAP_FMAC4 soap_in_PointerTott__Mpeg4Configuration(struct soap*, const char*, tt__Mpeg4Configuration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Mpeg4Configuration(struct soap*, tt__Mpeg4Configuration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Mpeg4Configuration
#define soap_write_PointerTott__Mpeg4Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Mpeg4Configuration(soap, data),0) || soap_put_PointerTott__Mpeg4Configuration(soap, data, "tt:Mpeg4Configuration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Mpeg4Configuration ** SOAP_FMAC4 soap_get_PointerTott__Mpeg4Configuration(struct soap*, tt__Mpeg4Configuration **, const char*, const char*);

#ifndef soap_read_PointerTott__Mpeg4Configuration
#define soap_read_PointerTott__Mpeg4Configuration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Mpeg4Configuration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoRateControl
#define SOAP_TYPE_PointerTott__VideoRateControl (1477)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoRateControl(struct soap*, tt__VideoRateControl *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoRateControl(struct soap*, const char *, int, tt__VideoRateControl *const*, const char *);
SOAP_FMAC3 tt__VideoRateControl ** SOAP_FMAC4 soap_in_PointerTott__VideoRateControl(struct soap*, const char*, tt__VideoRateControl **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoRateControl(struct soap*, tt__VideoRateControl *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoRateControl
#define soap_write_PointerTott__VideoRateControl(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoRateControl(soap, data),0) || soap_put_PointerTott__VideoRateControl(soap, data, "tt:VideoRateControl", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoRateControl ** SOAP_FMAC4 soap_get_PointerTott__VideoRateControl(struct soap*, tt__VideoRateControl **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoRateControl
#define soap_read_PointerTott__VideoRateControl(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__VideoRateControl(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoSourceConfigurationExtension
#define SOAP_TYPE_PointerTott__VideoSourceConfigurationExtension (1476)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoSourceConfigurationExtension(struct soap*, tt__VideoSourceConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoSourceConfigurationExtension(struct soap*, const char *, int, tt__VideoSourceConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__VideoSourceConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__VideoSourceConfigurationExtension(struct soap*, const char*, tt__VideoSourceConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoSourceConfigurationExtension(struct soap*, tt__VideoSourceConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoSourceConfigurationExtension
#define soap_write_PointerTott__VideoSourceConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoSourceConfigurationExtension(soap, data),0) || soap_put_PointerTott__VideoSourceConfigurationExtension(soap, data, "tt:VideoSourceConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__VideoSourceConfigurationExtension(struct soap*, tt__VideoSourceConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoSourceConfigurationExtension
#define soap_read_PointerTott__VideoSourceConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__VideoSourceConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IntRectangle
#define SOAP_TYPE_PointerTott__IntRectangle (1475)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IntRectangle(struct soap*, tt__IntRectangle *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IntRectangle(struct soap*, const char *, int, tt__IntRectangle *const*, const char *);
SOAP_FMAC3 tt__IntRectangle ** SOAP_FMAC4 soap_in_PointerTott__IntRectangle(struct soap*, const char*, tt__IntRectangle **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IntRectangle(struct soap*, tt__IntRectangle *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IntRectangle
#define soap_write_PointerTott__IntRectangle(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IntRectangle(soap, data),0) || soap_put_PointerTott__IntRectangle(soap, data, "tt:IntRectangle", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IntRectangle ** SOAP_FMAC4 soap_get_PointerTott__IntRectangle(struct soap*, tt__IntRectangle **, const char*, const char*);

#ifndef soap_read_PointerTott__IntRectangle
#define soap_read_PointerTott__IntRectangle(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__IntRectangle(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoSourceExtension
#define SOAP_TYPE_PointerTott__VideoSourceExtension (1474)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoSourceExtension(struct soap*, tt__VideoSourceExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoSourceExtension(struct soap*, const char *, int, tt__VideoSourceExtension *const*, const char *);
SOAP_FMAC3 tt__VideoSourceExtension ** SOAP_FMAC4 soap_in_PointerTott__VideoSourceExtension(struct soap*, const char*, tt__VideoSourceExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoSourceExtension(struct soap*, tt__VideoSourceExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoSourceExtension
#define soap_write_PointerTott__VideoSourceExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoSourceExtension(soap, data),0) || soap_put_PointerTott__VideoSourceExtension(soap, data, "tt:VideoSourceExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceExtension ** SOAP_FMAC4 soap_get_PointerTott__VideoSourceExtension(struct soap*, tt__VideoSourceExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoSourceExtension
#define soap_read_PointerTott__VideoSourceExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__VideoSourceExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImagingSettings
#define SOAP_TYPE_PointerTott__ImagingSettings (1473)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImagingSettings(struct soap*, tt__ImagingSettings *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImagingSettings(struct soap*, const char *, int, tt__ImagingSettings *const*, const char *);
SOAP_FMAC3 tt__ImagingSettings ** SOAP_FMAC4 soap_in_PointerTott__ImagingSettings(struct soap*, const char*, tt__ImagingSettings **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImagingSettings(struct soap*, tt__ImagingSettings *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImagingSettings
#define soap_write_PointerTott__ImagingSettings(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImagingSettings(soap, data),0) || soap_put_PointerTott__ImagingSettings(soap, data, "tt:ImagingSettings", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingSettings ** SOAP_FMAC4 soap_get_PointerTott__ImagingSettings(struct soap*, tt__ImagingSettings **, const char*, const char*);

#ifndef soap_read_PointerTott__ImagingSettings
#define soap_read_PointerTott__ImagingSettings(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ImagingSettings(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourOptions
#define SOAP_TYPE_PointerTott__PTZPresetTourOptions (1472)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourOptions(struct soap*, tt__PTZPresetTourOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourOptions(struct soap*, const char *, int, tt__PTZPresetTourOptions *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourOptions ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourOptions(struct soap*, const char*, tt__PTZPresetTourOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourOptions(struct soap*, tt__PTZPresetTourOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourOptions
#define soap_write_PointerTott__PTZPresetTourOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourOptions(soap, data),0) || soap_put_PointerTott__PTZPresetTourOptions(soap, data, "tt:PTZPresetTourOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourOptions ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourOptions(struct soap*, tt__PTZPresetTourOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourOptions
#define soap_read_PointerTott__PTZPresetTourOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PresetTour
#define SOAP_TYPE_PointerTott__PresetTour (1470)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PresetTour(struct soap*, tt__PresetTour *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PresetTour(struct soap*, const char *, int, tt__PresetTour *const*, const char *);
SOAP_FMAC3 tt__PresetTour ** SOAP_FMAC4 soap_in_PointerTott__PresetTour(struct soap*, const char*, tt__PresetTour **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PresetTour(struct soap*, tt__PresetTour *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PresetTour
#define soap_write_PointerTott__PresetTour(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PresetTour(soap, data),0) || soap_put_PointerTott__PresetTour(soap, data, "tt:PresetTour", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PresetTour ** SOAP_FMAC4 soap_get_PointerTott__PresetTour(struct soap*, tt__PresetTour **, const char*, const char*);

#ifndef soap_read_PointerTott__PresetTour
#define soap_read_PointerTott__PresetTour(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PresetTour(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPreset
#define SOAP_TYPE_PointerTott__PTZPreset (1468)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPreset(struct soap*, tt__PTZPreset *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPreset(struct soap*, const char *, int, tt__PTZPreset *const*, const char *);
SOAP_FMAC3 tt__PTZPreset ** SOAP_FMAC4 soap_in_PointerTott__PTZPreset(struct soap*, const char*, tt__PTZPreset **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPreset(struct soap*, tt__PTZPreset *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPreset
#define soap_write_PointerTott__PTZPreset(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPreset(soap, data),0) || soap_put_PointerTott__PTZPreset(soap, data, "tt:PTZPreset", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPreset ** SOAP_FMAC4 soap_get_PointerTott__PTZPreset(struct soap*, tt__PTZPreset **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPreset
#define soap_read_PointerTott__PTZPreset(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZPreset(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZConfigurationOptions
#define SOAP_TYPE_PointerTott__PTZConfigurationOptions (1467)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZConfigurationOptions(struct soap*, tt__PTZConfigurationOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZConfigurationOptions(struct soap*, const char *, int, tt__PTZConfigurationOptions *const*, const char *);
SOAP_FMAC3 tt__PTZConfigurationOptions ** SOAP_FMAC4 soap_in_PointerTott__PTZConfigurationOptions(struct soap*, const char*, tt__PTZConfigurationOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZConfigurationOptions(struct soap*, tt__PTZConfigurationOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZConfigurationOptions
#define soap_write_PointerTott__PTZConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZConfigurationOptions(soap, data),0) || soap_put_PointerTott__PTZConfigurationOptions(soap, data, "tt:PTZConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZConfigurationOptions ** SOAP_FMAC4 soap_get_PointerTott__PTZConfigurationOptions(struct soap*, tt__PTZConfigurationOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZConfigurationOptions
#define soap_read_PointerTott__PTZConfigurationOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZConfigurationOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo__tptz__SetConfigurationResponse_sequence
#define SOAP_TYPE_PointerTo__tptz__SetConfigurationResponse_sequence (1466)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__tptz__SetConfigurationResponse_sequence(struct soap*, __tptz__SetConfigurationResponse_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__tptz__SetConfigurationResponse_sequence(struct soap*, const char *, int, __tptz__SetConfigurationResponse_sequence *const*, const char *);
SOAP_FMAC3 __tptz__SetConfigurationResponse_sequence ** SOAP_FMAC4 soap_in_PointerTo__tptz__SetConfigurationResponse_sequence(struct soap*, const char*, __tptz__SetConfigurationResponse_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__tptz__SetConfigurationResponse_sequence(struct soap*, __tptz__SetConfigurationResponse_sequence *const*, const char*, const char*);

#ifndef soap_write_PointerTo__tptz__SetConfigurationResponse_sequence
#define soap_write_PointerTo__tptz__SetConfigurationResponse_sequence(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo__tptz__SetConfigurationResponse_sequence(soap, data),0) || soap_put_PointerTo__tptz__SetConfigurationResponse_sequence(soap, data, "-tptz:SetConfigurationResponse-sequence", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 __tptz__SetConfigurationResponse_sequence ** SOAP_FMAC4 soap_get_PointerTo__tptz__SetConfigurationResponse_sequence(struct soap*, __tptz__SetConfigurationResponse_sequence **, const char*, const char*);

#ifndef soap_read_PointerTo__tptz__SetConfigurationResponse_sequence
#define soap_read_PointerTo__tptz__SetConfigurationResponse_sequence(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo__tptz__SetConfigurationResponse_sequence(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZNode
#define SOAP_TYPE_PointerTott__PTZNode (1462)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZNode(struct soap*, tt__PTZNode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZNode(struct soap*, const char *, int, tt__PTZNode *const*, const char *);
SOAP_FMAC3 tt__PTZNode ** SOAP_FMAC4 soap_in_PointerTott__PTZNode(struct soap*, const char*, tt__PTZNode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZNode(struct soap*, tt__PTZNode *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZNode
#define soap_write_PointerTott__PTZNode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZNode(soap, data),0) || soap_put_PointerTott__PTZNode(soap, data, "tt:PTZNode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZNode ** SOAP_FMAC4 soap_get_PointerTott__PTZNode(struct soap*, tt__PTZNode **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZNode
#define soap_read_PointerTott__PTZNode(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZNode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotptz__Capabilities
#define SOAP_TYPE_PointerTotptz__Capabilities (1461)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotptz__Capabilities(struct soap*, tptz__Capabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotptz__Capabilities(struct soap*, const char *, int, tptz__Capabilities *const*, const char *);
SOAP_FMAC3 tptz__Capabilities ** SOAP_FMAC4 soap_in_PointerTotptz__Capabilities(struct soap*, const char*, tptz__Capabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotptz__Capabilities(struct soap*, tptz__Capabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTotptz__Capabilities
#define soap_write_PointerTotptz__Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotptz__Capabilities(soap, data),0) || soap_put_PointerTotptz__Capabilities(soap, data, "tptz:Capabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tptz__Capabilities ** SOAP_FMAC4 soap_get_PointerTotptz__Capabilities(struct soap*, tptz__Capabilities **, const char*, const char*);

#ifndef soap_read_PointerTotptz__Capabilities
#define soap_read_PointerTotptz__Capabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTotptz__Capabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowstop__Documentation
#define SOAP_TYPE_PointerTowstop__Documentation (1460)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowstop__Documentation(struct soap*, wstop__Documentation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowstop__Documentation(struct soap*, const char *, int, wstop__Documentation *const*, const char *);
SOAP_FMAC3 wstop__Documentation ** SOAP_FMAC4 soap_in_PointerTowstop__Documentation(struct soap*, const char*, wstop__Documentation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowstop__Documentation(struct soap*, wstop__Documentation *const*, const char*, const char*);

#ifndef soap_write_PointerTowstop__Documentation
#define soap_write_PointerTowstop__Documentation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowstop__Documentation(soap, data),0) || soap_put_PointerTowstop__Documentation(soap, data, "wstop:Documentation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wstop__Documentation ** SOAP_FMAC4 soap_get_PointerTowstop__Documentation(struct soap*, wstop__Documentation **, const char*, const char*);

#ifndef soap_read_PointerTowstop__Documentation
#define soap_read_PointerTowstop__Documentation(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowstop__Documentation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsrfbf__BaseFaultType_FaultCause
#define SOAP_TYPE_PointerTo_wsrfbf__BaseFaultType_FaultCause (1459)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsrfbf__BaseFaultType_FaultCause(struct soap*, _wsrfbf__BaseFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsrfbf__BaseFaultType_FaultCause(struct soap*, const char *, int, _wsrfbf__BaseFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 _wsrfbf__BaseFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsrfbf__BaseFaultType_FaultCause(struct soap*, const char*, _wsrfbf__BaseFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsrfbf__BaseFaultType_FaultCause(struct soap*, _wsrfbf__BaseFaultType_FaultCause *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsrfbf__BaseFaultType_FaultCause
#define soap_write_PointerTo_wsrfbf__BaseFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_wsrfbf__BaseFaultType_FaultCause(soap, data),0) || soap_put_PointerTo_wsrfbf__BaseFaultType_FaultCause(soap, data, "wsrfbf:BaseFaultType-FaultCause", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsrfbf__BaseFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsrfbf__BaseFaultType_FaultCause(struct soap*, _wsrfbf__BaseFaultType_FaultCause **, const char*, const char*);

#ifndef soap_read_PointerTo_wsrfbf__BaseFaultType_FaultCause
#define soap_read_PointerTo_wsrfbf__BaseFaultType_FaultCause(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_wsrfbf__BaseFaultType_FaultCause(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description
#define SOAP_TYPE_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description (1457)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description(struct soap*, std::vector<_wsrfbf__BaseFaultType_Description >*const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description(struct soap*, const char *, int, std::vector<_wsrfbf__BaseFaultType_Description >*const*, const char *);
SOAP_FMAC3 std::vector<_wsrfbf__BaseFaultType_Description >** SOAP_FMAC4 soap_in_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description(struct soap*, const char*, std::vector<_wsrfbf__BaseFaultType_Description >**, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description(struct soap*, std::vector<_wsrfbf__BaseFaultType_Description >*const*, const char*, const char*);

#ifndef soap_write_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description
#define soap_write_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description(soap, data),0) || soap_put_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description(soap, data, "", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::vector<_wsrfbf__BaseFaultType_Description >** SOAP_FMAC4 soap_get_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description(struct soap*, std::vector<_wsrfbf__BaseFaultType_Description >**, const char*, const char*);

#ifndef soap_read_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description
#define soap_read_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_xml__lang
#define SOAP_TYPE_PointerTo_xml__lang (1455)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_xml__lang(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_xml__lang(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTo_xml__lang(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_xml__lang(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTo_xml__lang
#define soap_write_PointerTo_xml__lang(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_xml__lang(soap, data),0) || soap_put_PointerTo_xml__lang(soap, data, "xml:lang", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTo_xml__lang(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTo_xml__lang
#define soap_read_PointerTo_xml__lang(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_xml__lang(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsrfbf__BaseFaultType_ErrorCode
#define SOAP_TYPE_PointerTo_wsrfbf__BaseFaultType_ErrorCode (1453)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsrfbf__BaseFaultType_ErrorCode(struct soap*, _wsrfbf__BaseFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsrfbf__BaseFaultType_ErrorCode(struct soap*, const char *, int, _wsrfbf__BaseFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 _wsrfbf__BaseFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsrfbf__BaseFaultType_ErrorCode(struct soap*, const char*, _wsrfbf__BaseFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsrfbf__BaseFaultType_ErrorCode(struct soap*, _wsrfbf__BaseFaultType_ErrorCode *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsrfbf__BaseFaultType_ErrorCode
#define soap_write_PointerTo_wsrfbf__BaseFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_wsrfbf__BaseFaultType_ErrorCode(soap, data),0) || soap_put_PointerTo_wsrfbf__BaseFaultType_ErrorCode(soap, data, "wsrfbf:BaseFaultType-ErrorCode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsrfbf__BaseFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsrfbf__BaseFaultType_ErrorCode(struct soap*, _wsrfbf__BaseFaultType_ErrorCode **, const char*, const char*);

#ifndef soap_read_PointerTo_wsrfbf__BaseFaultType_ErrorCode
#define soap_read_PointerTo_wsrfbf__BaseFaultType_ErrorCode(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_wsrfbf__BaseFaultType_ErrorCode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToxsd__nonNegativeInteger
#define SOAP_TYPE_PointerToxsd__nonNegativeInteger (1451)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__nonNegativeInteger(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__nonNegativeInteger(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToxsd__nonNegativeInteger(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__nonNegativeInteger(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__nonNegativeInteger
#define soap_write_PointerToxsd__nonNegativeInteger(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToxsd__nonNegativeInteger(soap, data),0) || soap_put_PointerToxsd__nonNegativeInteger(soap, data, "xsd:nonNegativeInteger", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToxsd__nonNegativeInteger(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerToxsd__nonNegativeInteger
#define soap_read_PointerToxsd__nonNegativeInteger(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxsd__nonNegativeInteger(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsnt__Subscribe_SubscriptionPolicy
#define SOAP_TYPE_PointerTo_wsnt__Subscribe_SubscriptionPolicy (1450)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__Subscribe_SubscriptionPolicy(struct soap*, _wsnt__Subscribe_SubscriptionPolicy *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__Subscribe_SubscriptionPolicy(struct soap*, const char *, int, _wsnt__Subscribe_SubscriptionPolicy *const*, const char *);
SOAP_FMAC3 _wsnt__Subscribe_SubscriptionPolicy ** SOAP_FMAC4 soap_in_PointerTo_wsnt__Subscribe_SubscriptionPolicy(struct soap*, const char*, _wsnt__Subscribe_SubscriptionPolicy **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__Subscribe_SubscriptionPolicy(struct soap*, _wsnt__Subscribe_SubscriptionPolicy *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsnt__Subscribe_SubscriptionPolicy
#define soap_write_PointerTo_wsnt__Subscribe_SubscriptionPolicy(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_wsnt__Subscribe_SubscriptionPolicy(soap, data),0) || soap_put_PointerTo_wsnt__Subscribe_SubscriptionPolicy(soap, data, "wsnt:Subscribe-SubscriptionPolicy", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__Subscribe_SubscriptionPolicy ** SOAP_FMAC4 soap_get_PointerTo_wsnt__Subscribe_SubscriptionPolicy(struct soap*, _wsnt__Subscribe_SubscriptionPolicy **, const char*, const char*);

#ifndef soap_read_PointerTo_wsnt__Subscribe_SubscriptionPolicy
#define soap_read_PointerTo_wsnt__Subscribe_SubscriptionPolicy(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_wsnt__Subscribe_SubscriptionPolicy(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsnt__AbsoluteOrRelativeTimeType
#define SOAP_TYPE_PointerTowsnt__AbsoluteOrRelativeTimeType (1448)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__AbsoluteOrRelativeTimeType(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__AbsoluteOrRelativeTimeType(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTowsnt__AbsoluteOrRelativeTimeType(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__AbsoluteOrRelativeTimeType(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTowsnt__AbsoluteOrRelativeTimeType
#define soap_write_PointerTowsnt__AbsoluteOrRelativeTimeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsnt__AbsoluteOrRelativeTimeType(soap, data),0) || soap_put_PointerTowsnt__AbsoluteOrRelativeTimeType(soap, data, "wsnt:AbsoluteOrRelativeTimeType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTowsnt__AbsoluteOrRelativeTimeType(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTowsnt__AbsoluteOrRelativeTimeType
#define soap_read_PointerTowsnt__AbsoluteOrRelativeTimeType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsnt__AbsoluteOrRelativeTimeType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsnt__SubscriptionPolicyType
#define SOAP_TYPE_PointerTowsnt__SubscriptionPolicyType (1446)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__SubscriptionPolicyType(struct soap*, wsnt__SubscriptionPolicyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__SubscriptionPolicyType(struct soap*, const char *, int, wsnt__SubscriptionPolicyType *const*, const char *);
SOAP_FMAC3 wsnt__SubscriptionPolicyType ** SOAP_FMAC4 soap_in_PointerTowsnt__SubscriptionPolicyType(struct soap*, const char*, wsnt__SubscriptionPolicyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__SubscriptionPolicyType(struct soap*, wsnt__SubscriptionPolicyType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsnt__SubscriptionPolicyType
#define soap_write_PointerTowsnt__SubscriptionPolicyType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsnt__SubscriptionPolicyType(soap, data),0) || soap_put_PointerTowsnt__SubscriptionPolicyType(soap, data, "wsnt:SubscriptionPolicyType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__SubscriptionPolicyType ** SOAP_FMAC4 soap_get_PointerTowsnt__SubscriptionPolicyType(struct soap*, wsnt__SubscriptionPolicyType **, const char*, const char*);

#ifndef soap_read_PointerTowsnt__SubscriptionPolicyType
#define soap_read_PointerTowsnt__SubscriptionPolicyType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsnt__SubscriptionPolicyType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowstop__TopicSetType
#define SOAP_TYPE_PointerTowstop__TopicSetType (1445)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowstop__TopicSetType(struct soap*, wstop__TopicSetType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowstop__TopicSetType(struct soap*, const char *, int, wstop__TopicSetType *const*, const char *);
SOAP_FMAC3 wstop__TopicSetType ** SOAP_FMAC4 soap_in_PointerTowstop__TopicSetType(struct soap*, const char*, wstop__TopicSetType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowstop__TopicSetType(struct soap*, wstop__TopicSetType *const*, const char*, const char*);

#ifndef soap_write_PointerTowstop__TopicSetType
#define soap_write_PointerTowstop__TopicSetType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowstop__TopicSetType(soap, data),0) || soap_put_PointerTowstop__TopicSetType(soap, data, "wstop:TopicSetType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wstop__TopicSetType ** SOAP_FMAC4 soap_get_PointerTowstop__TopicSetType(struct soap*, wstop__TopicSetType **, const char*, const char*);

#ifndef soap_read_PointerTowstop__TopicSetType
#define soap_read_PointerTowstop__TopicSetType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowstop__TopicSetType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsnt__TopicExpressionType
#define SOAP_TYPE_PointerTowsnt__TopicExpressionType (1442)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__TopicExpressionType(struct soap*, wsnt__TopicExpressionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__TopicExpressionType(struct soap*, const char *, int, wsnt__TopicExpressionType *const*, const char *);
SOAP_FMAC3 wsnt__TopicExpressionType ** SOAP_FMAC4 soap_in_PointerTowsnt__TopicExpressionType(struct soap*, const char*, wsnt__TopicExpressionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__TopicExpressionType(struct soap*, wsnt__TopicExpressionType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsnt__TopicExpressionType
#define soap_write_PointerTowsnt__TopicExpressionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsnt__TopicExpressionType(soap, data),0) || soap_put_PointerTowsnt__TopicExpressionType(soap, data, "wsnt:TopicExpressionType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__TopicExpressionType ** SOAP_FMAC4 soap_get_PointerTowsnt__TopicExpressionType(struct soap*, wsnt__TopicExpressionType **, const char*, const char*);

#ifndef soap_read_PointerTowsnt__TopicExpressionType
#define soap_read_PointerTowsnt__TopicExpressionType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsnt__TopicExpressionType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsa5__EndpointReferenceType
#define SOAP_TYPE_PointerTowsa5__EndpointReferenceType (1441)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsa5__EndpointReferenceType(struct soap*, struct wsa5__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsa5__EndpointReferenceType(struct soap*, const char *, int, struct wsa5__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTowsa5__EndpointReferenceType(struct soap*, const char*, struct wsa5__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsa5__EndpointReferenceType(struct soap*, struct wsa5__EndpointReferenceType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsa5__EndpointReferenceType
#define soap_write_PointerTowsa5__EndpointReferenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsa5__EndpointReferenceType(soap, data),0) || soap_put_PointerTowsa5__EndpointReferenceType(soap, data, "wsa5:EndpointReferenceType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTowsa5__EndpointReferenceType(struct soap*, struct wsa5__EndpointReferenceType **, const char*, const char*);

#ifndef soap_read_PointerTowsa5__EndpointReferenceType
#define soap_read_PointerTowsa5__EndpointReferenceType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsa5__EndpointReferenceType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PropertyOperation
#define SOAP_TYPE_PointerTott__PropertyOperation (1440)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PropertyOperation(struct soap*, enum tt__PropertyOperation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PropertyOperation(struct soap*, const char *, int, enum tt__PropertyOperation *const*, const char *);
SOAP_FMAC3 enum tt__PropertyOperation ** SOAP_FMAC4 soap_in_PointerTott__PropertyOperation(struct soap*, const char*, enum tt__PropertyOperation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PropertyOperation(struct soap*, enum tt__PropertyOperation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PropertyOperation
#define soap_write_PointerTott__PropertyOperation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PropertyOperation(soap, data),0) || soap_put_PointerTott__PropertyOperation(soap, data, "tt:PropertyOperation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__PropertyOperation ** SOAP_FMAC4 soap_get_PointerTott__PropertyOperation(struct soap*, enum tt__PropertyOperation **, const char*, const char*);

#ifndef soap_read_PointerTott__PropertyOperation
#define soap_read_PointerTott__PropertyOperation(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PropertyOperation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MessageExtension
#define SOAP_TYPE_PointerTott__MessageExtension (1439)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MessageExtension(struct soap*, tt__MessageExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MessageExtension(struct soap*, const char *, int, tt__MessageExtension *const*, const char *);
SOAP_FMAC3 tt__MessageExtension ** SOAP_FMAC4 soap_in_PointerTott__MessageExtension(struct soap*, const char*, tt__MessageExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MessageExtension(struct soap*, tt__MessageExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MessageExtension
#define soap_write_PointerTott__MessageExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MessageExtension(soap, data),0) || soap_put_PointerTott__MessageExtension(soap, data, "tt:MessageExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MessageExtension ** SOAP_FMAC4 soap_get_PointerTott__MessageExtension(struct soap*, tt__MessageExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__MessageExtension
#define soap_read_PointerTott__MessageExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__MessageExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDConfigurationOptionsExtension
#define SOAP_TYPE_PointerTott__OSDConfigurationOptionsExtension (1438)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDConfigurationOptionsExtension(struct soap*, tt__OSDConfigurationOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDConfigurationOptionsExtension(struct soap*, const char *, int, tt__OSDConfigurationOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__OSDConfigurationOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__OSDConfigurationOptionsExtension(struct soap*, const char*, tt__OSDConfigurationOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDConfigurationOptionsExtension(struct soap*, tt__OSDConfigurationOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDConfigurationOptionsExtension
#define soap_write_PointerTott__OSDConfigurationOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDConfigurationOptionsExtension(soap, data),0) || soap_put_PointerTott__OSDConfigurationOptionsExtension(soap, data, "tt:OSDConfigurationOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDConfigurationOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__OSDConfigurationOptionsExtension(struct soap*, tt__OSDConfigurationOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDConfigurationOptionsExtension
#define soap_read_PointerTott__OSDConfigurationOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__OSDConfigurationOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDImgOptions
#define SOAP_TYPE_PointerTott__OSDImgOptions (1437)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDImgOptions(struct soap*, tt__OSDImgOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDImgOptions(struct soap*, const char *, int, tt__OSDImgOptions *const*, const char *);
SOAP_FMAC3 tt__OSDImgOptions ** SOAP_FMAC4 soap_in_PointerTott__OSDImgOptions(struct soap*, const char*, tt__OSDImgOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDImgOptions(struct soap*, tt__OSDImgOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDImgOptions
#define soap_write_PointerTott__OSDImgOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDImgOptions(soap, data),0) || soap_put_PointerTott__OSDImgOptions(soap, data, "tt:OSDImgOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDImgOptions ** SOAP_FMAC4 soap_get_PointerTott__OSDImgOptions(struct soap*, tt__OSDImgOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDImgOptions
#define soap_read_PointerTott__OSDImgOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__OSDImgOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDTextOptions
#define SOAP_TYPE_PointerTott__OSDTextOptions (1436)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDTextOptions(struct soap*, tt__OSDTextOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDTextOptions(struct soap*, const char *, int, tt__OSDTextOptions *const*, const char *);
SOAP_FMAC3 tt__OSDTextOptions ** SOAP_FMAC4 soap_in_PointerTott__OSDTextOptions(struct soap*, const char*, tt__OSDTextOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDTextOptions(struct soap*, tt__OSDTextOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDTextOptions
#define soap_write_PointerTott__OSDTextOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDTextOptions(soap, data),0) || soap_put_PointerTott__OSDTextOptions(soap, data, "tt:OSDTextOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDTextOptions ** SOAP_FMAC4 soap_get_PointerTott__OSDTextOptions(struct soap*, tt__OSDTextOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDTextOptions
#define soap_read_PointerTott__OSDTextOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__OSDTextOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MaximumNumberOfOSDs
#define SOAP_TYPE_PointerTott__MaximumNumberOfOSDs (1434)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MaximumNumberOfOSDs(struct soap*, tt__MaximumNumberOfOSDs *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MaximumNumberOfOSDs(struct soap*, const char *, int, tt__MaximumNumberOfOSDs *const*, const char *);
SOAP_FMAC3 tt__MaximumNumberOfOSDs ** SOAP_FMAC4 soap_in_PointerTott__MaximumNumberOfOSDs(struct soap*, const char*, tt__MaximumNumberOfOSDs **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MaximumNumberOfOSDs(struct soap*, tt__MaximumNumberOfOSDs *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MaximumNumberOfOSDs
#define soap_write_PointerTott__MaximumNumberOfOSDs(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MaximumNumberOfOSDs(soap, data),0) || soap_put_PointerTott__MaximumNumberOfOSDs(soap, data, "tt:MaximumNumberOfOSDs", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MaximumNumberOfOSDs ** SOAP_FMAC4 soap_get_PointerTott__MaximumNumberOfOSDs(struct soap*, tt__MaximumNumberOfOSDs **, const char*, const char*);

#ifndef soap_read_PointerTott__MaximumNumberOfOSDs
#define soap_read_PointerTott__MaximumNumberOfOSDs(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__MaximumNumberOfOSDs(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDImgOptionsExtension
#define SOAP_TYPE_PointerTott__OSDImgOptionsExtension (1433)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDImgOptionsExtension(struct soap*, tt__OSDImgOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDImgOptionsExtension(struct soap*, const char *, int, tt__OSDImgOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__OSDImgOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__OSDImgOptionsExtension(struct soap*, const char*, tt__OSDImgOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDImgOptionsExtension(struct soap*, tt__OSDImgOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDImgOptionsExtension
#define soap_write_PointerTott__OSDImgOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDImgOptionsExtension(soap, data),0) || soap_put_PointerTott__OSDImgOptionsExtension(soap, data, "tt:OSDImgOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDImgOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__OSDImgOptionsExtension(struct soap*, tt__OSDImgOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDImgOptionsExtension
#define soap_read_PointerTott__OSDImgOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__OSDImgOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDTextOptionsExtension
#define SOAP_TYPE_PointerTott__OSDTextOptionsExtension (1432)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDTextOptionsExtension(struct soap*, tt__OSDTextOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDTextOptionsExtension(struct soap*, const char *, int, tt__OSDTextOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__OSDTextOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__OSDTextOptionsExtension(struct soap*, const char*, tt__OSDTextOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDTextOptionsExtension(struct soap*, tt__OSDTextOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDTextOptionsExtension
#define soap_write_PointerTott__OSDTextOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDTextOptionsExtension(soap, data),0) || soap_put_PointerTott__OSDTextOptionsExtension(soap, data, "tt:OSDTextOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDTextOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__OSDTextOptionsExtension(struct soap*, tt__OSDTextOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDTextOptionsExtension
#define soap_read_PointerTott__OSDTextOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__OSDTextOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDColorOptions
#define SOAP_TYPE_PointerTott__OSDColorOptions (1431)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDColorOptions(struct soap*, tt__OSDColorOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDColorOptions(struct soap*, const char *, int, tt__OSDColorOptions *const*, const char *);
SOAP_FMAC3 tt__OSDColorOptions ** SOAP_FMAC4 soap_in_PointerTott__OSDColorOptions(struct soap*, const char*, tt__OSDColorOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDColorOptions(struct soap*, tt__OSDColorOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDColorOptions
#define soap_write_PointerTott__OSDColorOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDColorOptions(soap, data),0) || soap_put_PointerTott__OSDColorOptions(soap, data, "tt:OSDColorOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDColorOptions ** SOAP_FMAC4 soap_get_PointerTott__OSDColorOptions(struct soap*, tt__OSDColorOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDColorOptions
#define soap_read_PointerTott__OSDColorOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__OSDColorOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDColorOptionsExtension
#define SOAP_TYPE_PointerTott__OSDColorOptionsExtension (1430)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDColorOptionsExtension(struct soap*, tt__OSDColorOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDColorOptionsExtension(struct soap*, const char *, int, tt__OSDColorOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__OSDColorOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__OSDColorOptionsExtension(struct soap*, const char*, tt__OSDColorOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDColorOptionsExtension(struct soap*, tt__OSDColorOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDColorOptionsExtension
#define soap_write_PointerTott__OSDColorOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDColorOptionsExtension(soap, data),0) || soap_put_PointerTott__OSDColorOptionsExtension(soap, data, "tt:OSDColorOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDColorOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__OSDColorOptionsExtension(struct soap*, tt__OSDColorOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDColorOptionsExtension
#define soap_read_PointerTott__OSDColorOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__OSDColorOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ColorOptions
#define SOAP_TYPE_PointerTott__ColorOptions (1429)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ColorOptions(struct soap*, tt__ColorOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ColorOptions(struct soap*, const char *, int, tt__ColorOptions *const*, const char *);
SOAP_FMAC3 tt__ColorOptions ** SOAP_FMAC4 soap_in_PointerTott__ColorOptions(struct soap*, const char*, tt__ColorOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ColorOptions(struct soap*, tt__ColorOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ColorOptions
#define soap_write_PointerTott__ColorOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ColorOptions(soap, data),0) || soap_put_PointerTott__ColorOptions(soap, data, "tt:ColorOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ColorOptions ** SOAP_FMAC4 soap_get_PointerTott__ColorOptions(struct soap*, tt__ColorOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__ColorOptions
#define soap_read_PointerTott__ColorOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ColorOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange
#define SOAP_TYPE_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange (1427)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange(struct soap*, std::vector<tt__ColorspaceRange * >*const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange(struct soap*, const char *, int, std::vector<tt__ColorspaceRange * >*const*, const char *);
SOAP_FMAC3 std::vector<tt__ColorspaceRange * >** SOAP_FMAC4 soap_in_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange(struct soap*, const char*, std::vector<tt__ColorspaceRange * >**, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange(struct soap*, std::vector<tt__ColorspaceRange * >*const*, const char*, const char*);

#ifndef soap_write_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange
#define soap_write_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange(soap, data),0) || soap_put_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange(soap, data, "", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::vector<tt__ColorspaceRange * >** SOAP_FMAC4 soap_get_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange(struct soap*, std::vector<tt__ColorspaceRange * >**, const char*, const char*);

#ifndef soap_read_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange
#define soap_read_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ColorspaceRange
#define SOAP_TYPE_PointerTott__ColorspaceRange (1425)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ColorspaceRange(struct soap*, tt__ColorspaceRange *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ColorspaceRange(struct soap*, const char *, int, tt__ColorspaceRange *const*, const char *);
SOAP_FMAC3 tt__ColorspaceRange ** SOAP_FMAC4 soap_in_PointerTott__ColorspaceRange(struct soap*, const char*, tt__ColorspaceRange **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ColorspaceRange(struct soap*, tt__ColorspaceRange *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ColorspaceRange
#define soap_write_PointerTott__ColorspaceRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ColorspaceRange(soap, data),0) || soap_put_PointerTott__ColorspaceRange(soap, data, "tt:ColorspaceRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ColorspaceRange ** SOAP_FMAC4 soap_get_PointerTott__ColorspaceRange(struct soap*, tt__ColorspaceRange **, const char*, const char*);

#ifndef soap_read_PointerTott__ColorspaceRange
#define soap_read_PointerTott__ColorspaceRange(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ColorspaceRange(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__vectorTemplateOfPointerTott__Color
#define SOAP_TYPE_PointerTostd__vectorTemplateOfPointerTott__Color (1424)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__vectorTemplateOfPointerTott__Color(struct soap*, std::vector<tt__Color * >*const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__vectorTemplateOfPointerTott__Color(struct soap*, const char *, int, std::vector<tt__Color * >*const*, const char *);
SOAP_FMAC3 std::vector<tt__Color * >** SOAP_FMAC4 soap_in_PointerTostd__vectorTemplateOfPointerTott__Color(struct soap*, const char*, std::vector<tt__Color * >**, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__vectorTemplateOfPointerTott__Color(struct soap*, std::vector<tt__Color * >*const*, const char*, const char*);

#ifndef soap_write_PointerTostd__vectorTemplateOfPointerTott__Color
#define soap_write_PointerTostd__vectorTemplateOfPointerTott__Color(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__vectorTemplateOfPointerTott__Color(soap, data),0) || soap_put_PointerTostd__vectorTemplateOfPointerTott__Color(soap, data, "", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::vector<tt__Color * >** SOAP_FMAC4 soap_get_PointerTostd__vectorTemplateOfPointerTott__Color(struct soap*, std::vector<tt__Color * >**, const char*, const char*);

#ifndef soap_read_PointerTostd__vectorTemplateOfPointerTott__Color
#define soap_read_PointerTostd__vectorTemplateOfPointerTott__Color(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__vectorTemplateOfPointerTott__Color(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDImgConfigurationExtension
#define SOAP_TYPE_PointerTott__OSDImgConfigurationExtension (1422)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDImgConfigurationExtension(struct soap*, tt__OSDImgConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDImgConfigurationExtension(struct soap*, const char *, int, tt__OSDImgConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__OSDImgConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__OSDImgConfigurationExtension(struct soap*, const char*, tt__OSDImgConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDImgConfigurationExtension(struct soap*, tt__OSDImgConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDImgConfigurationExtension
#define soap_write_PointerTott__OSDImgConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDImgConfigurationExtension(soap, data),0) || soap_put_PointerTott__OSDImgConfigurationExtension(soap, data, "tt:OSDImgConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDImgConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__OSDImgConfigurationExtension(struct soap*, tt__OSDImgConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDImgConfigurationExtension
#define soap_read_PointerTott__OSDImgConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__OSDImgConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDTextConfigurationExtension
#define SOAP_TYPE_PointerTott__OSDTextConfigurationExtension (1421)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDTextConfigurationExtension(struct soap*, tt__OSDTextConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDTextConfigurationExtension(struct soap*, const char *, int, tt__OSDTextConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__OSDTextConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__OSDTextConfigurationExtension(struct soap*, const char*, tt__OSDTextConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDTextConfigurationExtension(struct soap*, tt__OSDTextConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDTextConfigurationExtension
#define soap_write_PointerTott__OSDTextConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDTextConfigurationExtension(soap, data),0) || soap_put_PointerTott__OSDTextConfigurationExtension(soap, data, "tt:OSDTextConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDTextConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__OSDTextConfigurationExtension(struct soap*, tt__OSDTextConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDTextConfigurationExtension
#define soap_read_PointerTott__OSDTextConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__OSDTextConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDColor
#define SOAP_TYPE_PointerTott__OSDColor (1420)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDColor(struct soap*, tt__OSDColor *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDColor(struct soap*, const char *, int, tt__OSDColor *const*, const char *);
SOAP_FMAC3 tt__OSDColor ** SOAP_FMAC4 soap_in_PointerTott__OSDColor(struct soap*, const char*, tt__OSDColor **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDColor(struct soap*, tt__OSDColor *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDColor
#define soap_write_PointerTott__OSDColor(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDColor(soap, data),0) || soap_put_PointerTott__OSDColor(soap, data, "tt:OSDColor", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDColor ** SOAP_FMAC4 soap_get_PointerTott__OSDColor(struct soap*, tt__OSDColor **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDColor
#define soap_read_PointerTott__OSDColor(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__OSDColor(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDPosConfigurationExtension
#define SOAP_TYPE_PointerTott__OSDPosConfigurationExtension (1419)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDPosConfigurationExtension(struct soap*, tt__OSDPosConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDPosConfigurationExtension(struct soap*, const char *, int, tt__OSDPosConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__OSDPosConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__OSDPosConfigurationExtension(struct soap*, const char*, tt__OSDPosConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDPosConfigurationExtension(struct soap*, tt__OSDPosConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDPosConfigurationExtension
#define soap_write_PointerTott__OSDPosConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDPosConfigurationExtension(soap, data),0) || soap_put_PointerTott__OSDPosConfigurationExtension(soap, data, "tt:OSDPosConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDPosConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__OSDPosConfigurationExtension(struct soap*, tt__OSDPosConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDPosConfigurationExtension
#define soap_read_PointerTott__OSDPosConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__OSDPosConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioClassDescriptorExtension
#define SOAP_TYPE_PointerTott__AudioClassDescriptorExtension (1418)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioClassDescriptorExtension(struct soap*, tt__AudioClassDescriptorExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioClassDescriptorExtension(struct soap*, const char *, int, tt__AudioClassDescriptorExtension *const*, const char *);
SOAP_FMAC3 tt__AudioClassDescriptorExtension ** SOAP_FMAC4 soap_in_PointerTott__AudioClassDescriptorExtension(struct soap*, const char*, tt__AudioClassDescriptorExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioClassDescriptorExtension(struct soap*, tt__AudioClassDescriptorExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioClassDescriptorExtension
#define soap_write_PointerTott__AudioClassDescriptorExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioClassDescriptorExtension(soap, data),0) || soap_put_PointerTott__AudioClassDescriptorExtension(soap, data, "tt:AudioClassDescriptorExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioClassDescriptorExtension ** SOAP_FMAC4 soap_get_PointerTott__AudioClassDescriptorExtension(struct soap*, tt__AudioClassDescriptorExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioClassDescriptorExtension
#define soap_read_PointerTott__AudioClassDescriptorExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AudioClassDescriptorExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioClassCandidate
#define SOAP_TYPE_PointerTott__AudioClassCandidate (1416)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioClassCandidate(struct soap*, tt__AudioClassCandidate *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioClassCandidate(struct soap*, const char *, int, tt__AudioClassCandidate *const*, const char *);
SOAP_FMAC3 tt__AudioClassCandidate ** SOAP_FMAC4 soap_in_PointerTott__AudioClassCandidate(struct soap*, const char*, tt__AudioClassCandidate **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioClassCandidate(struct soap*, tt__AudioClassCandidate *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioClassCandidate
#define soap_write_PointerTott__AudioClassCandidate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioClassCandidate(soap, data),0) || soap_put_PointerTott__AudioClassCandidate(soap, data, "tt:AudioClassCandidate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioClassCandidate ** SOAP_FMAC4 soap_get_PointerTott__AudioClassCandidate(struct soap*, tt__AudioClassCandidate **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioClassCandidate
#define soap_read_PointerTott__AudioClassCandidate(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AudioClassCandidate(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ActionEngineEventPayloadExtension
#define SOAP_TYPE_PointerTott__ActionEngineEventPayloadExtension (1415)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ActionEngineEventPayloadExtension(struct soap*, tt__ActionEngineEventPayloadExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ActionEngineEventPayloadExtension(struct soap*, const char *, int, tt__ActionEngineEventPayloadExtension *const*, const char *);
SOAP_FMAC3 tt__ActionEngineEventPayloadExtension ** SOAP_FMAC4 soap_in_PointerTott__ActionEngineEventPayloadExtension(struct soap*, const char*, tt__ActionEngineEventPayloadExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ActionEngineEventPayloadExtension(struct soap*, tt__ActionEngineEventPayloadExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ActionEngineEventPayloadExtension
#define soap_write_PointerTott__ActionEngineEventPayloadExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ActionEngineEventPayloadExtension(soap, data),0) || soap_put_PointerTott__ActionEngineEventPayloadExtension(soap, data, "tt:ActionEngineEventPayloadExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ActionEngineEventPayloadExtension ** SOAP_FMAC4 soap_get_PointerTott__ActionEngineEventPayloadExtension(struct soap*, tt__ActionEngineEventPayloadExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__ActionEngineEventPayloadExtension
#define soap_read_PointerTott__ActionEngineEventPayloadExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ActionEngineEventPayloadExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Fault
#define SOAP_TYPE_PointerToSOAP_ENV__Fault (1414)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Fault(struct soap*, const char *, int, struct SOAP_ENV__Fault *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Fault ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Fault
#define soap_write_PointerToSOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Fault(soap, data),0) || soap_put_PointerToSOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Fault
#define soap_read_PointerToSOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Envelope
#define SOAP_TYPE_PointerToSOAP_ENV__Envelope (1413)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Envelope(struct soap*, struct SOAP_ENV__Envelope *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Envelope(struct soap*, const char *, int, struct SOAP_ENV__Envelope *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Envelope ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Envelope(struct soap*, const char*, struct SOAP_ENV__Envelope **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Envelope(struct soap*, struct SOAP_ENV__Envelope *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Envelope
#define soap_write_PointerToSOAP_ENV__Envelope(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Envelope(soap, data),0) || soap_put_PointerToSOAP_ENV__Envelope(soap, data, "SOAP-ENV:Envelope", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Envelope ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Envelope(struct soap*, struct SOAP_ENV__Envelope **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Envelope
#define soap_read_PointerToSOAP_ENV__Envelope(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Envelope(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AnalyticsState
#define SOAP_TYPE_PointerTott__AnalyticsState (1412)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AnalyticsState(struct soap*, tt__AnalyticsState *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AnalyticsState(struct soap*, const char *, int, tt__AnalyticsState *const*, const char *);
SOAP_FMAC3 tt__AnalyticsState ** SOAP_FMAC4 soap_in_PointerTott__AnalyticsState(struct soap*, const char*, tt__AnalyticsState **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AnalyticsState(struct soap*, tt__AnalyticsState *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AnalyticsState
#define soap_write_PointerTott__AnalyticsState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AnalyticsState(soap, data),0) || soap_put_PointerTott__AnalyticsState(soap, data, "tt:AnalyticsState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsState ** SOAP_FMAC4 soap_get_PointerTott__AnalyticsState(struct soap*, tt__AnalyticsState **, const char*, const char*);

#ifndef soap_read_PointerTott__AnalyticsState
#define soap_read_PointerTott__AnalyticsState(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AnalyticsState(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MetadataInputExtension
#define SOAP_TYPE_PointerTott__MetadataInputExtension (1411)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MetadataInputExtension(struct soap*, tt__MetadataInputExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MetadataInputExtension(struct soap*, const char *, int, tt__MetadataInputExtension *const*, const char *);
SOAP_FMAC3 tt__MetadataInputExtension ** SOAP_FMAC4 soap_in_PointerTott__MetadataInputExtension(struct soap*, const char*, tt__MetadataInputExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MetadataInputExtension(struct soap*, tt__MetadataInputExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MetadataInputExtension
#define soap_write_PointerTott__MetadataInputExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MetadataInputExtension(soap, data),0) || soap_put_PointerTott__MetadataInputExtension(soap, data, "tt:MetadataInputExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataInputExtension ** SOAP_FMAC4 soap_get_PointerTott__MetadataInputExtension(struct soap*, tt__MetadataInputExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__MetadataInputExtension
#define soap_read_PointerTott__MetadataInputExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__MetadataInputExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SourceIdentificationExtension
#define SOAP_TYPE_PointerTott__SourceIdentificationExtension (1410)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SourceIdentificationExtension(struct soap*, tt__SourceIdentificationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SourceIdentificationExtension(struct soap*, const char *, int, tt__SourceIdentificationExtension *const*, const char *);
SOAP_FMAC3 tt__SourceIdentificationExtension ** SOAP_FMAC4 soap_in_PointerTott__SourceIdentificationExtension(struct soap*, const char*, tt__SourceIdentificationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SourceIdentificationExtension(struct soap*, tt__SourceIdentificationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SourceIdentificationExtension
#define soap_write_PointerTott__SourceIdentificationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SourceIdentificationExtension(soap, data),0) || soap_put_PointerTott__SourceIdentificationExtension(soap, data, "tt:SourceIdentificationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SourceIdentificationExtension ** SOAP_FMAC4 soap_get_PointerTott__SourceIdentificationExtension(struct soap*, tt__SourceIdentificationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__SourceIdentificationExtension
#define soap_read_PointerTott__SourceIdentificationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__SourceIdentificationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AnalyticsEngineInputInfoExtension
#define SOAP_TYPE_PointerTott__AnalyticsEngineInputInfoExtension (1409)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AnalyticsEngineInputInfoExtension(struct soap*, tt__AnalyticsEngineInputInfoExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AnalyticsEngineInputInfoExtension(struct soap*, const char *, int, tt__AnalyticsEngineInputInfoExtension *const*, const char *);
SOAP_FMAC3 tt__AnalyticsEngineInputInfoExtension ** SOAP_FMAC4 soap_in_PointerTott__AnalyticsEngineInputInfoExtension(struct soap*, const char*, tt__AnalyticsEngineInputInfoExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AnalyticsEngineInputInfoExtension(struct soap*, tt__AnalyticsEngineInputInfoExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AnalyticsEngineInputInfoExtension
#define soap_write_PointerTott__AnalyticsEngineInputInfoExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AnalyticsEngineInputInfoExtension(soap, data),0) || soap_put_PointerTott__AnalyticsEngineInputInfoExtension(soap, data, "tt:AnalyticsEngineInputInfoExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsEngineInputInfoExtension ** SOAP_FMAC4 soap_get_PointerTott__AnalyticsEngineInputInfoExtension(struct soap*, tt__AnalyticsEngineInputInfoExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__AnalyticsEngineInputInfoExtension
#define soap_read_PointerTott__AnalyticsEngineInputInfoExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AnalyticsEngineInputInfoExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AnalyticsEngineInputInfo
#define SOAP_TYPE_PointerTott__AnalyticsEngineInputInfo (1408)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AnalyticsEngineInputInfo(struct soap*, tt__AnalyticsEngineInputInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AnalyticsEngineInputInfo(struct soap*, const char *, int, tt__AnalyticsEngineInputInfo *const*, const char *);
SOAP_FMAC3 tt__AnalyticsEngineInputInfo ** SOAP_FMAC4 soap_in_PointerTott__AnalyticsEngineInputInfo(struct soap*, const char*, tt__AnalyticsEngineInputInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AnalyticsEngineInputInfo(struct soap*, tt__AnalyticsEngineInputInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AnalyticsEngineInputInfo
#define soap_write_PointerTott__AnalyticsEngineInputInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AnalyticsEngineInputInfo(soap, data),0) || soap_put_PointerTott__AnalyticsEngineInputInfo(soap, data, "tt:AnalyticsEngineInputInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsEngineInputInfo ** SOAP_FMAC4 soap_get_PointerTott__AnalyticsEngineInputInfo(struct soap*, tt__AnalyticsEngineInputInfo **, const char*, const char*);

#ifndef soap_read_PointerTott__AnalyticsEngineInputInfo
#define soap_read_PointerTott__AnalyticsEngineInputInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AnalyticsEngineInputInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AnalyticsDeviceEngineConfigurationExtension
#define SOAP_TYPE_PointerTott__AnalyticsDeviceEngineConfigurationExtension (1407)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AnalyticsDeviceEngineConfigurationExtension(struct soap*, tt__AnalyticsDeviceEngineConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AnalyticsDeviceEngineConfigurationExtension(struct soap*, const char *, int, tt__AnalyticsDeviceEngineConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__AnalyticsDeviceEngineConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__AnalyticsDeviceEngineConfigurationExtension(struct soap*, const char*, tt__AnalyticsDeviceEngineConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AnalyticsDeviceEngineConfigurationExtension(struct soap*, tt__AnalyticsDeviceEngineConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AnalyticsDeviceEngineConfigurationExtension
#define soap_write_PointerTott__AnalyticsDeviceEngineConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AnalyticsDeviceEngineConfigurationExtension(soap, data),0) || soap_put_PointerTott__AnalyticsDeviceEngineConfigurationExtension(soap, data, "tt:AnalyticsDeviceEngineConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsDeviceEngineConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__AnalyticsDeviceEngineConfigurationExtension(struct soap*, tt__AnalyticsDeviceEngineConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__AnalyticsDeviceEngineConfigurationExtension
#define soap_read_PointerTott__AnalyticsDeviceEngineConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AnalyticsDeviceEngineConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__EngineConfiguration
#define SOAP_TYPE_PointerTott__EngineConfiguration (1405)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__EngineConfiguration(struct soap*, tt__EngineConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__EngineConfiguration(struct soap*, const char *, int, tt__EngineConfiguration *const*, const char *);
SOAP_FMAC3 tt__EngineConfiguration ** SOAP_FMAC4 soap_in_PointerTott__EngineConfiguration(struct soap*, const char*, tt__EngineConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__EngineConfiguration(struct soap*, tt__EngineConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__EngineConfiguration
#define soap_write_PointerTott__EngineConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__EngineConfiguration(soap, data),0) || soap_put_PointerTott__EngineConfiguration(soap, data, "tt:EngineConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EngineConfiguration ** SOAP_FMAC4 soap_get_PointerTott__EngineConfiguration(struct soap*, tt__EngineConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__EngineConfiguration
#define soap_read_PointerTott__EngineConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__EngineConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RecordingJobConfiguration
#define SOAP_TYPE_PointerTott__RecordingJobConfiguration (1404)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RecordingJobConfiguration(struct soap*, tt__RecordingJobConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RecordingJobConfiguration(struct soap*, const char *, int, tt__RecordingJobConfiguration *const*, const char *);
SOAP_FMAC3 tt__RecordingJobConfiguration ** SOAP_FMAC4 soap_in_PointerTott__RecordingJobConfiguration(struct soap*, const char*, tt__RecordingJobConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RecordingJobConfiguration(struct soap*, tt__RecordingJobConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RecordingJobConfiguration
#define soap_write_PointerTott__RecordingJobConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RecordingJobConfiguration(soap, data),0) || soap_put_PointerTott__RecordingJobConfiguration(soap, data, "tt:RecordingJobConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobConfiguration ** SOAP_FMAC4 soap_get_PointerTott__RecordingJobConfiguration(struct soap*, tt__RecordingJobConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__RecordingJobConfiguration
#define soap_read_PointerTott__RecordingJobConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__RecordingJobConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RecordingJobStateTrack
#define SOAP_TYPE_PointerTott__RecordingJobStateTrack (1402)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RecordingJobStateTrack(struct soap*, tt__RecordingJobStateTrack *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RecordingJobStateTrack(struct soap*, const char *, int, tt__RecordingJobStateTrack *const*, const char *);
SOAP_FMAC3 tt__RecordingJobStateTrack ** SOAP_FMAC4 soap_in_PointerTott__RecordingJobStateTrack(struct soap*, const char*, tt__RecordingJobStateTrack **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RecordingJobStateTrack(struct soap*, tt__RecordingJobStateTrack *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RecordingJobStateTrack
#define soap_write_PointerTott__RecordingJobStateTrack(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RecordingJobStateTrack(soap, data),0) || soap_put_PointerTott__RecordingJobStateTrack(soap, data, "tt:RecordingJobStateTrack", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobStateTrack ** SOAP_FMAC4 soap_get_PointerTott__RecordingJobStateTrack(struct soap*, tt__RecordingJobStateTrack **, const char*, const char*);

#ifndef soap_read_PointerTott__RecordingJobStateTrack
#define soap_read_PointerTott__RecordingJobStateTrack(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__RecordingJobStateTrack(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RecordingJobStateTracks
#define SOAP_TYPE_PointerTott__RecordingJobStateTracks (1401)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RecordingJobStateTracks(struct soap*, tt__RecordingJobStateTracks *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RecordingJobStateTracks(struct soap*, const char *, int, tt__RecordingJobStateTracks *const*, const char *);
SOAP_FMAC3 tt__RecordingJobStateTracks ** SOAP_FMAC4 soap_in_PointerTott__RecordingJobStateTracks(struct soap*, const char*, tt__RecordingJobStateTracks **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RecordingJobStateTracks(struct soap*, tt__RecordingJobStateTracks *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RecordingJobStateTracks
#define soap_write_PointerTott__RecordingJobStateTracks(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RecordingJobStateTracks(soap, data),0) || soap_put_PointerTott__RecordingJobStateTracks(soap, data, "tt:RecordingJobStateTracks", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobStateTracks ** SOAP_FMAC4 soap_get_PointerTott__RecordingJobStateTracks(struct soap*, tt__RecordingJobStateTracks **, const char*, const char*);

#ifndef soap_read_PointerTott__RecordingJobStateTracks
#define soap_read_PointerTott__RecordingJobStateTracks(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__RecordingJobStateTracks(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RecordingJobStateInformationExtension
#define SOAP_TYPE_PointerTott__RecordingJobStateInformationExtension (1400)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RecordingJobStateInformationExtension(struct soap*, tt__RecordingJobStateInformationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RecordingJobStateInformationExtension(struct soap*, const char *, int, tt__RecordingJobStateInformationExtension *const*, const char *);
SOAP_FMAC3 tt__RecordingJobStateInformationExtension ** SOAP_FMAC4 soap_in_PointerTott__RecordingJobStateInformationExtension(struct soap*, const char*, tt__RecordingJobStateInformationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RecordingJobStateInformationExtension(struct soap*, tt__RecordingJobStateInformationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RecordingJobStateInformationExtension
#define soap_write_PointerTott__RecordingJobStateInformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RecordingJobStateInformationExtension(soap, data),0) || soap_put_PointerTott__RecordingJobStateInformationExtension(soap, data, "tt:RecordingJobStateInformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobStateInformationExtension ** SOAP_FMAC4 soap_get_PointerTott__RecordingJobStateInformationExtension(struct soap*, tt__RecordingJobStateInformationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__RecordingJobStateInformationExtension
#define soap_read_PointerTott__RecordingJobStateInformationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__RecordingJobStateInformationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RecordingJobStateSource
#define SOAP_TYPE_PointerTott__RecordingJobStateSource (1398)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RecordingJobStateSource(struct soap*, tt__RecordingJobStateSource *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RecordingJobStateSource(struct soap*, const char *, int, tt__RecordingJobStateSource *const*, const char *);
SOAP_FMAC3 tt__RecordingJobStateSource ** SOAP_FMAC4 soap_in_PointerTott__RecordingJobStateSource(struct soap*, const char*, tt__RecordingJobStateSource **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RecordingJobStateSource(struct soap*, tt__RecordingJobStateSource *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RecordingJobStateSource
#define soap_write_PointerTott__RecordingJobStateSource(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RecordingJobStateSource(soap, data),0) || soap_put_PointerTott__RecordingJobStateSource(soap, data, "tt:RecordingJobStateSource", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobStateSource ** SOAP_FMAC4 soap_get_PointerTott__RecordingJobStateSource(struct soap*, tt__RecordingJobStateSource **, const char*, const char*);

#ifndef soap_read_PointerTott__RecordingJobStateSource
#define soap_read_PointerTott__RecordingJobStateSource(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__RecordingJobStateSource(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RecordingJobSourceExtension
#define SOAP_TYPE_PointerTott__RecordingJobSourceExtension (1397)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RecordingJobSourceExtension(struct soap*, tt__RecordingJobSourceExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RecordingJobSourceExtension(struct soap*, const char *, int, tt__RecordingJobSourceExtension *const*, const char *);
SOAP_FMAC3 tt__RecordingJobSourceExtension ** SOAP_FMAC4 soap_in_PointerTott__RecordingJobSourceExtension(struct soap*, const char*, tt__RecordingJobSourceExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RecordingJobSourceExtension(struct soap*, tt__RecordingJobSourceExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RecordingJobSourceExtension
#define soap_write_PointerTott__RecordingJobSourceExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RecordingJobSourceExtension(soap, data),0) || soap_put_PointerTott__RecordingJobSourceExtension(soap, data, "tt:RecordingJobSourceExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobSourceExtension ** SOAP_FMAC4 soap_get_PointerTott__RecordingJobSourceExtension(struct soap*, tt__RecordingJobSourceExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__RecordingJobSourceExtension
#define soap_read_PointerTott__RecordingJobSourceExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__RecordingJobSourceExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RecordingJobTrack
#define SOAP_TYPE_PointerTott__RecordingJobTrack (1395)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RecordingJobTrack(struct soap*, tt__RecordingJobTrack *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RecordingJobTrack(struct soap*, const char *, int, tt__RecordingJobTrack *const*, const char *);
SOAP_FMAC3 tt__RecordingJobTrack ** SOAP_FMAC4 soap_in_PointerTott__RecordingJobTrack(struct soap*, const char*, tt__RecordingJobTrack **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RecordingJobTrack(struct soap*, tt__RecordingJobTrack *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RecordingJobTrack
#define soap_write_PointerTott__RecordingJobTrack(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RecordingJobTrack(soap, data),0) || soap_put_PointerTott__RecordingJobTrack(soap, data, "tt:RecordingJobTrack", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobTrack ** SOAP_FMAC4 soap_get_PointerTott__RecordingJobTrack(struct soap*, tt__RecordingJobTrack **, const char*, const char*);

#ifndef soap_read_PointerTott__RecordingJobTrack
#define soap_read_PointerTott__RecordingJobTrack(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__RecordingJobTrack(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RecordingJobConfigurationExtension
#define SOAP_TYPE_PointerTott__RecordingJobConfigurationExtension (1394)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RecordingJobConfigurationExtension(struct soap*, tt__RecordingJobConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RecordingJobConfigurationExtension(struct soap*, const char *, int, tt__RecordingJobConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__RecordingJobConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__RecordingJobConfigurationExtension(struct soap*, const char*, tt__RecordingJobConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RecordingJobConfigurationExtension(struct soap*, tt__RecordingJobConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RecordingJobConfigurationExtension
#define soap_write_PointerTott__RecordingJobConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RecordingJobConfigurationExtension(soap, data),0) || soap_put_PointerTott__RecordingJobConfigurationExtension(soap, data, "tt:RecordingJobConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__RecordingJobConfigurationExtension(struct soap*, tt__RecordingJobConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__RecordingJobConfigurationExtension
#define soap_read_PointerTott__RecordingJobConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__RecordingJobConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RecordingJobSource
#define SOAP_TYPE_PointerTott__RecordingJobSource (1392)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RecordingJobSource(struct soap*, tt__RecordingJobSource *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RecordingJobSource(struct soap*, const char *, int, tt__RecordingJobSource *const*, const char *);
SOAP_FMAC3 tt__RecordingJobSource ** SOAP_FMAC4 soap_in_PointerTott__RecordingJobSource(struct soap*, const char*, tt__RecordingJobSource **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RecordingJobSource(struct soap*, tt__RecordingJobSource *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RecordingJobSource
#define soap_write_PointerTott__RecordingJobSource(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RecordingJobSource(soap, data),0) || soap_put_PointerTott__RecordingJobSource(soap, data, "tt:RecordingJobSource", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobSource ** SOAP_FMAC4 soap_get_PointerTott__RecordingJobSource(struct soap*, tt__RecordingJobSource **, const char*, const char*);

#ifndef soap_read_PointerTott__RecordingJobSource
#define soap_read_PointerTott__RecordingJobSource(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__RecordingJobSource(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__TrackConfiguration
#define SOAP_TYPE_PointerTott__TrackConfiguration (1391)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__TrackConfiguration(struct soap*, tt__TrackConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__TrackConfiguration(struct soap*, const char *, int, tt__TrackConfiguration *const*, const char *);
SOAP_FMAC3 tt__TrackConfiguration ** SOAP_FMAC4 soap_in_PointerTott__TrackConfiguration(struct soap*, const char*, tt__TrackConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__TrackConfiguration(struct soap*, tt__TrackConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__TrackConfiguration
#define soap_write_PointerTott__TrackConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__TrackConfiguration(soap, data),0) || soap_put_PointerTott__TrackConfiguration(soap, data, "tt:TrackConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TrackConfiguration ** SOAP_FMAC4 soap_get_PointerTott__TrackConfiguration(struct soap*, tt__TrackConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__TrackConfiguration
#define soap_read_PointerTott__TrackConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__TrackConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__GetTracksResponseItem
#define SOAP_TYPE_PointerTott__GetTracksResponseItem (1389)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__GetTracksResponseItem(struct soap*, tt__GetTracksResponseItem *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__GetTracksResponseItem(struct soap*, const char *, int, tt__GetTracksResponseItem *const*, const char *);
SOAP_FMAC3 tt__GetTracksResponseItem ** SOAP_FMAC4 soap_in_PointerTott__GetTracksResponseItem(struct soap*, const char*, tt__GetTracksResponseItem **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__GetTracksResponseItem(struct soap*, tt__GetTracksResponseItem *const*, const char*, const char*);

#ifndef soap_write_PointerTott__GetTracksResponseItem
#define soap_write_PointerTott__GetTracksResponseItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__GetTracksResponseItem(soap, data),0) || soap_put_PointerTott__GetTracksResponseItem(soap, data, "tt:GetTracksResponseItem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__GetTracksResponseItem ** SOAP_FMAC4 soap_get_PointerTott__GetTracksResponseItem(struct soap*, tt__GetTracksResponseItem **, const char*, const char*);

#ifndef soap_read_PointerTott__GetTracksResponseItem
#define soap_read_PointerTott__GetTracksResponseItem(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__GetTracksResponseItem(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__GetTracksResponseList
#define SOAP_TYPE_PointerTott__GetTracksResponseList (1388)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__GetTracksResponseList(struct soap*, tt__GetTracksResponseList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__GetTracksResponseList(struct soap*, const char *, int, tt__GetTracksResponseList *const*, const char *);
SOAP_FMAC3 tt__GetTracksResponseList ** SOAP_FMAC4 soap_in_PointerTott__GetTracksResponseList(struct soap*, const char*, tt__GetTracksResponseList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__GetTracksResponseList(struct soap*, tt__GetTracksResponseList *const*, const char*, const char*);

#ifndef soap_write_PointerTott__GetTracksResponseList
#define soap_write_PointerTott__GetTracksResponseList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__GetTracksResponseList(soap, data),0) || soap_put_PointerTott__GetTracksResponseList(soap, data, "tt:GetTracksResponseList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__GetTracksResponseList ** SOAP_FMAC4 soap_get_PointerTott__GetTracksResponseList(struct soap*, tt__GetTracksResponseList **, const char*, const char*);

#ifndef soap_read_PointerTott__GetTracksResponseList
#define soap_read_PointerTott__GetTracksResponseList(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__GetTracksResponseList(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RecordingConfiguration
#define SOAP_TYPE_PointerTott__RecordingConfiguration (1387)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RecordingConfiguration(struct soap*, tt__RecordingConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RecordingConfiguration(struct soap*, const char *, int, tt__RecordingConfiguration *const*, const char *);
SOAP_FMAC3 tt__RecordingConfiguration ** SOAP_FMAC4 soap_in_PointerTott__RecordingConfiguration(struct soap*, const char*, tt__RecordingConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RecordingConfiguration(struct soap*, tt__RecordingConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RecordingConfiguration
#define soap_write_PointerTott__RecordingConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RecordingConfiguration(soap, data),0) || soap_put_PointerTott__RecordingConfiguration(soap, data, "tt:RecordingConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingConfiguration ** SOAP_FMAC4 soap_get_PointerTott__RecordingConfiguration(struct soap*, tt__RecordingConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__RecordingConfiguration
#define soap_read_PointerTott__RecordingConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__RecordingConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__TrackAttributesExtension
#define SOAP_TYPE_PointerTott__TrackAttributesExtension (1386)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__TrackAttributesExtension(struct soap*, tt__TrackAttributesExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__TrackAttributesExtension(struct soap*, const char *, int, tt__TrackAttributesExtension *const*, const char *);
SOAP_FMAC3 tt__TrackAttributesExtension ** SOAP_FMAC4 soap_in_PointerTott__TrackAttributesExtension(struct soap*, const char*, tt__TrackAttributesExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__TrackAttributesExtension(struct soap*, tt__TrackAttributesExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__TrackAttributesExtension
#define soap_write_PointerTott__TrackAttributesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__TrackAttributesExtension(soap, data),0) || soap_put_PointerTott__TrackAttributesExtension(soap, data, "tt:TrackAttributesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TrackAttributesExtension ** SOAP_FMAC4 soap_get_PointerTott__TrackAttributesExtension(struct soap*, tt__TrackAttributesExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__TrackAttributesExtension
#define soap_read_PointerTott__TrackAttributesExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__TrackAttributesExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MetadataAttributes
#define SOAP_TYPE_PointerTott__MetadataAttributes (1385)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MetadataAttributes(struct soap*, tt__MetadataAttributes *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MetadataAttributes(struct soap*, const char *, int, tt__MetadataAttributes *const*, const char *);
SOAP_FMAC3 tt__MetadataAttributes ** SOAP_FMAC4 soap_in_PointerTott__MetadataAttributes(struct soap*, const char*, tt__MetadataAttributes **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MetadataAttributes(struct soap*, tt__MetadataAttributes *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MetadataAttributes
#define soap_write_PointerTott__MetadataAttributes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MetadataAttributes(soap, data),0) || soap_put_PointerTott__MetadataAttributes(soap, data, "tt:MetadataAttributes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataAttributes ** SOAP_FMAC4 soap_get_PointerTott__MetadataAttributes(struct soap*, tt__MetadataAttributes **, const char*, const char*);

#ifndef soap_read_PointerTott__MetadataAttributes
#define soap_read_PointerTott__MetadataAttributes(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__MetadataAttributes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioAttributes
#define SOAP_TYPE_PointerTott__AudioAttributes (1384)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioAttributes(struct soap*, tt__AudioAttributes *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioAttributes(struct soap*, const char *, int, tt__AudioAttributes *const*, const char *);
SOAP_FMAC3 tt__AudioAttributes ** SOAP_FMAC4 soap_in_PointerTott__AudioAttributes(struct soap*, const char*, tt__AudioAttributes **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioAttributes(struct soap*, tt__AudioAttributes *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioAttributes
#define soap_write_PointerTott__AudioAttributes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioAttributes(soap, data),0) || soap_put_PointerTott__AudioAttributes(soap, data, "tt:AudioAttributes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioAttributes ** SOAP_FMAC4 soap_get_PointerTott__AudioAttributes(struct soap*, tt__AudioAttributes **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioAttributes
#define soap_read_PointerTott__AudioAttributes(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AudioAttributes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoAttributes
#define SOAP_TYPE_PointerTott__VideoAttributes (1383)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoAttributes(struct soap*, tt__VideoAttributes *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoAttributes(struct soap*, const char *, int, tt__VideoAttributes *const*, const char *);
SOAP_FMAC3 tt__VideoAttributes ** SOAP_FMAC4 soap_in_PointerTott__VideoAttributes(struct soap*, const char*, tt__VideoAttributes **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoAttributes(struct soap*, tt__VideoAttributes *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoAttributes
#define soap_write_PointerTott__VideoAttributes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoAttributes(soap, data),0) || soap_put_PointerTott__VideoAttributes(soap, data, "tt:VideoAttributes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoAttributes ** SOAP_FMAC4 soap_get_PointerTott__VideoAttributes(struct soap*, tt__VideoAttributes **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoAttributes
#define soap_read_PointerTott__VideoAttributes(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__VideoAttributes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__TrackAttributes
#define SOAP_TYPE_PointerTott__TrackAttributes (1381)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__TrackAttributes(struct soap*, tt__TrackAttributes *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__TrackAttributes(struct soap*, const char *, int, tt__TrackAttributes *const*, const char *);
SOAP_FMAC3 tt__TrackAttributes ** SOAP_FMAC4 soap_in_PointerTott__TrackAttributes(struct soap*, const char*, tt__TrackAttributes **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__TrackAttributes(struct soap*, tt__TrackAttributes *const*, const char*, const char*);

#ifndef soap_write_PointerTott__TrackAttributes
#define soap_write_PointerTott__TrackAttributes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__TrackAttributes(soap, data),0) || soap_put_PointerTott__TrackAttributes(soap, data, "tt:TrackAttributes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TrackAttributes ** SOAP_FMAC4 soap_get_PointerTott__TrackAttributes(struct soap*, tt__TrackAttributes **, const char*, const char*);

#ifndef soap_read_PointerTott__TrackAttributes
#define soap_read_PointerTott__TrackAttributes(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__TrackAttributes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__TrackInformation
#define SOAP_TYPE_PointerTott__TrackInformation (1379)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__TrackInformation(struct soap*, tt__TrackInformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__TrackInformation(struct soap*, const char *, int, tt__TrackInformation *const*, const char *);
SOAP_FMAC3 tt__TrackInformation ** SOAP_FMAC4 soap_in_PointerTott__TrackInformation(struct soap*, const char*, tt__TrackInformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__TrackInformation(struct soap*, tt__TrackInformation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__TrackInformation
#define soap_write_PointerTott__TrackInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__TrackInformation(soap, data),0) || soap_put_PointerTott__TrackInformation(soap, data, "tt:TrackInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TrackInformation ** SOAP_FMAC4 soap_get_PointerTott__TrackInformation(struct soap*, tt__TrackInformation **, const char*, const char*);

#ifndef soap_read_PointerTott__TrackInformation
#define soap_read_PointerTott__TrackInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__TrackInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RecordingSourceInformation
#define SOAP_TYPE_PointerTott__RecordingSourceInformation (1378)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RecordingSourceInformation(struct soap*, tt__RecordingSourceInformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RecordingSourceInformation(struct soap*, const char *, int, tt__RecordingSourceInformation *const*, const char *);
SOAP_FMAC3 tt__RecordingSourceInformation ** SOAP_FMAC4 soap_in_PointerTott__RecordingSourceInformation(struct soap*, const char*, tt__RecordingSourceInformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RecordingSourceInformation(struct soap*, tt__RecordingSourceInformation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RecordingSourceInformation
#define soap_write_PointerTott__RecordingSourceInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RecordingSourceInformation(soap, data),0) || soap_put_PointerTott__RecordingSourceInformation(soap, data, "tt:RecordingSourceInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingSourceInformation ** SOAP_FMAC4 soap_get_PointerTott__RecordingSourceInformation(struct soap*, tt__RecordingSourceInformation **, const char*, const char*);

#ifndef soap_read_PointerTott__RecordingSourceInformation
#define soap_read_PointerTott__RecordingSourceInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__RecordingSourceInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FindMetadataResult
#define SOAP_TYPE_PointerTott__FindMetadataResult (1376)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FindMetadataResult(struct soap*, tt__FindMetadataResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FindMetadataResult(struct soap*, const char *, int, tt__FindMetadataResult *const*, const char *);
SOAP_FMAC3 tt__FindMetadataResult ** SOAP_FMAC4 soap_in_PointerTott__FindMetadataResult(struct soap*, const char*, tt__FindMetadataResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FindMetadataResult(struct soap*, tt__FindMetadataResult *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FindMetadataResult
#define soap_write_PointerTott__FindMetadataResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FindMetadataResult(soap, data),0) || soap_put_PointerTott__FindMetadataResult(soap, data, "tt:FindMetadataResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FindMetadataResult ** SOAP_FMAC4 soap_get_PointerTott__FindMetadataResult(struct soap*, tt__FindMetadataResult **, const char*, const char*);

#ifndef soap_read_PointerTott__FindMetadataResult
#define soap_read_PointerTott__FindMetadataResult(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__FindMetadataResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FindPTZPositionResult
#define SOAP_TYPE_PointerTott__FindPTZPositionResult (1374)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FindPTZPositionResult(struct soap*, tt__FindPTZPositionResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FindPTZPositionResult(struct soap*, const char *, int, tt__FindPTZPositionResult *const*, const char *);
SOAP_FMAC3 tt__FindPTZPositionResult ** SOAP_FMAC4 soap_in_PointerTott__FindPTZPositionResult(struct soap*, const char*, tt__FindPTZPositionResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FindPTZPositionResult(struct soap*, tt__FindPTZPositionResult *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FindPTZPositionResult
#define soap_write_PointerTott__FindPTZPositionResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FindPTZPositionResult(soap, data),0) || soap_put_PointerTott__FindPTZPositionResult(soap, data, "tt:FindPTZPositionResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FindPTZPositionResult ** SOAP_FMAC4 soap_get_PointerTott__FindPTZPositionResult(struct soap*, tt__FindPTZPositionResult **, const char*, const char*);

#ifndef soap_read_PointerTott__FindPTZPositionResult
#define soap_read_PointerTott__FindPTZPositionResult(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__FindPTZPositionResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FindEventResult
#define SOAP_TYPE_PointerTott__FindEventResult (1372)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FindEventResult(struct soap*, tt__FindEventResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FindEventResult(struct soap*, const char *, int, tt__FindEventResult *const*, const char *);
SOAP_FMAC3 tt__FindEventResult ** SOAP_FMAC4 soap_in_PointerTott__FindEventResult(struct soap*, const char*, tt__FindEventResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FindEventResult(struct soap*, tt__FindEventResult *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FindEventResult
#define soap_write_PointerTott__FindEventResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FindEventResult(soap, data),0) || soap_put_PointerTott__FindEventResult(soap, data, "tt:FindEventResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FindEventResult ** SOAP_FMAC4 soap_get_PointerTott__FindEventResult(struct soap*, tt__FindEventResult **, const char*, const char*);

#ifndef soap_read_PointerTott__FindEventResult
#define soap_read_PointerTott__FindEventResult(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__FindEventResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RecordingInformation
#define SOAP_TYPE_PointerTott__RecordingInformation (1370)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RecordingInformation(struct soap*, tt__RecordingInformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RecordingInformation(struct soap*, const char *, int, tt__RecordingInformation *const*, const char *);
SOAP_FMAC3 tt__RecordingInformation ** SOAP_FMAC4 soap_in_PointerTott__RecordingInformation(struct soap*, const char*, tt__RecordingInformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RecordingInformation(struct soap*, tt__RecordingInformation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RecordingInformation
#define soap_write_PointerTott__RecordingInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RecordingInformation(soap, data),0) || soap_put_PointerTott__RecordingInformation(soap, data, "tt:RecordingInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingInformation ** SOAP_FMAC4 soap_get_PointerTott__RecordingInformation(struct soap*, tt__RecordingInformation **, const char*, const char*);

#ifndef soap_read_PointerTott__RecordingInformation
#define soap_read_PointerTott__RecordingInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__RecordingInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SearchScopeExtension
#define SOAP_TYPE_PointerTott__SearchScopeExtension (1369)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SearchScopeExtension(struct soap*, tt__SearchScopeExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SearchScopeExtension(struct soap*, const char *, int, tt__SearchScopeExtension *const*, const char *);
SOAP_FMAC3 tt__SearchScopeExtension ** SOAP_FMAC4 soap_in_PointerTott__SearchScopeExtension(struct soap*, const char*, tt__SearchScopeExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SearchScopeExtension(struct soap*, tt__SearchScopeExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SearchScopeExtension
#define soap_write_PointerTott__SearchScopeExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SearchScopeExtension(soap, data),0) || soap_put_PointerTott__SearchScopeExtension(soap, data, "tt:SearchScopeExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SearchScopeExtension ** SOAP_FMAC4 soap_get_PointerTott__SearchScopeExtension(struct soap*, tt__SearchScopeExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__SearchScopeExtension
#define soap_read_PointerTott__SearchScopeExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__SearchScopeExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__XPathExpression
#define SOAP_TYPE_PointerTott__XPathExpression (1368)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__XPathExpression(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__XPathExpression(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTott__XPathExpression(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__XPathExpression(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTott__XPathExpression
#define soap_write_PointerTott__XPathExpression(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__XPathExpression(soap, data),0) || soap_put_PointerTott__XPathExpression(soap, data, "tt:XPathExpression", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTott__XPathExpression(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTott__XPathExpression
#define soap_read_PointerTott__XPathExpression(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__XPathExpression(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SourceReference
#define SOAP_TYPE_PointerTott__SourceReference (1365)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SourceReference(struct soap*, tt__SourceReference *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SourceReference(struct soap*, const char *, int, tt__SourceReference *const*, const char *);
SOAP_FMAC3 tt__SourceReference ** SOAP_FMAC4 soap_in_PointerTott__SourceReference(struct soap*, const char*, tt__SourceReference **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SourceReference(struct soap*, tt__SourceReference *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SourceReference
#define soap_write_PointerTott__SourceReference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SourceReference(soap, data),0) || soap_put_PointerTott__SourceReference(soap, data, "tt:SourceReference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SourceReference ** SOAP_FMAC4 soap_get_PointerTott__SourceReference(struct soap*, tt__SourceReference **, const char*, const char*);

#ifndef soap_read_PointerTott__SourceReference
#define soap_read_PointerTott__SourceReference(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__SourceReference(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__StreamSetup
#define SOAP_TYPE_PointerTott__StreamSetup (1364)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__StreamSetup(struct soap*, tt__StreamSetup *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__StreamSetup(struct soap*, const char *, int, tt__StreamSetup *const*, const char *);
SOAP_FMAC3 tt__StreamSetup ** SOAP_FMAC4 soap_in_PointerTott__StreamSetup(struct soap*, const char*, tt__StreamSetup **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__StreamSetup(struct soap*, tt__StreamSetup *const*, const char*, const char*);

#ifndef soap_write_PointerTott__StreamSetup
#define soap_write_PointerTott__StreamSetup(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__StreamSetup(soap, data),0) || soap_put_PointerTott__StreamSetup(soap, data, "tt:StreamSetup", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__StreamSetup ** SOAP_FMAC4 soap_get_PointerTott__StreamSetup(struct soap*, tt__StreamSetup **, const char*, const char*);

#ifndef soap_read_PointerTott__StreamSetup
#define soap_read_PointerTott__StreamSetup(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__StreamSetup(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ReceiverConfiguration
#define SOAP_TYPE_PointerTott__ReceiverConfiguration (1363)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ReceiverConfiguration(struct soap*, tt__ReceiverConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ReceiverConfiguration(struct soap*, const char *, int, tt__ReceiverConfiguration *const*, const char *);
SOAP_FMAC3 tt__ReceiverConfiguration ** SOAP_FMAC4 soap_in_PointerTott__ReceiverConfiguration(struct soap*, const char*, tt__ReceiverConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ReceiverConfiguration(struct soap*, tt__ReceiverConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ReceiverConfiguration
#define soap_write_PointerTott__ReceiverConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ReceiverConfiguration(soap, data),0) || soap_put_PointerTott__ReceiverConfiguration(soap, data, "tt:ReceiverConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ReceiverConfiguration ** SOAP_FMAC4 soap_get_PointerTott__ReceiverConfiguration(struct soap*, tt__ReceiverConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__ReceiverConfiguration
#define soap_read_PointerTott__ReceiverConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ReceiverConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PaneOptionExtension
#define SOAP_TYPE_PointerTott__PaneOptionExtension (1362)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PaneOptionExtension(struct soap*, tt__PaneOptionExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PaneOptionExtension(struct soap*, const char *, int, tt__PaneOptionExtension *const*, const char *);
SOAP_FMAC3 tt__PaneOptionExtension ** SOAP_FMAC4 soap_in_PointerTott__PaneOptionExtension(struct soap*, const char*, tt__PaneOptionExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PaneOptionExtension(struct soap*, tt__PaneOptionExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PaneOptionExtension
#define soap_write_PointerTott__PaneOptionExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PaneOptionExtension(soap, data),0) || soap_put_PointerTott__PaneOptionExtension(soap, data, "tt:PaneOptionExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PaneOptionExtension ** SOAP_FMAC4 soap_get_PointerTott__PaneOptionExtension(struct soap*, tt__PaneOptionExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PaneOptionExtension
#define soap_read_PointerTott__PaneOptionExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PaneOptionExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__LayoutOptionsExtension
#define SOAP_TYPE_PointerTott__LayoutOptionsExtension (1360)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__LayoutOptionsExtension(struct soap*, tt__LayoutOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__LayoutOptionsExtension(struct soap*, const char *, int, tt__LayoutOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__LayoutOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__LayoutOptionsExtension(struct soap*, const char*, tt__LayoutOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__LayoutOptionsExtension(struct soap*, tt__LayoutOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__LayoutOptionsExtension
#define soap_write_PointerTott__LayoutOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__LayoutOptionsExtension(soap, data),0) || soap_put_PointerTott__LayoutOptionsExtension(soap, data, "tt:LayoutOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__LayoutOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__LayoutOptionsExtension(struct soap*, tt__LayoutOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__LayoutOptionsExtension
#define soap_read_PointerTott__LayoutOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__LayoutOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PaneLayoutOptions
#define SOAP_TYPE_PointerTott__PaneLayoutOptions (1358)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PaneLayoutOptions(struct soap*, tt__PaneLayoutOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PaneLayoutOptions(struct soap*, const char *, int, tt__PaneLayoutOptions *const*, const char *);
SOAP_FMAC3 tt__PaneLayoutOptions ** SOAP_FMAC4 soap_in_PointerTott__PaneLayoutOptions(struct soap*, const char*, tt__PaneLayoutOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PaneLayoutOptions(struct soap*, tt__PaneLayoutOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PaneLayoutOptions
#define soap_write_PointerTott__PaneLayoutOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PaneLayoutOptions(soap, data),0) || soap_put_PointerTott__PaneLayoutOptions(soap, data, "tt:PaneLayoutOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PaneLayoutOptions ** SOAP_FMAC4 soap_get_PointerTott__PaneLayoutOptions(struct soap*, tt__PaneLayoutOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__PaneLayoutOptions
#define soap_read_PointerTott__PaneLayoutOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PaneLayoutOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoDecoderConfigurationOptions
#define SOAP_TYPE_PointerTott__VideoDecoderConfigurationOptions (1357)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoDecoderConfigurationOptions(struct soap*, tt__VideoDecoderConfigurationOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoDecoderConfigurationOptions(struct soap*, const char *, int, tt__VideoDecoderConfigurationOptions *const*, const char *);
SOAP_FMAC3 tt__VideoDecoderConfigurationOptions ** SOAP_FMAC4 soap_in_PointerTott__VideoDecoderConfigurationOptions(struct soap*, const char*, tt__VideoDecoderConfigurationOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoDecoderConfigurationOptions(struct soap*, tt__VideoDecoderConfigurationOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoDecoderConfigurationOptions
#define soap_write_PointerTott__VideoDecoderConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoDecoderConfigurationOptions(soap, data),0) || soap_put_PointerTott__VideoDecoderConfigurationOptions(soap, data, "tt:VideoDecoderConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoDecoderConfigurationOptions ** SOAP_FMAC4 soap_get_PointerTott__VideoDecoderConfigurationOptions(struct soap*, tt__VideoDecoderConfigurationOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoDecoderConfigurationOptions
#define soap_read_PointerTott__VideoDecoderConfigurationOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__VideoDecoderConfigurationOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioDecoderConfigurationOptions
#define SOAP_TYPE_PointerTott__AudioDecoderConfigurationOptions (1356)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioDecoderConfigurationOptions(struct soap*, tt__AudioDecoderConfigurationOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioDecoderConfigurationOptions(struct soap*, const char *, int, tt__AudioDecoderConfigurationOptions *const*, const char *);
SOAP_FMAC3 tt__AudioDecoderConfigurationOptions ** SOAP_FMAC4 soap_in_PointerTott__AudioDecoderConfigurationOptions(struct soap*, const char*, tt__AudioDecoderConfigurationOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioDecoderConfigurationOptions(struct soap*, tt__AudioDecoderConfigurationOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioDecoderConfigurationOptions
#define soap_write_PointerTott__AudioDecoderConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioDecoderConfigurationOptions(soap, data),0) || soap_put_PointerTott__AudioDecoderConfigurationOptions(soap, data, "tt:AudioDecoderConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioDecoderConfigurationOptions ** SOAP_FMAC4 soap_get_PointerTott__AudioDecoderConfigurationOptions(struct soap*, tt__AudioDecoderConfigurationOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioDecoderConfigurationOptions
#define soap_read_PointerTott__AudioDecoderConfigurationOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AudioDecoderConfigurationOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioEncoderConfigurationOptions
#define SOAP_TYPE_PointerTott__AudioEncoderConfigurationOptions (1355)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioEncoderConfigurationOptions(struct soap*, tt__AudioEncoderConfigurationOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioEncoderConfigurationOptions(struct soap*, const char *, int, tt__AudioEncoderConfigurationOptions *const*, const char *);
SOAP_FMAC3 tt__AudioEncoderConfigurationOptions ** SOAP_FMAC4 soap_in_PointerTott__AudioEncoderConfigurationOptions(struct soap*, const char*, tt__AudioEncoderConfigurationOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioEncoderConfigurationOptions(struct soap*, tt__AudioEncoderConfigurationOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioEncoderConfigurationOptions
#define soap_write_PointerTott__AudioEncoderConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioEncoderConfigurationOptions(soap, data),0) || soap_put_PointerTott__AudioEncoderConfigurationOptions(soap, data, "tt:AudioEncoderConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioEncoderConfigurationOptions ** SOAP_FMAC4 soap_get_PointerTott__AudioEncoderConfigurationOptions(struct soap*, tt__AudioEncoderConfigurationOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioEncoderConfigurationOptions
#define soap_read_PointerTott__AudioEncoderConfigurationOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AudioEncoderConfigurationOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__LayoutExtension
#define SOAP_TYPE_PointerTott__LayoutExtension (1354)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__LayoutExtension(struct soap*, tt__LayoutExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__LayoutExtension(struct soap*, const char *, int, tt__LayoutExtension *const*, const char *);
SOAP_FMAC3 tt__LayoutExtension ** SOAP_FMAC4 soap_in_PointerTott__LayoutExtension(struct soap*, const char*, tt__LayoutExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__LayoutExtension(struct soap*, tt__LayoutExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__LayoutExtension
#define soap_write_PointerTott__LayoutExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__LayoutExtension(soap, data),0) || soap_put_PointerTott__LayoutExtension(soap, data, "tt:LayoutExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__LayoutExtension ** SOAP_FMAC4 soap_get_PointerTott__LayoutExtension(struct soap*, tt__LayoutExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__LayoutExtension
#define soap_read_PointerTott__LayoutExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__LayoutExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PaneLayout
#define SOAP_TYPE_PointerTott__PaneLayout (1352)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PaneLayout(struct soap*, tt__PaneLayout *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PaneLayout(struct soap*, const char *, int, tt__PaneLayout *const*, const char *);
SOAP_FMAC3 tt__PaneLayout ** SOAP_FMAC4 soap_in_PointerTott__PaneLayout(struct soap*, const char*, tt__PaneLayout **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PaneLayout(struct soap*, tt__PaneLayout *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PaneLayout
#define soap_write_PointerTott__PaneLayout(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PaneLayout(soap, data),0) || soap_put_PointerTott__PaneLayout(soap, data, "tt:PaneLayout", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PaneLayout ** SOAP_FMAC4 soap_get_PointerTott__PaneLayout(struct soap*, tt__PaneLayout **, const char*, const char*);

#ifndef soap_read_PointerTott__PaneLayout
#define soap_read_PointerTott__PaneLayout(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PaneLayout(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo__tt__union_EventStream
#define SOAP_TYPE_PointerTo__tt__union_EventStream (1351)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__tt__union_EventStream(struct soap*, __tt__union_EventStream *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__tt__union_EventStream(struct soap*, const char *, int, __tt__union_EventStream *const*, const char *);
SOAP_FMAC3 __tt__union_EventStream ** SOAP_FMAC4 soap_in_PointerTo__tt__union_EventStream(struct soap*, const char*, __tt__union_EventStream **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__tt__union_EventStream(struct soap*, __tt__union_EventStream *const*, const char*, const char*);

#ifndef soap_write_PointerTo__tt__union_EventStream
#define soap_write_PointerTo__tt__union_EventStream(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo__tt__union_EventStream(soap, data),0) || soap_put_PointerTo__tt__union_EventStream(soap, data, "-tt:union-EventStream", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 __tt__union_EventStream ** SOAP_FMAC4 soap_get_PointerTo__tt__union_EventStream(struct soap*, __tt__union_EventStream **, const char*, const char*);

#ifndef soap_read_PointerTo__tt__union_EventStream
#define soap_read_PointerTo__tt__union_EventStream(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo__tt__union_EventStream(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__EventStreamExtension
#define SOAP_TYPE_PointerTott__EventStreamExtension (1349)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__EventStreamExtension(struct soap*, tt__EventStreamExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__EventStreamExtension(struct soap*, const char *, int, tt__EventStreamExtension *const*, const char *);
SOAP_FMAC3 tt__EventStreamExtension ** SOAP_FMAC4 soap_in_PointerTott__EventStreamExtension(struct soap*, const char*, tt__EventStreamExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__EventStreamExtension(struct soap*, tt__EventStreamExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__EventStreamExtension
#define soap_write_PointerTott__EventStreamExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__EventStreamExtension(soap, data),0) || soap_put_PointerTott__EventStreamExtension(soap, data, "tt:EventStreamExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EventStreamExtension ** SOAP_FMAC4 soap_get_PointerTott__EventStreamExtension(struct soap*, tt__EventStreamExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__EventStreamExtension
#define soap_read_PointerTott__EventStreamExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__EventStreamExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsnt__NotificationMessageHolderType
#define SOAP_TYPE_PointerTowsnt__NotificationMessageHolderType (1348)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__NotificationMessageHolderType(struct soap*, wsnt__NotificationMessageHolderType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__NotificationMessageHolderType(struct soap*, const char *, int, wsnt__NotificationMessageHolderType *const*, const char *);
SOAP_FMAC3 wsnt__NotificationMessageHolderType ** SOAP_FMAC4 soap_in_PointerTowsnt__NotificationMessageHolderType(struct soap*, const char*, wsnt__NotificationMessageHolderType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__NotificationMessageHolderType(struct soap*, wsnt__NotificationMessageHolderType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsnt__NotificationMessageHolderType
#define soap_write_PointerTowsnt__NotificationMessageHolderType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsnt__NotificationMessageHolderType(soap, data),0) || soap_put_PointerTowsnt__NotificationMessageHolderType(soap, data, "wsnt:NotificationMessageHolderType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__NotificationMessageHolderType ** SOAP_FMAC4 soap_get_PointerTowsnt__NotificationMessageHolderType(struct soap*, wsnt__NotificationMessageHolderType **, const char*, const char*);

#ifndef soap_read_PointerTowsnt__NotificationMessageHolderType
#define soap_read_PointerTowsnt__NotificationMessageHolderType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsnt__NotificationMessageHolderType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo__tt__union_PTZStream
#define SOAP_TYPE_PointerTo__tt__union_PTZStream (1346)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__tt__union_PTZStream(struct soap*, __tt__union_PTZStream *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__tt__union_PTZStream(struct soap*, const char *, int, __tt__union_PTZStream *const*, const char *);
SOAP_FMAC3 __tt__union_PTZStream ** SOAP_FMAC4 soap_in_PointerTo__tt__union_PTZStream(struct soap*, const char*, __tt__union_PTZStream **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__tt__union_PTZStream(struct soap*, __tt__union_PTZStream *const*, const char*, const char*);

#ifndef soap_write_PointerTo__tt__union_PTZStream
#define soap_write_PointerTo__tt__union_PTZStream(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo__tt__union_PTZStream(soap, data),0) || soap_put_PointerTo__tt__union_PTZStream(soap, data, "-tt:union-PTZStream", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 __tt__union_PTZStream ** SOAP_FMAC4 soap_get_PointerTo__tt__union_PTZStream(struct soap*, __tt__union_PTZStream **, const char*, const char*);

#ifndef soap_read_PointerTo__tt__union_PTZStream
#define soap_read_PointerTo__tt__union_PTZStream(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo__tt__union_PTZStream(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZStreamExtension
#define SOAP_TYPE_PointerTott__PTZStreamExtension (1344)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZStreamExtension(struct soap*, tt__PTZStreamExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZStreamExtension(struct soap*, const char *, int, tt__PTZStreamExtension *const*, const char *);
SOAP_FMAC3 tt__PTZStreamExtension ** SOAP_FMAC4 soap_in_PointerTott__PTZStreamExtension(struct soap*, const char*, tt__PTZStreamExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZStreamExtension(struct soap*, tt__PTZStreamExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZStreamExtension
#define soap_write_PointerTott__PTZStreamExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZStreamExtension(soap, data),0) || soap_put_PointerTott__PTZStreamExtension(soap, data, "tt:PTZStreamExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZStreamExtension ** SOAP_FMAC4 soap_get_PointerTott__PTZStreamExtension(struct soap*, tt__PTZStreamExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZStreamExtension
#define soap_read_PointerTott__PTZStreamExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZStreamExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo__tt__union_VideoAnalyticsStream
#define SOAP_TYPE_PointerTo__tt__union_VideoAnalyticsStream (1342)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__tt__union_VideoAnalyticsStream(struct soap*, __tt__union_VideoAnalyticsStream *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__tt__union_VideoAnalyticsStream(struct soap*, const char *, int, __tt__union_VideoAnalyticsStream *const*, const char *);
SOAP_FMAC3 __tt__union_VideoAnalyticsStream ** SOAP_FMAC4 soap_in_PointerTo__tt__union_VideoAnalyticsStream(struct soap*, const char*, __tt__union_VideoAnalyticsStream **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__tt__union_VideoAnalyticsStream(struct soap*, __tt__union_VideoAnalyticsStream *const*, const char*, const char*);

#ifndef soap_write_PointerTo__tt__union_VideoAnalyticsStream
#define soap_write_PointerTo__tt__union_VideoAnalyticsStream(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo__tt__union_VideoAnalyticsStream(soap, data),0) || soap_put_PointerTo__tt__union_VideoAnalyticsStream(soap, data, "-tt:union-VideoAnalyticsStream", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 __tt__union_VideoAnalyticsStream ** SOAP_FMAC4 soap_get_PointerTo__tt__union_VideoAnalyticsStream(struct soap*, __tt__union_VideoAnalyticsStream **, const char*, const char*);

#ifndef soap_read_PointerTo__tt__union_VideoAnalyticsStream
#define soap_read_PointerTo__tt__union_VideoAnalyticsStream(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo__tt__union_VideoAnalyticsStream(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoAnalyticsStreamExtension
#define SOAP_TYPE_PointerTott__VideoAnalyticsStreamExtension (1340)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoAnalyticsStreamExtension(struct soap*, tt__VideoAnalyticsStreamExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoAnalyticsStreamExtension(struct soap*, const char *, int, tt__VideoAnalyticsStreamExtension *const*, const char *);
SOAP_FMAC3 tt__VideoAnalyticsStreamExtension ** SOAP_FMAC4 soap_in_PointerTott__VideoAnalyticsStreamExtension(struct soap*, const char*, tt__VideoAnalyticsStreamExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoAnalyticsStreamExtension(struct soap*, tt__VideoAnalyticsStreamExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoAnalyticsStreamExtension
#define soap_write_PointerTott__VideoAnalyticsStreamExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoAnalyticsStreamExtension(soap, data),0) || soap_put_PointerTott__VideoAnalyticsStreamExtension(soap, data, "tt:VideoAnalyticsStreamExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoAnalyticsStreamExtension ** SOAP_FMAC4 soap_get_PointerTott__VideoAnalyticsStreamExtension(struct soap*, tt__VideoAnalyticsStreamExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoAnalyticsStreamExtension
#define soap_read_PointerTott__VideoAnalyticsStreamExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__VideoAnalyticsStreamExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Frame
#define SOAP_TYPE_PointerTott__Frame (1339)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Frame(struct soap*, tt__Frame *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Frame(struct soap*, const char *, int, tt__Frame *const*, const char *);
SOAP_FMAC3 tt__Frame ** SOAP_FMAC4 soap_in_PointerTott__Frame(struct soap*, const char*, tt__Frame **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Frame(struct soap*, tt__Frame *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Frame
#define soap_write_PointerTott__Frame(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Frame(soap, data),0) || soap_put_PointerTott__Frame(soap, data, "tt:Frame", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Frame ** SOAP_FMAC4 soap_get_PointerTott__Frame(struct soap*, tt__Frame **, const char*, const char*);

#ifndef soap_read_PointerTott__Frame
#define soap_read_PointerTott__Frame(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Frame(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioAnalyticsStreamExtension
#define SOAP_TYPE_PointerTott__AudioAnalyticsStreamExtension (1337)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioAnalyticsStreamExtension(struct soap*, tt__AudioAnalyticsStreamExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioAnalyticsStreamExtension(struct soap*, const char *, int, tt__AudioAnalyticsStreamExtension *const*, const char *);
SOAP_FMAC3 tt__AudioAnalyticsStreamExtension ** SOAP_FMAC4 soap_in_PointerTott__AudioAnalyticsStreamExtension(struct soap*, const char*, tt__AudioAnalyticsStreamExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioAnalyticsStreamExtension(struct soap*, tt__AudioAnalyticsStreamExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioAnalyticsStreamExtension
#define soap_write_PointerTott__AudioAnalyticsStreamExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioAnalyticsStreamExtension(soap, data),0) || soap_put_PointerTott__AudioAnalyticsStreamExtension(soap, data, "tt:AudioAnalyticsStreamExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioAnalyticsStreamExtension ** SOAP_FMAC4 soap_get_PointerTott__AudioAnalyticsStreamExtension(struct soap*, tt__AudioAnalyticsStreamExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioAnalyticsStreamExtension
#define soap_read_PointerTott__AudioAnalyticsStreamExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AudioAnalyticsStreamExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioDescriptor
#define SOAP_TYPE_PointerTott__AudioDescriptor (1335)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioDescriptor(struct soap*, tt__AudioDescriptor *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioDescriptor(struct soap*, const char *, int, tt__AudioDescriptor *const*, const char *);
SOAP_FMAC3 tt__AudioDescriptor ** SOAP_FMAC4 soap_in_PointerTott__AudioDescriptor(struct soap*, const char*, tt__AudioDescriptor **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioDescriptor(struct soap*, tt__AudioDescriptor *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioDescriptor
#define soap_write_PointerTott__AudioDescriptor(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioDescriptor(soap, data),0) || soap_put_PointerTott__AudioDescriptor(soap, data, "tt:AudioDescriptor", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioDescriptor ** SOAP_FMAC4 soap_get_PointerTott__AudioDescriptor(struct soap*, tt__AudioDescriptor **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioDescriptor
#define soap_read_PointerTott__AudioDescriptor(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AudioDescriptor(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MetadataStreamExtension2
#define SOAP_TYPE_PointerTott__MetadataStreamExtension2 (1334)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MetadataStreamExtension2(struct soap*, tt__MetadataStreamExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MetadataStreamExtension2(struct soap*, const char *, int, tt__MetadataStreamExtension2 *const*, const char *);
SOAP_FMAC3 tt__MetadataStreamExtension2 ** SOAP_FMAC4 soap_in_PointerTott__MetadataStreamExtension2(struct soap*, const char*, tt__MetadataStreamExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MetadataStreamExtension2(struct soap*, tt__MetadataStreamExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MetadataStreamExtension2
#define soap_write_PointerTott__MetadataStreamExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MetadataStreamExtension2(soap, data),0) || soap_put_PointerTott__MetadataStreamExtension2(soap, data, "tt:MetadataStreamExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataStreamExtension2 ** SOAP_FMAC4 soap_get_PointerTott__MetadataStreamExtension2(struct soap*, tt__MetadataStreamExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__MetadataStreamExtension2
#define soap_read_PointerTott__MetadataStreamExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__MetadataStreamExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioAnalyticsStream
#define SOAP_TYPE_PointerTott__AudioAnalyticsStream (1333)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioAnalyticsStream(struct soap*, tt__AudioAnalyticsStream *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioAnalyticsStream(struct soap*, const char *, int, tt__AudioAnalyticsStream *const*, const char *);
SOAP_FMAC3 tt__AudioAnalyticsStream ** SOAP_FMAC4 soap_in_PointerTott__AudioAnalyticsStream(struct soap*, const char*, tt__AudioAnalyticsStream **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioAnalyticsStream(struct soap*, tt__AudioAnalyticsStream *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioAnalyticsStream
#define soap_write_PointerTott__AudioAnalyticsStream(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioAnalyticsStream(soap, data),0) || soap_put_PointerTott__AudioAnalyticsStream(soap, data, "tt:AudioAnalyticsStream", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioAnalyticsStream ** SOAP_FMAC4 soap_get_PointerTott__AudioAnalyticsStream(struct soap*, tt__AudioAnalyticsStream **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioAnalyticsStream
#define soap_read_PointerTott__AudioAnalyticsStream(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AudioAnalyticsStream(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo__tt__union_MetadataStream
#define SOAP_TYPE_PointerTo__tt__union_MetadataStream (1332)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__tt__union_MetadataStream(struct soap*, __tt__union_MetadataStream *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__tt__union_MetadataStream(struct soap*, const char *, int, __tt__union_MetadataStream *const*, const char *);
SOAP_FMAC3 __tt__union_MetadataStream ** SOAP_FMAC4 soap_in_PointerTo__tt__union_MetadataStream(struct soap*, const char*, __tt__union_MetadataStream **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__tt__union_MetadataStream(struct soap*, __tt__union_MetadataStream *const*, const char*, const char*);

#ifndef soap_write_PointerTo__tt__union_MetadataStream
#define soap_write_PointerTo__tt__union_MetadataStream(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo__tt__union_MetadataStream(soap, data),0) || soap_put_PointerTo__tt__union_MetadataStream(soap, data, "-tt:union-MetadataStream", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 __tt__union_MetadataStream ** SOAP_FMAC4 soap_get_PointerTo__tt__union_MetadataStream(struct soap*, __tt__union_MetadataStream **, const char*, const char*);

#ifndef soap_read_PointerTo__tt__union_MetadataStream
#define soap_read_PointerTo__tt__union_MetadataStream(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo__tt__union_MetadataStream(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MetadataStreamExtension
#define SOAP_TYPE_PointerTott__MetadataStreamExtension (1330)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MetadataStreamExtension(struct soap*, tt__MetadataStreamExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MetadataStreamExtension(struct soap*, const char *, int, tt__MetadataStreamExtension *const*, const char *);
SOAP_FMAC3 tt__MetadataStreamExtension ** SOAP_FMAC4 soap_in_PointerTott__MetadataStreamExtension(struct soap*, const char*, tt__MetadataStreamExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MetadataStreamExtension(struct soap*, tt__MetadataStreamExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MetadataStreamExtension
#define soap_write_PointerTott__MetadataStreamExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MetadataStreamExtension(soap, data),0) || soap_put_PointerTott__MetadataStreamExtension(soap, data, "tt:MetadataStreamExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataStreamExtension ** SOAP_FMAC4 soap_get_PointerTott__MetadataStreamExtension(struct soap*, tt__MetadataStreamExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__MetadataStreamExtension
#define soap_read_PointerTott__MetadataStreamExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__MetadataStreamExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__EventStream
#define SOAP_TYPE_PointerTott__EventStream (1329)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__EventStream(struct soap*, tt__EventStream *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__EventStream(struct soap*, const char *, int, tt__EventStream *const*, const char *);
SOAP_FMAC3 tt__EventStream ** SOAP_FMAC4 soap_in_PointerTott__EventStream(struct soap*, const char*, tt__EventStream **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__EventStream(struct soap*, tt__EventStream *const*, const char*, const char*);

#ifndef soap_write_PointerTott__EventStream
#define soap_write_PointerTott__EventStream(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__EventStream(soap, data),0) || soap_put_PointerTott__EventStream(soap, data, "tt:EventStream", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EventStream ** SOAP_FMAC4 soap_get_PointerTott__EventStream(struct soap*, tt__EventStream **, const char*, const char*);

#ifndef soap_read_PointerTott__EventStream
#define soap_read_PointerTott__EventStream(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__EventStream(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZStream
#define SOAP_TYPE_PointerTott__PTZStream (1328)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZStream(struct soap*, tt__PTZStream *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZStream(struct soap*, const char *, int, tt__PTZStream *const*, const char *);
SOAP_FMAC3 tt__PTZStream ** SOAP_FMAC4 soap_in_PointerTott__PTZStream(struct soap*, const char*, tt__PTZStream **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZStream(struct soap*, tt__PTZStream *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZStream
#define soap_write_PointerTott__PTZStream(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZStream(soap, data),0) || soap_put_PointerTott__PTZStream(soap, data, "tt:PTZStream", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZStream ** SOAP_FMAC4 soap_get_PointerTott__PTZStream(struct soap*, tt__PTZStream **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZStream
#define soap_read_PointerTott__PTZStream(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZStream(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoAnalyticsStream
#define SOAP_TYPE_PointerTott__VideoAnalyticsStream (1327)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoAnalyticsStream(struct soap*, tt__VideoAnalyticsStream *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoAnalyticsStream(struct soap*, const char *, int, tt__VideoAnalyticsStream *const*, const char *);
SOAP_FMAC3 tt__VideoAnalyticsStream ** SOAP_FMAC4 soap_in_PointerTott__VideoAnalyticsStream(struct soap*, const char*, tt__VideoAnalyticsStream **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoAnalyticsStream(struct soap*, tt__VideoAnalyticsStream *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoAnalyticsStream
#define soap_write_PointerTott__VideoAnalyticsStream(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoAnalyticsStream(soap, data),0) || soap_put_PointerTott__VideoAnalyticsStream(soap, data, "tt:VideoAnalyticsStream", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoAnalyticsStream ** SOAP_FMAC4 soap_get_PointerTott__VideoAnalyticsStream(struct soap*, tt__VideoAnalyticsStream **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoAnalyticsStream
#define soap_read_PointerTott__VideoAnalyticsStream(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__VideoAnalyticsStream(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MotionExpression
#define SOAP_TYPE_PointerTott__MotionExpression (1325)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MotionExpression(struct soap*, tt__MotionExpression *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MotionExpression(struct soap*, const char *, int, tt__MotionExpression *const*, const char *);
SOAP_FMAC3 tt__MotionExpression ** SOAP_FMAC4 soap_in_PointerTott__MotionExpression(struct soap*, const char*, tt__MotionExpression **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MotionExpression(struct soap*, tt__MotionExpression *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MotionExpression
#define soap_write_PointerTott__MotionExpression(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MotionExpression(soap, data),0) || soap_put_PointerTott__MotionExpression(soap, data, "tt:MotionExpression", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MotionExpression ** SOAP_FMAC4 soap_get_PointerTott__MotionExpression(struct soap*, tt__MotionExpression **, const char*, const char*);

#ifndef soap_read_PointerTott__MotionExpression
#define soap_read_PointerTott__MotionExpression(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__MotionExpression(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PolylineArray
#define SOAP_TYPE_PointerTott__PolylineArray (1324)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PolylineArray(struct soap*, tt__PolylineArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PolylineArray(struct soap*, const char *, int, tt__PolylineArray *const*, const char *);
SOAP_FMAC3 tt__PolylineArray ** SOAP_FMAC4 soap_in_PointerTott__PolylineArray(struct soap*, const char*, tt__PolylineArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PolylineArray(struct soap*, tt__PolylineArray *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PolylineArray
#define soap_write_PointerTott__PolylineArray(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PolylineArray(soap, data),0) || soap_put_PointerTott__PolylineArray(soap, data, "tt:PolylineArray", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PolylineArray ** SOAP_FMAC4 soap_get_PointerTott__PolylineArray(struct soap*, tt__PolylineArray **, const char*, const char*);

#ifndef soap_read_PointerTott__PolylineArray
#define soap_read_PointerTott__PolylineArray(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PolylineArray(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PolylineArrayExtension
#define SOAP_TYPE_PointerTott__PolylineArrayExtension (1323)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PolylineArrayExtension(struct soap*, tt__PolylineArrayExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PolylineArrayExtension(struct soap*, const char *, int, tt__PolylineArrayExtension *const*, const char *);
SOAP_FMAC3 tt__PolylineArrayExtension ** SOAP_FMAC4 soap_in_PointerTott__PolylineArrayExtension(struct soap*, const char*, tt__PolylineArrayExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PolylineArrayExtension(struct soap*, tt__PolylineArrayExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PolylineArrayExtension
#define soap_write_PointerTott__PolylineArrayExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PolylineArrayExtension(soap, data),0) || soap_put_PointerTott__PolylineArrayExtension(soap, data, "tt:PolylineArrayExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PolylineArrayExtension ** SOAP_FMAC4 soap_get_PointerTott__PolylineArrayExtension(struct soap*, tt__PolylineArrayExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PolylineArrayExtension
#define soap_read_PointerTott__PolylineArrayExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PolylineArrayExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Polyline
#define SOAP_TYPE_PointerTott__Polyline (1321)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Polyline(struct soap*, tt__Polyline *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Polyline(struct soap*, const char *, int, tt__Polyline *const*, const char *);
SOAP_FMAC3 tt__Polyline ** SOAP_FMAC4 soap_in_PointerTott__Polyline(struct soap*, const char*, tt__Polyline **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Polyline(struct soap*, tt__Polyline *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Polyline
#define soap_write_PointerTott__Polyline(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Polyline(soap, data),0) || soap_put_PointerTott__Polyline(soap, data, "tt:Polyline", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Polyline ** SOAP_FMAC4 soap_get_PointerTott__Polyline(struct soap*, tt__Polyline **, const char*, const char*);

#ifndef soap_read_PointerTott__Polyline
#define soap_read_PointerTott__Polyline(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Polyline(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SupportedAnalyticsModulesExtension
#define SOAP_TYPE_PointerTott__SupportedAnalyticsModulesExtension (1320)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SupportedAnalyticsModulesExtension(struct soap*, tt__SupportedAnalyticsModulesExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SupportedAnalyticsModulesExtension(struct soap*, const char *, int, tt__SupportedAnalyticsModulesExtension *const*, const char *);
SOAP_FMAC3 tt__SupportedAnalyticsModulesExtension ** SOAP_FMAC4 soap_in_PointerTott__SupportedAnalyticsModulesExtension(struct soap*, const char*, tt__SupportedAnalyticsModulesExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SupportedAnalyticsModulesExtension(struct soap*, tt__SupportedAnalyticsModulesExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SupportedAnalyticsModulesExtension
#define soap_write_PointerTott__SupportedAnalyticsModulesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SupportedAnalyticsModulesExtension(soap, data),0) || soap_put_PointerTott__SupportedAnalyticsModulesExtension(soap, data, "tt:SupportedAnalyticsModulesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SupportedAnalyticsModulesExtension ** SOAP_FMAC4 soap_get_PointerTott__SupportedAnalyticsModulesExtension(struct soap*, tt__SupportedAnalyticsModulesExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__SupportedAnalyticsModulesExtension
#define soap_read_PointerTott__SupportedAnalyticsModulesExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__SupportedAnalyticsModulesExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SupportedRulesExtension
#define SOAP_TYPE_PointerTott__SupportedRulesExtension (1319)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SupportedRulesExtension(struct soap*, tt__SupportedRulesExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SupportedRulesExtension(struct soap*, const char *, int, tt__SupportedRulesExtension *const*, const char *);
SOAP_FMAC3 tt__SupportedRulesExtension ** SOAP_FMAC4 soap_in_PointerTott__SupportedRulesExtension(struct soap*, const char*, tt__SupportedRulesExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SupportedRulesExtension(struct soap*, tt__SupportedRulesExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SupportedRulesExtension
#define soap_write_PointerTott__SupportedRulesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SupportedRulesExtension(soap, data),0) || soap_put_PointerTott__SupportedRulesExtension(soap, data, "tt:SupportedRulesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SupportedRulesExtension ** SOAP_FMAC4 soap_get_PointerTott__SupportedRulesExtension(struct soap*, tt__SupportedRulesExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__SupportedRulesExtension
#define soap_read_PointerTott__SupportedRulesExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__SupportedRulesExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ConfigDescription
#define SOAP_TYPE_PointerTott__ConfigDescription (1317)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ConfigDescription(struct soap*, tt__ConfigDescription *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ConfigDescription(struct soap*, const char *, int, tt__ConfigDescription *const*, const char *);
SOAP_FMAC3 tt__ConfigDescription ** SOAP_FMAC4 soap_in_PointerTott__ConfigDescription(struct soap*, const char*, tt__ConfigDescription **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ConfigDescription(struct soap*, tt__ConfigDescription *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ConfigDescription
#define soap_write_PointerTott__ConfigDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ConfigDescription(soap, data),0) || soap_put_PointerTott__ConfigDescription(soap, data, "tt:ConfigDescription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ConfigDescription ** SOAP_FMAC4 soap_get_PointerTott__ConfigDescription(struct soap*, tt__ConfigDescription **, const char*, const char*);

#ifndef soap_read_PointerTott__ConfigDescription
#define soap_read_PointerTott__ConfigDescription(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ConfigDescription(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ConfigDescriptionExtension
#define SOAP_TYPE_PointerTott__ConfigDescriptionExtension (1316)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ConfigDescriptionExtension(struct soap*, tt__ConfigDescriptionExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ConfigDescriptionExtension(struct soap*, const char *, int, tt__ConfigDescriptionExtension *const*, const char *);
SOAP_FMAC3 tt__ConfigDescriptionExtension ** SOAP_FMAC4 soap_in_PointerTott__ConfigDescriptionExtension(struct soap*, const char*, tt__ConfigDescriptionExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ConfigDescriptionExtension(struct soap*, tt__ConfigDescriptionExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ConfigDescriptionExtension
#define soap_write_PointerTott__ConfigDescriptionExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ConfigDescriptionExtension(soap, data),0) || soap_put_PointerTott__ConfigDescriptionExtension(soap, data, "tt:ConfigDescriptionExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ConfigDescriptionExtension ** SOAP_FMAC4 soap_get_PointerTott__ConfigDescriptionExtension(struct soap*, tt__ConfigDescriptionExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__ConfigDescriptionExtension
#define soap_read_PointerTott__ConfigDescriptionExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ConfigDescriptionExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages
#define SOAP_TYPE_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages (1315)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages(struct soap*, std::vector<_tt__ConfigDescription_Messages >*const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages(struct soap*, const char *, int, std::vector<_tt__ConfigDescription_Messages >*const*, const char *);
SOAP_FMAC3 std::vector<_tt__ConfigDescription_Messages >** SOAP_FMAC4 soap_in_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages(struct soap*, const char*, std::vector<_tt__ConfigDescription_Messages >**, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages(struct soap*, std::vector<_tt__ConfigDescription_Messages >*const*, const char*, const char*);

#ifndef soap_write_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages
#define soap_write_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages(soap, data),0) || soap_put_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages(soap, data, "", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::vector<_tt__ConfigDescription_Messages >** SOAP_FMAC4 soap_get_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages(struct soap*, std::vector<_tt__ConfigDescription_Messages >**, const char*, const char*);

#ifndef soap_read_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages
#define soap_read_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ItemList
#define SOAP_TYPE_PointerTott__ItemList (1312)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ItemList(struct soap*, tt__ItemList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ItemList(struct soap*, const char *, int, tt__ItemList *const*, const char *);
SOAP_FMAC3 tt__ItemList ** SOAP_FMAC4 soap_in_PointerTott__ItemList(struct soap*, const char*, tt__ItemList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ItemList(struct soap*, tt__ItemList *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ItemList
#define soap_write_PointerTott__ItemList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ItemList(soap, data),0) || soap_put_PointerTott__ItemList(soap, data, "tt:ItemList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ItemList ** SOAP_FMAC4 soap_get_PointerTott__ItemList(struct soap*, tt__ItemList **, const char*, const char*);

#ifndef soap_read_PointerTott__ItemList
#define soap_read_PointerTott__ItemList(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ItemList(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RuleEngineConfigurationExtension
#define SOAP_TYPE_PointerTott__RuleEngineConfigurationExtension (1311)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RuleEngineConfigurationExtension(struct soap*, tt__RuleEngineConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RuleEngineConfigurationExtension(struct soap*, const char *, int, tt__RuleEngineConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__RuleEngineConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__RuleEngineConfigurationExtension(struct soap*, const char*, tt__RuleEngineConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RuleEngineConfigurationExtension(struct soap*, tt__RuleEngineConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RuleEngineConfigurationExtension
#define soap_write_PointerTott__RuleEngineConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RuleEngineConfigurationExtension(soap, data),0) || soap_put_PointerTott__RuleEngineConfigurationExtension(soap, data, "tt:RuleEngineConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RuleEngineConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__RuleEngineConfigurationExtension(struct soap*, tt__RuleEngineConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__RuleEngineConfigurationExtension
#define soap_read_PointerTott__RuleEngineConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__RuleEngineConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AnalyticsEngineConfigurationExtension
#define SOAP_TYPE_PointerTott__AnalyticsEngineConfigurationExtension (1310)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AnalyticsEngineConfigurationExtension(struct soap*, tt__AnalyticsEngineConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AnalyticsEngineConfigurationExtension(struct soap*, const char *, int, tt__AnalyticsEngineConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__AnalyticsEngineConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__AnalyticsEngineConfigurationExtension(struct soap*, const char*, tt__AnalyticsEngineConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AnalyticsEngineConfigurationExtension(struct soap*, tt__AnalyticsEngineConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AnalyticsEngineConfigurationExtension
#define soap_write_PointerTott__AnalyticsEngineConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AnalyticsEngineConfigurationExtension(soap, data),0) || soap_put_PointerTott__AnalyticsEngineConfigurationExtension(soap, data, "tt:AnalyticsEngineConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsEngineConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__AnalyticsEngineConfigurationExtension(struct soap*, tt__AnalyticsEngineConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__AnalyticsEngineConfigurationExtension
#define soap_read_PointerTott__AnalyticsEngineConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AnalyticsEngineConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Config
#define SOAP_TYPE_PointerTott__Config (1308)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Config(struct soap*, tt__Config *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Config(struct soap*, const char *, int, tt__Config *const*, const char *);
SOAP_FMAC3 tt__Config ** SOAP_FMAC4 soap_in_PointerTott__Config(struct soap*, const char*, tt__Config **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Config(struct soap*, tt__Config *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Config
#define soap_write_PointerTott__Config(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Config(soap, data),0) || soap_put_PointerTott__Config(soap, data, "tt:Config", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Config ** SOAP_FMAC4 soap_get_PointerTott__Config(struct soap*, tt__Config **, const char*, const char*);

#ifndef soap_read_PointerTott__Config
#define soap_read_PointerTott__Config(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Config(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ObjectTreeExtension
#define SOAP_TYPE_PointerTott__ObjectTreeExtension (1307)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ObjectTreeExtension(struct soap*, tt__ObjectTreeExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ObjectTreeExtension(struct soap*, const char *, int, tt__ObjectTreeExtension *const*, const char *);
SOAP_FMAC3 tt__ObjectTreeExtension ** SOAP_FMAC4 soap_in_PointerTott__ObjectTreeExtension(struct soap*, const char*, tt__ObjectTreeExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ObjectTreeExtension(struct soap*, tt__ObjectTreeExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ObjectTreeExtension
#define soap_write_PointerTott__ObjectTreeExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ObjectTreeExtension(soap, data),0) || soap_put_PointerTott__ObjectTreeExtension(soap, data, "tt:ObjectTreeExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ObjectTreeExtension ** SOAP_FMAC4 soap_get_PointerTott__ObjectTreeExtension(struct soap*, tt__ObjectTreeExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__ObjectTreeExtension
#define soap_read_PointerTott__ObjectTreeExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ObjectTreeExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Merge
#define SOAP_TYPE_PointerTott__Merge (1305)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Merge(struct soap*, tt__Merge *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Merge(struct soap*, const char *, int, tt__Merge *const*, const char *);
SOAP_FMAC3 tt__Merge ** SOAP_FMAC4 soap_in_PointerTott__Merge(struct soap*, const char*, tt__Merge **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Merge(struct soap*, tt__Merge *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Merge
#define soap_write_PointerTott__Merge(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Merge(soap, data),0) || soap_put_PointerTott__Merge(soap, data, "tt:Merge", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Merge ** SOAP_FMAC4 soap_get_PointerTott__Merge(struct soap*, tt__Merge **, const char*, const char*);

#ifndef soap_read_PointerTott__Merge
#define soap_read_PointerTott__Merge(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Merge(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Split
#define SOAP_TYPE_PointerTott__Split (1303)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Split(struct soap*, tt__Split *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Split(struct soap*, const char *, int, tt__Split *const*, const char *);
SOAP_FMAC3 tt__Split ** SOAP_FMAC4 soap_in_PointerTott__Split(struct soap*, const char*, tt__Split **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Split(struct soap*, tt__Split *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Split
#define soap_write_PointerTott__Split(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Split(soap, data),0) || soap_put_PointerTott__Split(soap, data, "tt:Split", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Split ** SOAP_FMAC4 soap_get_PointerTott__Split(struct soap*, tt__Split **, const char*, const char*);

#ifndef soap_read_PointerTott__Split
#define soap_read_PointerTott__Split(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Split(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Rename
#define SOAP_TYPE_PointerTott__Rename (1301)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Rename(struct soap*, tt__Rename *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Rename(struct soap*, const char *, int, tt__Rename *const*, const char *);
SOAP_FMAC3 tt__Rename ** SOAP_FMAC4 soap_in_PointerTott__Rename(struct soap*, const char*, tt__Rename **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Rename(struct soap*, tt__Rename *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Rename
#define soap_write_PointerTott__Rename(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Rename(soap, data),0) || soap_put_PointerTott__Rename(soap, data, "tt:Rename", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Rename ** SOAP_FMAC4 soap_get_PointerTott__Rename(struct soap*, tt__Rename **, const char*, const char*);

#ifndef soap_read_PointerTott__Rename
#define soap_read_PointerTott__Rename(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Rename(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__BehaviourExtension
#define SOAP_TYPE_PointerTott__BehaviourExtension (1300)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__BehaviourExtension(struct soap*, tt__BehaviourExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__BehaviourExtension(struct soap*, const char *, int, tt__BehaviourExtension *const*, const char *);
SOAP_FMAC3 tt__BehaviourExtension ** SOAP_FMAC4 soap_in_PointerTott__BehaviourExtension(struct soap*, const char*, tt__BehaviourExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__BehaviourExtension(struct soap*, tt__BehaviourExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__BehaviourExtension
#define soap_write_PointerTott__BehaviourExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__BehaviourExtension(soap, data),0) || soap_put_PointerTott__BehaviourExtension(soap, data, "tt:BehaviourExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__BehaviourExtension ** SOAP_FMAC4 soap_get_PointerTott__BehaviourExtension(struct soap*, tt__BehaviourExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__BehaviourExtension
#define soap_read_PointerTott__BehaviourExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__BehaviourExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tt__Behaviour_Idle
#define SOAP_TYPE_PointerTo_tt__Behaviour_Idle (1299)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tt__Behaviour_Idle(struct soap*, _tt__Behaviour_Idle *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tt__Behaviour_Idle(struct soap*, const char *, int, _tt__Behaviour_Idle *const*, const char *);
SOAP_FMAC3 _tt__Behaviour_Idle ** SOAP_FMAC4 soap_in_PointerTo_tt__Behaviour_Idle(struct soap*, const char*, _tt__Behaviour_Idle **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tt__Behaviour_Idle(struct soap*, _tt__Behaviour_Idle *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tt__Behaviour_Idle
#define soap_write_PointerTo_tt__Behaviour_Idle(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tt__Behaviour_Idle(soap, data),0) || soap_put_PointerTo_tt__Behaviour_Idle(soap, data, "tt:Behaviour-Idle", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tt__Behaviour_Idle ** SOAP_FMAC4 soap_get_PointerTo_tt__Behaviour_Idle(struct soap*, _tt__Behaviour_Idle **, const char*, const char*);

#ifndef soap_read_PointerTo_tt__Behaviour_Idle
#define soap_read_PointerTo_tt__Behaviour_Idle(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tt__Behaviour_Idle(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tt__Behaviour_Removed
#define SOAP_TYPE_PointerTo_tt__Behaviour_Removed (1297)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tt__Behaviour_Removed(struct soap*, _tt__Behaviour_Removed *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tt__Behaviour_Removed(struct soap*, const char *, int, _tt__Behaviour_Removed *const*, const char *);
SOAP_FMAC3 _tt__Behaviour_Removed ** SOAP_FMAC4 soap_in_PointerTo_tt__Behaviour_Removed(struct soap*, const char*, _tt__Behaviour_Removed **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tt__Behaviour_Removed(struct soap*, _tt__Behaviour_Removed *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tt__Behaviour_Removed
#define soap_write_PointerTo_tt__Behaviour_Removed(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tt__Behaviour_Removed(soap, data),0) || soap_put_PointerTo_tt__Behaviour_Removed(soap, data, "tt:Behaviour-Removed", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tt__Behaviour_Removed ** SOAP_FMAC4 soap_get_PointerTo_tt__Behaviour_Removed(struct soap*, _tt__Behaviour_Removed **, const char*, const char*);

#ifndef soap_read_PointerTo_tt__Behaviour_Removed
#define soap_read_PointerTo_tt__Behaviour_Removed(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tt__Behaviour_Removed(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToxsd__integer
#define SOAP_TYPE_PointerToxsd__integer (1295)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__integer(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__integer(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToxsd__integer(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__integer(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__integer
#define soap_write_PointerToxsd__integer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToxsd__integer(soap, data),0) || soap_put_PointerToxsd__integer(soap, data, "xsd:integer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToxsd__integer(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerToxsd__integer
#define soap_read_PointerToxsd__integer(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxsd__integer(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ObjectId
#define SOAP_TYPE_PointerTott__ObjectId (1293)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ObjectId(struct soap*, tt__ObjectId *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ObjectId(struct soap*, const char *, int, tt__ObjectId *const*, const char *);
SOAP_FMAC3 tt__ObjectId ** SOAP_FMAC4 soap_in_PointerTott__ObjectId(struct soap*, const char*, tt__ObjectId **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ObjectId(struct soap*, tt__ObjectId *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ObjectId
#define soap_write_PointerTott__ObjectId(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ObjectId(soap, data),0) || soap_put_PointerTott__ObjectId(soap, data, "tt:ObjectId", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ObjectId ** SOAP_FMAC4 soap_get_PointerTott__ObjectId(struct soap*, tt__ObjectId **, const char*, const char*);

#ifndef soap_read_PointerTott__ObjectId
#define soap_read_PointerTott__ObjectId(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ObjectId(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FrameExtension2
#define SOAP_TYPE_PointerTott__FrameExtension2 (1292)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FrameExtension2(struct soap*, tt__FrameExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FrameExtension2(struct soap*, const char *, int, tt__FrameExtension2 *const*, const char *);
SOAP_FMAC3 tt__FrameExtension2 ** SOAP_FMAC4 soap_in_PointerTott__FrameExtension2(struct soap*, const char*, tt__FrameExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FrameExtension2(struct soap*, tt__FrameExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FrameExtension2
#define soap_write_PointerTott__FrameExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FrameExtension2(soap, data),0) || soap_put_PointerTott__FrameExtension2(soap, data, "tt:FrameExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FrameExtension2 ** SOAP_FMAC4 soap_get_PointerTott__FrameExtension2(struct soap*, tt__FrameExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__FrameExtension2
#define soap_read_PointerTott__FrameExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__FrameExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MotionInCells
#define SOAP_TYPE_PointerTott__MotionInCells (1291)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MotionInCells(struct soap*, tt__MotionInCells *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MotionInCells(struct soap*, const char *, int, tt__MotionInCells *const*, const char *);
SOAP_FMAC3 tt__MotionInCells ** SOAP_FMAC4 soap_in_PointerTott__MotionInCells(struct soap*, const char*, tt__MotionInCells **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MotionInCells(struct soap*, tt__MotionInCells *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MotionInCells
#define soap_write_PointerTott__MotionInCells(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MotionInCells(soap, data),0) || soap_put_PointerTott__MotionInCells(soap, data, "tt:MotionInCells", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MotionInCells ** SOAP_FMAC4 soap_get_PointerTott__MotionInCells(struct soap*, tt__MotionInCells **, const char*, const char*);

#ifndef soap_read_PointerTott__MotionInCells
#define soap_read_PointerTott__MotionInCells(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__MotionInCells(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FrameExtension
#define SOAP_TYPE_PointerTott__FrameExtension (1290)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FrameExtension(struct soap*, tt__FrameExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FrameExtension(struct soap*, const char *, int, tt__FrameExtension *const*, const char *);
SOAP_FMAC3 tt__FrameExtension ** SOAP_FMAC4 soap_in_PointerTott__FrameExtension(struct soap*, const char*, tt__FrameExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FrameExtension(struct soap*, tt__FrameExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FrameExtension
#define soap_write_PointerTott__FrameExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FrameExtension(soap, data),0) || soap_put_PointerTott__FrameExtension(soap, data, "tt:FrameExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FrameExtension ** SOAP_FMAC4 soap_get_PointerTott__FrameExtension(struct soap*, tt__FrameExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__FrameExtension
#define soap_read_PointerTott__FrameExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__FrameExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ObjectTree
#define SOAP_TYPE_PointerTott__ObjectTree (1289)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ObjectTree(struct soap*, tt__ObjectTree *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ObjectTree(struct soap*, const char *, int, tt__ObjectTree *const*, const char *);
SOAP_FMAC3 tt__ObjectTree ** SOAP_FMAC4 soap_in_PointerTott__ObjectTree(struct soap*, const char*, tt__ObjectTree **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ObjectTree(struct soap*, tt__ObjectTree *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ObjectTree
#define soap_write_PointerTott__ObjectTree(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ObjectTree(soap, data),0) || soap_put_PointerTott__ObjectTree(soap, data, "tt:ObjectTree", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ObjectTree ** SOAP_FMAC4 soap_get_PointerTott__ObjectTree(struct soap*, tt__ObjectTree **, const char*, const char*);

#ifndef soap_read_PointerTott__ObjectTree
#define soap_read_PointerTott__ObjectTree(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ObjectTree(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Object
#define SOAP_TYPE_PointerTott__Object (1287)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Object(struct soap*, tt__Object *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Object(struct soap*, const char *, int, tt__Object *const*, const char *);
SOAP_FMAC3 tt__Object ** SOAP_FMAC4 soap_in_PointerTott__Object(struct soap*, const char*, tt__Object **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Object(struct soap*, tt__Object *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Object
#define soap_write_PointerTott__Object(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Object(soap, data),0) || soap_put_PointerTott__Object(soap, data, "tt:Object", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Object ** SOAP_FMAC4 soap_get_PointerTott__Object(struct soap*, tt__Object **, const char*, const char*);

#ifndef soap_read_PointerTott__Object
#define soap_read_PointerTott__Object(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Object(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZStatus
#define SOAP_TYPE_PointerTott__PTZStatus (1286)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZStatus(struct soap*, tt__PTZStatus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZStatus(struct soap*, const char *, int, tt__PTZStatus *const*, const char *);
SOAP_FMAC3 tt__PTZStatus ** SOAP_FMAC4 soap_in_PointerTott__PTZStatus(struct soap*, const char*, tt__PTZStatus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZStatus(struct soap*, tt__PTZStatus *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZStatus
#define soap_write_PointerTott__PTZStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZStatus(soap, data),0) || soap_put_PointerTott__PTZStatus(soap, data, "tt:PTZStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZStatus ** SOAP_FMAC4 soap_get_PointerTott__PTZStatus(struct soap*, tt__PTZStatus **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZStatus
#define soap_read_PointerTott__PTZStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__TransformationExtension
#define SOAP_TYPE_PointerTott__TransformationExtension (1285)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__TransformationExtension(struct soap*, tt__TransformationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__TransformationExtension(struct soap*, const char *, int, tt__TransformationExtension *const*, const char *);
SOAP_FMAC3 tt__TransformationExtension ** SOAP_FMAC4 soap_in_PointerTott__TransformationExtension(struct soap*, const char*, tt__TransformationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__TransformationExtension(struct soap*, tt__TransformationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__TransformationExtension
#define soap_write_PointerTott__TransformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__TransformationExtension(soap, data),0) || soap_put_PointerTott__TransformationExtension(soap, data, "tt:TransformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TransformationExtension ** SOAP_FMAC4 soap_get_PointerTott__TransformationExtension(struct soap*, tt__TransformationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__TransformationExtension
#define soap_read_PointerTott__TransformationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__TransformationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ClassDescriptorExtension2
#define SOAP_TYPE_PointerTott__ClassDescriptorExtension2 (1284)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ClassDescriptorExtension2(struct soap*, tt__ClassDescriptorExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ClassDescriptorExtension2(struct soap*, const char *, int, tt__ClassDescriptorExtension2 *const*, const char *);
SOAP_FMAC3 tt__ClassDescriptorExtension2 ** SOAP_FMAC4 soap_in_PointerTott__ClassDescriptorExtension2(struct soap*, const char*, tt__ClassDescriptorExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ClassDescriptorExtension2(struct soap*, tt__ClassDescriptorExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ClassDescriptorExtension2
#define soap_write_PointerTott__ClassDescriptorExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ClassDescriptorExtension2(soap, data),0) || soap_put_PointerTott__ClassDescriptorExtension2(soap, data, "tt:ClassDescriptorExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ClassDescriptorExtension2 ** SOAP_FMAC4 soap_get_PointerTott__ClassDescriptorExtension2(struct soap*, tt__ClassDescriptorExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__ClassDescriptorExtension2
#define soap_read_PointerTott__ClassDescriptorExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ClassDescriptorExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OtherType
#define SOAP_TYPE_PointerTott__OtherType (1282)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OtherType(struct soap*, tt__OtherType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OtherType(struct soap*, const char *, int, tt__OtherType *const*, const char *);
SOAP_FMAC3 tt__OtherType ** SOAP_FMAC4 soap_in_PointerTott__OtherType(struct soap*, const char*, tt__OtherType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OtherType(struct soap*, tt__OtherType *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OtherType
#define soap_write_PointerTott__OtherType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OtherType(soap, data),0) || soap_put_PointerTott__OtherType(soap, data, "tt:OtherType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OtherType ** SOAP_FMAC4 soap_get_PointerTott__OtherType(struct soap*, tt__OtherType **, const char*, const char*);

#ifndef soap_read_PointerTott__OtherType
#define soap_read_PointerTott__OtherType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__OtherType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ClassDescriptorExtension
#define SOAP_TYPE_PointerTott__ClassDescriptorExtension (1281)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ClassDescriptorExtension(struct soap*, tt__ClassDescriptorExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ClassDescriptorExtension(struct soap*, const char *, int, tt__ClassDescriptorExtension *const*, const char *);
SOAP_FMAC3 tt__ClassDescriptorExtension ** SOAP_FMAC4 soap_in_PointerTott__ClassDescriptorExtension(struct soap*, const char*, tt__ClassDescriptorExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ClassDescriptorExtension(struct soap*, tt__ClassDescriptorExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ClassDescriptorExtension
#define soap_write_PointerTott__ClassDescriptorExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ClassDescriptorExtension(soap, data),0) || soap_put_PointerTott__ClassDescriptorExtension(soap, data, "tt:ClassDescriptorExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ClassDescriptorExtension ** SOAP_FMAC4 soap_get_PointerTott__ClassDescriptorExtension(struct soap*, tt__ClassDescriptorExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__ClassDescriptorExtension
#define soap_read_PointerTott__ClassDescriptorExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ClassDescriptorExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__vectorTemplateOf_tt__ClassDescriptor_ClassCandidate
#define SOAP_TYPE_PointerTostd__vectorTemplateOf_tt__ClassDescriptor_ClassCandidate (1280)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__vectorTemplateOf_tt__ClassDescriptor_ClassCandidate(struct soap*, std::vector<_tt__ClassDescriptor_ClassCandidate >*const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__vectorTemplateOf_tt__ClassDescriptor_ClassCandidate(struct soap*, const char *, int, std::vector<_tt__ClassDescriptor_ClassCandidate >*const*, const char *);
SOAP_FMAC3 std::vector<_tt__ClassDescriptor_ClassCandidate >** SOAP_FMAC4 soap_in_PointerTostd__vectorTemplateOf_tt__ClassDescriptor_ClassCandidate(struct soap*, const char*, std::vector<_tt__ClassDescriptor_ClassCandidate >**, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__vectorTemplateOf_tt__ClassDescriptor_ClassCandidate(struct soap*, std::vector<_tt__ClassDescriptor_ClassCandidate >*const*, const char*, const char*);

#ifndef soap_write_PointerTostd__vectorTemplateOf_tt__ClassDescriptor_ClassCandidate
#define soap_write_PointerTostd__vectorTemplateOf_tt__ClassDescriptor_ClassCandidate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__vectorTemplateOf_tt__ClassDescriptor_ClassCandidate(soap, data),0) || soap_put_PointerTostd__vectorTemplateOf_tt__ClassDescriptor_ClassCandidate(soap, data, "", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::vector<_tt__ClassDescriptor_ClassCandidate >** SOAP_FMAC4 soap_get_PointerTostd__vectorTemplateOf_tt__ClassDescriptor_ClassCandidate(struct soap*, std::vector<_tt__ClassDescriptor_ClassCandidate >**, const char*, const char*);

#ifndef soap_read_PointerTostd__vectorTemplateOf_tt__ClassDescriptor_ClassCandidate
#define soap_read_PointerTostd__vectorTemplateOf_tt__ClassDescriptor_ClassCandidate(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__vectorTemplateOf_tt__ClassDescriptor_ClassCandidate(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ColorDescriptorExtension
#define SOAP_TYPE_PointerTott__ColorDescriptorExtension (1277)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ColorDescriptorExtension(struct soap*, tt__ColorDescriptorExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ColorDescriptorExtension(struct soap*, const char *, int, tt__ColorDescriptorExtension *const*, const char *);
SOAP_FMAC3 tt__ColorDescriptorExtension ** SOAP_FMAC4 soap_in_PointerTott__ColorDescriptorExtension(struct soap*, const char*, tt__ColorDescriptorExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ColorDescriptorExtension(struct soap*, tt__ColorDescriptorExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ColorDescriptorExtension
#define soap_write_PointerTott__ColorDescriptorExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ColorDescriptorExtension(soap, data),0) || soap_put_PointerTott__ColorDescriptorExtension(soap, data, "tt:ColorDescriptorExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ColorDescriptorExtension ** SOAP_FMAC4 soap_get_PointerTott__ColorDescriptorExtension(struct soap*, tt__ColorDescriptorExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__ColorDescriptorExtension
#define soap_read_PointerTott__ColorDescriptorExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ColorDescriptorExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__vectorTemplateOf_tt__ColorDescriptor_ColorCluster
#define SOAP_TYPE_PointerTostd__vectorTemplateOf_tt__ColorDescriptor_ColorCluster (1276)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__vectorTemplateOf_tt__ColorDescriptor_ColorCluster(struct soap*, std::vector<_tt__ColorDescriptor_ColorCluster >*const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__vectorTemplateOf_tt__ColorDescriptor_ColorCluster(struct soap*, const char *, int, std::vector<_tt__ColorDescriptor_ColorCluster >*const*, const char *);
SOAP_FMAC3 std::vector<_tt__ColorDescriptor_ColorCluster >** SOAP_FMAC4 soap_in_PointerTostd__vectorTemplateOf_tt__ColorDescriptor_ColorCluster(struct soap*, const char*, std::vector<_tt__ColorDescriptor_ColorCluster >**, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__vectorTemplateOf_tt__ColorDescriptor_ColorCluster(struct soap*, std::vector<_tt__ColorDescriptor_ColorCluster >*const*, const char*, const char*);

#ifndef soap_write_PointerTostd__vectorTemplateOf_tt__ColorDescriptor_ColorCluster
#define soap_write_PointerTostd__vectorTemplateOf_tt__ColorDescriptor_ColorCluster(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__vectorTemplateOf_tt__ColorDescriptor_ColorCluster(soap, data),0) || soap_put_PointerTostd__vectorTemplateOf_tt__ColorDescriptor_ColorCluster(soap, data, "", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::vector<_tt__ColorDescriptor_ColorCluster >** SOAP_FMAC4 soap_get_PointerTostd__vectorTemplateOf_tt__ColorDescriptor_ColorCluster(struct soap*, std::vector<_tt__ColorDescriptor_ColorCluster >**, const char*, const char*);

#ifndef soap_read_PointerTostd__vectorTemplateOf_tt__ColorDescriptor_ColorCluster
#define soap_read_PointerTostd__vectorTemplateOf_tt__ColorDescriptor_ColorCluster(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__vectorTemplateOf_tt__ColorDescriptor_ColorCluster(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ColorCovariance
#define SOAP_TYPE_PointerTott__ColorCovariance (1274)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ColorCovariance(struct soap*, tt__ColorCovariance *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ColorCovariance(struct soap*, const char *, int, tt__ColorCovariance *const*, const char *);
SOAP_FMAC3 tt__ColorCovariance ** SOAP_FMAC4 soap_in_PointerTott__ColorCovariance(struct soap*, const char*, tt__ColorCovariance **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ColorCovariance(struct soap*, tt__ColorCovariance *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ColorCovariance
#define soap_write_PointerTott__ColorCovariance(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ColorCovariance(soap, data),0) || soap_put_PointerTott__ColorCovariance(soap, data, "tt:ColorCovariance", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ColorCovariance ** SOAP_FMAC4 soap_get_PointerTott__ColorCovariance(struct soap*, tt__ColorCovariance **, const char*, const char*);

#ifndef soap_read_PointerTott__ColorCovariance
#define soap_read_PointerTott__ColorCovariance(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ColorCovariance(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Color
#define SOAP_TYPE_PointerTott__Color (1273)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Color(struct soap*, tt__Color *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Color(struct soap*, const char *, int, tt__Color *const*, const char *);
SOAP_FMAC3 tt__Color ** SOAP_FMAC4 soap_in_PointerTott__Color(struct soap*, const char*, tt__Color **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Color(struct soap*, tt__Color *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Color
#define soap_write_PointerTott__Color(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Color(soap, data),0) || soap_put_PointerTott__Color(soap, data, "tt:Color", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Color ** SOAP_FMAC4 soap_get_PointerTott__Color(struct soap*, tt__Color **, const char*, const char*);

#ifndef soap_read_PointerTott__Color
#define soap_read_PointerTott__Color(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Color(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ShapeDescriptorExtension
#define SOAP_TYPE_PointerTott__ShapeDescriptorExtension (1271)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ShapeDescriptorExtension(struct soap*, tt__ShapeDescriptorExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ShapeDescriptorExtension(struct soap*, const char *, int, tt__ShapeDescriptorExtension *const*, const char *);
SOAP_FMAC3 tt__ShapeDescriptorExtension ** SOAP_FMAC4 soap_in_PointerTott__ShapeDescriptorExtension(struct soap*, const char*, tt__ShapeDescriptorExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ShapeDescriptorExtension(struct soap*, tt__ShapeDescriptorExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ShapeDescriptorExtension
#define soap_write_PointerTott__ShapeDescriptorExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ShapeDescriptorExtension(soap, data),0) || soap_put_PointerTott__ShapeDescriptorExtension(soap, data, "tt:ShapeDescriptorExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ShapeDescriptorExtension ** SOAP_FMAC4 soap_get_PointerTott__ShapeDescriptorExtension(struct soap*, tt__ShapeDescriptorExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__ShapeDescriptorExtension
#define soap_read_PointerTott__ShapeDescriptorExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ShapeDescriptorExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Polygon
#define SOAP_TYPE_PointerTott__Polygon (1269)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Polygon(struct soap*, tt__Polygon *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Polygon(struct soap*, const char *, int, tt__Polygon *const*, const char *);
SOAP_FMAC3 tt__Polygon ** SOAP_FMAC4 soap_in_PointerTott__Polygon(struct soap*, const char*, tt__Polygon **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Polygon(struct soap*, tt__Polygon *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Polygon
#define soap_write_PointerTott__Polygon(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Polygon(soap, data),0) || soap_put_PointerTott__Polygon(soap, data, "tt:Polygon", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Polygon ** SOAP_FMAC4 soap_get_PointerTott__Polygon(struct soap*, tt__Polygon **, const char*, const char*);

#ifndef soap_read_PointerTott__Polygon
#define soap_read_PointerTott__Polygon(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Polygon(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AppearanceExtension
#define SOAP_TYPE_PointerTott__AppearanceExtension (1268)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AppearanceExtension(struct soap*, tt__AppearanceExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AppearanceExtension(struct soap*, const char *, int, tt__AppearanceExtension *const*, const char *);
SOAP_FMAC3 tt__AppearanceExtension ** SOAP_FMAC4 soap_in_PointerTott__AppearanceExtension(struct soap*, const char*, tt__AppearanceExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AppearanceExtension(struct soap*, tt__AppearanceExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AppearanceExtension
#define soap_write_PointerTott__AppearanceExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AppearanceExtension(soap, data),0) || soap_put_PointerTott__AppearanceExtension(soap, data, "tt:AppearanceExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AppearanceExtension ** SOAP_FMAC4 soap_get_PointerTott__AppearanceExtension(struct soap*, tt__AppearanceExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__AppearanceExtension
#define soap_read_PointerTott__AppearanceExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AppearanceExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ClassDescriptor
#define SOAP_TYPE_PointerTott__ClassDescriptor (1267)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ClassDescriptor(struct soap*, tt__ClassDescriptor *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ClassDescriptor(struct soap*, const char *, int, tt__ClassDescriptor *const*, const char *);
SOAP_FMAC3 tt__ClassDescriptor ** SOAP_FMAC4 soap_in_PointerTott__ClassDescriptor(struct soap*, const char*, tt__ClassDescriptor **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ClassDescriptor(struct soap*, tt__ClassDescriptor *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ClassDescriptor
#define soap_write_PointerTott__ClassDescriptor(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ClassDescriptor(soap, data),0) || soap_put_PointerTott__ClassDescriptor(soap, data, "tt:ClassDescriptor", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ClassDescriptor ** SOAP_FMAC4 soap_get_PointerTott__ClassDescriptor(struct soap*, tt__ClassDescriptor **, const char*, const char*);

#ifndef soap_read_PointerTott__ClassDescriptor
#define soap_read_PointerTott__ClassDescriptor(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ClassDescriptor(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ColorDescriptor
#define SOAP_TYPE_PointerTott__ColorDescriptor (1266)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ColorDescriptor(struct soap*, tt__ColorDescriptor *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ColorDescriptor(struct soap*, const char *, int, tt__ColorDescriptor *const*, const char *);
SOAP_FMAC3 tt__ColorDescriptor ** SOAP_FMAC4 soap_in_PointerTott__ColorDescriptor(struct soap*, const char*, tt__ColorDescriptor **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ColorDescriptor(struct soap*, tt__ColorDescriptor *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ColorDescriptor
#define soap_write_PointerTott__ColorDescriptor(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ColorDescriptor(soap, data),0) || soap_put_PointerTott__ColorDescriptor(soap, data, "tt:ColorDescriptor", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ColorDescriptor ** SOAP_FMAC4 soap_get_PointerTott__ColorDescriptor(struct soap*, tt__ColorDescriptor **, const char*, const char*);

#ifndef soap_read_PointerTott__ColorDescriptor
#define soap_read_PointerTott__ColorDescriptor(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ColorDescriptor(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ShapeDescriptor
#define SOAP_TYPE_PointerTott__ShapeDescriptor (1265)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ShapeDescriptor(struct soap*, tt__ShapeDescriptor *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ShapeDescriptor(struct soap*, const char *, int, tt__ShapeDescriptor *const*, const char *);
SOAP_FMAC3 tt__ShapeDescriptor ** SOAP_FMAC4 soap_in_PointerTott__ShapeDescriptor(struct soap*, const char*, tt__ShapeDescriptor **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ShapeDescriptor(struct soap*, tt__ShapeDescriptor *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ShapeDescriptor
#define soap_write_PointerTott__ShapeDescriptor(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ShapeDescriptor(soap, data),0) || soap_put_PointerTott__ShapeDescriptor(soap, data, "tt:ShapeDescriptor", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ShapeDescriptor ** SOAP_FMAC4 soap_get_PointerTott__ShapeDescriptor(struct soap*, tt__ShapeDescriptor **, const char*, const char*);

#ifndef soap_read_PointerTott__ShapeDescriptor
#define soap_read_PointerTott__ShapeDescriptor(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ShapeDescriptor(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Transformation
#define SOAP_TYPE_PointerTott__Transformation (1264)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Transformation(struct soap*, tt__Transformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Transformation(struct soap*, const char *, int, tt__Transformation *const*, const char *);
SOAP_FMAC3 tt__Transformation ** SOAP_FMAC4 soap_in_PointerTott__Transformation(struct soap*, const char*, tt__Transformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Transformation(struct soap*, tt__Transformation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Transformation
#define soap_write_PointerTott__Transformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Transformation(soap, data),0) || soap_put_PointerTott__Transformation(soap, data, "tt:Transformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Transformation ** SOAP_FMAC4 soap_get_PointerTott__Transformation(struct soap*, tt__Transformation **, const char*, const char*);

#ifndef soap_read_PointerTott__Transformation
#define soap_read_PointerTott__Transformation(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Transformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Vector
#define SOAP_TYPE_PointerTott__Vector (1262)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Vector(struct soap*, tt__Vector *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Vector(struct soap*, const char *, int, tt__Vector *const*, const char *);
SOAP_FMAC3 tt__Vector ** SOAP_FMAC4 soap_in_PointerTott__Vector(struct soap*, const char*, tt__Vector **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Vector(struct soap*, tt__Vector *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Vector
#define soap_write_PointerTott__Vector(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Vector(soap, data),0) || soap_put_PointerTott__Vector(soap, data, "tt:Vector", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Vector ** SOAP_FMAC4 soap_get_PointerTott__Vector(struct soap*, tt__Vector **, const char*, const char*);

#ifndef soap_read_PointerTott__Vector
#define soap_read_PointerTott__Vector(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Vector(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ItemListDescriptionExtension
#define SOAP_TYPE_PointerTott__ItemListDescriptionExtension (1261)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ItemListDescriptionExtension(struct soap*, tt__ItemListDescriptionExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ItemListDescriptionExtension(struct soap*, const char *, int, tt__ItemListDescriptionExtension *const*, const char *);
SOAP_FMAC3 tt__ItemListDescriptionExtension ** SOAP_FMAC4 soap_in_PointerTott__ItemListDescriptionExtension(struct soap*, const char*, tt__ItemListDescriptionExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ItemListDescriptionExtension(struct soap*, tt__ItemListDescriptionExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ItemListDescriptionExtension
#define soap_write_PointerTott__ItemListDescriptionExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ItemListDescriptionExtension(soap, data),0) || soap_put_PointerTott__ItemListDescriptionExtension(soap, data, "tt:ItemListDescriptionExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ItemListDescriptionExtension ** SOAP_FMAC4 soap_get_PointerTott__ItemListDescriptionExtension(struct soap*, tt__ItemListDescriptionExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__ItemListDescriptionExtension
#define soap_read_PointerTott__ItemListDescriptionExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ItemListDescriptionExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription
#define SOAP_TYPE_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription (1260)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(struct soap*, std::vector<_tt__ItemListDescription_ElementItemDescription >*const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(struct soap*, const char *, int, std::vector<_tt__ItemListDescription_ElementItemDescription >*const*, const char *);
SOAP_FMAC3 std::vector<_tt__ItemListDescription_ElementItemDescription >** SOAP_FMAC4 soap_in_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(struct soap*, const char*, std::vector<_tt__ItemListDescription_ElementItemDescription >**, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(struct soap*, std::vector<_tt__ItemListDescription_ElementItemDescription >*const*, const char*, const char*);

#ifndef soap_write_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription
#define soap_write_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(soap, data),0) || soap_put_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(soap, data, "", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::vector<_tt__ItemListDescription_ElementItemDescription >** SOAP_FMAC4 soap_get_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(struct soap*, std::vector<_tt__ItemListDescription_ElementItemDescription >**, const char*, const char*);

#ifndef soap_read_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription
#define soap_read_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription
#define SOAP_TYPE_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription (1257)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(struct soap*, std::vector<_tt__ItemListDescription_SimpleItemDescription >*const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(struct soap*, const char *, int, std::vector<_tt__ItemListDescription_SimpleItemDescription >*const*, const char *);
SOAP_FMAC3 std::vector<_tt__ItemListDescription_SimpleItemDescription >** SOAP_FMAC4 soap_in_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(struct soap*, const char*, std::vector<_tt__ItemListDescription_SimpleItemDescription >**, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(struct soap*, std::vector<_tt__ItemListDescription_SimpleItemDescription >*const*, const char*, const char*);

#ifndef soap_write_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription
#define soap_write_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(soap, data),0) || soap_put_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(soap, data, "", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::vector<_tt__ItemListDescription_SimpleItemDescription >** SOAP_FMAC4 soap_get_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(struct soap*, std::vector<_tt__ItemListDescription_SimpleItemDescription >**, const char*, const char*);

#ifndef soap_read_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription
#define soap_read_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MessageDescriptionExtension
#define SOAP_TYPE_PointerTott__MessageDescriptionExtension (1254)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MessageDescriptionExtension(struct soap*, tt__MessageDescriptionExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MessageDescriptionExtension(struct soap*, const char *, int, tt__MessageDescriptionExtension *const*, const char *);
SOAP_FMAC3 tt__MessageDescriptionExtension ** SOAP_FMAC4 soap_in_PointerTott__MessageDescriptionExtension(struct soap*, const char*, tt__MessageDescriptionExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MessageDescriptionExtension(struct soap*, tt__MessageDescriptionExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MessageDescriptionExtension
#define soap_write_PointerTott__MessageDescriptionExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MessageDescriptionExtension(soap, data),0) || soap_put_PointerTott__MessageDescriptionExtension(soap, data, "tt:MessageDescriptionExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MessageDescriptionExtension ** SOAP_FMAC4 soap_get_PointerTott__MessageDescriptionExtension(struct soap*, tt__MessageDescriptionExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__MessageDescriptionExtension
#define soap_read_PointerTott__MessageDescriptionExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__MessageDescriptionExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ItemListDescription
#define SOAP_TYPE_PointerTott__ItemListDescription (1253)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ItemListDescription(struct soap*, tt__ItemListDescription *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ItemListDescription(struct soap*, const char *, int, tt__ItemListDescription *const*, const char *);
SOAP_FMAC3 tt__ItemListDescription ** SOAP_FMAC4 soap_in_PointerTott__ItemListDescription(struct soap*, const char*, tt__ItemListDescription **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ItemListDescription(struct soap*, tt__ItemListDescription *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ItemListDescription
#define soap_write_PointerTott__ItemListDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ItemListDescription(soap, data),0) || soap_put_PointerTott__ItemListDescription(soap, data, "tt:ItemListDescription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ItemListDescription ** SOAP_FMAC4 soap_get_PointerTott__ItemListDescription(struct soap*, tt__ItemListDescription **, const char*, const char*);

#ifndef soap_read_PointerTott__ItemListDescription
#define soap_read_PointerTott__ItemListDescription(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ItemListDescription(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ItemListExtension
#define SOAP_TYPE_PointerTott__ItemListExtension (1252)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ItemListExtension(struct soap*, tt__ItemListExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ItemListExtension(struct soap*, const char *, int, tt__ItemListExtension *const*, const char *);
SOAP_FMAC3 tt__ItemListExtension ** SOAP_FMAC4 soap_in_PointerTott__ItemListExtension(struct soap*, const char*, tt__ItemListExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ItemListExtension(struct soap*, tt__ItemListExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ItemListExtension
#define soap_write_PointerTott__ItemListExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ItemListExtension(soap, data),0) || soap_put_PointerTott__ItemListExtension(soap, data, "tt:ItemListExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ItemListExtension ** SOAP_FMAC4 soap_get_PointerTott__ItemListExtension(struct soap*, tt__ItemListExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__ItemListExtension
#define soap_read_PointerTott__ItemListExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ItemListExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem
#define SOAP_TYPE_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem (1251)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem(struct soap*, std::vector<_tt__ItemList_ElementItem >*const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem(struct soap*, const char *, int, std::vector<_tt__ItemList_ElementItem >*const*, const char *);
SOAP_FMAC3 std::vector<_tt__ItemList_ElementItem >** SOAP_FMAC4 soap_in_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem(struct soap*, const char*, std::vector<_tt__ItemList_ElementItem >**, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem(struct soap*, std::vector<_tt__ItemList_ElementItem >*const*, const char*, const char*);

#ifndef soap_write_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem
#define soap_write_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem(soap, data),0) || soap_put_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem(soap, data, "", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::vector<_tt__ItemList_ElementItem >** SOAP_FMAC4 soap_get_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem(struct soap*, std::vector<_tt__ItemList_ElementItem >**, const char*, const char*);

#ifndef soap_read_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem
#define soap_read_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem
#define SOAP_TYPE_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem (1248)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem(struct soap*, std::vector<_tt__ItemList_SimpleItem >*const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem(struct soap*, const char *, int, std::vector<_tt__ItemList_SimpleItem >*const*, const char *);
SOAP_FMAC3 std::vector<_tt__ItemList_SimpleItem >** SOAP_FMAC4 soap_in_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem(struct soap*, const char*, std::vector<_tt__ItemList_SimpleItem >**, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem(struct soap*, std::vector<_tt__ItemList_SimpleItem >*const*, const char*, const char*);

#ifndef soap_write_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem
#define soap_write_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem(soap, data),0) || soap_put_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem(soap, data, "", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::vector<_tt__ItemList_SimpleItem >** SOAP_FMAC4 soap_get_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem(struct soap*, std::vector<_tt__ItemList_SimpleItem >**, const char*, const char*);

#ifndef soap_read_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem
#define soap_read_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FocusOptions20Extension
#define SOAP_TYPE_PointerTott__FocusOptions20Extension (1245)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FocusOptions20Extension(struct soap*, tt__FocusOptions20Extension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FocusOptions20Extension(struct soap*, const char *, int, tt__FocusOptions20Extension *const*, const char *);
SOAP_FMAC3 tt__FocusOptions20Extension ** SOAP_FMAC4 soap_in_PointerTott__FocusOptions20Extension(struct soap*, const char*, tt__FocusOptions20Extension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FocusOptions20Extension(struct soap*, tt__FocusOptions20Extension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FocusOptions20Extension
#define soap_write_PointerTott__FocusOptions20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FocusOptions20Extension(soap, data),0) || soap_put_PointerTott__FocusOptions20Extension(soap, data, "tt:FocusOptions20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusOptions20Extension ** SOAP_FMAC4 soap_get_PointerTott__FocusOptions20Extension(struct soap*, tt__FocusOptions20Extension **, const char*, const char*);

#ifndef soap_read_PointerTott__FocusOptions20Extension
#define soap_read_PointerTott__FocusOptions20Extension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__FocusOptions20Extension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__WhiteBalanceOptions20Extension
#define SOAP_TYPE_PointerTott__WhiteBalanceOptions20Extension (1244)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__WhiteBalanceOptions20Extension(struct soap*, tt__WhiteBalanceOptions20Extension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__WhiteBalanceOptions20Extension(struct soap*, const char *, int, tt__WhiteBalanceOptions20Extension *const*, const char *);
SOAP_FMAC3 tt__WhiteBalanceOptions20Extension ** SOAP_FMAC4 soap_in_PointerTott__WhiteBalanceOptions20Extension(struct soap*, const char*, tt__WhiteBalanceOptions20Extension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__WhiteBalanceOptions20Extension(struct soap*, tt__WhiteBalanceOptions20Extension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__WhiteBalanceOptions20Extension
#define soap_write_PointerTott__WhiteBalanceOptions20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__WhiteBalanceOptions20Extension(soap, data),0) || soap_put_PointerTott__WhiteBalanceOptions20Extension(soap, data, "tt:WhiteBalanceOptions20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WhiteBalanceOptions20Extension ** SOAP_FMAC4 soap_get_PointerTott__WhiteBalanceOptions20Extension(struct soap*, tt__WhiteBalanceOptions20Extension **, const char*, const char*);

#ifndef soap_read_PointerTott__WhiteBalanceOptions20Extension
#define soap_read_PointerTott__WhiteBalanceOptions20Extension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__WhiteBalanceOptions20Extension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FocusConfiguration20Extension
#define SOAP_TYPE_PointerTott__FocusConfiguration20Extension (1243)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FocusConfiguration20Extension(struct soap*, tt__FocusConfiguration20Extension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FocusConfiguration20Extension(struct soap*, const char *, int, tt__FocusConfiguration20Extension *const*, const char *);
SOAP_FMAC3 tt__FocusConfiguration20Extension ** SOAP_FMAC4 soap_in_PointerTott__FocusConfiguration20Extension(struct soap*, const char*, tt__FocusConfiguration20Extension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FocusConfiguration20Extension(struct soap*, tt__FocusConfiguration20Extension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FocusConfiguration20Extension
#define soap_write_PointerTott__FocusConfiguration20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FocusConfiguration20Extension(soap, data),0) || soap_put_PointerTott__FocusConfiguration20Extension(soap, data, "tt:FocusConfiguration20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusConfiguration20Extension ** SOAP_FMAC4 soap_get_PointerTott__FocusConfiguration20Extension(struct soap*, tt__FocusConfiguration20Extension **, const char*, const char*);

#ifndef soap_read_PointerTott__FocusConfiguration20Extension
#define soap_read_PointerTott__FocusConfiguration20Extension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__FocusConfiguration20Extension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__WhiteBalance20Extension
#define SOAP_TYPE_PointerTott__WhiteBalance20Extension (1242)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__WhiteBalance20Extension(struct soap*, tt__WhiteBalance20Extension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__WhiteBalance20Extension(struct soap*, const char *, int, tt__WhiteBalance20Extension *const*, const char *);
SOAP_FMAC3 tt__WhiteBalance20Extension ** SOAP_FMAC4 soap_in_PointerTott__WhiteBalance20Extension(struct soap*, const char*, tt__WhiteBalance20Extension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__WhiteBalance20Extension(struct soap*, tt__WhiteBalance20Extension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__WhiteBalance20Extension
#define soap_write_PointerTott__WhiteBalance20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__WhiteBalance20Extension(soap, data),0) || soap_put_PointerTott__WhiteBalance20Extension(soap, data, "tt:WhiteBalance20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WhiteBalance20Extension ** SOAP_FMAC4 soap_get_PointerTott__WhiteBalance20Extension(struct soap*, tt__WhiteBalance20Extension **, const char*, const char*);

#ifndef soap_read_PointerTott__WhiteBalance20Extension
#define soap_read_PointerTott__WhiteBalance20Extension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__WhiteBalance20Extension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RelativeFocusOptions20
#define SOAP_TYPE_PointerTott__RelativeFocusOptions20 (1241)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RelativeFocusOptions20(struct soap*, tt__RelativeFocusOptions20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RelativeFocusOptions20(struct soap*, const char *, int, tt__RelativeFocusOptions20 *const*, const char *);
SOAP_FMAC3 tt__RelativeFocusOptions20 ** SOAP_FMAC4 soap_in_PointerTott__RelativeFocusOptions20(struct soap*, const char*, tt__RelativeFocusOptions20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RelativeFocusOptions20(struct soap*, tt__RelativeFocusOptions20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RelativeFocusOptions20
#define soap_write_PointerTott__RelativeFocusOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RelativeFocusOptions20(soap, data),0) || soap_put_PointerTott__RelativeFocusOptions20(soap, data, "tt:RelativeFocusOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RelativeFocusOptions20 ** SOAP_FMAC4 soap_get_PointerTott__RelativeFocusOptions20(struct soap*, tt__RelativeFocusOptions20 **, const char*, const char*);

#ifndef soap_read_PointerTott__RelativeFocusOptions20
#define soap_read_PointerTott__RelativeFocusOptions20(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__RelativeFocusOptions20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension
#define SOAP_TYPE_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension (1239)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension(struct soap*, tt__IrCutFilterAutoAdjustmentOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension(struct soap*, const char *, int, tt__IrCutFilterAutoAdjustmentOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__IrCutFilterAutoAdjustmentOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension(struct soap*, const char*, tt__IrCutFilterAutoAdjustmentOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension(struct soap*, tt__IrCutFilterAutoAdjustmentOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension
#define soap_write_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension(soap, data),0) || soap_put_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension(soap, data, "tt:IrCutFilterAutoAdjustmentOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IrCutFilterAutoAdjustmentOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension(struct soap*, tt__IrCutFilterAutoAdjustmentOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension
#define soap_read_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImageStabilizationOptionsExtension
#define SOAP_TYPE_PointerTott__ImageStabilizationOptionsExtension (1238)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImageStabilizationOptionsExtension(struct soap*, tt__ImageStabilizationOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImageStabilizationOptionsExtension(struct soap*, const char *, int, tt__ImageStabilizationOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__ImageStabilizationOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__ImageStabilizationOptionsExtension(struct soap*, const char*, tt__ImageStabilizationOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImageStabilizationOptionsExtension(struct soap*, tt__ImageStabilizationOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImageStabilizationOptionsExtension
#define soap_write_PointerTott__ImageStabilizationOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImageStabilizationOptionsExtension(soap, data),0) || soap_put_PointerTott__ImageStabilizationOptionsExtension(soap, data, "tt:ImageStabilizationOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImageStabilizationOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__ImageStabilizationOptionsExtension(struct soap*, tt__ImageStabilizationOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__ImageStabilizationOptionsExtension
#define soap_read_PointerTott__ImageStabilizationOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ImageStabilizationOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImagingOptions20Extension3
#define SOAP_TYPE_PointerTott__ImagingOptions20Extension3 (1236)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImagingOptions20Extension3(struct soap*, tt__ImagingOptions20Extension3 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImagingOptions20Extension3(struct soap*, const char *, int, tt__ImagingOptions20Extension3 *const*, const char *);
SOAP_FMAC3 tt__ImagingOptions20Extension3 ** SOAP_FMAC4 soap_in_PointerTott__ImagingOptions20Extension3(struct soap*, const char*, tt__ImagingOptions20Extension3 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImagingOptions20Extension3(struct soap*, tt__ImagingOptions20Extension3 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImagingOptions20Extension3
#define soap_write_PointerTott__ImagingOptions20Extension3(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImagingOptions20Extension3(soap, data),0) || soap_put_PointerTott__ImagingOptions20Extension3(soap, data, "tt:ImagingOptions20Extension3", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingOptions20Extension3 ** SOAP_FMAC4 soap_get_PointerTott__ImagingOptions20Extension3(struct soap*, tt__ImagingOptions20Extension3 **, const char*, const char*);

#ifndef soap_read_PointerTott__ImagingOptions20Extension3
#define soap_read_PointerTott__ImagingOptions20Extension3(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ImagingOptions20Extension3(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IrCutFilterAutoAdjustmentOptions
#define SOAP_TYPE_PointerTott__IrCutFilterAutoAdjustmentOptions (1235)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IrCutFilterAutoAdjustmentOptions(struct soap*, tt__IrCutFilterAutoAdjustmentOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IrCutFilterAutoAdjustmentOptions(struct soap*, const char *, int, tt__IrCutFilterAutoAdjustmentOptions *const*, const char *);
SOAP_FMAC3 tt__IrCutFilterAutoAdjustmentOptions ** SOAP_FMAC4 soap_in_PointerTott__IrCutFilterAutoAdjustmentOptions(struct soap*, const char*, tt__IrCutFilterAutoAdjustmentOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IrCutFilterAutoAdjustmentOptions(struct soap*, tt__IrCutFilterAutoAdjustmentOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IrCutFilterAutoAdjustmentOptions
#define soap_write_PointerTott__IrCutFilterAutoAdjustmentOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IrCutFilterAutoAdjustmentOptions(soap, data),0) || soap_put_PointerTott__IrCutFilterAutoAdjustmentOptions(soap, data, "tt:IrCutFilterAutoAdjustmentOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IrCutFilterAutoAdjustmentOptions ** SOAP_FMAC4 soap_get_PointerTott__IrCutFilterAutoAdjustmentOptions(struct soap*, tt__IrCutFilterAutoAdjustmentOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__IrCutFilterAutoAdjustmentOptions
#define soap_read_PointerTott__IrCutFilterAutoAdjustmentOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__IrCutFilterAutoAdjustmentOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImagingOptions20Extension2
#define SOAP_TYPE_PointerTott__ImagingOptions20Extension2 (1234)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImagingOptions20Extension2(struct soap*, tt__ImagingOptions20Extension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImagingOptions20Extension2(struct soap*, const char *, int, tt__ImagingOptions20Extension2 *const*, const char *);
SOAP_FMAC3 tt__ImagingOptions20Extension2 ** SOAP_FMAC4 soap_in_PointerTott__ImagingOptions20Extension2(struct soap*, const char*, tt__ImagingOptions20Extension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImagingOptions20Extension2(struct soap*, tt__ImagingOptions20Extension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImagingOptions20Extension2
#define soap_write_PointerTott__ImagingOptions20Extension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImagingOptions20Extension2(soap, data),0) || soap_put_PointerTott__ImagingOptions20Extension2(soap, data, "tt:ImagingOptions20Extension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingOptions20Extension2 ** SOAP_FMAC4 soap_get_PointerTott__ImagingOptions20Extension2(struct soap*, tt__ImagingOptions20Extension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__ImagingOptions20Extension2
#define soap_read_PointerTott__ImagingOptions20Extension2(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ImagingOptions20Extension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImageStabilizationOptions
#define SOAP_TYPE_PointerTott__ImageStabilizationOptions (1233)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImageStabilizationOptions(struct soap*, tt__ImageStabilizationOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImageStabilizationOptions(struct soap*, const char *, int, tt__ImageStabilizationOptions *const*, const char *);
SOAP_FMAC3 tt__ImageStabilizationOptions ** SOAP_FMAC4 soap_in_PointerTott__ImageStabilizationOptions(struct soap*, const char*, tt__ImageStabilizationOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImageStabilizationOptions(struct soap*, tt__ImageStabilizationOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImageStabilizationOptions
#define soap_write_PointerTott__ImageStabilizationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImageStabilizationOptions(soap, data),0) || soap_put_PointerTott__ImageStabilizationOptions(soap, data, "tt:ImageStabilizationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImageStabilizationOptions ** SOAP_FMAC4 soap_get_PointerTott__ImageStabilizationOptions(struct soap*, tt__ImageStabilizationOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__ImageStabilizationOptions
#define soap_read_PointerTott__ImageStabilizationOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ImageStabilizationOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImagingOptions20Extension
#define SOAP_TYPE_PointerTott__ImagingOptions20Extension (1232)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImagingOptions20Extension(struct soap*, tt__ImagingOptions20Extension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImagingOptions20Extension(struct soap*, const char *, int, tt__ImagingOptions20Extension *const*, const char *);
SOAP_FMAC3 tt__ImagingOptions20Extension ** SOAP_FMAC4 soap_in_PointerTott__ImagingOptions20Extension(struct soap*, const char*, tt__ImagingOptions20Extension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImagingOptions20Extension(struct soap*, tt__ImagingOptions20Extension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImagingOptions20Extension
#define soap_write_PointerTott__ImagingOptions20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImagingOptions20Extension(soap, data),0) || soap_put_PointerTott__ImagingOptions20Extension(soap, data, "tt:ImagingOptions20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingOptions20Extension ** SOAP_FMAC4 soap_get_PointerTott__ImagingOptions20Extension(struct soap*, tt__ImagingOptions20Extension **, const char*, const char*);

#ifndef soap_read_PointerTott__ImagingOptions20Extension
#define soap_read_PointerTott__ImagingOptions20Extension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ImagingOptions20Extension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__WhiteBalanceOptions20
#define SOAP_TYPE_PointerTott__WhiteBalanceOptions20 (1231)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__WhiteBalanceOptions20(struct soap*, tt__WhiteBalanceOptions20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__WhiteBalanceOptions20(struct soap*, const char *, int, tt__WhiteBalanceOptions20 *const*, const char *);
SOAP_FMAC3 tt__WhiteBalanceOptions20 ** SOAP_FMAC4 soap_in_PointerTott__WhiteBalanceOptions20(struct soap*, const char*, tt__WhiteBalanceOptions20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__WhiteBalanceOptions20(struct soap*, tt__WhiteBalanceOptions20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__WhiteBalanceOptions20
#define soap_write_PointerTott__WhiteBalanceOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__WhiteBalanceOptions20(soap, data),0) || soap_put_PointerTott__WhiteBalanceOptions20(soap, data, "tt:WhiteBalanceOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WhiteBalanceOptions20 ** SOAP_FMAC4 soap_get_PointerTott__WhiteBalanceOptions20(struct soap*, tt__WhiteBalanceOptions20 **, const char*, const char*);

#ifndef soap_read_PointerTott__WhiteBalanceOptions20
#define soap_read_PointerTott__WhiteBalanceOptions20(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__WhiteBalanceOptions20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__WideDynamicRangeOptions20
#define SOAP_TYPE_PointerTott__WideDynamicRangeOptions20 (1230)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__WideDynamicRangeOptions20(struct soap*, tt__WideDynamicRangeOptions20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__WideDynamicRangeOptions20(struct soap*, const char *, int, tt__WideDynamicRangeOptions20 *const*, const char *);
SOAP_FMAC3 tt__WideDynamicRangeOptions20 ** SOAP_FMAC4 soap_in_PointerTott__WideDynamicRangeOptions20(struct soap*, const char*, tt__WideDynamicRangeOptions20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__WideDynamicRangeOptions20(struct soap*, tt__WideDynamicRangeOptions20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__WideDynamicRangeOptions20
#define soap_write_PointerTott__WideDynamicRangeOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__WideDynamicRangeOptions20(soap, data),0) || soap_put_PointerTott__WideDynamicRangeOptions20(soap, data, "tt:WideDynamicRangeOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WideDynamicRangeOptions20 ** SOAP_FMAC4 soap_get_PointerTott__WideDynamicRangeOptions20(struct soap*, tt__WideDynamicRangeOptions20 **, const char*, const char*);

#ifndef soap_read_PointerTott__WideDynamicRangeOptions20
#define soap_read_PointerTott__WideDynamicRangeOptions20(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__WideDynamicRangeOptions20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FocusOptions20
#define SOAP_TYPE_PointerTott__FocusOptions20 (1229)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FocusOptions20(struct soap*, tt__FocusOptions20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FocusOptions20(struct soap*, const char *, int, tt__FocusOptions20 *const*, const char *);
SOAP_FMAC3 tt__FocusOptions20 ** SOAP_FMAC4 soap_in_PointerTott__FocusOptions20(struct soap*, const char*, tt__FocusOptions20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FocusOptions20(struct soap*, tt__FocusOptions20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FocusOptions20
#define soap_write_PointerTott__FocusOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FocusOptions20(soap, data),0) || soap_put_PointerTott__FocusOptions20(soap, data, "tt:FocusOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusOptions20 ** SOAP_FMAC4 soap_get_PointerTott__FocusOptions20(struct soap*, tt__FocusOptions20 **, const char*, const char*);

#ifndef soap_read_PointerTott__FocusOptions20
#define soap_read_PointerTott__FocusOptions20(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__FocusOptions20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ExposureOptions20
#define SOAP_TYPE_PointerTott__ExposureOptions20 (1228)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ExposureOptions20(struct soap*, tt__ExposureOptions20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ExposureOptions20(struct soap*, const char *, int, tt__ExposureOptions20 *const*, const char *);
SOAP_FMAC3 tt__ExposureOptions20 ** SOAP_FMAC4 soap_in_PointerTott__ExposureOptions20(struct soap*, const char*, tt__ExposureOptions20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ExposureOptions20(struct soap*, tt__ExposureOptions20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ExposureOptions20
#define soap_write_PointerTott__ExposureOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ExposureOptions20(soap, data),0) || soap_put_PointerTott__ExposureOptions20(soap, data, "tt:ExposureOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ExposureOptions20 ** SOAP_FMAC4 soap_get_PointerTott__ExposureOptions20(struct soap*, tt__ExposureOptions20 **, const char*, const char*);

#ifndef soap_read_PointerTott__ExposureOptions20
#define soap_read_PointerTott__ExposureOptions20(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ExposureOptions20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__BacklightCompensationOptions20
#define SOAP_TYPE_PointerTott__BacklightCompensationOptions20 (1227)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__BacklightCompensationOptions20(struct soap*, tt__BacklightCompensationOptions20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__BacklightCompensationOptions20(struct soap*, const char *, int, tt__BacklightCompensationOptions20 *const*, const char *);
SOAP_FMAC3 tt__BacklightCompensationOptions20 ** SOAP_FMAC4 soap_in_PointerTott__BacklightCompensationOptions20(struct soap*, const char*, tt__BacklightCompensationOptions20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__BacklightCompensationOptions20(struct soap*, tt__BacklightCompensationOptions20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__BacklightCompensationOptions20
#define soap_write_PointerTott__BacklightCompensationOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__BacklightCompensationOptions20(soap, data),0) || soap_put_PointerTott__BacklightCompensationOptions20(soap, data, "tt:BacklightCompensationOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__BacklightCompensationOptions20 ** SOAP_FMAC4 soap_get_PointerTott__BacklightCompensationOptions20(struct soap*, tt__BacklightCompensationOptions20 **, const char*, const char*);

#ifndef soap_read_PointerTott__BacklightCompensationOptions20
#define soap_read_PointerTott__BacklightCompensationOptions20(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__BacklightCompensationOptions20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ExposurePriority
#define SOAP_TYPE_PointerTott__ExposurePriority (1226)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ExposurePriority(struct soap*, enum tt__ExposurePriority *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ExposurePriority(struct soap*, const char *, int, enum tt__ExposurePriority *const*, const char *);
SOAP_FMAC3 enum tt__ExposurePriority ** SOAP_FMAC4 soap_in_PointerTott__ExposurePriority(struct soap*, const char*, enum tt__ExposurePriority **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ExposurePriority(struct soap*, enum tt__ExposurePriority *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ExposurePriority
#define soap_write_PointerTott__ExposurePriority(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ExposurePriority(soap, data),0) || soap_put_PointerTott__ExposurePriority(soap, data, "tt:ExposurePriority", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__ExposurePriority ** SOAP_FMAC4 soap_get_PointerTott__ExposurePriority(struct soap*, enum tt__ExposurePriority **, const char*, const char*);

#ifndef soap_read_PointerTott__ExposurePriority
#define soap_read_PointerTott__ExposurePriority(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ExposurePriority(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IrCutFilterAutoAdjustmentExtension
#define SOAP_TYPE_PointerTott__IrCutFilterAutoAdjustmentExtension (1225)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IrCutFilterAutoAdjustmentExtension(struct soap*, tt__IrCutFilterAutoAdjustmentExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IrCutFilterAutoAdjustmentExtension(struct soap*, const char *, int, tt__IrCutFilterAutoAdjustmentExtension *const*, const char *);
SOAP_FMAC3 tt__IrCutFilterAutoAdjustmentExtension ** SOAP_FMAC4 soap_in_PointerTott__IrCutFilterAutoAdjustmentExtension(struct soap*, const char*, tt__IrCutFilterAutoAdjustmentExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IrCutFilterAutoAdjustmentExtension(struct soap*, tt__IrCutFilterAutoAdjustmentExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IrCutFilterAutoAdjustmentExtension
#define soap_write_PointerTott__IrCutFilterAutoAdjustmentExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IrCutFilterAutoAdjustmentExtension(soap, data),0) || soap_put_PointerTott__IrCutFilterAutoAdjustmentExtension(soap, data, "tt:IrCutFilterAutoAdjustmentExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IrCutFilterAutoAdjustmentExtension ** SOAP_FMAC4 soap_get_PointerTott__IrCutFilterAutoAdjustmentExtension(struct soap*, tt__IrCutFilterAutoAdjustmentExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__IrCutFilterAutoAdjustmentExtension
#define soap_read_PointerTott__IrCutFilterAutoAdjustmentExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__IrCutFilterAutoAdjustmentExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImageStabilizationExtension
#define SOAP_TYPE_PointerTott__ImageStabilizationExtension (1224)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImageStabilizationExtension(struct soap*, tt__ImageStabilizationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImageStabilizationExtension(struct soap*, const char *, int, tt__ImageStabilizationExtension *const*, const char *);
SOAP_FMAC3 tt__ImageStabilizationExtension ** SOAP_FMAC4 soap_in_PointerTott__ImageStabilizationExtension(struct soap*, const char*, tt__ImageStabilizationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImageStabilizationExtension(struct soap*, tt__ImageStabilizationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImageStabilizationExtension
#define soap_write_PointerTott__ImageStabilizationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImageStabilizationExtension(soap, data),0) || soap_put_PointerTott__ImageStabilizationExtension(soap, data, "tt:ImageStabilizationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImageStabilizationExtension ** SOAP_FMAC4 soap_get_PointerTott__ImageStabilizationExtension(struct soap*, tt__ImageStabilizationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__ImageStabilizationExtension
#define soap_read_PointerTott__ImageStabilizationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ImageStabilizationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImagingSettingsExtension203
#define SOAP_TYPE_PointerTott__ImagingSettingsExtension203 (1223)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImagingSettingsExtension203(struct soap*, tt__ImagingSettingsExtension203 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImagingSettingsExtension203(struct soap*, const char *, int, tt__ImagingSettingsExtension203 *const*, const char *);
SOAP_FMAC3 tt__ImagingSettingsExtension203 ** SOAP_FMAC4 soap_in_PointerTott__ImagingSettingsExtension203(struct soap*, const char*, tt__ImagingSettingsExtension203 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImagingSettingsExtension203(struct soap*, tt__ImagingSettingsExtension203 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImagingSettingsExtension203
#define soap_write_PointerTott__ImagingSettingsExtension203(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImagingSettingsExtension203(soap, data),0) || soap_put_PointerTott__ImagingSettingsExtension203(soap, data, "tt:ImagingSettingsExtension203", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingSettingsExtension203 ** SOAP_FMAC4 soap_get_PointerTott__ImagingSettingsExtension203(struct soap*, tt__ImagingSettingsExtension203 **, const char*, const char*);

#ifndef soap_read_PointerTott__ImagingSettingsExtension203
#define soap_read_PointerTott__ImagingSettingsExtension203(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ImagingSettingsExtension203(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IrCutFilterAutoAdjustment
#define SOAP_TYPE_PointerTott__IrCutFilterAutoAdjustment (1221)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IrCutFilterAutoAdjustment(struct soap*, tt__IrCutFilterAutoAdjustment *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IrCutFilterAutoAdjustment(struct soap*, const char *, int, tt__IrCutFilterAutoAdjustment *const*, const char *);
SOAP_FMAC3 tt__IrCutFilterAutoAdjustment ** SOAP_FMAC4 soap_in_PointerTott__IrCutFilterAutoAdjustment(struct soap*, const char*, tt__IrCutFilterAutoAdjustment **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IrCutFilterAutoAdjustment(struct soap*, tt__IrCutFilterAutoAdjustment *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IrCutFilterAutoAdjustment
#define soap_write_PointerTott__IrCutFilterAutoAdjustment(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IrCutFilterAutoAdjustment(soap, data),0) || soap_put_PointerTott__IrCutFilterAutoAdjustment(soap, data, "tt:IrCutFilterAutoAdjustment", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IrCutFilterAutoAdjustment ** SOAP_FMAC4 soap_get_PointerTott__IrCutFilterAutoAdjustment(struct soap*, tt__IrCutFilterAutoAdjustment **, const char*, const char*);

#ifndef soap_read_PointerTott__IrCutFilterAutoAdjustment
#define soap_read_PointerTott__IrCutFilterAutoAdjustment(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__IrCutFilterAutoAdjustment(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImagingSettingsExtension202
#define SOAP_TYPE_PointerTott__ImagingSettingsExtension202 (1220)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImagingSettingsExtension202(struct soap*, tt__ImagingSettingsExtension202 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImagingSettingsExtension202(struct soap*, const char *, int, tt__ImagingSettingsExtension202 *const*, const char *);
SOAP_FMAC3 tt__ImagingSettingsExtension202 ** SOAP_FMAC4 soap_in_PointerTott__ImagingSettingsExtension202(struct soap*, const char*, tt__ImagingSettingsExtension202 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImagingSettingsExtension202(struct soap*, tt__ImagingSettingsExtension202 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImagingSettingsExtension202
#define soap_write_PointerTott__ImagingSettingsExtension202(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImagingSettingsExtension202(soap, data),0) || soap_put_PointerTott__ImagingSettingsExtension202(soap, data, "tt:ImagingSettingsExtension202", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingSettingsExtension202 ** SOAP_FMAC4 soap_get_PointerTott__ImagingSettingsExtension202(struct soap*, tt__ImagingSettingsExtension202 **, const char*, const char*);

#ifndef soap_read_PointerTott__ImagingSettingsExtension202
#define soap_read_PointerTott__ImagingSettingsExtension202(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ImagingSettingsExtension202(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImageStabilization
#define SOAP_TYPE_PointerTott__ImageStabilization (1219)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImageStabilization(struct soap*, tt__ImageStabilization *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImageStabilization(struct soap*, const char *, int, tt__ImageStabilization *const*, const char *);
SOAP_FMAC3 tt__ImageStabilization ** SOAP_FMAC4 soap_in_PointerTott__ImageStabilization(struct soap*, const char*, tt__ImageStabilization **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImageStabilization(struct soap*, tt__ImageStabilization *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImageStabilization
#define soap_write_PointerTott__ImageStabilization(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImageStabilization(soap, data),0) || soap_put_PointerTott__ImageStabilization(soap, data, "tt:ImageStabilization", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImageStabilization ** SOAP_FMAC4 soap_get_PointerTott__ImageStabilization(struct soap*, tt__ImageStabilization **, const char*, const char*);

#ifndef soap_read_PointerTott__ImageStabilization
#define soap_read_PointerTott__ImageStabilization(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ImageStabilization(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImagingSettingsExtension20
#define SOAP_TYPE_PointerTott__ImagingSettingsExtension20 (1218)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImagingSettingsExtension20(struct soap*, tt__ImagingSettingsExtension20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImagingSettingsExtension20(struct soap*, const char *, int, tt__ImagingSettingsExtension20 *const*, const char *);
SOAP_FMAC3 tt__ImagingSettingsExtension20 ** SOAP_FMAC4 soap_in_PointerTott__ImagingSettingsExtension20(struct soap*, const char*, tt__ImagingSettingsExtension20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImagingSettingsExtension20(struct soap*, tt__ImagingSettingsExtension20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImagingSettingsExtension20
#define soap_write_PointerTott__ImagingSettingsExtension20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImagingSettingsExtension20(soap, data),0) || soap_put_PointerTott__ImagingSettingsExtension20(soap, data, "tt:ImagingSettingsExtension20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingSettingsExtension20 ** SOAP_FMAC4 soap_get_PointerTott__ImagingSettingsExtension20(struct soap*, tt__ImagingSettingsExtension20 **, const char*, const char*);

#ifndef soap_read_PointerTott__ImagingSettingsExtension20
#define soap_read_PointerTott__ImagingSettingsExtension20(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ImagingSettingsExtension20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__WhiteBalance20
#define SOAP_TYPE_PointerTott__WhiteBalance20 (1217)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__WhiteBalance20(struct soap*, tt__WhiteBalance20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__WhiteBalance20(struct soap*, const char *, int, tt__WhiteBalance20 *const*, const char *);
SOAP_FMAC3 tt__WhiteBalance20 ** SOAP_FMAC4 soap_in_PointerTott__WhiteBalance20(struct soap*, const char*, tt__WhiteBalance20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__WhiteBalance20(struct soap*, tt__WhiteBalance20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__WhiteBalance20
#define soap_write_PointerTott__WhiteBalance20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__WhiteBalance20(soap, data),0) || soap_put_PointerTott__WhiteBalance20(soap, data, "tt:WhiteBalance20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WhiteBalance20 ** SOAP_FMAC4 soap_get_PointerTott__WhiteBalance20(struct soap*, tt__WhiteBalance20 **, const char*, const char*);

#ifndef soap_read_PointerTott__WhiteBalance20
#define soap_read_PointerTott__WhiteBalance20(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__WhiteBalance20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__WideDynamicRange20
#define SOAP_TYPE_PointerTott__WideDynamicRange20 (1216)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__WideDynamicRange20(struct soap*, tt__WideDynamicRange20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__WideDynamicRange20(struct soap*, const char *, int, tt__WideDynamicRange20 *const*, const char *);
SOAP_FMAC3 tt__WideDynamicRange20 ** SOAP_FMAC4 soap_in_PointerTott__WideDynamicRange20(struct soap*, const char*, tt__WideDynamicRange20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__WideDynamicRange20(struct soap*, tt__WideDynamicRange20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__WideDynamicRange20
#define soap_write_PointerTott__WideDynamicRange20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__WideDynamicRange20(soap, data),0) || soap_put_PointerTott__WideDynamicRange20(soap, data, "tt:WideDynamicRange20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WideDynamicRange20 ** SOAP_FMAC4 soap_get_PointerTott__WideDynamicRange20(struct soap*, tt__WideDynamicRange20 **, const char*, const char*);

#ifndef soap_read_PointerTott__WideDynamicRange20
#define soap_read_PointerTott__WideDynamicRange20(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__WideDynamicRange20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FocusConfiguration20
#define SOAP_TYPE_PointerTott__FocusConfiguration20 (1215)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FocusConfiguration20(struct soap*, tt__FocusConfiguration20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FocusConfiguration20(struct soap*, const char *, int, tt__FocusConfiguration20 *const*, const char *);
SOAP_FMAC3 tt__FocusConfiguration20 ** SOAP_FMAC4 soap_in_PointerTott__FocusConfiguration20(struct soap*, const char*, tt__FocusConfiguration20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FocusConfiguration20(struct soap*, tt__FocusConfiguration20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FocusConfiguration20
#define soap_write_PointerTott__FocusConfiguration20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FocusConfiguration20(soap, data),0) || soap_put_PointerTott__FocusConfiguration20(soap, data, "tt:FocusConfiguration20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusConfiguration20 ** SOAP_FMAC4 soap_get_PointerTott__FocusConfiguration20(struct soap*, tt__FocusConfiguration20 **, const char*, const char*);

#ifndef soap_read_PointerTott__FocusConfiguration20
#define soap_read_PointerTott__FocusConfiguration20(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__FocusConfiguration20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Exposure20
#define SOAP_TYPE_PointerTott__Exposure20 (1214)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Exposure20(struct soap*, tt__Exposure20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Exposure20(struct soap*, const char *, int, tt__Exposure20 *const*, const char *);
SOAP_FMAC3 tt__Exposure20 ** SOAP_FMAC4 soap_in_PointerTott__Exposure20(struct soap*, const char*, tt__Exposure20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Exposure20(struct soap*, tt__Exposure20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Exposure20
#define soap_write_PointerTott__Exposure20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Exposure20(soap, data),0) || soap_put_PointerTott__Exposure20(soap, data, "tt:Exposure20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Exposure20 ** SOAP_FMAC4 soap_get_PointerTott__Exposure20(struct soap*, tt__Exposure20 **, const char*, const char*);

#ifndef soap_read_PointerTott__Exposure20
#define soap_read_PointerTott__Exposure20(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Exposure20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__BacklightCompensation20
#define SOAP_TYPE_PointerTott__BacklightCompensation20 (1213)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__BacklightCompensation20(struct soap*, tt__BacklightCompensation20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__BacklightCompensation20(struct soap*, const char *, int, tt__BacklightCompensation20 *const*, const char *);
SOAP_FMAC3 tt__BacklightCompensation20 ** SOAP_FMAC4 soap_in_PointerTott__BacklightCompensation20(struct soap*, const char*, tt__BacklightCompensation20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__BacklightCompensation20(struct soap*, tt__BacklightCompensation20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__BacklightCompensation20
#define soap_write_PointerTott__BacklightCompensation20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__BacklightCompensation20(soap, data),0) || soap_put_PointerTott__BacklightCompensation20(soap, data, "tt:BacklightCompensation20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__BacklightCompensation20 ** SOAP_FMAC4 soap_get_PointerTott__BacklightCompensation20(struct soap*, tt__BacklightCompensation20 **, const char*, const char*);

#ifndef soap_read_PointerTott__BacklightCompensation20
#define soap_read_PointerTott__BacklightCompensation20(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__BacklightCompensation20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FocusStatus20Extension
#define SOAP_TYPE_PointerTott__FocusStatus20Extension (1212)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FocusStatus20Extension(struct soap*, tt__FocusStatus20Extension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FocusStatus20Extension(struct soap*, const char *, int, tt__FocusStatus20Extension *const*, const char *);
SOAP_FMAC3 tt__FocusStatus20Extension ** SOAP_FMAC4 soap_in_PointerTott__FocusStatus20Extension(struct soap*, const char*, tt__FocusStatus20Extension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FocusStatus20Extension(struct soap*, tt__FocusStatus20Extension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FocusStatus20Extension
#define soap_write_PointerTott__FocusStatus20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FocusStatus20Extension(soap, data),0) || soap_put_PointerTott__FocusStatus20Extension(soap, data, "tt:FocusStatus20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusStatus20Extension ** SOAP_FMAC4 soap_get_PointerTott__FocusStatus20Extension(struct soap*, tt__FocusStatus20Extension **, const char*, const char*);

#ifndef soap_read_PointerTott__FocusStatus20Extension
#define soap_read_PointerTott__FocusStatus20Extension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__FocusStatus20Extension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImagingStatus20Extension
#define SOAP_TYPE_PointerTott__ImagingStatus20Extension (1211)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImagingStatus20Extension(struct soap*, tt__ImagingStatus20Extension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImagingStatus20Extension(struct soap*, const char *, int, tt__ImagingStatus20Extension *const*, const char *);
SOAP_FMAC3 tt__ImagingStatus20Extension ** SOAP_FMAC4 soap_in_PointerTott__ImagingStatus20Extension(struct soap*, const char*, tt__ImagingStatus20Extension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImagingStatus20Extension(struct soap*, tt__ImagingStatus20Extension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImagingStatus20Extension
#define soap_write_PointerTott__ImagingStatus20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImagingStatus20Extension(soap, data),0) || soap_put_PointerTott__ImagingStatus20Extension(soap, data, "tt:ImagingStatus20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingStatus20Extension ** SOAP_FMAC4 soap_get_PointerTott__ImagingStatus20Extension(struct soap*, tt__ImagingStatus20Extension **, const char*, const char*);

#ifndef soap_read_PointerTott__ImagingStatus20Extension
#define soap_read_PointerTott__ImagingStatus20Extension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ImagingStatus20Extension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FocusStatus20
#define SOAP_TYPE_PointerTott__FocusStatus20 (1210)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FocusStatus20(struct soap*, tt__FocusStatus20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FocusStatus20(struct soap*, const char *, int, tt__FocusStatus20 *const*, const char *);
SOAP_FMAC3 tt__FocusStatus20 ** SOAP_FMAC4 soap_in_PointerTott__FocusStatus20(struct soap*, const char*, tt__FocusStatus20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FocusStatus20(struct soap*, tt__FocusStatus20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FocusStatus20
#define soap_write_PointerTott__FocusStatus20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FocusStatus20(soap, data),0) || soap_put_PointerTott__FocusStatus20(soap, data, "tt:FocusStatus20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusStatus20 ** SOAP_FMAC4 soap_get_PointerTott__FocusStatus20(struct soap*, tt__FocusStatus20 **, const char*, const char*);

#ifndef soap_read_PointerTott__FocusStatus20
#define soap_read_PointerTott__FocusStatus20(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__FocusStatus20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ContinuousFocusOptions
#define SOAP_TYPE_PointerTott__ContinuousFocusOptions (1209)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ContinuousFocusOptions(struct soap*, tt__ContinuousFocusOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ContinuousFocusOptions(struct soap*, const char *, int, tt__ContinuousFocusOptions *const*, const char *);
SOAP_FMAC3 tt__ContinuousFocusOptions ** SOAP_FMAC4 soap_in_PointerTott__ContinuousFocusOptions(struct soap*, const char*, tt__ContinuousFocusOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ContinuousFocusOptions(struct soap*, tt__ContinuousFocusOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ContinuousFocusOptions
#define soap_write_PointerTott__ContinuousFocusOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ContinuousFocusOptions(soap, data),0) || soap_put_PointerTott__ContinuousFocusOptions(soap, data, "tt:ContinuousFocusOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ContinuousFocusOptions ** SOAP_FMAC4 soap_get_PointerTott__ContinuousFocusOptions(struct soap*, tt__ContinuousFocusOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__ContinuousFocusOptions
#define soap_read_PointerTott__ContinuousFocusOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ContinuousFocusOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RelativeFocusOptions
#define SOAP_TYPE_PointerTott__RelativeFocusOptions (1208)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RelativeFocusOptions(struct soap*, tt__RelativeFocusOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RelativeFocusOptions(struct soap*, const char *, int, tt__RelativeFocusOptions *const*, const char *);
SOAP_FMAC3 tt__RelativeFocusOptions ** SOAP_FMAC4 soap_in_PointerTott__RelativeFocusOptions(struct soap*, const char*, tt__RelativeFocusOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RelativeFocusOptions(struct soap*, tt__RelativeFocusOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RelativeFocusOptions
#define soap_write_PointerTott__RelativeFocusOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RelativeFocusOptions(soap, data),0) || soap_put_PointerTott__RelativeFocusOptions(soap, data, "tt:RelativeFocusOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RelativeFocusOptions ** SOAP_FMAC4 soap_get_PointerTott__RelativeFocusOptions(struct soap*, tt__RelativeFocusOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__RelativeFocusOptions
#define soap_read_PointerTott__RelativeFocusOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__RelativeFocusOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AbsoluteFocusOptions
#define SOAP_TYPE_PointerTott__AbsoluteFocusOptions (1207)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AbsoluteFocusOptions(struct soap*, tt__AbsoluteFocusOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AbsoluteFocusOptions(struct soap*, const char *, int, tt__AbsoluteFocusOptions *const*, const char *);
SOAP_FMAC3 tt__AbsoluteFocusOptions ** SOAP_FMAC4 soap_in_PointerTott__AbsoluteFocusOptions(struct soap*, const char*, tt__AbsoluteFocusOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AbsoluteFocusOptions(struct soap*, tt__AbsoluteFocusOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AbsoluteFocusOptions
#define soap_write_PointerTott__AbsoluteFocusOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AbsoluteFocusOptions(soap, data),0) || soap_put_PointerTott__AbsoluteFocusOptions(soap, data, "tt:AbsoluteFocusOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AbsoluteFocusOptions ** SOAP_FMAC4 soap_get_PointerTott__AbsoluteFocusOptions(struct soap*, tt__AbsoluteFocusOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__AbsoluteFocusOptions
#define soap_read_PointerTott__AbsoluteFocusOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AbsoluteFocusOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ContinuousFocus
#define SOAP_TYPE_PointerTott__ContinuousFocus (1206)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ContinuousFocus(struct soap*, tt__ContinuousFocus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ContinuousFocus(struct soap*, const char *, int, tt__ContinuousFocus *const*, const char *);
SOAP_FMAC3 tt__ContinuousFocus ** SOAP_FMAC4 soap_in_PointerTott__ContinuousFocus(struct soap*, const char*, tt__ContinuousFocus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ContinuousFocus(struct soap*, tt__ContinuousFocus *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ContinuousFocus
#define soap_write_PointerTott__ContinuousFocus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ContinuousFocus(soap, data),0) || soap_put_PointerTott__ContinuousFocus(soap, data, "tt:ContinuousFocus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ContinuousFocus ** SOAP_FMAC4 soap_get_PointerTott__ContinuousFocus(struct soap*, tt__ContinuousFocus **, const char*, const char*);

#ifndef soap_read_PointerTott__ContinuousFocus
#define soap_read_PointerTott__ContinuousFocus(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ContinuousFocus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RelativeFocus
#define SOAP_TYPE_PointerTott__RelativeFocus (1205)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RelativeFocus(struct soap*, tt__RelativeFocus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RelativeFocus(struct soap*, const char *, int, tt__RelativeFocus *const*, const char *);
SOAP_FMAC3 tt__RelativeFocus ** SOAP_FMAC4 soap_in_PointerTott__RelativeFocus(struct soap*, const char*, tt__RelativeFocus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RelativeFocus(struct soap*, tt__RelativeFocus *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RelativeFocus
#define soap_write_PointerTott__RelativeFocus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RelativeFocus(soap, data),0) || soap_put_PointerTott__RelativeFocus(soap, data, "tt:RelativeFocus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RelativeFocus ** SOAP_FMAC4 soap_get_PointerTott__RelativeFocus(struct soap*, tt__RelativeFocus **, const char*, const char*);

#ifndef soap_read_PointerTott__RelativeFocus
#define soap_read_PointerTott__RelativeFocus(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__RelativeFocus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AbsoluteFocus
#define SOAP_TYPE_PointerTott__AbsoluteFocus (1204)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AbsoluteFocus(struct soap*, tt__AbsoluteFocus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AbsoluteFocus(struct soap*, const char *, int, tt__AbsoluteFocus *const*, const char *);
SOAP_FMAC3 tt__AbsoluteFocus ** SOAP_FMAC4 soap_in_PointerTott__AbsoluteFocus(struct soap*, const char*, tt__AbsoluteFocus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AbsoluteFocus(struct soap*, tt__AbsoluteFocus *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AbsoluteFocus
#define soap_write_PointerTott__AbsoluteFocus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AbsoluteFocus(soap, data),0) || soap_put_PointerTott__AbsoluteFocus(soap, data, "tt:AbsoluteFocus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AbsoluteFocus ** SOAP_FMAC4 soap_get_PointerTott__AbsoluteFocus(struct soap*, tt__AbsoluteFocus **, const char*, const char*);

#ifndef soap_read_PointerTott__AbsoluteFocus
#define soap_read_PointerTott__AbsoluteFocus(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AbsoluteFocus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__WhiteBalanceOptions
#define SOAP_TYPE_PointerTott__WhiteBalanceOptions (1198)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__WhiteBalanceOptions(struct soap*, tt__WhiteBalanceOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__WhiteBalanceOptions(struct soap*, const char *, int, tt__WhiteBalanceOptions *const*, const char *);
SOAP_FMAC3 tt__WhiteBalanceOptions ** SOAP_FMAC4 soap_in_PointerTott__WhiteBalanceOptions(struct soap*, const char*, tt__WhiteBalanceOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__WhiteBalanceOptions(struct soap*, tt__WhiteBalanceOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__WhiteBalanceOptions
#define soap_write_PointerTott__WhiteBalanceOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__WhiteBalanceOptions(soap, data),0) || soap_put_PointerTott__WhiteBalanceOptions(soap, data, "tt:WhiteBalanceOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WhiteBalanceOptions ** SOAP_FMAC4 soap_get_PointerTott__WhiteBalanceOptions(struct soap*, tt__WhiteBalanceOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__WhiteBalanceOptions
#define soap_read_PointerTott__WhiteBalanceOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__WhiteBalanceOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__WideDynamicRangeOptions
#define SOAP_TYPE_PointerTott__WideDynamicRangeOptions (1197)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__WideDynamicRangeOptions(struct soap*, tt__WideDynamicRangeOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__WideDynamicRangeOptions(struct soap*, const char *, int, tt__WideDynamicRangeOptions *const*, const char *);
SOAP_FMAC3 tt__WideDynamicRangeOptions ** SOAP_FMAC4 soap_in_PointerTott__WideDynamicRangeOptions(struct soap*, const char*, tt__WideDynamicRangeOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__WideDynamicRangeOptions(struct soap*, tt__WideDynamicRangeOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__WideDynamicRangeOptions
#define soap_write_PointerTott__WideDynamicRangeOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__WideDynamicRangeOptions(soap, data),0) || soap_put_PointerTott__WideDynamicRangeOptions(soap, data, "tt:WideDynamicRangeOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WideDynamicRangeOptions ** SOAP_FMAC4 soap_get_PointerTott__WideDynamicRangeOptions(struct soap*, tt__WideDynamicRangeOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__WideDynamicRangeOptions
#define soap_read_PointerTott__WideDynamicRangeOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__WideDynamicRangeOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FocusOptions
#define SOAP_TYPE_PointerTott__FocusOptions (1195)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FocusOptions(struct soap*, tt__FocusOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FocusOptions(struct soap*, const char *, int, tt__FocusOptions *const*, const char *);
SOAP_FMAC3 tt__FocusOptions ** SOAP_FMAC4 soap_in_PointerTott__FocusOptions(struct soap*, const char*, tt__FocusOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FocusOptions(struct soap*, tt__FocusOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FocusOptions
#define soap_write_PointerTott__FocusOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FocusOptions(soap, data),0) || soap_put_PointerTott__FocusOptions(soap, data, "tt:FocusOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusOptions ** SOAP_FMAC4 soap_get_PointerTott__FocusOptions(struct soap*, tt__FocusOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__FocusOptions
#define soap_read_PointerTott__FocusOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__FocusOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ExposureOptions
#define SOAP_TYPE_PointerTott__ExposureOptions (1194)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ExposureOptions(struct soap*, tt__ExposureOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ExposureOptions(struct soap*, const char *, int, tt__ExposureOptions *const*, const char *);
SOAP_FMAC3 tt__ExposureOptions ** SOAP_FMAC4 soap_in_PointerTott__ExposureOptions(struct soap*, const char*, tt__ExposureOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ExposureOptions(struct soap*, tt__ExposureOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ExposureOptions
#define soap_write_PointerTott__ExposureOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ExposureOptions(soap, data),0) || soap_put_PointerTott__ExposureOptions(soap, data, "tt:ExposureOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ExposureOptions ** SOAP_FMAC4 soap_get_PointerTott__ExposureOptions(struct soap*, tt__ExposureOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__ExposureOptions
#define soap_read_PointerTott__ExposureOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ExposureOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__BacklightCompensationOptions
#define SOAP_TYPE_PointerTott__BacklightCompensationOptions (1193)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__BacklightCompensationOptions(struct soap*, tt__BacklightCompensationOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__BacklightCompensationOptions(struct soap*, const char *, int, tt__BacklightCompensationOptions *const*, const char *);
SOAP_FMAC3 tt__BacklightCompensationOptions ** SOAP_FMAC4 soap_in_PointerTott__BacklightCompensationOptions(struct soap*, const char*, tt__BacklightCompensationOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__BacklightCompensationOptions(struct soap*, tt__BacklightCompensationOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__BacklightCompensationOptions
#define soap_write_PointerTott__BacklightCompensationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__BacklightCompensationOptions(soap, data),0) || soap_put_PointerTott__BacklightCompensationOptions(soap, data, "tt:BacklightCompensationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__BacklightCompensationOptions ** SOAP_FMAC4 soap_get_PointerTott__BacklightCompensationOptions(struct soap*, tt__BacklightCompensationOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__BacklightCompensationOptions
#define soap_read_PointerTott__BacklightCompensationOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__BacklightCompensationOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Rectangle
#define SOAP_TYPE_PointerTott__Rectangle (1192)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Rectangle(struct soap*, tt__Rectangle *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Rectangle(struct soap*, const char *, int, tt__Rectangle *const*, const char *);
SOAP_FMAC3 tt__Rectangle ** SOAP_FMAC4 soap_in_PointerTott__Rectangle(struct soap*, const char*, tt__Rectangle **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Rectangle(struct soap*, tt__Rectangle *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Rectangle
#define soap_write_PointerTott__Rectangle(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Rectangle(soap, data),0) || soap_put_PointerTott__Rectangle(soap, data, "tt:Rectangle", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Rectangle ** SOAP_FMAC4 soap_get_PointerTott__Rectangle(struct soap*, tt__Rectangle **, const char*, const char*);

#ifndef soap_read_PointerTott__Rectangle
#define soap_read_PointerTott__Rectangle(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Rectangle(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImagingSettingsExtension
#define SOAP_TYPE_PointerTott__ImagingSettingsExtension (1191)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImagingSettingsExtension(struct soap*, tt__ImagingSettingsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImagingSettingsExtension(struct soap*, const char *, int, tt__ImagingSettingsExtension *const*, const char *);
SOAP_FMAC3 tt__ImagingSettingsExtension ** SOAP_FMAC4 soap_in_PointerTott__ImagingSettingsExtension(struct soap*, const char*, tt__ImagingSettingsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImagingSettingsExtension(struct soap*, tt__ImagingSettingsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImagingSettingsExtension
#define soap_write_PointerTott__ImagingSettingsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImagingSettingsExtension(soap, data),0) || soap_put_PointerTott__ImagingSettingsExtension(soap, data, "tt:ImagingSettingsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingSettingsExtension ** SOAP_FMAC4 soap_get_PointerTott__ImagingSettingsExtension(struct soap*, tt__ImagingSettingsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__ImagingSettingsExtension
#define soap_read_PointerTott__ImagingSettingsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ImagingSettingsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__WhiteBalance
#define SOAP_TYPE_PointerTott__WhiteBalance (1190)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__WhiteBalance(struct soap*, tt__WhiteBalance *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__WhiteBalance(struct soap*, const char *, int, tt__WhiteBalance *const*, const char *);
SOAP_FMAC3 tt__WhiteBalance ** SOAP_FMAC4 soap_in_PointerTott__WhiteBalance(struct soap*, const char*, tt__WhiteBalance **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__WhiteBalance(struct soap*, tt__WhiteBalance *const*, const char*, const char*);

#ifndef soap_write_PointerTott__WhiteBalance
#define soap_write_PointerTott__WhiteBalance(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__WhiteBalance(soap, data),0) || soap_put_PointerTott__WhiteBalance(soap, data, "tt:WhiteBalance", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WhiteBalance ** SOAP_FMAC4 soap_get_PointerTott__WhiteBalance(struct soap*, tt__WhiteBalance **, const char*, const char*);

#ifndef soap_read_PointerTott__WhiteBalance
#define soap_read_PointerTott__WhiteBalance(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__WhiteBalance(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__WideDynamicRange
#define SOAP_TYPE_PointerTott__WideDynamicRange (1189)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__WideDynamicRange(struct soap*, tt__WideDynamicRange *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__WideDynamicRange(struct soap*, const char *, int, tt__WideDynamicRange *const*, const char *);
SOAP_FMAC3 tt__WideDynamicRange ** SOAP_FMAC4 soap_in_PointerTott__WideDynamicRange(struct soap*, const char*, tt__WideDynamicRange **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__WideDynamicRange(struct soap*, tt__WideDynamicRange *const*, const char*, const char*);

#ifndef soap_write_PointerTott__WideDynamicRange
#define soap_write_PointerTott__WideDynamicRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__WideDynamicRange(soap, data),0) || soap_put_PointerTott__WideDynamicRange(soap, data, "tt:WideDynamicRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WideDynamicRange ** SOAP_FMAC4 soap_get_PointerTott__WideDynamicRange(struct soap*, tt__WideDynamicRange **, const char*, const char*);

#ifndef soap_read_PointerTott__WideDynamicRange
#define soap_read_PointerTott__WideDynamicRange(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__WideDynamicRange(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IrCutFilterMode
#define SOAP_TYPE_PointerTott__IrCutFilterMode (1188)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IrCutFilterMode(struct soap*, enum tt__IrCutFilterMode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IrCutFilterMode(struct soap*, const char *, int, enum tt__IrCutFilterMode *const*, const char *);
SOAP_FMAC3 enum tt__IrCutFilterMode ** SOAP_FMAC4 soap_in_PointerTott__IrCutFilterMode(struct soap*, const char*, enum tt__IrCutFilterMode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IrCutFilterMode(struct soap*, enum tt__IrCutFilterMode *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IrCutFilterMode
#define soap_write_PointerTott__IrCutFilterMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IrCutFilterMode(soap, data),0) || soap_put_PointerTott__IrCutFilterMode(soap, data, "tt:IrCutFilterMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__IrCutFilterMode ** SOAP_FMAC4 soap_get_PointerTott__IrCutFilterMode(struct soap*, enum tt__IrCutFilterMode **, const char*, const char*);

#ifndef soap_read_PointerTott__IrCutFilterMode
#define soap_read_PointerTott__IrCutFilterMode(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__IrCutFilterMode(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FocusConfiguration
#define SOAP_TYPE_PointerTott__FocusConfiguration (1187)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FocusConfiguration(struct soap*, tt__FocusConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FocusConfiguration(struct soap*, const char *, int, tt__FocusConfiguration *const*, const char *);
SOAP_FMAC3 tt__FocusConfiguration ** SOAP_FMAC4 soap_in_PointerTott__FocusConfiguration(struct soap*, const char*, tt__FocusConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FocusConfiguration(struct soap*, tt__FocusConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FocusConfiguration
#define soap_write_PointerTott__FocusConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FocusConfiguration(soap, data),0) || soap_put_PointerTott__FocusConfiguration(soap, data, "tt:FocusConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusConfiguration ** SOAP_FMAC4 soap_get_PointerTott__FocusConfiguration(struct soap*, tt__FocusConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__FocusConfiguration
#define soap_read_PointerTott__FocusConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__FocusConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Exposure
#define SOAP_TYPE_PointerTott__Exposure (1186)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Exposure(struct soap*, tt__Exposure *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Exposure(struct soap*, const char *, int, tt__Exposure *const*, const char *);
SOAP_FMAC3 tt__Exposure ** SOAP_FMAC4 soap_in_PointerTott__Exposure(struct soap*, const char*, tt__Exposure **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Exposure(struct soap*, tt__Exposure *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Exposure
#define soap_write_PointerTott__Exposure(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Exposure(soap, data),0) || soap_put_PointerTott__Exposure(soap, data, "tt:Exposure", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Exposure ** SOAP_FMAC4 soap_get_PointerTott__Exposure(struct soap*, tt__Exposure **, const char*, const char*);

#ifndef soap_read_PointerTott__Exposure
#define soap_read_PointerTott__Exposure(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Exposure(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTofloat
#define SOAP_TYPE_PointerTofloat (1185)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTofloat(struct soap*, float *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTofloat(struct soap*, const char *, int, float *const*, const char *);
SOAP_FMAC3 float ** SOAP_FMAC4 soap_in_PointerTofloat(struct soap*, const char*, float **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTofloat(struct soap*, float *const*, const char*, const char*);

#ifndef soap_write_PointerTofloat
#define soap_write_PointerTofloat(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTofloat(soap, data),0) || soap_put_PointerTofloat(soap, data, "float", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 float ** SOAP_FMAC4 soap_get_PointerTofloat(struct soap*, float **, const char*, const char*);

#ifndef soap_read_PointerTofloat
#define soap_read_PointerTofloat(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTofloat(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__BacklightCompensation
#define SOAP_TYPE_PointerTott__BacklightCompensation (1184)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__BacklightCompensation(struct soap*, tt__BacklightCompensation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__BacklightCompensation(struct soap*, const char *, int, tt__BacklightCompensation *const*, const char *);
SOAP_FMAC3 tt__BacklightCompensation ** SOAP_FMAC4 soap_in_PointerTott__BacklightCompensation(struct soap*, const char*, tt__BacklightCompensation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__BacklightCompensation(struct soap*, tt__BacklightCompensation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__BacklightCompensation
#define soap_write_PointerTott__BacklightCompensation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__BacklightCompensation(soap, data),0) || soap_put_PointerTott__BacklightCompensation(soap, data, "tt:BacklightCompensation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__BacklightCompensation ** SOAP_FMAC4 soap_get_PointerTott__BacklightCompensation(struct soap*, tt__BacklightCompensation **, const char*, const char*);

#ifndef soap_read_PointerTott__BacklightCompensation
#define soap_read_PointerTott__BacklightCompensation(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__BacklightCompensation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FocusStatus
#define SOAP_TYPE_PointerTott__FocusStatus (1183)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FocusStatus(struct soap*, tt__FocusStatus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FocusStatus(struct soap*, const char *, int, tt__FocusStatus *const*, const char *);
SOAP_FMAC3 tt__FocusStatus ** SOAP_FMAC4 soap_in_PointerTott__FocusStatus(struct soap*, const char*, tt__FocusStatus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FocusStatus(struct soap*, tt__FocusStatus *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FocusStatus
#define soap_write_PointerTott__FocusStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FocusStatus(soap, data),0) || soap_put_PointerTott__FocusStatus(soap, data, "tt:FocusStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusStatus ** SOAP_FMAC4 soap_get_PointerTott__FocusStatus(struct soap*, tt__FocusStatus **, const char*, const char*);

#ifndef soap_read_PointerTott__FocusStatus
#define soap_read_PointerTott__FocusStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__FocusStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourStartingConditionOptionsExtension
#define SOAP_TYPE_PointerTott__PTZPresetTourStartingConditionOptionsExtension (1182)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourStartingConditionOptionsExtension(struct soap*, tt__PTZPresetTourStartingConditionOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourStartingConditionOptionsExtension(struct soap*, const char *, int, tt__PTZPresetTourStartingConditionOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourStartingConditionOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourStartingConditionOptionsExtension(struct soap*, const char*, tt__PTZPresetTourStartingConditionOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourStartingConditionOptionsExtension(struct soap*, tt__PTZPresetTourStartingConditionOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourStartingConditionOptionsExtension
#define soap_write_PointerTott__PTZPresetTourStartingConditionOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourStartingConditionOptionsExtension(soap, data),0) || soap_put_PointerTott__PTZPresetTourStartingConditionOptionsExtension(soap, data, "tt:PTZPresetTourStartingConditionOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourStartingConditionOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourStartingConditionOptionsExtension(struct soap*, tt__PTZPresetTourStartingConditionOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourStartingConditionOptionsExtension
#define soap_read_PointerTott__PTZPresetTourStartingConditionOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourStartingConditionOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourPresetDetailOptionsExtension
#define SOAP_TYPE_PointerTott__PTZPresetTourPresetDetailOptionsExtension (1180)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourPresetDetailOptionsExtension(struct soap*, tt__PTZPresetTourPresetDetailOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourPresetDetailOptionsExtension(struct soap*, const char *, int, tt__PTZPresetTourPresetDetailOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourPresetDetailOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourPresetDetailOptionsExtension(struct soap*, const char*, tt__PTZPresetTourPresetDetailOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourPresetDetailOptionsExtension(struct soap*, tt__PTZPresetTourPresetDetailOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourPresetDetailOptionsExtension
#define soap_write_PointerTott__PTZPresetTourPresetDetailOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourPresetDetailOptionsExtension(soap, data),0) || soap_put_PointerTott__PTZPresetTourPresetDetailOptionsExtension(soap, data, "tt:PTZPresetTourPresetDetailOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourPresetDetailOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourPresetDetailOptionsExtension(struct soap*, tt__PTZPresetTourPresetDetailOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourPresetDetailOptionsExtension
#define soap_read_PointerTott__PTZPresetTourPresetDetailOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourPresetDetailOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourPresetDetailOptions
#define SOAP_TYPE_PointerTott__PTZPresetTourPresetDetailOptions (1179)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourPresetDetailOptions(struct soap*, tt__PTZPresetTourPresetDetailOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourPresetDetailOptions(struct soap*, const char *, int, tt__PTZPresetTourPresetDetailOptions *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourPresetDetailOptions ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourPresetDetailOptions(struct soap*, const char*, tt__PTZPresetTourPresetDetailOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourPresetDetailOptions(struct soap*, tt__PTZPresetTourPresetDetailOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourPresetDetailOptions
#define soap_write_PointerTott__PTZPresetTourPresetDetailOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourPresetDetailOptions(soap, data),0) || soap_put_PointerTott__PTZPresetTourPresetDetailOptions(soap, data, "tt:PTZPresetTourPresetDetailOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourPresetDetailOptions ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourPresetDetailOptions(struct soap*, tt__PTZPresetTourPresetDetailOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourPresetDetailOptions
#define soap_read_PointerTott__PTZPresetTourPresetDetailOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourPresetDetailOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourSpotOptions
#define SOAP_TYPE_PointerTott__PTZPresetTourSpotOptions (1178)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourSpotOptions(struct soap*, tt__PTZPresetTourSpotOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourSpotOptions(struct soap*, const char *, int, tt__PTZPresetTourSpotOptions *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourSpotOptions ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourSpotOptions(struct soap*, const char*, tt__PTZPresetTourSpotOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourSpotOptions(struct soap*, tt__PTZPresetTourSpotOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourSpotOptions
#define soap_write_PointerTott__PTZPresetTourSpotOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourSpotOptions(soap, data),0) || soap_put_PointerTott__PTZPresetTourSpotOptions(soap, data, "tt:PTZPresetTourSpotOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourSpotOptions ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourSpotOptions(struct soap*, tt__PTZPresetTourSpotOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourSpotOptions
#define soap_read_PointerTott__PTZPresetTourSpotOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourSpotOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourStartingConditionOptions
#define SOAP_TYPE_PointerTott__PTZPresetTourStartingConditionOptions (1177)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourStartingConditionOptions(struct soap*, tt__PTZPresetTourStartingConditionOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourStartingConditionOptions(struct soap*, const char *, int, tt__PTZPresetTourStartingConditionOptions *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourStartingConditionOptions ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourStartingConditionOptions(struct soap*, const char*, tt__PTZPresetTourStartingConditionOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourStartingConditionOptions(struct soap*, tt__PTZPresetTourStartingConditionOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourStartingConditionOptions
#define soap_write_PointerTott__PTZPresetTourStartingConditionOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourStartingConditionOptions(soap, data),0) || soap_put_PointerTott__PTZPresetTourStartingConditionOptions(soap, data, "tt:PTZPresetTourStartingConditionOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourStartingConditionOptions ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourStartingConditionOptions(struct soap*, tt__PTZPresetTourStartingConditionOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourStartingConditionOptions
#define soap_read_PointerTott__PTZPresetTourStartingConditionOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourStartingConditionOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourStartingConditionExtension
#define SOAP_TYPE_PointerTott__PTZPresetTourStartingConditionExtension (1176)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourStartingConditionExtension(struct soap*, tt__PTZPresetTourStartingConditionExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourStartingConditionExtension(struct soap*, const char *, int, tt__PTZPresetTourStartingConditionExtension *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourStartingConditionExtension ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourStartingConditionExtension(struct soap*, const char*, tt__PTZPresetTourStartingConditionExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourStartingConditionExtension(struct soap*, tt__PTZPresetTourStartingConditionExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourStartingConditionExtension
#define soap_write_PointerTott__PTZPresetTourStartingConditionExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourStartingConditionExtension(soap, data),0) || soap_put_PointerTott__PTZPresetTourStartingConditionExtension(soap, data, "tt:PTZPresetTourStartingConditionExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourStartingConditionExtension ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourStartingConditionExtension(struct soap*, tt__PTZPresetTourStartingConditionExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourStartingConditionExtension
#define soap_read_PointerTott__PTZPresetTourStartingConditionExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourStartingConditionExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourDirection
#define SOAP_TYPE_PointerTott__PTZPresetTourDirection (1175)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourDirection(struct soap*, enum tt__PTZPresetTourDirection *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourDirection(struct soap*, const char *, int, enum tt__PTZPresetTourDirection *const*, const char *);
SOAP_FMAC3 enum tt__PTZPresetTourDirection ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourDirection(struct soap*, const char*, enum tt__PTZPresetTourDirection **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourDirection(struct soap*, enum tt__PTZPresetTourDirection *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourDirection
#define soap_write_PointerTott__PTZPresetTourDirection(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourDirection(soap, data),0) || soap_put_PointerTott__PTZPresetTourDirection(soap, data, "tt:PTZPresetTourDirection", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__PTZPresetTourDirection ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourDirection(struct soap*, enum tt__PTZPresetTourDirection **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourDirection
#define soap_read_PointerTott__PTZPresetTourDirection(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourDirection(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourStatusExtension
#define SOAP_TYPE_PointerTott__PTZPresetTourStatusExtension (1174)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourStatusExtension(struct soap*, tt__PTZPresetTourStatusExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourStatusExtension(struct soap*, const char *, int, tt__PTZPresetTourStatusExtension *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourStatusExtension ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourStatusExtension(struct soap*, const char*, tt__PTZPresetTourStatusExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourStatusExtension(struct soap*, tt__PTZPresetTourStatusExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourStatusExtension
#define soap_write_PointerTott__PTZPresetTourStatusExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourStatusExtension(soap, data),0) || soap_put_PointerTott__PTZPresetTourStatusExtension(soap, data, "tt:PTZPresetTourStatusExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourStatusExtension ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourStatusExtension(struct soap*, tt__PTZPresetTourStatusExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourStatusExtension
#define soap_read_PointerTott__PTZPresetTourStatusExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourStatusExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourTypeExtension
#define SOAP_TYPE_PointerTott__PTZPresetTourTypeExtension (1172)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourTypeExtension(struct soap*, tt__PTZPresetTourTypeExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourTypeExtension(struct soap*, const char *, int, tt__PTZPresetTourTypeExtension *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourTypeExtension ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourTypeExtension(struct soap*, const char*, tt__PTZPresetTourTypeExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourTypeExtension(struct soap*, tt__PTZPresetTourTypeExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourTypeExtension
#define soap_write_PointerTott__PTZPresetTourTypeExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourTypeExtension(soap, data),0) || soap_put_PointerTott__PTZPresetTourTypeExtension(soap, data, "tt:PTZPresetTourTypeExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourTypeExtension ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourTypeExtension(struct soap*, tt__PTZPresetTourTypeExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourTypeExtension
#define soap_read_PointerTott__PTZPresetTourTypeExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourTypeExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourSpotExtension
#define SOAP_TYPE_PointerTott__PTZPresetTourSpotExtension (1171)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourSpotExtension(struct soap*, tt__PTZPresetTourSpotExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourSpotExtension(struct soap*, const char *, int, tt__PTZPresetTourSpotExtension *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourSpotExtension ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourSpotExtension(struct soap*, const char*, tt__PTZPresetTourSpotExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourSpotExtension(struct soap*, tt__PTZPresetTourSpotExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourSpotExtension
#define soap_write_PointerTott__PTZPresetTourSpotExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourSpotExtension(soap, data),0) || soap_put_PointerTott__PTZPresetTourSpotExtension(soap, data, "tt:PTZPresetTourSpotExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourSpotExtension ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourSpotExtension(struct soap*, tt__PTZPresetTourSpotExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourSpotExtension
#define soap_read_PointerTott__PTZPresetTourSpotExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourSpotExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZSpeed
#define SOAP_TYPE_PointerTott__PTZSpeed (1170)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZSpeed(struct soap*, tt__PTZSpeed *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZSpeed(struct soap*, const char *, int, tt__PTZSpeed *const*, const char *);
SOAP_FMAC3 tt__PTZSpeed ** SOAP_FMAC4 soap_in_PointerTott__PTZSpeed(struct soap*, const char*, tt__PTZSpeed **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZSpeed(struct soap*, tt__PTZSpeed *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZSpeed
#define soap_write_PointerTott__PTZSpeed(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZSpeed(soap, data),0) || soap_put_PointerTott__PTZSpeed(soap, data, "tt:PTZSpeed", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZSpeed ** SOAP_FMAC4 soap_get_PointerTott__PTZSpeed(struct soap*, tt__PTZSpeed **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZSpeed
#define soap_read_PointerTott__PTZSpeed(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZSpeed(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourPresetDetail
#define SOAP_TYPE_PointerTott__PTZPresetTourPresetDetail (1169)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourPresetDetail(struct soap*, tt__PTZPresetTourPresetDetail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourPresetDetail(struct soap*, const char *, int, tt__PTZPresetTourPresetDetail *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourPresetDetail ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourPresetDetail(struct soap*, const char*, tt__PTZPresetTourPresetDetail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourPresetDetail(struct soap*, tt__PTZPresetTourPresetDetail *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourPresetDetail
#define soap_write_PointerTott__PTZPresetTourPresetDetail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourPresetDetail(soap, data),0) || soap_put_PointerTott__PTZPresetTourPresetDetail(soap, data, "tt:PTZPresetTourPresetDetail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourPresetDetail ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourPresetDetail(struct soap*, tt__PTZPresetTourPresetDetail **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourPresetDetail
#define soap_read_PointerTott__PTZPresetTourPresetDetail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourPresetDetail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourExtension
#define SOAP_TYPE_PointerTott__PTZPresetTourExtension (1168)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourExtension(struct soap*, tt__PTZPresetTourExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourExtension(struct soap*, const char *, int, tt__PTZPresetTourExtension *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourExtension ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourExtension(struct soap*, const char*, tt__PTZPresetTourExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourExtension(struct soap*, tt__PTZPresetTourExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourExtension
#define soap_write_PointerTott__PTZPresetTourExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourExtension(soap, data),0) || soap_put_PointerTott__PTZPresetTourExtension(soap, data, "tt:PTZPresetTourExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourExtension ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourExtension(struct soap*, tt__PTZPresetTourExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourExtension
#define soap_read_PointerTott__PTZPresetTourExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourSpot
#define SOAP_TYPE_PointerTott__PTZPresetTourSpot (1166)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourSpot(struct soap*, tt__PTZPresetTourSpot *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourSpot(struct soap*, const char *, int, tt__PTZPresetTourSpot *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourSpot ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourSpot(struct soap*, const char*, tt__PTZPresetTourSpot **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourSpot(struct soap*, tt__PTZPresetTourSpot *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourSpot
#define soap_write_PointerTott__PTZPresetTourSpot(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourSpot(soap, data),0) || soap_put_PointerTott__PTZPresetTourSpot(soap, data, "tt:PTZPresetTourSpot", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourSpot ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourSpot(struct soap*, tt__PTZPresetTourSpot **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourSpot
#define soap_read_PointerTott__PTZPresetTourSpot(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourSpot(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourStartingCondition
#define SOAP_TYPE_PointerTott__PTZPresetTourStartingCondition (1165)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourStartingCondition(struct soap*, tt__PTZPresetTourStartingCondition *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourStartingCondition(struct soap*, const char *, int, tt__PTZPresetTourStartingCondition *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourStartingCondition ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourStartingCondition(struct soap*, const char*, tt__PTZPresetTourStartingCondition **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourStartingCondition(struct soap*, tt__PTZPresetTourStartingCondition *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourStartingCondition
#define soap_write_PointerTott__PTZPresetTourStartingCondition(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourStartingCondition(soap, data),0) || soap_put_PointerTott__PTZPresetTourStartingCondition(soap, data, "tt:PTZPresetTourStartingCondition", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourStartingCondition ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourStartingCondition(struct soap*, tt__PTZPresetTourStartingCondition **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourStartingCondition
#define soap_read_PointerTott__PTZPresetTourStartingCondition(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourStartingCondition(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourStatus
#define SOAP_TYPE_PointerTott__PTZPresetTourStatus (1164)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourStatus(struct soap*, tt__PTZPresetTourStatus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourStatus(struct soap*, const char *, int, tt__PTZPresetTourStatus *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourStatus ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourStatus(struct soap*, const char*, tt__PTZPresetTourStatus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourStatus(struct soap*, tt__PTZPresetTourStatus *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourStatus
#define soap_write_PointerTott__PTZPresetTourStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourStatus(soap, data),0) || soap_put_PointerTott__PTZPresetTourStatus(soap, data, "tt:PTZPresetTourStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourStatus ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourStatus(struct soap*, tt__PTZPresetTourStatus **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourStatus
#define soap_read_PointerTott__PTZPresetTourStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MoveStatus
#define SOAP_TYPE_PointerTott__MoveStatus (1163)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MoveStatus(struct soap*, enum tt__MoveStatus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MoveStatus(struct soap*, const char *, int, enum tt__MoveStatus *const*, const char *);
SOAP_FMAC3 enum tt__MoveStatus ** SOAP_FMAC4 soap_in_PointerTott__MoveStatus(struct soap*, const char*, enum tt__MoveStatus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MoveStatus(struct soap*, enum tt__MoveStatus *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MoveStatus
#define soap_write_PointerTott__MoveStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MoveStatus(soap, data),0) || soap_put_PointerTott__MoveStatus(soap, data, "tt:MoveStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__MoveStatus ** SOAP_FMAC4 soap_get_PointerTott__MoveStatus(struct soap*, enum tt__MoveStatus **, const char*, const char*);

#ifndef soap_read_PointerTott__MoveStatus
#define soap_read_PointerTott__MoveStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__MoveStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Name
#define SOAP_TYPE_PointerTott__Name (1162)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Name(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Name(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTott__Name(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Name(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Name
#define soap_write_PointerTott__Name(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Name(soap, data),0) || soap_put_PointerTott__Name(soap, data, "tt:Name", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTott__Name(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTott__Name
#define soap_read_PointerTott__Name(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Name(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZMoveStatus
#define SOAP_TYPE_PointerTott__PTZMoveStatus (1161)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZMoveStatus(struct soap*, tt__PTZMoveStatus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZMoveStatus(struct soap*, const char *, int, tt__PTZMoveStatus *const*, const char *);
SOAP_FMAC3 tt__PTZMoveStatus ** SOAP_FMAC4 soap_in_PointerTott__PTZMoveStatus(struct soap*, const char*, tt__PTZMoveStatus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZMoveStatus(struct soap*, tt__PTZMoveStatus *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZMoveStatus
#define soap_write_PointerTott__PTZMoveStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZMoveStatus(soap, data),0) || soap_put_PointerTott__PTZMoveStatus(soap, data, "tt:PTZMoveStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZMoveStatus ** SOAP_FMAC4 soap_get_PointerTott__PTZMoveStatus(struct soap*, tt__PTZMoveStatus **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZMoveStatus
#define soap_read_PointerTott__PTZMoveStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZMoveStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZVector
#define SOAP_TYPE_PointerTott__PTZVector (1160)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZVector(struct soap*, tt__PTZVector *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZVector(struct soap*, const char *, int, tt__PTZVector *const*, const char *);
SOAP_FMAC3 tt__PTZVector ** SOAP_FMAC4 soap_in_PointerTott__PTZVector(struct soap*, const char*, tt__PTZVector **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZVector(struct soap*, tt__PTZVector *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZVector
#define soap_write_PointerTott__PTZVector(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZVector(soap, data),0) || soap_put_PointerTott__PTZVector(soap, data, "tt:PTZVector", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZVector ** SOAP_FMAC4 soap_get_PointerTott__PTZVector(struct soap*, tt__PTZVector **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZVector
#define soap_read_PointerTott__PTZVector(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZVector(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Vector1D
#define SOAP_TYPE_PointerTott__Vector1D (1159)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Vector1D(struct soap*, tt__Vector1D *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Vector1D(struct soap*, const char *, int, tt__Vector1D *const*, const char *);
SOAP_FMAC3 tt__Vector1D ** SOAP_FMAC4 soap_in_PointerTott__Vector1D(struct soap*, const char*, tt__Vector1D **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Vector1D(struct soap*, tt__Vector1D *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Vector1D
#define soap_write_PointerTott__Vector1D(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Vector1D(soap, data),0) || soap_put_PointerTott__Vector1D(soap, data, "tt:Vector1D", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Vector1D ** SOAP_FMAC4 soap_get_PointerTott__Vector1D(struct soap*, tt__Vector1D **, const char*, const char*);

#ifndef soap_read_PointerTott__Vector1D
#define soap_read_PointerTott__Vector1D(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Vector1D(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Vector2D
#define SOAP_TYPE_PointerTott__Vector2D (1158)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Vector2D(struct soap*, tt__Vector2D *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Vector2D(struct soap*, const char *, int, tt__Vector2D *const*, const char *);
SOAP_FMAC3 tt__Vector2D ** SOAP_FMAC4 soap_in_PointerTott__Vector2D(struct soap*, const char*, tt__Vector2D **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Vector2D(struct soap*, tt__Vector2D *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Vector2D
#define soap_write_PointerTott__Vector2D(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Vector2D(soap, data),0) || soap_put_PointerTott__Vector2D(soap, data, "tt:Vector2D", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Vector2D ** SOAP_FMAC4 soap_get_PointerTott__Vector2D(struct soap*, tt__Vector2D **, const char*, const char*);

#ifndef soap_read_PointerTott__Vector2D
#define soap_read_PointerTott__Vector2D(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Vector2D(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FloatRange
#define SOAP_TYPE_PointerTott__FloatRange (1157)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FloatRange(struct soap*, tt__FloatRange *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FloatRange(struct soap*, const char *, int, tt__FloatRange *const*, const char *);
SOAP_FMAC3 tt__FloatRange ** SOAP_FMAC4 soap_in_PointerTott__FloatRange(struct soap*, const char*, tt__FloatRange **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FloatRange(struct soap*, tt__FloatRange *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FloatRange
#define soap_write_PointerTott__FloatRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FloatRange(soap, data),0) || soap_put_PointerTott__FloatRange(soap, data, "tt:FloatRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FloatRange ** SOAP_FMAC4 soap_get_PointerTott__FloatRange(struct soap*, tt__FloatRange **, const char*, const char*);

#ifndef soap_read_PointerTott__FloatRange
#define soap_read_PointerTott__FloatRange(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__FloatRange(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZSpacesExtension
#define SOAP_TYPE_PointerTott__PTZSpacesExtension (1156)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZSpacesExtension(struct soap*, tt__PTZSpacesExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZSpacesExtension(struct soap*, const char *, int, tt__PTZSpacesExtension *const*, const char *);
SOAP_FMAC3 tt__PTZSpacesExtension ** SOAP_FMAC4 soap_in_PointerTott__PTZSpacesExtension(struct soap*, const char*, tt__PTZSpacesExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZSpacesExtension(struct soap*, tt__PTZSpacesExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZSpacesExtension
#define soap_write_PointerTott__PTZSpacesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZSpacesExtension(soap, data),0) || soap_put_PointerTott__PTZSpacesExtension(soap, data, "tt:PTZSpacesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZSpacesExtension ** SOAP_FMAC4 soap_get_PointerTott__PTZSpacesExtension(struct soap*, tt__PTZSpacesExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZSpacesExtension
#define soap_read_PointerTott__PTZSpacesExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZSpacesExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Space1DDescription
#define SOAP_TYPE_PointerTott__Space1DDescription (1153)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Space1DDescription(struct soap*, tt__Space1DDescription *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Space1DDescription(struct soap*, const char *, int, tt__Space1DDescription *const*, const char *);
SOAP_FMAC3 tt__Space1DDescription ** SOAP_FMAC4 soap_in_PointerTott__Space1DDescription(struct soap*, const char*, tt__Space1DDescription **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Space1DDescription(struct soap*, tt__Space1DDescription *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Space1DDescription
#define soap_write_PointerTott__Space1DDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Space1DDescription(soap, data),0) || soap_put_PointerTott__Space1DDescription(soap, data, "tt:Space1DDescription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Space1DDescription ** SOAP_FMAC4 soap_get_PointerTott__Space1DDescription(struct soap*, tt__Space1DDescription **, const char*, const char*);

#ifndef soap_read_PointerTott__Space1DDescription
#define soap_read_PointerTott__Space1DDescription(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Space1DDescription(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Space2DDescription
#define SOAP_TYPE_PointerTott__Space2DDescription (1152)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Space2DDescription(struct soap*, tt__Space2DDescription *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Space2DDescription(struct soap*, const char *, int, tt__Space2DDescription *const*, const char *);
SOAP_FMAC3 tt__Space2DDescription ** SOAP_FMAC4 soap_in_PointerTott__Space2DDescription(struct soap*, const char*, tt__Space2DDescription **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Space2DDescription(struct soap*, tt__Space2DDescription *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Space2DDescription
#define soap_write_PointerTott__Space2DDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Space2DDescription(soap, data),0) || soap_put_PointerTott__Space2DDescription(soap, data, "tt:Space2DDescription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Space2DDescription ** SOAP_FMAC4 soap_get_PointerTott__Space2DDescription(struct soap*, tt__Space2DDescription **, const char*, const char*);

#ifndef soap_read_PointerTott__Space2DDescription
#define soap_read_PointerTott__Space2DDescription(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Space2DDescription(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ReverseOptionsExtension
#define SOAP_TYPE_PointerTott__ReverseOptionsExtension (1151)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ReverseOptionsExtension(struct soap*, tt__ReverseOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ReverseOptionsExtension(struct soap*, const char *, int, tt__ReverseOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__ReverseOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__ReverseOptionsExtension(struct soap*, const char*, tt__ReverseOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ReverseOptionsExtension(struct soap*, tt__ReverseOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ReverseOptionsExtension
#define soap_write_PointerTott__ReverseOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ReverseOptionsExtension(soap, data),0) || soap_put_PointerTott__ReverseOptionsExtension(soap, data, "tt:ReverseOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ReverseOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__ReverseOptionsExtension(struct soap*, tt__ReverseOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__ReverseOptionsExtension
#define soap_read_PointerTott__ReverseOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ReverseOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__EFlipOptionsExtension
#define SOAP_TYPE_PointerTott__EFlipOptionsExtension (1149)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__EFlipOptionsExtension(struct soap*, tt__EFlipOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__EFlipOptionsExtension(struct soap*, const char *, int, tt__EFlipOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__EFlipOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__EFlipOptionsExtension(struct soap*, const char*, tt__EFlipOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__EFlipOptionsExtension(struct soap*, tt__EFlipOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__EFlipOptionsExtension
#define soap_write_PointerTott__EFlipOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__EFlipOptionsExtension(soap, data),0) || soap_put_PointerTott__EFlipOptionsExtension(soap, data, "tt:EFlipOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EFlipOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__EFlipOptionsExtension(struct soap*, tt__EFlipOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__EFlipOptionsExtension
#define soap_read_PointerTott__EFlipOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__EFlipOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTControlDirectionOptionsExtension
#define SOAP_TYPE_PointerTott__PTControlDirectionOptionsExtension (1147)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTControlDirectionOptionsExtension(struct soap*, tt__PTControlDirectionOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTControlDirectionOptionsExtension(struct soap*, const char *, int, tt__PTControlDirectionOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__PTControlDirectionOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__PTControlDirectionOptionsExtension(struct soap*, const char*, tt__PTControlDirectionOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTControlDirectionOptionsExtension(struct soap*, tt__PTControlDirectionOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTControlDirectionOptionsExtension
#define soap_write_PointerTott__PTControlDirectionOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTControlDirectionOptionsExtension(soap, data),0) || soap_put_PointerTott__PTControlDirectionOptionsExtension(soap, data, "tt:PTControlDirectionOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTControlDirectionOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__PTControlDirectionOptionsExtension(struct soap*, tt__PTControlDirectionOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTControlDirectionOptionsExtension
#define soap_read_PointerTott__PTControlDirectionOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTControlDirectionOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ReverseOptions
#define SOAP_TYPE_PointerTott__ReverseOptions (1146)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ReverseOptions(struct soap*, tt__ReverseOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ReverseOptions(struct soap*, const char *, int, tt__ReverseOptions *const*, const char *);
SOAP_FMAC3 tt__ReverseOptions ** SOAP_FMAC4 soap_in_PointerTott__ReverseOptions(struct soap*, const char*, tt__ReverseOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ReverseOptions(struct soap*, tt__ReverseOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ReverseOptions
#define soap_write_PointerTott__ReverseOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ReverseOptions(soap, data),0) || soap_put_PointerTott__ReverseOptions(soap, data, "tt:ReverseOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ReverseOptions ** SOAP_FMAC4 soap_get_PointerTott__ReverseOptions(struct soap*, tt__ReverseOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__ReverseOptions
#define soap_read_PointerTott__ReverseOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ReverseOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__EFlipOptions
#define SOAP_TYPE_PointerTott__EFlipOptions (1145)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__EFlipOptions(struct soap*, tt__EFlipOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__EFlipOptions(struct soap*, const char *, int, tt__EFlipOptions *const*, const char *);
SOAP_FMAC3 tt__EFlipOptions ** SOAP_FMAC4 soap_in_PointerTott__EFlipOptions(struct soap*, const char*, tt__EFlipOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__EFlipOptions(struct soap*, tt__EFlipOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__EFlipOptions
#define soap_write_PointerTott__EFlipOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__EFlipOptions(soap, data),0) || soap_put_PointerTott__EFlipOptions(soap, data, "tt:EFlipOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EFlipOptions ** SOAP_FMAC4 soap_get_PointerTott__EFlipOptions(struct soap*, tt__EFlipOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__EFlipOptions
#define soap_read_PointerTott__EFlipOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__EFlipOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZConfigurationOptions2
#define SOAP_TYPE_PointerTott__PTZConfigurationOptions2 (1144)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZConfigurationOptions2(struct soap*, tt__PTZConfigurationOptions2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZConfigurationOptions2(struct soap*, const char *, int, tt__PTZConfigurationOptions2 *const*, const char *);
SOAP_FMAC3 tt__PTZConfigurationOptions2 ** SOAP_FMAC4 soap_in_PointerTott__PTZConfigurationOptions2(struct soap*, const char*, tt__PTZConfigurationOptions2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZConfigurationOptions2(struct soap*, tt__PTZConfigurationOptions2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZConfigurationOptions2
#define soap_write_PointerTott__PTZConfigurationOptions2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZConfigurationOptions2(soap, data),0) || soap_put_PointerTott__PTZConfigurationOptions2(soap, data, "tt:PTZConfigurationOptions2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZConfigurationOptions2 ** SOAP_FMAC4 soap_get_PointerTott__PTZConfigurationOptions2(struct soap*, tt__PTZConfigurationOptions2 **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZConfigurationOptions2
#define soap_read_PointerTott__PTZConfigurationOptions2(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZConfigurationOptions2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTControlDirectionOptions
#define SOAP_TYPE_PointerTott__PTControlDirectionOptions (1143)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTControlDirectionOptions(struct soap*, tt__PTControlDirectionOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTControlDirectionOptions(struct soap*, const char *, int, tt__PTControlDirectionOptions *const*, const char *);
SOAP_FMAC3 tt__PTControlDirectionOptions ** SOAP_FMAC4 soap_in_PointerTott__PTControlDirectionOptions(struct soap*, const char*, tt__PTControlDirectionOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTControlDirectionOptions(struct soap*, tt__PTControlDirectionOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTControlDirectionOptions
#define soap_write_PointerTott__PTControlDirectionOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTControlDirectionOptions(soap, data),0) || soap_put_PointerTott__PTControlDirectionOptions(soap, data, "tt:PTControlDirectionOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTControlDirectionOptions ** SOAP_FMAC4 soap_get_PointerTott__PTControlDirectionOptions(struct soap*, tt__PTControlDirectionOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__PTControlDirectionOptions
#define soap_read_PointerTott__PTControlDirectionOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTControlDirectionOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DurationRange
#define SOAP_TYPE_PointerTott__DurationRange (1142)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DurationRange(struct soap*, tt__DurationRange *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DurationRange(struct soap*, const char *, int, tt__DurationRange *const*, const char *);
SOAP_FMAC3 tt__DurationRange ** SOAP_FMAC4 soap_in_PointerTott__DurationRange(struct soap*, const char*, tt__DurationRange **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DurationRange(struct soap*, tt__DurationRange *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DurationRange
#define soap_write_PointerTott__DurationRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DurationRange(soap, data),0) || soap_put_PointerTott__DurationRange(soap, data, "tt:DurationRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DurationRange ** SOAP_FMAC4 soap_get_PointerTott__DurationRange(struct soap*, tt__DurationRange **, const char*, const char*);

#ifndef soap_read_PointerTott__DurationRange
#define soap_read_PointerTott__DurationRange(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__DurationRange(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZSpaces
#define SOAP_TYPE_PointerTott__PTZSpaces (1141)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZSpaces(struct soap*, tt__PTZSpaces *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZSpaces(struct soap*, const char *, int, tt__PTZSpaces *const*, const char *);
SOAP_FMAC3 tt__PTZSpaces ** SOAP_FMAC4 soap_in_PointerTott__PTZSpaces(struct soap*, const char*, tt__PTZSpaces **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZSpaces(struct soap*, tt__PTZSpaces *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZSpaces
#define soap_write_PointerTott__PTZSpaces(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZSpaces(soap, data),0) || soap_put_PointerTott__PTZSpaces(soap, data, "tt:PTZSpaces", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZSpaces ** SOAP_FMAC4 soap_get_PointerTott__PTZSpaces(struct soap*, tt__PTZSpaces **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZSpaces
#define soap_read_PointerTott__PTZSpaces(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZSpaces(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTControlDirectionExtension
#define SOAP_TYPE_PointerTott__PTControlDirectionExtension (1140)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTControlDirectionExtension(struct soap*, tt__PTControlDirectionExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTControlDirectionExtension(struct soap*, const char *, int, tt__PTControlDirectionExtension *const*, const char *);
SOAP_FMAC3 tt__PTControlDirectionExtension ** SOAP_FMAC4 soap_in_PointerTott__PTControlDirectionExtension(struct soap*, const char*, tt__PTControlDirectionExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTControlDirectionExtension(struct soap*, tt__PTControlDirectionExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTControlDirectionExtension
#define soap_write_PointerTott__PTControlDirectionExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTControlDirectionExtension(soap, data),0) || soap_put_PointerTott__PTControlDirectionExtension(soap, data, "tt:PTControlDirectionExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTControlDirectionExtension ** SOAP_FMAC4 soap_get_PointerTott__PTControlDirectionExtension(struct soap*, tt__PTControlDirectionExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTControlDirectionExtension
#define soap_read_PointerTott__PTControlDirectionExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTControlDirectionExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Reverse
#define SOAP_TYPE_PointerTott__Reverse (1139)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Reverse(struct soap*, tt__Reverse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Reverse(struct soap*, const char *, int, tt__Reverse *const*, const char *);
SOAP_FMAC3 tt__Reverse ** SOAP_FMAC4 soap_in_PointerTott__Reverse(struct soap*, const char*, tt__Reverse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Reverse(struct soap*, tt__Reverse *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Reverse
#define soap_write_PointerTott__Reverse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Reverse(soap, data),0) || soap_put_PointerTott__Reverse(soap, data, "tt:Reverse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Reverse ** SOAP_FMAC4 soap_get_PointerTott__Reverse(struct soap*, tt__Reverse **, const char*, const char*);

#ifndef soap_read_PointerTott__Reverse
#define soap_read_PointerTott__Reverse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Reverse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__EFlip
#define SOAP_TYPE_PointerTott__EFlip (1138)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__EFlip(struct soap*, tt__EFlip *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__EFlip(struct soap*, const char *, int, tt__EFlip *const*, const char *);
SOAP_FMAC3 tt__EFlip ** SOAP_FMAC4 soap_in_PointerTott__EFlip(struct soap*, const char*, tt__EFlip **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__EFlip(struct soap*, tt__EFlip *const*, const char*, const char*);

#ifndef soap_write_PointerTott__EFlip
#define soap_write_PointerTott__EFlip(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__EFlip(soap, data),0) || soap_put_PointerTott__EFlip(soap, data, "tt:EFlip", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EFlip ** SOAP_FMAC4 soap_get_PointerTott__EFlip(struct soap*, tt__EFlip **, const char*, const char*);

#ifndef soap_read_PointerTott__EFlip
#define soap_read_PointerTott__EFlip(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__EFlip(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZConfigurationExtension2
#define SOAP_TYPE_PointerTott__PTZConfigurationExtension2 (1137)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZConfigurationExtension2(struct soap*, tt__PTZConfigurationExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZConfigurationExtension2(struct soap*, const char *, int, tt__PTZConfigurationExtension2 *const*, const char *);
SOAP_FMAC3 tt__PTZConfigurationExtension2 ** SOAP_FMAC4 soap_in_PointerTott__PTZConfigurationExtension2(struct soap*, const char*, tt__PTZConfigurationExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZConfigurationExtension2(struct soap*, tt__PTZConfigurationExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZConfigurationExtension2
#define soap_write_PointerTott__PTZConfigurationExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZConfigurationExtension2(soap, data),0) || soap_put_PointerTott__PTZConfigurationExtension2(soap, data, "tt:PTZConfigurationExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZConfigurationExtension2 ** SOAP_FMAC4 soap_get_PointerTott__PTZConfigurationExtension2(struct soap*, tt__PTZConfigurationExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZConfigurationExtension2
#define soap_read_PointerTott__PTZConfigurationExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZConfigurationExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTControlDirection
#define SOAP_TYPE_PointerTott__PTControlDirection (1136)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTControlDirection(struct soap*, tt__PTControlDirection *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTControlDirection(struct soap*, const char *, int, tt__PTControlDirection *const*, const char *);
SOAP_FMAC3 tt__PTControlDirection ** SOAP_FMAC4 soap_in_PointerTott__PTControlDirection(struct soap*, const char*, tt__PTControlDirection **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTControlDirection(struct soap*, tt__PTControlDirection *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTControlDirection
#define soap_write_PointerTott__PTControlDirection(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTControlDirection(soap, data),0) || soap_put_PointerTott__PTControlDirection(soap, data, "tt:PTControlDirection", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTControlDirection ** SOAP_FMAC4 soap_get_PointerTott__PTControlDirection(struct soap*, tt__PTControlDirection **, const char*, const char*);

#ifndef soap_read_PointerTott__PTControlDirection
#define soap_read_PointerTott__PTControlDirection(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTControlDirection(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourSupportedExtension
#define SOAP_TYPE_PointerTott__PTZPresetTourSupportedExtension (1135)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourSupportedExtension(struct soap*, tt__PTZPresetTourSupportedExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourSupportedExtension(struct soap*, const char *, int, tt__PTZPresetTourSupportedExtension *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourSupportedExtension ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourSupportedExtension(struct soap*, const char*, tt__PTZPresetTourSupportedExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourSupportedExtension(struct soap*, tt__PTZPresetTourSupportedExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourSupportedExtension
#define soap_write_PointerTott__PTZPresetTourSupportedExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourSupportedExtension(soap, data),0) || soap_put_PointerTott__PTZPresetTourSupportedExtension(soap, data, "tt:PTZPresetTourSupportedExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourSupportedExtension ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourSupportedExtension(struct soap*, tt__PTZPresetTourSupportedExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourSupportedExtension
#define soap_read_PointerTott__PTZPresetTourSupportedExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourSupportedExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZNodeExtension2
#define SOAP_TYPE_PointerTott__PTZNodeExtension2 (1133)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZNodeExtension2(struct soap*, tt__PTZNodeExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZNodeExtension2(struct soap*, const char *, int, tt__PTZNodeExtension2 *const*, const char *);
SOAP_FMAC3 tt__PTZNodeExtension2 ** SOAP_FMAC4 soap_in_PointerTott__PTZNodeExtension2(struct soap*, const char*, tt__PTZNodeExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZNodeExtension2(struct soap*, tt__PTZNodeExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZNodeExtension2
#define soap_write_PointerTott__PTZNodeExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZNodeExtension2(soap, data),0) || soap_put_PointerTott__PTZNodeExtension2(soap, data, "tt:PTZNodeExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZNodeExtension2 ** SOAP_FMAC4 soap_get_PointerTott__PTZNodeExtension2(struct soap*, tt__PTZNodeExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZNodeExtension2
#define soap_read_PointerTott__PTZNodeExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZNodeExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourSupported
#define SOAP_TYPE_PointerTott__PTZPresetTourSupported (1132)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourSupported(struct soap*, tt__PTZPresetTourSupported *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourSupported(struct soap*, const char *, int, tt__PTZPresetTourSupported *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourSupported ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourSupported(struct soap*, const char*, tt__PTZPresetTourSupported **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourSupported(struct soap*, tt__PTZPresetTourSupported *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourSupported
#define soap_write_PointerTott__PTZPresetTourSupported(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourSupported(soap, data),0) || soap_put_PointerTott__PTZPresetTourSupported(soap, data, "tt:PTZPresetTourSupported", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourSupported ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourSupported(struct soap*, tt__PTZPresetTourSupported **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourSupported
#define soap_read_PointerTott__PTZPresetTourSupported(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourSupported(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__EapMethodExtension
#define SOAP_TYPE_PointerTott__EapMethodExtension (1131)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__EapMethodExtension(struct soap*, tt__EapMethodExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__EapMethodExtension(struct soap*, const char *, int, tt__EapMethodExtension *const*, const char *);
SOAP_FMAC3 tt__EapMethodExtension ** SOAP_FMAC4 soap_in_PointerTott__EapMethodExtension(struct soap*, const char*, tt__EapMethodExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__EapMethodExtension(struct soap*, tt__EapMethodExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__EapMethodExtension
#define soap_write_PointerTott__EapMethodExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__EapMethodExtension(soap, data),0) || soap_put_PointerTott__EapMethodExtension(soap, data, "tt:EapMethodExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EapMethodExtension ** SOAP_FMAC4 soap_get_PointerTott__EapMethodExtension(struct soap*, tt__EapMethodExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__EapMethodExtension
#define soap_read_PointerTott__EapMethodExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__EapMethodExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__TLSConfiguration
#define SOAP_TYPE_PointerTott__TLSConfiguration (1130)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__TLSConfiguration(struct soap*, tt__TLSConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__TLSConfiguration(struct soap*, const char *, int, tt__TLSConfiguration *const*, const char *);
SOAP_FMAC3 tt__TLSConfiguration ** SOAP_FMAC4 soap_in_PointerTott__TLSConfiguration(struct soap*, const char*, tt__TLSConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__TLSConfiguration(struct soap*, tt__TLSConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__TLSConfiguration
#define soap_write_PointerTott__TLSConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__TLSConfiguration(soap, data),0) || soap_put_PointerTott__TLSConfiguration(soap, data, "tt:TLSConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TLSConfiguration ** SOAP_FMAC4 soap_get_PointerTott__TLSConfiguration(struct soap*, tt__TLSConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__TLSConfiguration
#define soap_read_PointerTott__TLSConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__TLSConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot1XConfigurationExtension
#define SOAP_TYPE_PointerTott__Dot1XConfigurationExtension (1129)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot1XConfigurationExtension(struct soap*, tt__Dot1XConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot1XConfigurationExtension(struct soap*, const char *, int, tt__Dot1XConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__Dot1XConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__Dot1XConfigurationExtension(struct soap*, const char*, tt__Dot1XConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot1XConfigurationExtension(struct soap*, tt__Dot1XConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot1XConfigurationExtension
#define soap_write_PointerTott__Dot1XConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot1XConfigurationExtension(soap, data),0) || soap_put_PointerTott__Dot1XConfigurationExtension(soap, data, "tt:Dot1XConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot1XConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__Dot1XConfigurationExtension(struct soap*, tt__Dot1XConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot1XConfigurationExtension
#define soap_read_PointerTott__Dot1XConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Dot1XConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__EAPMethodConfiguration
#define SOAP_TYPE_PointerTott__EAPMethodConfiguration (1128)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__EAPMethodConfiguration(struct soap*, tt__EAPMethodConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__EAPMethodConfiguration(struct soap*, const char *, int, tt__EAPMethodConfiguration *const*, const char *);
SOAP_FMAC3 tt__EAPMethodConfiguration ** SOAP_FMAC4 soap_in_PointerTott__EAPMethodConfiguration(struct soap*, const char*, tt__EAPMethodConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__EAPMethodConfiguration(struct soap*, tt__EAPMethodConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__EAPMethodConfiguration
#define soap_write_PointerTott__EAPMethodConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__EAPMethodConfiguration(soap, data),0) || soap_put_PointerTott__EAPMethodConfiguration(soap, data, "tt:EAPMethodConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EAPMethodConfiguration ** SOAP_FMAC4 soap_get_PointerTott__EAPMethodConfiguration(struct soap*, tt__EAPMethodConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__EAPMethodConfiguration
#define soap_read_PointerTott__EAPMethodConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__EAPMethodConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__CertificateInformationExtension
#define SOAP_TYPE_PointerTott__CertificateInformationExtension (1127)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__CertificateInformationExtension(struct soap*, tt__CertificateInformationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__CertificateInformationExtension(struct soap*, const char *, int, tt__CertificateInformationExtension *const*, const char *);
SOAP_FMAC3 tt__CertificateInformationExtension ** SOAP_FMAC4 soap_in_PointerTott__CertificateInformationExtension(struct soap*, const char*, tt__CertificateInformationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__CertificateInformationExtension(struct soap*, tt__CertificateInformationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__CertificateInformationExtension
#define soap_write_PointerTott__CertificateInformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__CertificateInformationExtension(soap, data),0) || soap_put_PointerTott__CertificateInformationExtension(soap, data, "tt:CertificateInformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CertificateInformationExtension ** SOAP_FMAC4 soap_get_PointerTott__CertificateInformationExtension(struct soap*, tt__CertificateInformationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__CertificateInformationExtension
#define soap_read_PointerTott__CertificateInformationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__CertificateInformationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DateTimeRange
#define SOAP_TYPE_PointerTott__DateTimeRange (1126)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DateTimeRange(struct soap*, tt__DateTimeRange *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DateTimeRange(struct soap*, const char *, int, tt__DateTimeRange *const*, const char *);
SOAP_FMAC3 tt__DateTimeRange ** SOAP_FMAC4 soap_in_PointerTott__DateTimeRange(struct soap*, const char*, tt__DateTimeRange **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DateTimeRange(struct soap*, tt__DateTimeRange *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DateTimeRange
#define soap_write_PointerTott__DateTimeRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DateTimeRange(soap, data),0) || soap_put_PointerTott__DateTimeRange(soap, data, "tt:DateTimeRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DateTimeRange ** SOAP_FMAC4 soap_get_PointerTott__DateTimeRange(struct soap*, tt__DateTimeRange **, const char*, const char*);

#ifndef soap_read_PointerTott__DateTimeRange
#define soap_read_PointerTott__DateTimeRange(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__DateTimeRange(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__CertificateUsage
#define SOAP_TYPE_PointerTott__CertificateUsage (1125)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__CertificateUsage(struct soap*, tt__CertificateUsage *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__CertificateUsage(struct soap*, const char *, int, tt__CertificateUsage *const*, const char *);
SOAP_FMAC3 tt__CertificateUsage ** SOAP_FMAC4 soap_in_PointerTott__CertificateUsage(struct soap*, const char*, tt__CertificateUsage **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__CertificateUsage(struct soap*, tt__CertificateUsage *const*, const char*, const char*);

#ifndef soap_write_PointerTott__CertificateUsage
#define soap_write_PointerTott__CertificateUsage(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__CertificateUsage(soap, data),0) || soap_put_PointerTott__CertificateUsage(soap, data, "tt:CertificateUsage", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CertificateUsage ** SOAP_FMAC4 soap_get_PointerTott__CertificateUsage(struct soap*, tt__CertificateUsage **, const char*, const char*);

#ifndef soap_read_PointerTott__CertificateUsage
#define soap_read_PointerTott__CertificateUsage(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__CertificateUsage(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__CertificateGenerationParametersExtension
#define SOAP_TYPE_PointerTott__CertificateGenerationParametersExtension (1124)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__CertificateGenerationParametersExtension(struct soap*, tt__CertificateGenerationParametersExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__CertificateGenerationParametersExtension(struct soap*, const char *, int, tt__CertificateGenerationParametersExtension *const*, const char *);
SOAP_FMAC3 tt__CertificateGenerationParametersExtension ** SOAP_FMAC4 soap_in_PointerTott__CertificateGenerationParametersExtension(struct soap*, const char*, tt__CertificateGenerationParametersExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__CertificateGenerationParametersExtension(struct soap*, tt__CertificateGenerationParametersExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__CertificateGenerationParametersExtension
#define soap_write_PointerTott__CertificateGenerationParametersExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__CertificateGenerationParametersExtension(soap, data),0) || soap_put_PointerTott__CertificateGenerationParametersExtension(soap, data, "tt:CertificateGenerationParametersExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CertificateGenerationParametersExtension ** SOAP_FMAC4 soap_get_PointerTott__CertificateGenerationParametersExtension(struct soap*, tt__CertificateGenerationParametersExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__CertificateGenerationParametersExtension
#define soap_read_PointerTott__CertificateGenerationParametersExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__CertificateGenerationParametersExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__UserExtension
#define SOAP_TYPE_PointerTott__UserExtension (1123)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__UserExtension(struct soap*, tt__UserExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__UserExtension(struct soap*, const char *, int, tt__UserExtension *const*, const char *);
SOAP_FMAC3 tt__UserExtension ** SOAP_FMAC4 soap_in_PointerTott__UserExtension(struct soap*, const char*, tt__UserExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__UserExtension(struct soap*, tt__UserExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__UserExtension
#define soap_write_PointerTott__UserExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__UserExtension(soap, data),0) || soap_put_PointerTott__UserExtension(soap, data, "tt:UserExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__UserExtension ** SOAP_FMAC4 soap_get_PointerTott__UserExtension(struct soap*, tt__UserExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__UserExtension
#define soap_read_PointerTott__UserExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__UserExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Date
#define SOAP_TYPE_PointerTott__Date (1122)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Date(struct soap*, tt__Date *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Date(struct soap*, const char *, int, tt__Date *const*, const char *);
SOAP_FMAC3 tt__Date ** SOAP_FMAC4 soap_in_PointerTott__Date(struct soap*, const char*, tt__Date **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Date(struct soap*, tt__Date *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Date
#define soap_write_PointerTott__Date(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Date(soap, data),0) || soap_put_PointerTott__Date(soap, data, "tt:Date", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Date ** SOAP_FMAC4 soap_get_PointerTott__Date(struct soap*, tt__Date **, const char*, const char*);

#ifndef soap_read_PointerTott__Date
#define soap_read_PointerTott__Date(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Date(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Time
#define SOAP_TYPE_PointerTott__Time (1121)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Time(struct soap*, tt__Time *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Time(struct soap*, const char *, int, tt__Time *const*, const char *);
SOAP_FMAC3 tt__Time ** SOAP_FMAC4 soap_in_PointerTott__Time(struct soap*, const char*, tt__Time **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Time(struct soap*, tt__Time *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Time
#define soap_write_PointerTott__Time(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Time(soap, data),0) || soap_put_PointerTott__Time(soap, data, "tt:Time", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Time ** SOAP_FMAC4 soap_get_PointerTott__Time(struct soap*, tt__Time **, const char*, const char*);

#ifndef soap_read_PointerTott__Time
#define soap_read_PointerTott__Time(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Time(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SystemDateTimeExtension
#define SOAP_TYPE_PointerTott__SystemDateTimeExtension (1120)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SystemDateTimeExtension(struct soap*, tt__SystemDateTimeExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SystemDateTimeExtension(struct soap*, const char *, int, tt__SystemDateTimeExtension *const*, const char *);
SOAP_FMAC3 tt__SystemDateTimeExtension ** SOAP_FMAC4 soap_in_PointerTott__SystemDateTimeExtension(struct soap*, const char*, tt__SystemDateTimeExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SystemDateTimeExtension(struct soap*, tt__SystemDateTimeExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SystemDateTimeExtension
#define soap_write_PointerTott__SystemDateTimeExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SystemDateTimeExtension(soap, data),0) || soap_put_PointerTott__SystemDateTimeExtension(soap, data, "tt:SystemDateTimeExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemDateTimeExtension ** SOAP_FMAC4 soap_get_PointerTott__SystemDateTimeExtension(struct soap*, tt__SystemDateTimeExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__SystemDateTimeExtension
#define soap_read_PointerTott__SystemDateTimeExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__SystemDateTimeExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SystemLogUri
#define SOAP_TYPE_PointerTott__SystemLogUri (1118)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SystemLogUri(struct soap*, tt__SystemLogUri *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SystemLogUri(struct soap*, const char *, int, tt__SystemLogUri *const*, const char *);
SOAP_FMAC3 tt__SystemLogUri ** SOAP_FMAC4 soap_in_PointerTott__SystemLogUri(struct soap*, const char*, tt__SystemLogUri **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SystemLogUri(struct soap*, tt__SystemLogUri *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SystemLogUri
#define soap_write_PointerTott__SystemLogUri(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SystemLogUri(soap, data),0) || soap_put_PointerTott__SystemLogUri(soap, data, "tt:SystemLogUri", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemLogUri ** SOAP_FMAC4 soap_get_PointerTott__SystemLogUri(struct soap*, tt__SystemLogUri **, const char*, const char*);

#ifndef soap_read_PointerTott__SystemLogUri
#define soap_read_PointerTott__SystemLogUri(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__SystemLogUri(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AnalyticsDeviceExtension
#define SOAP_TYPE_PointerTott__AnalyticsDeviceExtension (1117)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AnalyticsDeviceExtension(struct soap*, tt__AnalyticsDeviceExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AnalyticsDeviceExtension(struct soap*, const char *, int, tt__AnalyticsDeviceExtension *const*, const char *);
SOAP_FMAC3 tt__AnalyticsDeviceExtension ** SOAP_FMAC4 soap_in_PointerTott__AnalyticsDeviceExtension(struct soap*, const char*, tt__AnalyticsDeviceExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AnalyticsDeviceExtension(struct soap*, tt__AnalyticsDeviceExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AnalyticsDeviceExtension
#define soap_write_PointerTott__AnalyticsDeviceExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AnalyticsDeviceExtension(soap, data),0) || soap_put_PointerTott__AnalyticsDeviceExtension(soap, data, "tt:AnalyticsDeviceExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsDeviceExtension ** SOAP_FMAC4 soap_get_PointerTott__AnalyticsDeviceExtension(struct soap*, tt__AnalyticsDeviceExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__AnalyticsDeviceExtension
#define soap_read_PointerTott__AnalyticsDeviceExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AnalyticsDeviceExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SystemCapabilitiesExtension2
#define SOAP_TYPE_PointerTott__SystemCapabilitiesExtension2 (1116)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SystemCapabilitiesExtension2(struct soap*, tt__SystemCapabilitiesExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SystemCapabilitiesExtension2(struct soap*, const char *, int, tt__SystemCapabilitiesExtension2 *const*, const char *);
SOAP_FMAC3 tt__SystemCapabilitiesExtension2 ** SOAP_FMAC4 soap_in_PointerTott__SystemCapabilitiesExtension2(struct soap*, const char*, tt__SystemCapabilitiesExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SystemCapabilitiesExtension2(struct soap*, tt__SystemCapabilitiesExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SystemCapabilitiesExtension2
#define soap_write_PointerTott__SystemCapabilitiesExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SystemCapabilitiesExtension2(soap, data),0) || soap_put_PointerTott__SystemCapabilitiesExtension2(soap, data, "tt:SystemCapabilitiesExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemCapabilitiesExtension2 ** SOAP_FMAC4 soap_get_PointerTott__SystemCapabilitiesExtension2(struct soap*, tt__SystemCapabilitiesExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__SystemCapabilitiesExtension2
#define soap_read_PointerTott__SystemCapabilitiesExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__SystemCapabilitiesExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SystemCapabilitiesExtension
#define SOAP_TYPE_PointerTott__SystemCapabilitiesExtension (1115)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SystemCapabilitiesExtension(struct soap*, tt__SystemCapabilitiesExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SystemCapabilitiesExtension(struct soap*, const char *, int, tt__SystemCapabilitiesExtension *const*, const char *);
SOAP_FMAC3 tt__SystemCapabilitiesExtension ** SOAP_FMAC4 soap_in_PointerTott__SystemCapabilitiesExtension(struct soap*, const char*, tt__SystemCapabilitiesExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SystemCapabilitiesExtension(struct soap*, tt__SystemCapabilitiesExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SystemCapabilitiesExtension
#define soap_write_PointerTott__SystemCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SystemCapabilitiesExtension(soap, data),0) || soap_put_PointerTott__SystemCapabilitiesExtension(soap, data, "tt:SystemCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemCapabilitiesExtension ** SOAP_FMAC4 soap_get_PointerTott__SystemCapabilitiesExtension(struct soap*, tt__SystemCapabilitiesExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__SystemCapabilitiesExtension
#define soap_read_PointerTott__SystemCapabilitiesExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__SystemCapabilitiesExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SecurityCapabilitiesExtension2
#define SOAP_TYPE_PointerTott__SecurityCapabilitiesExtension2 (1113)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SecurityCapabilitiesExtension2(struct soap*, tt__SecurityCapabilitiesExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SecurityCapabilitiesExtension2(struct soap*, const char *, int, tt__SecurityCapabilitiesExtension2 *const*, const char *);
SOAP_FMAC3 tt__SecurityCapabilitiesExtension2 ** SOAP_FMAC4 soap_in_PointerTott__SecurityCapabilitiesExtension2(struct soap*, const char*, tt__SecurityCapabilitiesExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SecurityCapabilitiesExtension2(struct soap*, tt__SecurityCapabilitiesExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SecurityCapabilitiesExtension2
#define soap_write_PointerTott__SecurityCapabilitiesExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SecurityCapabilitiesExtension2(soap, data),0) || soap_put_PointerTott__SecurityCapabilitiesExtension2(soap, data, "tt:SecurityCapabilitiesExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SecurityCapabilitiesExtension2 ** SOAP_FMAC4 soap_get_PointerTott__SecurityCapabilitiesExtension2(struct soap*, tt__SecurityCapabilitiesExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__SecurityCapabilitiesExtension2
#define soap_read_PointerTott__SecurityCapabilitiesExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__SecurityCapabilitiesExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SecurityCapabilitiesExtension
#define SOAP_TYPE_PointerTott__SecurityCapabilitiesExtension (1112)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SecurityCapabilitiesExtension(struct soap*, tt__SecurityCapabilitiesExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SecurityCapabilitiesExtension(struct soap*, const char *, int, tt__SecurityCapabilitiesExtension *const*, const char *);
SOAP_FMAC3 tt__SecurityCapabilitiesExtension ** SOAP_FMAC4 soap_in_PointerTott__SecurityCapabilitiesExtension(struct soap*, const char*, tt__SecurityCapabilitiesExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SecurityCapabilitiesExtension(struct soap*, tt__SecurityCapabilitiesExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SecurityCapabilitiesExtension
#define soap_write_PointerTott__SecurityCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SecurityCapabilitiesExtension(soap, data),0) || soap_put_PointerTott__SecurityCapabilitiesExtension(soap, data, "tt:SecurityCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SecurityCapabilitiesExtension ** SOAP_FMAC4 soap_get_PointerTott__SecurityCapabilitiesExtension(struct soap*, tt__SecurityCapabilitiesExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__SecurityCapabilitiesExtension
#define soap_read_PointerTott__SecurityCapabilitiesExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__SecurityCapabilitiesExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkCapabilitiesExtension2
#define SOAP_TYPE_PointerTott__NetworkCapabilitiesExtension2 (1111)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkCapabilitiesExtension2(struct soap*, tt__NetworkCapabilitiesExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkCapabilitiesExtension2(struct soap*, const char *, int, tt__NetworkCapabilitiesExtension2 *const*, const char *);
SOAP_FMAC3 tt__NetworkCapabilitiesExtension2 ** SOAP_FMAC4 soap_in_PointerTott__NetworkCapabilitiesExtension2(struct soap*, const char*, tt__NetworkCapabilitiesExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkCapabilitiesExtension2(struct soap*, tt__NetworkCapabilitiesExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkCapabilitiesExtension2
#define soap_write_PointerTott__NetworkCapabilitiesExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkCapabilitiesExtension2(soap, data),0) || soap_put_PointerTott__NetworkCapabilitiesExtension2(soap, data, "tt:NetworkCapabilitiesExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkCapabilitiesExtension2 ** SOAP_FMAC4 soap_get_PointerTott__NetworkCapabilitiesExtension2(struct soap*, tt__NetworkCapabilitiesExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkCapabilitiesExtension2
#define soap_read_PointerTott__NetworkCapabilitiesExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__NetworkCapabilitiesExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkCapabilitiesExtension
#define SOAP_TYPE_PointerTott__NetworkCapabilitiesExtension (1110)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkCapabilitiesExtension(struct soap*, tt__NetworkCapabilitiesExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkCapabilitiesExtension(struct soap*, const char *, int, tt__NetworkCapabilitiesExtension *const*, const char *);
SOAP_FMAC3 tt__NetworkCapabilitiesExtension ** SOAP_FMAC4 soap_in_PointerTott__NetworkCapabilitiesExtension(struct soap*, const char*, tt__NetworkCapabilitiesExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkCapabilitiesExtension(struct soap*, tt__NetworkCapabilitiesExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkCapabilitiesExtension
#define soap_write_PointerTott__NetworkCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkCapabilitiesExtension(soap, data),0) || soap_put_PointerTott__NetworkCapabilitiesExtension(soap, data, "tt:NetworkCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkCapabilitiesExtension ** SOAP_FMAC4 soap_get_PointerTott__NetworkCapabilitiesExtension(struct soap*, tt__NetworkCapabilitiesExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkCapabilitiesExtension
#define soap_read_PointerTott__NetworkCapabilitiesExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__NetworkCapabilitiesExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RealTimeStreamingCapabilitiesExtension
#define SOAP_TYPE_PointerTott__RealTimeStreamingCapabilitiesExtension (1109)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RealTimeStreamingCapabilitiesExtension(struct soap*, tt__RealTimeStreamingCapabilitiesExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RealTimeStreamingCapabilitiesExtension(struct soap*, const char *, int, tt__RealTimeStreamingCapabilitiesExtension *const*, const char *);
SOAP_FMAC3 tt__RealTimeStreamingCapabilitiesExtension ** SOAP_FMAC4 soap_in_PointerTott__RealTimeStreamingCapabilitiesExtension(struct soap*, const char*, tt__RealTimeStreamingCapabilitiesExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RealTimeStreamingCapabilitiesExtension(struct soap*, tt__RealTimeStreamingCapabilitiesExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RealTimeStreamingCapabilitiesExtension
#define soap_write_PointerTott__RealTimeStreamingCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RealTimeStreamingCapabilitiesExtension(soap, data),0) || soap_put_PointerTott__RealTimeStreamingCapabilitiesExtension(soap, data, "tt:RealTimeStreamingCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RealTimeStreamingCapabilitiesExtension ** SOAP_FMAC4 soap_get_PointerTott__RealTimeStreamingCapabilitiesExtension(struct soap*, tt__RealTimeStreamingCapabilitiesExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__RealTimeStreamingCapabilitiesExtension
#define soap_read_PointerTott__RealTimeStreamingCapabilitiesExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__RealTimeStreamingCapabilitiesExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ProfileCapabilities
#define SOAP_TYPE_PointerTott__ProfileCapabilities (1108)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ProfileCapabilities(struct soap*, tt__ProfileCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ProfileCapabilities(struct soap*, const char *, int, tt__ProfileCapabilities *const*, const char *);
SOAP_FMAC3 tt__ProfileCapabilities ** SOAP_FMAC4 soap_in_PointerTott__ProfileCapabilities(struct soap*, const char*, tt__ProfileCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ProfileCapabilities(struct soap*, tt__ProfileCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ProfileCapabilities
#define soap_write_PointerTott__ProfileCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ProfileCapabilities(soap, data),0) || soap_put_PointerTott__ProfileCapabilities(soap, data, "tt:ProfileCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ProfileCapabilities ** SOAP_FMAC4 soap_get_PointerTott__ProfileCapabilities(struct soap*, tt__ProfileCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__ProfileCapabilities
#define soap_read_PointerTott__ProfileCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ProfileCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MediaCapabilitiesExtension
#define SOAP_TYPE_PointerTott__MediaCapabilitiesExtension (1107)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MediaCapabilitiesExtension(struct soap*, tt__MediaCapabilitiesExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MediaCapabilitiesExtension(struct soap*, const char *, int, tt__MediaCapabilitiesExtension *const*, const char *);
SOAP_FMAC3 tt__MediaCapabilitiesExtension ** SOAP_FMAC4 soap_in_PointerTott__MediaCapabilitiesExtension(struct soap*, const char*, tt__MediaCapabilitiesExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MediaCapabilitiesExtension(struct soap*, tt__MediaCapabilitiesExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MediaCapabilitiesExtension
#define soap_write_PointerTott__MediaCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MediaCapabilitiesExtension(soap, data),0) || soap_put_PointerTott__MediaCapabilitiesExtension(soap, data, "tt:MediaCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MediaCapabilitiesExtension ** SOAP_FMAC4 soap_get_PointerTott__MediaCapabilitiesExtension(struct soap*, tt__MediaCapabilitiesExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__MediaCapabilitiesExtension
#define soap_read_PointerTott__MediaCapabilitiesExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__MediaCapabilitiesExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RealTimeStreamingCapabilities
#define SOAP_TYPE_PointerTott__RealTimeStreamingCapabilities (1106)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RealTimeStreamingCapabilities(struct soap*, tt__RealTimeStreamingCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RealTimeStreamingCapabilities(struct soap*, const char *, int, tt__RealTimeStreamingCapabilities *const*, const char *);
SOAP_FMAC3 tt__RealTimeStreamingCapabilities ** SOAP_FMAC4 soap_in_PointerTott__RealTimeStreamingCapabilities(struct soap*, const char*, tt__RealTimeStreamingCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RealTimeStreamingCapabilities(struct soap*, tt__RealTimeStreamingCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RealTimeStreamingCapabilities
#define soap_write_PointerTott__RealTimeStreamingCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RealTimeStreamingCapabilities(soap, data),0) || soap_put_PointerTott__RealTimeStreamingCapabilities(soap, data, "tt:RealTimeStreamingCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RealTimeStreamingCapabilities ** SOAP_FMAC4 soap_get_PointerTott__RealTimeStreamingCapabilities(struct soap*, tt__RealTimeStreamingCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__RealTimeStreamingCapabilities
#define soap_read_PointerTott__RealTimeStreamingCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__RealTimeStreamingCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IOCapabilitiesExtension2
#define SOAP_TYPE_PointerTott__IOCapabilitiesExtension2 (1105)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IOCapabilitiesExtension2(struct soap*, tt__IOCapabilitiesExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IOCapabilitiesExtension2(struct soap*, const char *, int, tt__IOCapabilitiesExtension2 *const*, const char *);
SOAP_FMAC3 tt__IOCapabilitiesExtension2 ** SOAP_FMAC4 soap_in_PointerTott__IOCapabilitiesExtension2(struct soap*, const char*, tt__IOCapabilitiesExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IOCapabilitiesExtension2(struct soap*, tt__IOCapabilitiesExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IOCapabilitiesExtension2
#define soap_write_PointerTott__IOCapabilitiesExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IOCapabilitiesExtension2(soap, data),0) || soap_put_PointerTott__IOCapabilitiesExtension2(soap, data, "tt:IOCapabilitiesExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IOCapabilitiesExtension2 ** SOAP_FMAC4 soap_get_PointerTott__IOCapabilitiesExtension2(struct soap*, tt__IOCapabilitiesExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__IOCapabilitiesExtension2
#define soap_read_PointerTott__IOCapabilitiesExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__IOCapabilitiesExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IOCapabilitiesExtension
#define SOAP_TYPE_PointerTott__IOCapabilitiesExtension (1103)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IOCapabilitiesExtension(struct soap*, tt__IOCapabilitiesExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IOCapabilitiesExtension(struct soap*, const char *, int, tt__IOCapabilitiesExtension *const*, const char *);
SOAP_FMAC3 tt__IOCapabilitiesExtension ** SOAP_FMAC4 soap_in_PointerTott__IOCapabilitiesExtension(struct soap*, const char*, tt__IOCapabilitiesExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IOCapabilitiesExtension(struct soap*, tt__IOCapabilitiesExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IOCapabilitiesExtension
#define soap_write_PointerTott__IOCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IOCapabilitiesExtension(soap, data),0) || soap_put_PointerTott__IOCapabilitiesExtension(soap, data, "tt:IOCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IOCapabilitiesExtension ** SOAP_FMAC4 soap_get_PointerTott__IOCapabilitiesExtension(struct soap*, tt__IOCapabilitiesExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__IOCapabilitiesExtension
#define soap_read_PointerTott__IOCapabilitiesExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__IOCapabilitiesExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DeviceCapabilitiesExtension
#define SOAP_TYPE_PointerTott__DeviceCapabilitiesExtension (1102)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DeviceCapabilitiesExtension(struct soap*, tt__DeviceCapabilitiesExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DeviceCapabilitiesExtension(struct soap*, const char *, int, tt__DeviceCapabilitiesExtension *const*, const char *);
SOAP_FMAC3 tt__DeviceCapabilitiesExtension ** SOAP_FMAC4 soap_in_PointerTott__DeviceCapabilitiesExtension(struct soap*, const char*, tt__DeviceCapabilitiesExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DeviceCapabilitiesExtension(struct soap*, tt__DeviceCapabilitiesExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DeviceCapabilitiesExtension
#define soap_write_PointerTott__DeviceCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DeviceCapabilitiesExtension(soap, data),0) || soap_put_PointerTott__DeviceCapabilitiesExtension(soap, data, "tt:DeviceCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DeviceCapabilitiesExtension ** SOAP_FMAC4 soap_get_PointerTott__DeviceCapabilitiesExtension(struct soap*, tt__DeviceCapabilitiesExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__DeviceCapabilitiesExtension
#define soap_read_PointerTott__DeviceCapabilitiesExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__DeviceCapabilitiesExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SecurityCapabilities
#define SOAP_TYPE_PointerTott__SecurityCapabilities (1101)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SecurityCapabilities(struct soap*, tt__SecurityCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SecurityCapabilities(struct soap*, const char *, int, tt__SecurityCapabilities *const*, const char *);
SOAP_FMAC3 tt__SecurityCapabilities ** SOAP_FMAC4 soap_in_PointerTott__SecurityCapabilities(struct soap*, const char*, tt__SecurityCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SecurityCapabilities(struct soap*, tt__SecurityCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SecurityCapabilities
#define soap_write_PointerTott__SecurityCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SecurityCapabilities(soap, data),0) || soap_put_PointerTott__SecurityCapabilities(soap, data, "tt:SecurityCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SecurityCapabilities ** SOAP_FMAC4 soap_get_PointerTott__SecurityCapabilities(struct soap*, tt__SecurityCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__SecurityCapabilities
#define soap_read_PointerTott__SecurityCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__SecurityCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IOCapabilities
#define SOAP_TYPE_PointerTott__IOCapabilities (1100)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IOCapabilities(struct soap*, tt__IOCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IOCapabilities(struct soap*, const char *, int, tt__IOCapabilities *const*, const char *);
SOAP_FMAC3 tt__IOCapabilities ** SOAP_FMAC4 soap_in_PointerTott__IOCapabilities(struct soap*, const char*, tt__IOCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IOCapabilities(struct soap*, tt__IOCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IOCapabilities
#define soap_write_PointerTott__IOCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IOCapabilities(soap, data),0) || soap_put_PointerTott__IOCapabilities(soap, data, "tt:IOCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IOCapabilities ** SOAP_FMAC4 soap_get_PointerTott__IOCapabilities(struct soap*, tt__IOCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__IOCapabilities
#define soap_read_PointerTott__IOCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__IOCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SystemCapabilities
#define SOAP_TYPE_PointerTott__SystemCapabilities (1099)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SystemCapabilities(struct soap*, tt__SystemCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SystemCapabilities(struct soap*, const char *, int, tt__SystemCapabilities *const*, const char *);
SOAP_FMAC3 tt__SystemCapabilities ** SOAP_FMAC4 soap_in_PointerTott__SystemCapabilities(struct soap*, const char*, tt__SystemCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SystemCapabilities(struct soap*, tt__SystemCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SystemCapabilities
#define soap_write_PointerTott__SystemCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SystemCapabilities(soap, data),0) || soap_put_PointerTott__SystemCapabilities(soap, data, "tt:SystemCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemCapabilities ** SOAP_FMAC4 soap_get_PointerTott__SystemCapabilities(struct soap*, tt__SystemCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__SystemCapabilities
#define soap_read_PointerTott__SystemCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__SystemCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkCapabilities
#define SOAP_TYPE_PointerTott__NetworkCapabilities (1098)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkCapabilities(struct soap*, tt__NetworkCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkCapabilities(struct soap*, const char *, int, tt__NetworkCapabilities *const*, const char *);
SOAP_FMAC3 tt__NetworkCapabilities ** SOAP_FMAC4 soap_in_PointerTott__NetworkCapabilities(struct soap*, const char*, tt__NetworkCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkCapabilities(struct soap*, tt__NetworkCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkCapabilities
#define soap_write_PointerTott__NetworkCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkCapabilities(soap, data),0) || soap_put_PointerTott__NetworkCapabilities(soap, data, "tt:NetworkCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkCapabilities ** SOAP_FMAC4 soap_get_PointerTott__NetworkCapabilities(struct soap*, tt__NetworkCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkCapabilities
#define soap_read_PointerTott__NetworkCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__NetworkCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__CapabilitiesExtension2
#define SOAP_TYPE_PointerTott__CapabilitiesExtension2 (1097)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__CapabilitiesExtension2(struct soap*, tt__CapabilitiesExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__CapabilitiesExtension2(struct soap*, const char *, int, tt__CapabilitiesExtension2 *const*, const char *);
SOAP_FMAC3 tt__CapabilitiesExtension2 ** SOAP_FMAC4 soap_in_PointerTott__CapabilitiesExtension2(struct soap*, const char*, tt__CapabilitiesExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__CapabilitiesExtension2(struct soap*, tt__CapabilitiesExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__CapabilitiesExtension2
#define soap_write_PointerTott__CapabilitiesExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__CapabilitiesExtension2(soap, data),0) || soap_put_PointerTott__CapabilitiesExtension2(soap, data, "tt:CapabilitiesExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CapabilitiesExtension2 ** SOAP_FMAC4 soap_get_PointerTott__CapabilitiesExtension2(struct soap*, tt__CapabilitiesExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__CapabilitiesExtension2
#define soap_read_PointerTott__CapabilitiesExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__CapabilitiesExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AnalyticsDeviceCapabilities
#define SOAP_TYPE_PointerTott__AnalyticsDeviceCapabilities (1096)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AnalyticsDeviceCapabilities(struct soap*, tt__AnalyticsDeviceCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AnalyticsDeviceCapabilities(struct soap*, const char *, int, tt__AnalyticsDeviceCapabilities *const*, const char *);
SOAP_FMAC3 tt__AnalyticsDeviceCapabilities ** SOAP_FMAC4 soap_in_PointerTott__AnalyticsDeviceCapabilities(struct soap*, const char*, tt__AnalyticsDeviceCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AnalyticsDeviceCapabilities(struct soap*, tt__AnalyticsDeviceCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AnalyticsDeviceCapabilities
#define soap_write_PointerTott__AnalyticsDeviceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AnalyticsDeviceCapabilities(soap, data),0) || soap_put_PointerTott__AnalyticsDeviceCapabilities(soap, data, "tt:AnalyticsDeviceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsDeviceCapabilities ** SOAP_FMAC4 soap_get_PointerTott__AnalyticsDeviceCapabilities(struct soap*, tt__AnalyticsDeviceCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__AnalyticsDeviceCapabilities
#define soap_read_PointerTott__AnalyticsDeviceCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AnalyticsDeviceCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ReceiverCapabilities
#define SOAP_TYPE_PointerTott__ReceiverCapabilities (1095)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ReceiverCapabilities(struct soap*, tt__ReceiverCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ReceiverCapabilities(struct soap*, const char *, int, tt__ReceiverCapabilities *const*, const char *);
SOAP_FMAC3 tt__ReceiverCapabilities ** SOAP_FMAC4 soap_in_PointerTott__ReceiverCapabilities(struct soap*, const char*, tt__ReceiverCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ReceiverCapabilities(struct soap*, tt__ReceiverCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ReceiverCapabilities
#define soap_write_PointerTott__ReceiverCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ReceiverCapabilities(soap, data),0) || soap_put_PointerTott__ReceiverCapabilities(soap, data, "tt:ReceiverCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ReceiverCapabilities ** SOAP_FMAC4 soap_get_PointerTott__ReceiverCapabilities(struct soap*, tt__ReceiverCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__ReceiverCapabilities
#define soap_read_PointerTott__ReceiverCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ReceiverCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ReplayCapabilities
#define SOAP_TYPE_PointerTott__ReplayCapabilities (1094)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ReplayCapabilities(struct soap*, tt__ReplayCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ReplayCapabilities(struct soap*, const char *, int, tt__ReplayCapabilities *const*, const char *);
SOAP_FMAC3 tt__ReplayCapabilities ** SOAP_FMAC4 soap_in_PointerTott__ReplayCapabilities(struct soap*, const char*, tt__ReplayCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ReplayCapabilities(struct soap*, tt__ReplayCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ReplayCapabilities
#define soap_write_PointerTott__ReplayCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ReplayCapabilities(soap, data),0) || soap_put_PointerTott__ReplayCapabilities(soap, data, "tt:ReplayCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ReplayCapabilities ** SOAP_FMAC4 soap_get_PointerTott__ReplayCapabilities(struct soap*, tt__ReplayCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__ReplayCapabilities
#define soap_read_PointerTott__ReplayCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ReplayCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SearchCapabilities
#define SOAP_TYPE_PointerTott__SearchCapabilities (1093)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SearchCapabilities(struct soap*, tt__SearchCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SearchCapabilities(struct soap*, const char *, int, tt__SearchCapabilities *const*, const char *);
SOAP_FMAC3 tt__SearchCapabilities ** SOAP_FMAC4 soap_in_PointerTott__SearchCapabilities(struct soap*, const char*, tt__SearchCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SearchCapabilities(struct soap*, tt__SearchCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SearchCapabilities
#define soap_write_PointerTott__SearchCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SearchCapabilities(soap, data),0) || soap_put_PointerTott__SearchCapabilities(soap, data, "tt:SearchCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SearchCapabilities ** SOAP_FMAC4 soap_get_PointerTott__SearchCapabilities(struct soap*, tt__SearchCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__SearchCapabilities
#define soap_read_PointerTott__SearchCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__SearchCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RecordingCapabilities
#define SOAP_TYPE_PointerTott__RecordingCapabilities (1092)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RecordingCapabilities(struct soap*, tt__RecordingCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RecordingCapabilities(struct soap*, const char *, int, tt__RecordingCapabilities *const*, const char *);
SOAP_FMAC3 tt__RecordingCapabilities ** SOAP_FMAC4 soap_in_PointerTott__RecordingCapabilities(struct soap*, const char*, tt__RecordingCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RecordingCapabilities(struct soap*, tt__RecordingCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RecordingCapabilities
#define soap_write_PointerTott__RecordingCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RecordingCapabilities(soap, data),0) || soap_put_PointerTott__RecordingCapabilities(soap, data, "tt:RecordingCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingCapabilities ** SOAP_FMAC4 soap_get_PointerTott__RecordingCapabilities(struct soap*, tt__RecordingCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__RecordingCapabilities
#define soap_read_PointerTott__RecordingCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__RecordingCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DisplayCapabilities
#define SOAP_TYPE_PointerTott__DisplayCapabilities (1091)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DisplayCapabilities(struct soap*, tt__DisplayCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DisplayCapabilities(struct soap*, const char *, int, tt__DisplayCapabilities *const*, const char *);
SOAP_FMAC3 tt__DisplayCapabilities ** SOAP_FMAC4 soap_in_PointerTott__DisplayCapabilities(struct soap*, const char*, tt__DisplayCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DisplayCapabilities(struct soap*, tt__DisplayCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DisplayCapabilities
#define soap_write_PointerTott__DisplayCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DisplayCapabilities(soap, data),0) || soap_put_PointerTott__DisplayCapabilities(soap, data, "tt:DisplayCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DisplayCapabilities ** SOAP_FMAC4 soap_get_PointerTott__DisplayCapabilities(struct soap*, tt__DisplayCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__DisplayCapabilities
#define soap_read_PointerTott__DisplayCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__DisplayCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DeviceIOCapabilities
#define SOAP_TYPE_PointerTott__DeviceIOCapabilities (1090)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DeviceIOCapabilities(struct soap*, tt__DeviceIOCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DeviceIOCapabilities(struct soap*, const char *, int, tt__DeviceIOCapabilities *const*, const char *);
SOAP_FMAC3 tt__DeviceIOCapabilities ** SOAP_FMAC4 soap_in_PointerTott__DeviceIOCapabilities(struct soap*, const char*, tt__DeviceIOCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DeviceIOCapabilities(struct soap*, tt__DeviceIOCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DeviceIOCapabilities
#define soap_write_PointerTott__DeviceIOCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DeviceIOCapabilities(soap, data),0) || soap_put_PointerTott__DeviceIOCapabilities(soap, data, "tt:DeviceIOCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DeviceIOCapabilities ** SOAP_FMAC4 soap_get_PointerTott__DeviceIOCapabilities(struct soap*, tt__DeviceIOCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__DeviceIOCapabilities
#define soap_read_PointerTott__DeviceIOCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__DeviceIOCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__CapabilitiesExtension
#define SOAP_TYPE_PointerTott__CapabilitiesExtension (1089)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__CapabilitiesExtension(struct soap*, tt__CapabilitiesExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__CapabilitiesExtension(struct soap*, const char *, int, tt__CapabilitiesExtension *const*, const char *);
SOAP_FMAC3 tt__CapabilitiesExtension ** SOAP_FMAC4 soap_in_PointerTott__CapabilitiesExtension(struct soap*, const char*, tt__CapabilitiesExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__CapabilitiesExtension(struct soap*, tt__CapabilitiesExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__CapabilitiesExtension
#define soap_write_PointerTott__CapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__CapabilitiesExtension(soap, data),0) || soap_put_PointerTott__CapabilitiesExtension(soap, data, "tt:CapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CapabilitiesExtension ** SOAP_FMAC4 soap_get_PointerTott__CapabilitiesExtension(struct soap*, tt__CapabilitiesExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__CapabilitiesExtension
#define soap_read_PointerTott__CapabilitiesExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__CapabilitiesExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZCapabilities
#define SOAP_TYPE_PointerTott__PTZCapabilities (1088)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZCapabilities(struct soap*, tt__PTZCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZCapabilities(struct soap*, const char *, int, tt__PTZCapabilities *const*, const char *);
SOAP_FMAC3 tt__PTZCapabilities ** SOAP_FMAC4 soap_in_PointerTott__PTZCapabilities(struct soap*, const char*, tt__PTZCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZCapabilities(struct soap*, tt__PTZCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZCapabilities
#define soap_write_PointerTott__PTZCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZCapabilities(soap, data),0) || soap_put_PointerTott__PTZCapabilities(soap, data, "tt:PTZCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZCapabilities ** SOAP_FMAC4 soap_get_PointerTott__PTZCapabilities(struct soap*, tt__PTZCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZCapabilities
#define soap_read_PointerTott__PTZCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MediaCapabilities
#define SOAP_TYPE_PointerTott__MediaCapabilities (1087)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MediaCapabilities(struct soap*, tt__MediaCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MediaCapabilities(struct soap*, const char *, int, tt__MediaCapabilities *const*, const char *);
SOAP_FMAC3 tt__MediaCapabilities ** SOAP_FMAC4 soap_in_PointerTott__MediaCapabilities(struct soap*, const char*, tt__MediaCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MediaCapabilities(struct soap*, tt__MediaCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MediaCapabilities
#define soap_write_PointerTott__MediaCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MediaCapabilities(soap, data),0) || soap_put_PointerTott__MediaCapabilities(soap, data, "tt:MediaCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MediaCapabilities ** SOAP_FMAC4 soap_get_PointerTott__MediaCapabilities(struct soap*, tt__MediaCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__MediaCapabilities
#define soap_read_PointerTott__MediaCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__MediaCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImagingCapabilities
#define SOAP_TYPE_PointerTott__ImagingCapabilities (1086)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImagingCapabilities(struct soap*, tt__ImagingCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImagingCapabilities(struct soap*, const char *, int, tt__ImagingCapabilities *const*, const char *);
SOAP_FMAC3 tt__ImagingCapabilities ** SOAP_FMAC4 soap_in_PointerTott__ImagingCapabilities(struct soap*, const char*, tt__ImagingCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImagingCapabilities(struct soap*, tt__ImagingCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImagingCapabilities
#define soap_write_PointerTott__ImagingCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImagingCapabilities(soap, data),0) || soap_put_PointerTott__ImagingCapabilities(soap, data, "tt:ImagingCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingCapabilities ** SOAP_FMAC4 soap_get_PointerTott__ImagingCapabilities(struct soap*, tt__ImagingCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__ImagingCapabilities
#define soap_read_PointerTott__ImagingCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ImagingCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__EventCapabilities
#define SOAP_TYPE_PointerTott__EventCapabilities (1085)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__EventCapabilities(struct soap*, tt__EventCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__EventCapabilities(struct soap*, const char *, int, tt__EventCapabilities *const*, const char *);
SOAP_FMAC3 tt__EventCapabilities ** SOAP_FMAC4 soap_in_PointerTott__EventCapabilities(struct soap*, const char*, tt__EventCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__EventCapabilities(struct soap*, tt__EventCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__EventCapabilities
#define soap_write_PointerTott__EventCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__EventCapabilities(soap, data),0) || soap_put_PointerTott__EventCapabilities(soap, data, "tt:EventCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EventCapabilities ** SOAP_FMAC4 soap_get_PointerTott__EventCapabilities(struct soap*, tt__EventCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__EventCapabilities
#define soap_read_PointerTott__EventCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__EventCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DeviceCapabilities
#define SOAP_TYPE_PointerTott__DeviceCapabilities (1084)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DeviceCapabilities(struct soap*, tt__DeviceCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DeviceCapabilities(struct soap*, const char *, int, tt__DeviceCapabilities *const*, const char *);
SOAP_FMAC3 tt__DeviceCapabilities ** SOAP_FMAC4 soap_in_PointerTott__DeviceCapabilities(struct soap*, const char*, tt__DeviceCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DeviceCapabilities(struct soap*, tt__DeviceCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DeviceCapabilities
#define soap_write_PointerTott__DeviceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DeviceCapabilities(soap, data),0) || soap_put_PointerTott__DeviceCapabilities(soap, data, "tt:DeviceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DeviceCapabilities ** SOAP_FMAC4 soap_get_PointerTott__DeviceCapabilities(struct soap*, tt__DeviceCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__DeviceCapabilities
#define soap_read_PointerTott__DeviceCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__DeviceCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AnalyticsCapabilities
#define SOAP_TYPE_PointerTott__AnalyticsCapabilities (1083)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AnalyticsCapabilities(struct soap*, tt__AnalyticsCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AnalyticsCapabilities(struct soap*, const char *, int, tt__AnalyticsCapabilities *const*, const char *);
SOAP_FMAC3 tt__AnalyticsCapabilities ** SOAP_FMAC4 soap_in_PointerTott__AnalyticsCapabilities(struct soap*, const char*, tt__AnalyticsCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AnalyticsCapabilities(struct soap*, tt__AnalyticsCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AnalyticsCapabilities
#define soap_write_PointerTott__AnalyticsCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AnalyticsCapabilities(soap, data),0) || soap_put_PointerTott__AnalyticsCapabilities(soap, data, "tt:AnalyticsCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsCapabilities ** SOAP_FMAC4 soap_get_PointerTott__AnalyticsCapabilities(struct soap*, tt__AnalyticsCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__AnalyticsCapabilities
#define soap_read_PointerTott__AnalyticsCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AnalyticsCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot11AvailableNetworksExtension
#define SOAP_TYPE_PointerTott__Dot11AvailableNetworksExtension (1082)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot11AvailableNetworksExtension(struct soap*, tt__Dot11AvailableNetworksExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot11AvailableNetworksExtension(struct soap*, const char *, int, tt__Dot11AvailableNetworksExtension *const*, const char *);
SOAP_FMAC3 tt__Dot11AvailableNetworksExtension ** SOAP_FMAC4 soap_in_PointerTott__Dot11AvailableNetworksExtension(struct soap*, const char*, tt__Dot11AvailableNetworksExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot11AvailableNetworksExtension(struct soap*, tt__Dot11AvailableNetworksExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot11AvailableNetworksExtension
#define soap_write_PointerTott__Dot11AvailableNetworksExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot11AvailableNetworksExtension(soap, data),0) || soap_put_PointerTott__Dot11AvailableNetworksExtension(soap, data, "tt:Dot11AvailableNetworksExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11AvailableNetworksExtension ** SOAP_FMAC4 soap_get_PointerTott__Dot11AvailableNetworksExtension(struct soap*, tt__Dot11AvailableNetworksExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot11AvailableNetworksExtension
#define soap_read_PointerTott__Dot11AvailableNetworksExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Dot11AvailableNetworksExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot11SignalStrength
#define SOAP_TYPE_PointerTott__Dot11SignalStrength (1079)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot11SignalStrength(struct soap*, enum tt__Dot11SignalStrength *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot11SignalStrength(struct soap*, const char *, int, enum tt__Dot11SignalStrength *const*, const char *);
SOAP_FMAC3 enum tt__Dot11SignalStrength ** SOAP_FMAC4 soap_in_PointerTott__Dot11SignalStrength(struct soap*, const char*, enum tt__Dot11SignalStrength **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot11SignalStrength(struct soap*, enum tt__Dot11SignalStrength *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot11SignalStrength
#define soap_write_PointerTott__Dot11SignalStrength(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot11SignalStrength(soap, data),0) || soap_put_PointerTott__Dot11SignalStrength(soap, data, "tt:Dot11SignalStrength", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__Dot11SignalStrength ** SOAP_FMAC4 soap_get_PointerTott__Dot11SignalStrength(struct soap*, enum tt__Dot11SignalStrength **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot11SignalStrength
#define soap_read_PointerTott__Dot11SignalStrength(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Dot11SignalStrength(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot11PSKSetExtension
#define SOAP_TYPE_PointerTott__Dot11PSKSetExtension (1078)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot11PSKSetExtension(struct soap*, tt__Dot11PSKSetExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot11PSKSetExtension(struct soap*, const char *, int, tt__Dot11PSKSetExtension *const*, const char *);
SOAP_FMAC3 tt__Dot11PSKSetExtension ** SOAP_FMAC4 soap_in_PointerTott__Dot11PSKSetExtension(struct soap*, const char*, tt__Dot11PSKSetExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot11PSKSetExtension(struct soap*, tt__Dot11PSKSetExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot11PSKSetExtension
#define soap_write_PointerTott__Dot11PSKSetExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot11PSKSetExtension(soap, data),0) || soap_put_PointerTott__Dot11PSKSetExtension(soap, data, "tt:Dot11PSKSetExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11PSKSetExtension ** SOAP_FMAC4 soap_get_PointerTott__Dot11PSKSetExtension(struct soap*, tt__Dot11PSKSetExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot11PSKSetExtension
#define soap_read_PointerTott__Dot11PSKSetExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Dot11PSKSetExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot11PSKPassphrase
#define SOAP_TYPE_PointerTott__Dot11PSKPassphrase (1077)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot11PSKPassphrase(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot11PSKPassphrase(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTott__Dot11PSKPassphrase(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot11PSKPassphrase(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot11PSKPassphrase
#define soap_write_PointerTott__Dot11PSKPassphrase(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot11PSKPassphrase(soap, data),0) || soap_put_PointerTott__Dot11PSKPassphrase(soap, data, "tt:Dot11PSKPassphrase", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTott__Dot11PSKPassphrase(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot11PSKPassphrase
#define soap_read_PointerTott__Dot11PSKPassphrase(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Dot11PSKPassphrase(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot11PSK
#define SOAP_TYPE_PointerTott__Dot11PSK (1076)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot11PSK(struct soap*, xsd__hexBinary *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot11PSK(struct soap*, const char *, int, xsd__hexBinary *const*, const char *);
SOAP_FMAC3 xsd__hexBinary ** SOAP_FMAC4 soap_in_PointerTott__Dot11PSK(struct soap*, const char*, xsd__hexBinary **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot11PSK(struct soap*, xsd__hexBinary *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot11PSK
#define soap_write_PointerTott__Dot11PSK(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot11PSK(soap, data),0) || soap_put_PointerTott__Dot11PSK(soap, data, "tt:Dot11PSK", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__hexBinary ** SOAP_FMAC4 soap_get_PointerTott__Dot11PSK(struct soap*, xsd__hexBinary **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot11PSK
#define soap_read_PointerTott__Dot11PSK(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Dot11PSK(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot11SecurityConfigurationExtension
#define SOAP_TYPE_PointerTott__Dot11SecurityConfigurationExtension (1075)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot11SecurityConfigurationExtension(struct soap*, tt__Dot11SecurityConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot11SecurityConfigurationExtension(struct soap*, const char *, int, tt__Dot11SecurityConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__Dot11SecurityConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__Dot11SecurityConfigurationExtension(struct soap*, const char*, tt__Dot11SecurityConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot11SecurityConfigurationExtension(struct soap*, tt__Dot11SecurityConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot11SecurityConfigurationExtension
#define soap_write_PointerTott__Dot11SecurityConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot11SecurityConfigurationExtension(soap, data),0) || soap_put_PointerTott__Dot11SecurityConfigurationExtension(soap, data, "tt:Dot11SecurityConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11SecurityConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__Dot11SecurityConfigurationExtension(struct soap*, tt__Dot11SecurityConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot11SecurityConfigurationExtension
#define soap_read_PointerTott__Dot11SecurityConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Dot11SecurityConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ReferenceToken
#define SOAP_TYPE_PointerTott__ReferenceToken (1074)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ReferenceToken(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ReferenceToken(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTott__ReferenceToken(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ReferenceToken(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ReferenceToken
#define soap_write_PointerTott__ReferenceToken(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ReferenceToken(soap, data),0) || soap_put_PointerTott__ReferenceToken(soap, data, "tt:ReferenceToken", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTott__ReferenceToken(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTott__ReferenceToken
#define soap_read_PointerTott__ReferenceToken(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ReferenceToken(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot11PSKSet
#define SOAP_TYPE_PointerTott__Dot11PSKSet (1073)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot11PSKSet(struct soap*, tt__Dot11PSKSet *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot11PSKSet(struct soap*, const char *, int, tt__Dot11PSKSet *const*, const char *);
SOAP_FMAC3 tt__Dot11PSKSet ** SOAP_FMAC4 soap_in_PointerTott__Dot11PSKSet(struct soap*, const char*, tt__Dot11PSKSet **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot11PSKSet(struct soap*, tt__Dot11PSKSet *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot11PSKSet
#define soap_write_PointerTott__Dot11PSKSet(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot11PSKSet(soap, data),0) || soap_put_PointerTott__Dot11PSKSet(soap, data, "tt:Dot11PSKSet", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11PSKSet ** SOAP_FMAC4 soap_get_PointerTott__Dot11PSKSet(struct soap*, tt__Dot11PSKSet **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot11PSKSet
#define soap_read_PointerTott__Dot11PSKSet(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Dot11PSKSet(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot11Cipher
#define SOAP_TYPE_PointerTott__Dot11Cipher (1072)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot11Cipher(struct soap*, enum tt__Dot11Cipher *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot11Cipher(struct soap*, const char *, int, enum tt__Dot11Cipher *const*, const char *);
SOAP_FMAC3 enum tt__Dot11Cipher ** SOAP_FMAC4 soap_in_PointerTott__Dot11Cipher(struct soap*, const char*, enum tt__Dot11Cipher **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot11Cipher(struct soap*, enum tt__Dot11Cipher *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot11Cipher
#define soap_write_PointerTott__Dot11Cipher(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot11Cipher(soap, data),0) || soap_put_PointerTott__Dot11Cipher(soap, data, "tt:Dot11Cipher", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__Dot11Cipher ** SOAP_FMAC4 soap_get_PointerTott__Dot11Cipher(struct soap*, enum tt__Dot11Cipher **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot11Cipher
#define soap_read_PointerTott__Dot11Cipher(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Dot11Cipher(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot11SecurityConfiguration
#define SOAP_TYPE_PointerTott__Dot11SecurityConfiguration (1071)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot11SecurityConfiguration(struct soap*, tt__Dot11SecurityConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot11SecurityConfiguration(struct soap*, const char *, int, tt__Dot11SecurityConfiguration *const*, const char *);
SOAP_FMAC3 tt__Dot11SecurityConfiguration ** SOAP_FMAC4 soap_in_PointerTott__Dot11SecurityConfiguration(struct soap*, const char*, tt__Dot11SecurityConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot11SecurityConfiguration(struct soap*, tt__Dot11SecurityConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot11SecurityConfiguration
#define soap_write_PointerTott__Dot11SecurityConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot11SecurityConfiguration(soap, data),0) || soap_put_PointerTott__Dot11SecurityConfiguration(soap, data, "tt:Dot11SecurityConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11SecurityConfiguration ** SOAP_FMAC4 soap_get_PointerTott__Dot11SecurityConfiguration(struct soap*, tt__Dot11SecurityConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot11SecurityConfiguration
#define soap_read_PointerTott__Dot11SecurityConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Dot11SecurityConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IPAddressFilterExtension
#define SOAP_TYPE_PointerTott__IPAddressFilterExtension (1070)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPAddressFilterExtension(struct soap*, tt__IPAddressFilterExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPAddressFilterExtension(struct soap*, const char *, int, tt__IPAddressFilterExtension *const*, const char *);
SOAP_FMAC3 tt__IPAddressFilterExtension ** SOAP_FMAC4 soap_in_PointerTott__IPAddressFilterExtension(struct soap*, const char*, tt__IPAddressFilterExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPAddressFilterExtension(struct soap*, tt__IPAddressFilterExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IPAddressFilterExtension
#define soap_write_PointerTott__IPAddressFilterExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IPAddressFilterExtension(soap, data),0) || soap_put_PointerTott__IPAddressFilterExtension(soap, data, "tt:IPAddressFilterExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPAddressFilterExtension ** SOAP_FMAC4 soap_get_PointerTott__IPAddressFilterExtension(struct soap*, tt__IPAddressFilterExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__IPAddressFilterExtension
#define soap_read_PointerTott__IPAddressFilterExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__IPAddressFilterExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkZeroConfigurationExtension2
#define SOAP_TYPE_PointerTott__NetworkZeroConfigurationExtension2 (1069)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkZeroConfigurationExtension2(struct soap*, tt__NetworkZeroConfigurationExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkZeroConfigurationExtension2(struct soap*, const char *, int, tt__NetworkZeroConfigurationExtension2 *const*, const char *);
SOAP_FMAC3 tt__NetworkZeroConfigurationExtension2 ** SOAP_FMAC4 soap_in_PointerTott__NetworkZeroConfigurationExtension2(struct soap*, const char*, tt__NetworkZeroConfigurationExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkZeroConfigurationExtension2(struct soap*, tt__NetworkZeroConfigurationExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkZeroConfigurationExtension2
#define soap_write_PointerTott__NetworkZeroConfigurationExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkZeroConfigurationExtension2(soap, data),0) || soap_put_PointerTott__NetworkZeroConfigurationExtension2(soap, data, "tt:NetworkZeroConfigurationExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkZeroConfigurationExtension2 ** SOAP_FMAC4 soap_get_PointerTott__NetworkZeroConfigurationExtension2(struct soap*, tt__NetworkZeroConfigurationExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkZeroConfigurationExtension2
#define soap_read_PointerTott__NetworkZeroConfigurationExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__NetworkZeroConfigurationExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkZeroConfigurationExtension
#define SOAP_TYPE_PointerTott__NetworkZeroConfigurationExtension (1067)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkZeroConfigurationExtension(struct soap*, tt__NetworkZeroConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkZeroConfigurationExtension(struct soap*, const char *, int, tt__NetworkZeroConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__NetworkZeroConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__NetworkZeroConfigurationExtension(struct soap*, const char*, tt__NetworkZeroConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkZeroConfigurationExtension(struct soap*, tt__NetworkZeroConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkZeroConfigurationExtension
#define soap_write_PointerTott__NetworkZeroConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkZeroConfigurationExtension(soap, data),0) || soap_put_PointerTott__NetworkZeroConfigurationExtension(soap, data, "tt:NetworkZeroConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkZeroConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__NetworkZeroConfigurationExtension(struct soap*, tt__NetworkZeroConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkZeroConfigurationExtension
#define soap_read_PointerTott__NetworkZeroConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__NetworkZeroConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IPv6DHCPConfiguration
#define SOAP_TYPE_PointerTott__IPv6DHCPConfiguration (1066)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPv6DHCPConfiguration(struct soap*, enum tt__IPv6DHCPConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPv6DHCPConfiguration(struct soap*, const char *, int, enum tt__IPv6DHCPConfiguration *const*, const char *);
SOAP_FMAC3 enum tt__IPv6DHCPConfiguration ** SOAP_FMAC4 soap_in_PointerTott__IPv6DHCPConfiguration(struct soap*, const char*, enum tt__IPv6DHCPConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPv6DHCPConfiguration(struct soap*, enum tt__IPv6DHCPConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IPv6DHCPConfiguration
#define soap_write_PointerTott__IPv6DHCPConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IPv6DHCPConfiguration(soap, data),0) || soap_put_PointerTott__IPv6DHCPConfiguration(soap, data, "tt:IPv6DHCPConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__IPv6DHCPConfiguration ** SOAP_FMAC4 soap_get_PointerTott__IPv6DHCPConfiguration(struct soap*, enum tt__IPv6DHCPConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__IPv6DHCPConfiguration
#define soap_read_PointerTott__IPv6DHCPConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__IPv6DHCPConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkInterfaceSetConfigurationExtension2
#define SOAP_TYPE_PointerTott__NetworkInterfaceSetConfigurationExtension2 (1065)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkInterfaceSetConfigurationExtension2(struct soap*, tt__NetworkInterfaceSetConfigurationExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkInterfaceSetConfigurationExtension2(struct soap*, const char *, int, tt__NetworkInterfaceSetConfigurationExtension2 *const*, const char *);
SOAP_FMAC3 tt__NetworkInterfaceSetConfigurationExtension2 ** SOAP_FMAC4 soap_in_PointerTott__NetworkInterfaceSetConfigurationExtension2(struct soap*, const char*, tt__NetworkInterfaceSetConfigurationExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkInterfaceSetConfigurationExtension2(struct soap*, tt__NetworkInterfaceSetConfigurationExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkInterfaceSetConfigurationExtension2
#define soap_write_PointerTott__NetworkInterfaceSetConfigurationExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkInterfaceSetConfigurationExtension2(soap, data),0) || soap_put_PointerTott__NetworkInterfaceSetConfigurationExtension2(soap, data, "tt:NetworkInterfaceSetConfigurationExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceSetConfigurationExtension2 ** SOAP_FMAC4 soap_get_PointerTott__NetworkInterfaceSetConfigurationExtension2(struct soap*, tt__NetworkInterfaceSetConfigurationExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkInterfaceSetConfigurationExtension2
#define soap_read_PointerTott__NetworkInterfaceSetConfigurationExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__NetworkInterfaceSetConfigurationExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkInterfaceSetConfigurationExtension
#define SOAP_TYPE_PointerTott__NetworkInterfaceSetConfigurationExtension (1064)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkInterfaceSetConfigurationExtension(struct soap*, tt__NetworkInterfaceSetConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkInterfaceSetConfigurationExtension(struct soap*, const char *, int, tt__NetworkInterfaceSetConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__NetworkInterfaceSetConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__NetworkInterfaceSetConfigurationExtension(struct soap*, const char*, tt__NetworkInterfaceSetConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkInterfaceSetConfigurationExtension(struct soap*, tt__NetworkInterfaceSetConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkInterfaceSetConfigurationExtension
#define soap_write_PointerTott__NetworkInterfaceSetConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkInterfaceSetConfigurationExtension(soap, data),0) || soap_put_PointerTott__NetworkInterfaceSetConfigurationExtension(soap, data, "tt:NetworkInterfaceSetConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceSetConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__NetworkInterfaceSetConfigurationExtension(struct soap*, tt__NetworkInterfaceSetConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkInterfaceSetConfigurationExtension
#define soap_read_PointerTott__NetworkInterfaceSetConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__NetworkInterfaceSetConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IPv6NetworkInterfaceSetConfiguration
#define SOAP_TYPE_PointerTott__IPv6NetworkInterfaceSetConfiguration (1063)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPv6NetworkInterfaceSetConfiguration(struct soap*, tt__IPv6NetworkInterfaceSetConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPv6NetworkInterfaceSetConfiguration(struct soap*, const char *, int, tt__IPv6NetworkInterfaceSetConfiguration *const*, const char *);
SOAP_FMAC3 tt__IPv6NetworkInterfaceSetConfiguration ** SOAP_FMAC4 soap_in_PointerTott__IPv6NetworkInterfaceSetConfiguration(struct soap*, const char*, tt__IPv6NetworkInterfaceSetConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPv6NetworkInterfaceSetConfiguration(struct soap*, tt__IPv6NetworkInterfaceSetConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IPv6NetworkInterfaceSetConfiguration
#define soap_write_PointerTott__IPv6NetworkInterfaceSetConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IPv6NetworkInterfaceSetConfiguration(soap, data),0) || soap_put_PointerTott__IPv6NetworkInterfaceSetConfiguration(soap, data, "tt:IPv6NetworkInterfaceSetConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv6NetworkInterfaceSetConfiguration ** SOAP_FMAC4 soap_get_PointerTott__IPv6NetworkInterfaceSetConfiguration(struct soap*, tt__IPv6NetworkInterfaceSetConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__IPv6NetworkInterfaceSetConfiguration
#define soap_read_PointerTott__IPv6NetworkInterfaceSetConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__IPv6NetworkInterfaceSetConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IPv4NetworkInterfaceSetConfiguration
#define SOAP_TYPE_PointerTott__IPv4NetworkInterfaceSetConfiguration (1062)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPv4NetworkInterfaceSetConfiguration(struct soap*, tt__IPv4NetworkInterfaceSetConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPv4NetworkInterfaceSetConfiguration(struct soap*, const char *, int, tt__IPv4NetworkInterfaceSetConfiguration *const*, const char *);
SOAP_FMAC3 tt__IPv4NetworkInterfaceSetConfiguration ** SOAP_FMAC4 soap_in_PointerTott__IPv4NetworkInterfaceSetConfiguration(struct soap*, const char*, tt__IPv4NetworkInterfaceSetConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPv4NetworkInterfaceSetConfiguration(struct soap*, tt__IPv4NetworkInterfaceSetConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IPv4NetworkInterfaceSetConfiguration
#define soap_write_PointerTott__IPv4NetworkInterfaceSetConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IPv4NetworkInterfaceSetConfiguration(soap, data),0) || soap_put_PointerTott__IPv4NetworkInterfaceSetConfiguration(soap, data, "tt:IPv4NetworkInterfaceSetConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv4NetworkInterfaceSetConfiguration ** SOAP_FMAC4 soap_get_PointerTott__IPv4NetworkInterfaceSetConfiguration(struct soap*, tt__IPv4NetworkInterfaceSetConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__IPv4NetworkInterfaceSetConfiguration
#define soap_read_PointerTott__IPv4NetworkInterfaceSetConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__IPv4NetworkInterfaceSetConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DynamicDNSInformationExtension
#define SOAP_TYPE_PointerTott__DynamicDNSInformationExtension (1061)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DynamicDNSInformationExtension(struct soap*, tt__DynamicDNSInformationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DynamicDNSInformationExtension(struct soap*, const char *, int, tt__DynamicDNSInformationExtension *const*, const char *);
SOAP_FMAC3 tt__DynamicDNSInformationExtension ** SOAP_FMAC4 soap_in_PointerTott__DynamicDNSInformationExtension(struct soap*, const char*, tt__DynamicDNSInformationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DynamicDNSInformationExtension(struct soap*, tt__DynamicDNSInformationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DynamicDNSInformationExtension
#define soap_write_PointerTott__DynamicDNSInformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DynamicDNSInformationExtension(soap, data),0) || soap_put_PointerTott__DynamicDNSInformationExtension(soap, data, "tt:DynamicDNSInformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DynamicDNSInformationExtension ** SOAP_FMAC4 soap_get_PointerTott__DynamicDNSInformationExtension(struct soap*, tt__DynamicDNSInformationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__DynamicDNSInformationExtension
#define soap_read_PointerTott__DynamicDNSInformationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__DynamicDNSInformationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NTPInformationExtension
#define SOAP_TYPE_PointerTott__NTPInformationExtension (1060)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NTPInformationExtension(struct soap*, tt__NTPInformationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NTPInformationExtension(struct soap*, const char *, int, tt__NTPInformationExtension *const*, const char *);
SOAP_FMAC3 tt__NTPInformationExtension ** SOAP_FMAC4 soap_in_PointerTott__NTPInformationExtension(struct soap*, const char*, tt__NTPInformationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NTPInformationExtension(struct soap*, tt__NTPInformationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NTPInformationExtension
#define soap_write_PointerTott__NTPInformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NTPInformationExtension(soap, data),0) || soap_put_PointerTott__NTPInformationExtension(soap, data, "tt:NTPInformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NTPInformationExtension ** SOAP_FMAC4 soap_get_PointerTott__NTPInformationExtension(struct soap*, tt__NTPInformationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__NTPInformationExtension
#define soap_read_PointerTott__NTPInformationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__NTPInformationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DNSInformationExtension
#define SOAP_TYPE_PointerTott__DNSInformationExtension (1059)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DNSInformationExtension(struct soap*, tt__DNSInformationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DNSInformationExtension(struct soap*, const char *, int, tt__DNSInformationExtension *const*, const char *);
SOAP_FMAC3 tt__DNSInformationExtension ** SOAP_FMAC4 soap_in_PointerTott__DNSInformationExtension(struct soap*, const char*, tt__DNSInformationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DNSInformationExtension(struct soap*, tt__DNSInformationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DNSInformationExtension
#define soap_write_PointerTott__DNSInformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DNSInformationExtension(soap, data),0) || soap_put_PointerTott__DNSInformationExtension(soap, data, "tt:DNSInformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DNSInformationExtension ** SOAP_FMAC4 soap_get_PointerTott__DNSInformationExtension(struct soap*, tt__DNSInformationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__DNSInformationExtension
#define soap_read_PointerTott__DNSInformationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__DNSInformationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__HostnameInformationExtension
#define SOAP_TYPE_PointerTott__HostnameInformationExtension (1058)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__HostnameInformationExtension(struct soap*, tt__HostnameInformationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__HostnameInformationExtension(struct soap*, const char *, int, tt__HostnameInformationExtension *const*, const char *);
SOAP_FMAC3 tt__HostnameInformationExtension ** SOAP_FMAC4 soap_in_PointerTott__HostnameInformationExtension(struct soap*, const char*, tt__HostnameInformationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__HostnameInformationExtension(struct soap*, tt__HostnameInformationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__HostnameInformationExtension
#define soap_write_PointerTott__HostnameInformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__HostnameInformationExtension(soap, data),0) || soap_put_PointerTott__HostnameInformationExtension(soap, data, "tt:HostnameInformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__HostnameInformationExtension ** SOAP_FMAC4 soap_get_PointerTott__HostnameInformationExtension(struct soap*, tt__HostnameInformationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__HostnameInformationExtension
#define soap_read_PointerTott__HostnameInformationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__HostnameInformationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkHostExtension
#define SOAP_TYPE_PointerTott__NetworkHostExtension (1057)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkHostExtension(struct soap*, tt__NetworkHostExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkHostExtension(struct soap*, const char *, int, tt__NetworkHostExtension *const*, const char *);
SOAP_FMAC3 tt__NetworkHostExtension ** SOAP_FMAC4 soap_in_PointerTott__NetworkHostExtension(struct soap*, const char*, tt__NetworkHostExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkHostExtension(struct soap*, tt__NetworkHostExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkHostExtension
#define soap_write_PointerTott__NetworkHostExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkHostExtension(soap, data),0) || soap_put_PointerTott__NetworkHostExtension(soap, data, "tt:NetworkHostExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkHostExtension ** SOAP_FMAC4 soap_get_PointerTott__NetworkHostExtension(struct soap*, tt__NetworkHostExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkHostExtension
#define soap_read_PointerTott__NetworkHostExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__NetworkHostExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IPv6Address
#define SOAP_TYPE_PointerTott__IPv6Address (1056)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPv6Address(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPv6Address(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTott__IPv6Address(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPv6Address(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IPv6Address
#define soap_write_PointerTott__IPv6Address(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IPv6Address(soap, data),0) || soap_put_PointerTott__IPv6Address(soap, data, "tt:IPv6Address", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTott__IPv6Address(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTott__IPv6Address
#define soap_read_PointerTott__IPv6Address(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__IPv6Address(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IPv4Address
#define SOAP_TYPE_PointerTott__IPv4Address (1055)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPv4Address(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPv4Address(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTott__IPv4Address(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPv4Address(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IPv4Address
#define soap_write_PointerTott__IPv4Address(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IPv4Address(soap, data),0) || soap_put_PointerTott__IPv4Address(soap, data, "tt:IPv4Address", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTott__IPv4Address(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTott__IPv4Address
#define soap_read_PointerTott__IPv4Address(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__IPv4Address(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkProtocolExtension
#define SOAP_TYPE_PointerTott__NetworkProtocolExtension (1054)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkProtocolExtension(struct soap*, tt__NetworkProtocolExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkProtocolExtension(struct soap*, const char *, int, tt__NetworkProtocolExtension *const*, const char *);
SOAP_FMAC3 tt__NetworkProtocolExtension ** SOAP_FMAC4 soap_in_PointerTott__NetworkProtocolExtension(struct soap*, const char*, tt__NetworkProtocolExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkProtocolExtension(struct soap*, tt__NetworkProtocolExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkProtocolExtension
#define soap_write_PointerTott__NetworkProtocolExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkProtocolExtension(soap, data),0) || soap_put_PointerTott__NetworkProtocolExtension(soap, data, "tt:NetworkProtocolExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkProtocolExtension ** SOAP_FMAC4 soap_get_PointerTott__NetworkProtocolExtension(struct soap*, tt__NetworkProtocolExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkProtocolExtension
#define soap_read_PointerTott__NetworkProtocolExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__NetworkProtocolExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IPv6ConfigurationExtension
#define SOAP_TYPE_PointerTott__IPv6ConfigurationExtension (1053)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPv6ConfigurationExtension(struct soap*, tt__IPv6ConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPv6ConfigurationExtension(struct soap*, const char *, int, tt__IPv6ConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__IPv6ConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__IPv6ConfigurationExtension(struct soap*, const char*, tt__IPv6ConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPv6ConfigurationExtension(struct soap*, tt__IPv6ConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IPv6ConfigurationExtension
#define soap_write_PointerTott__IPv6ConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IPv6ConfigurationExtension(soap, data),0) || soap_put_PointerTott__IPv6ConfigurationExtension(soap, data, "tt:IPv6ConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv6ConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__IPv6ConfigurationExtension(struct soap*, tt__IPv6ConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__IPv6ConfigurationExtension
#define soap_read_PointerTott__IPv6ConfigurationExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__IPv6ConfigurationExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PrefixedIPv6Address
#define SOAP_TYPE_PointerTott__PrefixedIPv6Address (1051)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PrefixedIPv6Address(struct soap*, tt__PrefixedIPv6Address *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PrefixedIPv6Address(struct soap*, const char *, int, tt__PrefixedIPv6Address *const*, const char *);
SOAP_FMAC3 tt__PrefixedIPv6Address ** SOAP_FMAC4 soap_in_PointerTott__PrefixedIPv6Address(struct soap*, const char*, tt__PrefixedIPv6Address **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PrefixedIPv6Address(struct soap*, tt__PrefixedIPv6Address *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PrefixedIPv6Address
#define soap_write_PointerTott__PrefixedIPv6Address(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PrefixedIPv6Address(soap, data),0) || soap_put_PointerTott__PrefixedIPv6Address(soap, data, "tt:PrefixedIPv6Address", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PrefixedIPv6Address ** SOAP_FMAC4 soap_get_PointerTott__PrefixedIPv6Address(struct soap*, tt__PrefixedIPv6Address **, const char*, const char*);

#ifndef soap_read_PointerTott__PrefixedIPv6Address
#define soap_read_PointerTott__PrefixedIPv6Address(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PrefixedIPv6Address(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PrefixedIPv4Address
#define SOAP_TYPE_PointerTott__PrefixedIPv4Address (1049)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PrefixedIPv4Address(struct soap*, tt__PrefixedIPv4Address *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PrefixedIPv4Address(struct soap*, const char *, int, tt__PrefixedIPv4Address *const*, const char *);
SOAP_FMAC3 tt__PrefixedIPv4Address ** SOAP_FMAC4 soap_in_PointerTott__PrefixedIPv4Address(struct soap*, const char*, tt__PrefixedIPv4Address **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PrefixedIPv4Address(struct soap*, tt__PrefixedIPv4Address *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PrefixedIPv4Address
#define soap_write_PointerTott__PrefixedIPv4Address(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PrefixedIPv4Address(soap, data),0) || soap_put_PointerTott__PrefixedIPv4Address(soap, data, "tt:PrefixedIPv4Address", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PrefixedIPv4Address ** SOAP_FMAC4 soap_get_PointerTott__PrefixedIPv4Address(struct soap*, tt__PrefixedIPv4Address **, const char*, const char*);

#ifndef soap_read_PointerTott__PrefixedIPv4Address
#define soap_read_PointerTott__PrefixedIPv4Address(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PrefixedIPv4Address(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IPv4Configuration
#define SOAP_TYPE_PointerTott__IPv4Configuration (1048)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPv4Configuration(struct soap*, tt__IPv4Configuration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPv4Configuration(struct soap*, const char *, int, tt__IPv4Configuration *const*, const char *);
SOAP_FMAC3 tt__IPv4Configuration ** SOAP_FMAC4 soap_in_PointerTott__IPv4Configuration(struct soap*, const char*, tt__IPv4Configuration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPv4Configuration(struct soap*, tt__IPv4Configuration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IPv4Configuration
#define soap_write_PointerTott__IPv4Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IPv4Configuration(soap, data),0) || soap_put_PointerTott__IPv4Configuration(soap, data, "tt:IPv4Configuration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv4Configuration ** SOAP_FMAC4 soap_get_PointerTott__IPv4Configuration(struct soap*, tt__IPv4Configuration **, const char*, const char*);

#ifndef soap_read_PointerTott__IPv4Configuration
#define soap_read_PointerTott__IPv4Configuration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__IPv4Configuration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IPv6Configuration
#define SOAP_TYPE_PointerTott__IPv6Configuration (1047)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPv6Configuration(struct soap*, tt__IPv6Configuration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPv6Configuration(struct soap*, const char *, int, tt__IPv6Configuration *const*, const char *);
SOAP_FMAC3 tt__IPv6Configuration ** SOAP_FMAC4 soap_in_PointerTott__IPv6Configuration(struct soap*, const char*, tt__IPv6Configuration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPv6Configuration(struct soap*, tt__IPv6Configuration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IPv6Configuration
#define soap_write_PointerTott__IPv6Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IPv6Configuration(soap, data),0) || soap_put_PointerTott__IPv6Configuration(soap, data, "tt:IPv6Configuration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv6Configuration ** SOAP_FMAC4 soap_get_PointerTott__IPv6Configuration(struct soap*, tt__IPv6Configuration **, const char*, const char*);

#ifndef soap_read_PointerTott__IPv6Configuration
#define soap_read_PointerTott__IPv6Configuration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__IPv6Configuration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkInterfaceConnectionSetting
#define SOAP_TYPE_PointerTott__NetworkInterfaceConnectionSetting (1046)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkInterfaceConnectionSetting(struct soap*, tt__NetworkInterfaceConnectionSetting *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkInterfaceConnectionSetting(struct soap*, const char *, int, tt__NetworkInterfaceConnectionSetting *const*, const char *);
SOAP_FMAC3 tt__NetworkInterfaceConnectionSetting ** SOAP_FMAC4 soap_in_PointerTott__NetworkInterfaceConnectionSetting(struct soap*, const char*, tt__NetworkInterfaceConnectionSetting **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkInterfaceConnectionSetting(struct soap*, tt__NetworkInterfaceConnectionSetting *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkInterfaceConnectionSetting
#define soap_write_PointerTott__NetworkInterfaceConnectionSetting(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkInterfaceConnectionSetting(soap, data),0) || soap_put_PointerTott__NetworkInterfaceConnectionSetting(soap, data, "tt:NetworkInterfaceConnectionSetting", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceConnectionSetting ** SOAP_FMAC4 soap_get_PointerTott__NetworkInterfaceConnectionSetting(struct soap*, tt__NetworkInterfaceConnectionSetting **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkInterfaceConnectionSetting
#define soap_read_PointerTott__NetworkInterfaceConnectionSetting(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__NetworkInterfaceConnectionSetting(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkInterfaceExtension2
#define SOAP_TYPE_PointerTott__NetworkInterfaceExtension2 (1045)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkInterfaceExtension2(struct soap*, tt__NetworkInterfaceExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkInterfaceExtension2(struct soap*, const char *, int, tt__NetworkInterfaceExtension2 *const*, const char *);
SOAP_FMAC3 tt__NetworkInterfaceExtension2 ** SOAP_FMAC4 soap_in_PointerTott__NetworkInterfaceExtension2(struct soap*, const char*, tt__NetworkInterfaceExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkInterfaceExtension2(struct soap*, tt__NetworkInterfaceExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkInterfaceExtension2
#define soap_write_PointerTott__NetworkInterfaceExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkInterfaceExtension2(soap, data),0) || soap_put_PointerTott__NetworkInterfaceExtension2(soap, data, "tt:NetworkInterfaceExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceExtension2 ** SOAP_FMAC4 soap_get_PointerTott__NetworkInterfaceExtension2(struct soap*, tt__NetworkInterfaceExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkInterfaceExtension2
#define soap_read_PointerTott__NetworkInterfaceExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__NetworkInterfaceExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot11Configuration
#define SOAP_TYPE_PointerTott__Dot11Configuration (1043)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot11Configuration(struct soap*, tt__Dot11Configuration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot11Configuration(struct soap*, const char *, int, tt__Dot11Configuration *const*, const char *);
SOAP_FMAC3 tt__Dot11Configuration ** SOAP_FMAC4 soap_in_PointerTott__Dot11Configuration(struct soap*, const char*, tt__Dot11Configuration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot11Configuration(struct soap*, tt__Dot11Configuration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot11Configuration
#define soap_write_PointerTott__Dot11Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot11Configuration(soap, data),0) || soap_put_PointerTott__Dot11Configuration(soap, data, "tt:Dot11Configuration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11Configuration ** SOAP_FMAC4 soap_get_PointerTott__Dot11Configuration(struct soap*, tt__Dot11Configuration **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot11Configuration
#define soap_read_PointerTott__Dot11Configuration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Dot11Configuration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot3Configuration
#define SOAP_TYPE_PointerTott__Dot3Configuration (1041)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot3Configuration(struct soap*, tt__Dot3Configuration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot3Configuration(struct soap*, const char *, int, tt__Dot3Configuration *const*, const char *);
SOAP_FMAC3 tt__Dot3Configuration ** SOAP_FMAC4 soap_in_PointerTott__Dot3Configuration(struct soap*, const char*, tt__Dot3Configuration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot3Configuration(struct soap*, tt__Dot3Configuration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot3Configuration
#define soap_write_PointerTott__Dot3Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot3Configuration(soap, data),0) || soap_put_PointerTott__Dot3Configuration(soap, data, "tt:Dot3Configuration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot3Configuration ** SOAP_FMAC4 soap_get_PointerTott__Dot3Configuration(struct soap*, tt__Dot3Configuration **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot3Configuration
#define soap_read_PointerTott__Dot3Configuration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Dot3Configuration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Transport
#define SOAP_TYPE_PointerTott__Transport (1040)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Transport(struct soap*, tt__Transport *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Transport(struct soap*, const char *, int, tt__Transport *const*, const char *);
SOAP_FMAC3 tt__Transport ** SOAP_FMAC4 soap_in_PointerTott__Transport(struct soap*, const char*, tt__Transport **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Transport(struct soap*, tt__Transport *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Transport
#define soap_write_PointerTott__Transport(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Transport(soap, data),0) || soap_put_PointerTott__Transport(soap, data, "tt:Transport", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Transport ** SOAP_FMAC4 soap_get_PointerTott__Transport(struct soap*, tt__Transport **, const char*, const char*);

#ifndef soap_read_PointerTott__Transport
#define soap_read_PointerTott__Transport(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Transport(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioDecoderConfigurationOptionsExtension
#define SOAP_TYPE_PointerTott__AudioDecoderConfigurationOptionsExtension (1039)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioDecoderConfigurationOptionsExtension(struct soap*, tt__AudioDecoderConfigurationOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioDecoderConfigurationOptionsExtension(struct soap*, const char *, int, tt__AudioDecoderConfigurationOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__AudioDecoderConfigurationOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__AudioDecoderConfigurationOptionsExtension(struct soap*, const char*, tt__AudioDecoderConfigurationOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioDecoderConfigurationOptionsExtension(struct soap*, tt__AudioDecoderConfigurationOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioDecoderConfigurationOptionsExtension
#define soap_write_PointerTott__AudioDecoderConfigurationOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioDecoderConfigurationOptionsExtension(soap, data),0) || soap_put_PointerTott__AudioDecoderConfigurationOptionsExtension(soap, data, "tt:AudioDecoderConfigurationOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioDecoderConfigurationOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__AudioDecoderConfigurationOptionsExtension(struct soap*, tt__AudioDecoderConfigurationOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioDecoderConfigurationOptionsExtension
#define soap_read_PointerTott__AudioDecoderConfigurationOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AudioDecoderConfigurationOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__G726DecOptions
#define SOAP_TYPE_PointerTott__G726DecOptions (1038)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__G726DecOptions(struct soap*, tt__G726DecOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__G726DecOptions(struct soap*, const char *, int, tt__G726DecOptions *const*, const char *);
SOAP_FMAC3 tt__G726DecOptions ** SOAP_FMAC4 soap_in_PointerTott__G726DecOptions(struct soap*, const char*, tt__G726DecOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__G726DecOptions(struct soap*, tt__G726DecOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__G726DecOptions
#define soap_write_PointerTott__G726DecOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__G726DecOptions(soap, data),0) || soap_put_PointerTott__G726DecOptions(soap, data, "tt:G726DecOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__G726DecOptions ** SOAP_FMAC4 soap_get_PointerTott__G726DecOptions(struct soap*, tt__G726DecOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__G726DecOptions
#define soap_read_PointerTott__G726DecOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__G726DecOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__G711DecOptions
#define SOAP_TYPE_PointerTott__G711DecOptions (1037)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__G711DecOptions(struct soap*, tt__G711DecOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__G711DecOptions(struct soap*, const char *, int, tt__G711DecOptions *const*, const char *);
SOAP_FMAC3 tt__G711DecOptions ** SOAP_FMAC4 soap_in_PointerTott__G711DecOptions(struct soap*, const char*, tt__G711DecOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__G711DecOptions(struct soap*, tt__G711DecOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__G711DecOptions
#define soap_write_PointerTott__G711DecOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__G711DecOptions(soap, data),0) || soap_put_PointerTott__G711DecOptions(soap, data, "tt:G711DecOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__G711DecOptions ** SOAP_FMAC4 soap_get_PointerTott__G711DecOptions(struct soap*, tt__G711DecOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__G711DecOptions
#define soap_read_PointerTott__G711DecOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__G711DecOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AACDecOptions
#define SOAP_TYPE_PointerTott__AACDecOptions (1036)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AACDecOptions(struct soap*, tt__AACDecOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AACDecOptions(struct soap*, const char *, int, tt__AACDecOptions *const*, const char *);
SOAP_FMAC3 tt__AACDecOptions ** SOAP_FMAC4 soap_in_PointerTott__AACDecOptions(struct soap*, const char*, tt__AACDecOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AACDecOptions(struct soap*, tt__AACDecOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AACDecOptions
#define soap_write_PointerTott__AACDecOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AACDecOptions(soap, data),0) || soap_put_PointerTott__AACDecOptions(soap, data, "tt:AACDecOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AACDecOptions ** SOAP_FMAC4 soap_get_PointerTott__AACDecOptions(struct soap*, tt__AACDecOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__AACDecOptions
#define soap_read_PointerTott__AACDecOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AACDecOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoDecoderConfigurationOptionsExtension
#define SOAP_TYPE_PointerTott__VideoDecoderConfigurationOptionsExtension (1035)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoDecoderConfigurationOptionsExtension(struct soap*, tt__VideoDecoderConfigurationOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoDecoderConfigurationOptionsExtension(struct soap*, const char *, int, tt__VideoDecoderConfigurationOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__VideoDecoderConfigurationOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__VideoDecoderConfigurationOptionsExtension(struct soap*, const char*, tt__VideoDecoderConfigurationOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoDecoderConfigurationOptionsExtension(struct soap*, tt__VideoDecoderConfigurationOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoDecoderConfigurationOptionsExtension
#define soap_write_PointerTott__VideoDecoderConfigurationOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoDecoderConfigurationOptionsExtension(soap, data),0) || soap_put_PointerTott__VideoDecoderConfigurationOptionsExtension(soap, data, "tt:VideoDecoderConfigurationOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoDecoderConfigurationOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__VideoDecoderConfigurationOptionsExtension(struct soap*, tt__VideoDecoderConfigurationOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoDecoderConfigurationOptionsExtension
#define soap_read_PointerTott__VideoDecoderConfigurationOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__VideoDecoderConfigurationOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Mpeg4DecOptions
#define SOAP_TYPE_PointerTott__Mpeg4DecOptions (1034)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Mpeg4DecOptions(struct soap*, tt__Mpeg4DecOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Mpeg4DecOptions(struct soap*, const char *, int, tt__Mpeg4DecOptions *const*, const char *);
SOAP_FMAC3 tt__Mpeg4DecOptions ** SOAP_FMAC4 soap_in_PointerTott__Mpeg4DecOptions(struct soap*, const char*, tt__Mpeg4DecOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Mpeg4DecOptions(struct soap*, tt__Mpeg4DecOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Mpeg4DecOptions
#define soap_write_PointerTott__Mpeg4DecOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Mpeg4DecOptions(soap, data),0) || soap_put_PointerTott__Mpeg4DecOptions(soap, data, "tt:Mpeg4DecOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Mpeg4DecOptions ** SOAP_FMAC4 soap_get_PointerTott__Mpeg4DecOptions(struct soap*, tt__Mpeg4DecOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__Mpeg4DecOptions
#define soap_read_PointerTott__Mpeg4DecOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Mpeg4DecOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__H264DecOptions
#define SOAP_TYPE_PointerTott__H264DecOptions (1033)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__H264DecOptions(struct soap*, tt__H264DecOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__H264DecOptions(struct soap*, const char *, int, tt__H264DecOptions *const*, const char *);
SOAP_FMAC3 tt__H264DecOptions ** SOAP_FMAC4 soap_in_PointerTott__H264DecOptions(struct soap*, const char*, tt__H264DecOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__H264DecOptions(struct soap*, tt__H264DecOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__H264DecOptions
#define soap_write_PointerTott__H264DecOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__H264DecOptions(soap, data),0) || soap_put_PointerTott__H264DecOptions(soap, data, "tt:H264DecOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__H264DecOptions ** SOAP_FMAC4 soap_get_PointerTott__H264DecOptions(struct soap*, tt__H264DecOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__H264DecOptions
#define soap_read_PointerTott__H264DecOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__H264DecOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__JpegDecOptions
#define SOAP_TYPE_PointerTott__JpegDecOptions (1032)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__JpegDecOptions(struct soap*, tt__JpegDecOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__JpegDecOptions(struct soap*, const char *, int, tt__JpegDecOptions *const*, const char *);
SOAP_FMAC3 tt__JpegDecOptions ** SOAP_FMAC4 soap_in_PointerTott__JpegDecOptions(struct soap*, const char*, tt__JpegDecOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__JpegDecOptions(struct soap*, tt__JpegDecOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__JpegDecOptions
#define soap_write_PointerTott__JpegDecOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__JpegDecOptions(soap, data),0) || soap_put_PointerTott__JpegDecOptions(soap, data, "tt:JpegDecOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__JpegDecOptions ** SOAP_FMAC4 soap_get_PointerTott__JpegDecOptions(struct soap*, tt__JpegDecOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__JpegDecOptions
#define soap_read_PointerTott__JpegDecOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__JpegDecOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZStatusFilterOptionsExtension
#define SOAP_TYPE_PointerTott__PTZStatusFilterOptionsExtension (1031)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZStatusFilterOptionsExtension(struct soap*, tt__PTZStatusFilterOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZStatusFilterOptionsExtension(struct soap*, const char *, int, tt__PTZStatusFilterOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__PTZStatusFilterOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__PTZStatusFilterOptionsExtension(struct soap*, const char*, tt__PTZStatusFilterOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZStatusFilterOptionsExtension(struct soap*, tt__PTZStatusFilterOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZStatusFilterOptionsExtension
#define soap_write_PointerTott__PTZStatusFilterOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZStatusFilterOptionsExtension(soap, data),0) || soap_put_PointerTott__PTZStatusFilterOptionsExtension(soap, data, "tt:PTZStatusFilterOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZStatusFilterOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__PTZStatusFilterOptionsExtension(struct soap*, tt__PTZStatusFilterOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZStatusFilterOptionsExtension
#define soap_read_PointerTott__PTZStatusFilterOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZStatusFilterOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZStatusFilterOptions
#define SOAP_TYPE_PointerTott__PTZStatusFilterOptions (1030)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZStatusFilterOptions(struct soap*, tt__PTZStatusFilterOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZStatusFilterOptions(struct soap*, const char *, int, tt__PTZStatusFilterOptions *const*, const char *);
SOAP_FMAC3 tt__PTZStatusFilterOptions ** SOAP_FMAC4 soap_in_PointerTott__PTZStatusFilterOptions(struct soap*, const char*, tt__PTZStatusFilterOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZStatusFilterOptions(struct soap*, tt__PTZStatusFilterOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZStatusFilterOptions
#define soap_write_PointerTott__PTZStatusFilterOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZStatusFilterOptions(soap, data),0) || soap_put_PointerTott__PTZStatusFilterOptions(soap, data, "tt:PTZStatusFilterOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZStatusFilterOptions ** SOAP_FMAC4 soap_get_PointerTott__PTZStatusFilterOptions(struct soap*, tt__PTZStatusFilterOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZStatusFilterOptions
#define soap_read_PointerTott__PTZStatusFilterOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZStatusFilterOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tt__EventSubscription_SubscriptionPolicy
#define SOAP_TYPE_PointerTo_tt__EventSubscription_SubscriptionPolicy (1029)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tt__EventSubscription_SubscriptionPolicy(struct soap*, _tt__EventSubscription_SubscriptionPolicy *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tt__EventSubscription_SubscriptionPolicy(struct soap*, const char *, int, _tt__EventSubscription_SubscriptionPolicy *const*, const char *);
SOAP_FMAC3 _tt__EventSubscription_SubscriptionPolicy ** SOAP_FMAC4 soap_in_PointerTo_tt__EventSubscription_SubscriptionPolicy(struct soap*, const char*, _tt__EventSubscription_SubscriptionPolicy **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tt__EventSubscription_SubscriptionPolicy(struct soap*, _tt__EventSubscription_SubscriptionPolicy *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tt__EventSubscription_SubscriptionPolicy
#define soap_write_PointerTo_tt__EventSubscription_SubscriptionPolicy(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tt__EventSubscription_SubscriptionPolicy(soap, data),0) || soap_put_PointerTo_tt__EventSubscription_SubscriptionPolicy(soap, data, "tt:EventSubscription-SubscriptionPolicy", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tt__EventSubscription_SubscriptionPolicy ** SOAP_FMAC4 soap_get_PointerTo_tt__EventSubscription_SubscriptionPolicy(struct soap*, _tt__EventSubscription_SubscriptionPolicy **, const char*, const char*);

#ifndef soap_read_PointerTo_tt__EventSubscription_SubscriptionPolicy
#define soap_read_PointerTo_tt__EventSubscription_SubscriptionPolicy(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tt__EventSubscription_SubscriptionPolicy(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsnt__FilterType
#define SOAP_TYPE_PointerTowsnt__FilterType (1027)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__FilterType(struct soap*, wsnt__FilterType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__FilterType(struct soap*, const char *, int, wsnt__FilterType *const*, const char *);
SOAP_FMAC3 wsnt__FilterType ** SOAP_FMAC4 soap_in_PointerTowsnt__FilterType(struct soap*, const char*, wsnt__FilterType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__FilterType(struct soap*, wsnt__FilterType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsnt__FilterType
#define soap_write_PointerTowsnt__FilterType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsnt__FilterType(soap, data),0) || soap_put_PointerTowsnt__FilterType(soap, data, "wsnt:FilterType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__FilterType ** SOAP_FMAC4 soap_get_PointerTowsnt__FilterType(struct soap*, wsnt__FilterType **, const char*, const char*);

#ifndef soap_read_PointerTowsnt__FilterType
#define soap_read_PointerTowsnt__FilterType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsnt__FilterType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioEncoderConfigurationOption
#define SOAP_TYPE_PointerTott__AudioEncoderConfigurationOption (1025)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioEncoderConfigurationOption(struct soap*, tt__AudioEncoderConfigurationOption *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioEncoderConfigurationOption(struct soap*, const char *, int, tt__AudioEncoderConfigurationOption *const*, const char *);
SOAP_FMAC3 tt__AudioEncoderConfigurationOption ** SOAP_FMAC4 soap_in_PointerTott__AudioEncoderConfigurationOption(struct soap*, const char*, tt__AudioEncoderConfigurationOption **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioEncoderConfigurationOption(struct soap*, tt__AudioEncoderConfigurationOption *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioEncoderConfigurationOption
#define soap_write_PointerTott__AudioEncoderConfigurationOption(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioEncoderConfigurationOption(soap, data),0) || soap_put_PointerTott__AudioEncoderConfigurationOption(soap, data, "tt:AudioEncoderConfigurationOption", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioEncoderConfigurationOption ** SOAP_FMAC4 soap_get_PointerTott__AudioEncoderConfigurationOption(struct soap*, tt__AudioEncoderConfigurationOption **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioEncoderConfigurationOption
#define soap_read_PointerTott__AudioEncoderConfigurationOption(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AudioEncoderConfigurationOption(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioSourceOptionsExtension
#define SOAP_TYPE_PointerTott__AudioSourceOptionsExtension (1024)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioSourceOptionsExtension(struct soap*, tt__AudioSourceOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioSourceOptionsExtension(struct soap*, const char *, int, tt__AudioSourceOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__AudioSourceOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__AudioSourceOptionsExtension(struct soap*, const char*, tt__AudioSourceOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioSourceOptionsExtension(struct soap*, tt__AudioSourceOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioSourceOptionsExtension
#define soap_write_PointerTott__AudioSourceOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioSourceOptionsExtension(soap, data),0) || soap_put_PointerTott__AudioSourceOptionsExtension(soap, data, "tt:AudioSourceOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioSourceOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__AudioSourceOptionsExtension(struct soap*, tt__AudioSourceOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioSourceOptionsExtension
#define soap_read_PointerTott__AudioSourceOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AudioSourceOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoResolution
#define SOAP_TYPE_PointerTott__VideoResolution (1020)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoResolution(struct soap*, tt__VideoResolution *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoResolution(struct soap*, const char *, int, tt__VideoResolution *const*, const char *);
SOAP_FMAC3 tt__VideoResolution ** SOAP_FMAC4 soap_in_PointerTott__VideoResolution(struct soap*, const char*, tt__VideoResolution **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoResolution(struct soap*, tt__VideoResolution *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoResolution
#define soap_write_PointerTott__VideoResolution(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoResolution(soap, data),0) || soap_put_PointerTott__VideoResolution(soap, data, "tt:VideoResolution", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoResolution ** SOAP_FMAC4 soap_get_PointerTott__VideoResolution(struct soap*, tt__VideoResolution **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoResolution
#define soap_read_PointerTott__VideoResolution(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__VideoResolution(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoEncoderOptionsExtension2
#define SOAP_TYPE_PointerTott__VideoEncoderOptionsExtension2 (1019)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoEncoderOptionsExtension2(struct soap*, tt__VideoEncoderOptionsExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoEncoderOptionsExtension2(struct soap*, const char *, int, tt__VideoEncoderOptionsExtension2 *const*, const char *);
SOAP_FMAC3 tt__VideoEncoderOptionsExtension2 ** SOAP_FMAC4 soap_in_PointerTott__VideoEncoderOptionsExtension2(struct soap*, const char*, tt__VideoEncoderOptionsExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoEncoderOptionsExtension2(struct soap*, tt__VideoEncoderOptionsExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoEncoderOptionsExtension2
#define soap_write_PointerTott__VideoEncoderOptionsExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoEncoderOptionsExtension2(soap, data),0) || soap_put_PointerTott__VideoEncoderOptionsExtension2(soap, data, "tt:VideoEncoderOptionsExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoEncoderOptionsExtension2 ** SOAP_FMAC4 soap_get_PointerTott__VideoEncoderOptionsExtension2(struct soap*, tt__VideoEncoderOptionsExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoEncoderOptionsExtension2
#define soap_read_PointerTott__VideoEncoderOptionsExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__VideoEncoderOptionsExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__H264Options2
#define SOAP_TYPE_PointerTott__H264Options2 (1018)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__H264Options2(struct soap*, tt__H264Options2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__H264Options2(struct soap*, const char *, int, tt__H264Options2 *const*, const char *);
SOAP_FMAC3 tt__H264Options2 ** SOAP_FMAC4 soap_in_PointerTott__H264Options2(struct soap*, const char*, tt__H264Options2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__H264Options2(struct soap*, tt__H264Options2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__H264Options2
#define soap_write_PointerTott__H264Options2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__H264Options2(soap, data),0) || soap_put_PointerTott__H264Options2(soap, data, "tt:H264Options2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__H264Options2 ** SOAP_FMAC4 soap_get_PointerTott__H264Options2(struct soap*, tt__H264Options2 **, const char*, const char*);

#ifndef soap_read_PointerTott__H264Options2
#define soap_read_PointerTott__H264Options2(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__H264Options2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Mpeg4Options2
#define SOAP_TYPE_PointerTott__Mpeg4Options2 (1017)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Mpeg4Options2(struct soap*, tt__Mpeg4Options2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Mpeg4Options2(struct soap*, const char *, int, tt__Mpeg4Options2 *const*, const char *);
SOAP_FMAC3 tt__Mpeg4Options2 ** SOAP_FMAC4 soap_in_PointerTott__Mpeg4Options2(struct soap*, const char*, tt__Mpeg4Options2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Mpeg4Options2(struct soap*, tt__Mpeg4Options2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Mpeg4Options2
#define soap_write_PointerTott__Mpeg4Options2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Mpeg4Options2(soap, data),0) || soap_put_PointerTott__Mpeg4Options2(soap, data, "tt:Mpeg4Options2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Mpeg4Options2 ** SOAP_FMAC4 soap_get_PointerTott__Mpeg4Options2(struct soap*, tt__Mpeg4Options2 **, const char*, const char*);

#ifndef soap_read_PointerTott__Mpeg4Options2
#define soap_read_PointerTott__Mpeg4Options2(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Mpeg4Options2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__JpegOptions2
#define SOAP_TYPE_PointerTott__JpegOptions2 (1016)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__JpegOptions2(struct soap*, tt__JpegOptions2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__JpegOptions2(struct soap*, const char *, int, tt__JpegOptions2 *const*, const char *);
SOAP_FMAC3 tt__JpegOptions2 ** SOAP_FMAC4 soap_in_PointerTott__JpegOptions2(struct soap*, const char*, tt__JpegOptions2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__JpegOptions2(struct soap*, tt__JpegOptions2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__JpegOptions2
#define soap_write_PointerTott__JpegOptions2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__JpegOptions2(soap, data),0) || soap_put_PointerTott__JpegOptions2(soap, data, "tt:JpegOptions2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__JpegOptions2 ** SOAP_FMAC4 soap_get_PointerTott__JpegOptions2(struct soap*, tt__JpegOptions2 **, const char*, const char*);

#ifndef soap_read_PointerTott__JpegOptions2
#define soap_read_PointerTott__JpegOptions2(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__JpegOptions2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoEncoderOptionsExtension
#define SOAP_TYPE_PointerTott__VideoEncoderOptionsExtension (1015)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoEncoderOptionsExtension(struct soap*, tt__VideoEncoderOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoEncoderOptionsExtension(struct soap*, const char *, int, tt__VideoEncoderOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__VideoEncoderOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__VideoEncoderOptionsExtension(struct soap*, const char*, tt__VideoEncoderOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoEncoderOptionsExtension(struct soap*, tt__VideoEncoderOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoEncoderOptionsExtension
#define soap_write_PointerTott__VideoEncoderOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoEncoderOptionsExtension(soap, data),0) || soap_put_PointerTott__VideoEncoderOptionsExtension(soap, data, "tt:VideoEncoderOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoEncoderOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__VideoEncoderOptionsExtension(struct soap*, tt__VideoEncoderOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoEncoderOptionsExtension
#define soap_read_PointerTott__VideoEncoderOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__VideoEncoderOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__H264Options
#define SOAP_TYPE_PointerTott__H264Options (1014)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__H264Options(struct soap*, tt__H264Options *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__H264Options(struct soap*, const char *, int, tt__H264Options *const*, const char *);
SOAP_FMAC3 tt__H264Options ** SOAP_FMAC4 soap_in_PointerTott__H264Options(struct soap*, const char*, tt__H264Options **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__H264Options(struct soap*, tt__H264Options *const*, const char*, const char*);

#ifndef soap_write_PointerTott__H264Options
#define soap_write_PointerTott__H264Options(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__H264Options(soap, data),0) || soap_put_PointerTott__H264Options(soap, data, "tt:H264Options", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__H264Options ** SOAP_FMAC4 soap_get_PointerTott__H264Options(struct soap*, tt__H264Options **, const char*, const char*);

#ifndef soap_read_PointerTott__H264Options
#define soap_read_PointerTott__H264Options(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__H264Options(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Mpeg4Options
#define SOAP_TYPE_PointerTott__Mpeg4Options (1013)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Mpeg4Options(struct soap*, tt__Mpeg4Options *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Mpeg4Options(struct soap*, const char *, int, tt__Mpeg4Options *const*, const char *);
SOAP_FMAC3 tt__Mpeg4Options ** SOAP_FMAC4 soap_in_PointerTott__Mpeg4Options(struct soap*, const char*, tt__Mpeg4Options **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Mpeg4Options(struct soap*, tt__Mpeg4Options *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Mpeg4Options
#define soap_write_PointerTott__Mpeg4Options(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Mpeg4Options(soap, data),0) || soap_put_PointerTott__Mpeg4Options(soap, data, "tt:Mpeg4Options", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Mpeg4Options ** SOAP_FMAC4 soap_get_PointerTott__Mpeg4Options(struct soap*, tt__Mpeg4Options **, const char*, const char*);

#ifndef soap_read_PointerTott__Mpeg4Options
#define soap_read_PointerTott__Mpeg4Options(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Mpeg4Options(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__JpegOptions
#define SOAP_TYPE_PointerTott__JpegOptions (1012)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__JpegOptions(struct soap*, tt__JpegOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__JpegOptions(struct soap*, const char *, int, tt__JpegOptions *const*, const char *);
SOAP_FMAC3 tt__JpegOptions ** SOAP_FMAC4 soap_in_PointerTott__JpegOptions(struct soap*, const char*, tt__JpegOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__JpegOptions(struct soap*, tt__JpegOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__JpegOptions
#define soap_write_PointerTott__JpegOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__JpegOptions(soap, data),0) || soap_put_PointerTott__JpegOptions(soap, data, "tt:JpegOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__JpegOptions ** SOAP_FMAC4 soap_get_PointerTott__JpegOptions(struct soap*, tt__JpegOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__JpegOptions
#define soap_read_PointerTott__JpegOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__JpegOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RotateOptionsExtension
#define SOAP_TYPE_PointerTott__RotateOptionsExtension (1011)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RotateOptionsExtension(struct soap*, tt__RotateOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RotateOptionsExtension(struct soap*, const char *, int, tt__RotateOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__RotateOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__RotateOptionsExtension(struct soap*, const char*, tt__RotateOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RotateOptionsExtension(struct soap*, tt__RotateOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RotateOptionsExtension
#define soap_write_PointerTott__RotateOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RotateOptionsExtension(soap, data),0) || soap_put_PointerTott__RotateOptionsExtension(soap, data, "tt:RotateOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RotateOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__RotateOptionsExtension(struct soap*, tt__RotateOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__RotateOptionsExtension
#define soap_read_PointerTott__RotateOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__RotateOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IntList
#define SOAP_TYPE_PointerTott__IntList (1010)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IntList(struct soap*, tt__IntList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IntList(struct soap*, const char *, int, tt__IntList *const*, const char *);
SOAP_FMAC3 tt__IntList ** SOAP_FMAC4 soap_in_PointerTott__IntList(struct soap*, const char*, tt__IntList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IntList(struct soap*, tt__IntList *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IntList
#define soap_write_PointerTott__IntList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IntList(soap, data),0) || soap_put_PointerTott__IntList(soap, data, "tt:IntList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IntList ** SOAP_FMAC4 soap_get_PointerTott__IntList(struct soap*, tt__IntList **, const char*, const char*);

#ifndef soap_read_PointerTott__IntList
#define soap_read_PointerTott__IntList(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__IntList(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoSourceConfigurationOptionsExtension2
#define SOAP_TYPE_PointerTott__VideoSourceConfigurationOptionsExtension2 (1008)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoSourceConfigurationOptionsExtension2(struct soap*, tt__VideoSourceConfigurationOptionsExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoSourceConfigurationOptionsExtension2(struct soap*, const char *, int, tt__VideoSourceConfigurationOptionsExtension2 *const*, const char *);
SOAP_FMAC3 tt__VideoSourceConfigurationOptionsExtension2 ** SOAP_FMAC4 soap_in_PointerTott__VideoSourceConfigurationOptionsExtension2(struct soap*, const char*, tt__VideoSourceConfigurationOptionsExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoSourceConfigurationOptionsExtension2(struct soap*, tt__VideoSourceConfigurationOptionsExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoSourceConfigurationOptionsExtension2
#define soap_write_PointerTott__VideoSourceConfigurationOptionsExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoSourceConfigurationOptionsExtension2(soap, data),0) || soap_put_PointerTott__VideoSourceConfigurationOptionsExtension2(soap, data, "tt:VideoSourceConfigurationOptionsExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceConfigurationOptionsExtension2 ** SOAP_FMAC4 soap_get_PointerTott__VideoSourceConfigurationOptionsExtension2(struct soap*, tt__VideoSourceConfigurationOptionsExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoSourceConfigurationOptionsExtension2
#define soap_read_PointerTott__VideoSourceConfigurationOptionsExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__VideoSourceConfigurationOptionsExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RotateOptions
#define SOAP_TYPE_PointerTott__RotateOptions (1007)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RotateOptions(struct soap*, tt__RotateOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RotateOptions(struct soap*, const char *, int, tt__RotateOptions *const*, const char *);
SOAP_FMAC3 tt__RotateOptions ** SOAP_FMAC4 soap_in_PointerTott__RotateOptions(struct soap*, const char*, tt__RotateOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RotateOptions(struct soap*, tt__RotateOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RotateOptions
#define soap_write_PointerTott__RotateOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RotateOptions(soap, data),0) || soap_put_PointerTott__RotateOptions(soap, data, "tt:RotateOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RotateOptions ** SOAP_FMAC4 soap_get_PointerTott__RotateOptions(struct soap*, tt__RotateOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__RotateOptions
#define soap_read_PointerTott__RotateOptions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__RotateOptions(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoSourceConfigurationOptionsExtension
#define SOAP_TYPE_PointerTott__VideoSourceConfigurationOptionsExtension (1006)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoSourceConfigurationOptionsExtension(struct soap*, tt__VideoSourceConfigurationOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoSourceConfigurationOptionsExtension(struct soap*, const char *, int, tt__VideoSourceConfigurationOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__VideoSourceConfigurationOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__VideoSourceConfigurationOptionsExtension(struct soap*, const char*, tt__VideoSourceConfigurationOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoSourceConfigurationOptionsExtension(struct soap*, tt__VideoSourceConfigurationOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoSourceConfigurationOptionsExtension
#define soap_write_PointerTott__VideoSourceConfigurationOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoSourceConfigurationOptionsExtension(soap, data),0) || soap_put_PointerTott__VideoSourceConfigurationOptionsExtension(soap, data, "tt:VideoSourceConfigurationOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceConfigurationOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__VideoSourceConfigurationOptionsExtension(struct soap*, tt__VideoSourceConfigurationOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoSourceConfigurationOptionsExtension
#define soap_read_PointerTott__VideoSourceConfigurationOptionsExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__VideoSourceConfigurationOptionsExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IntRectangleRange
#define SOAP_TYPE_PointerTott__IntRectangleRange (1005)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IntRectangleRange(struct soap*, tt__IntRectangleRange *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IntRectangleRange(struct soap*, const char *, int, tt__IntRectangleRange *const*, const char *);
SOAP_FMAC3 tt__IntRectangleRange ** SOAP_FMAC4 soap_in_PointerTott__IntRectangleRange(struct soap*, const char*, tt__IntRectangleRange **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IntRectangleRange(struct soap*, tt__IntRectangleRange *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IntRectangleRange
#define soap_write_PointerTott__IntRectangleRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IntRectangleRange(soap, data),0) || soap_put_PointerTott__IntRectangleRange(soap, data, "tt:IntRectangleRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IntRectangleRange ** SOAP_FMAC4 soap_get_PointerTott__IntRectangleRange(struct soap*, tt__IntRectangleRange **, const char*, const char*);

#ifndef soap_read_PointerTott__IntRectangleRange
#define soap_read_PointerTott__IntRectangleRange(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__IntRectangleRange(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RotateExtension
#define SOAP_TYPE_PointerTott__RotateExtension (1004)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RotateExtension(struct soap*, tt__RotateExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RotateExtension(struct soap*, const char *, int, tt__RotateExtension *const*, const char *);
SOAP_FMAC3 tt__RotateExtension ** SOAP_FMAC4 soap_in_PointerTott__RotateExtension(struct soap*, const char*, tt__RotateExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RotateExtension(struct soap*, tt__RotateExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RotateExtension
#define soap_write_PointerTott__RotateExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RotateExtension(soap, data),0) || soap_put_PointerTott__RotateExtension(soap, data, "tt:RotateExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RotateExtension ** SOAP_FMAC4 soap_get_PointerTott__RotateExtension(struct soap*, tt__RotateExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__RotateExtension
#define soap_read_PointerTott__RotateExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__RotateExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoSourceConfigurationExtension2
#define SOAP_TYPE_PointerTott__VideoSourceConfigurationExtension2 (1003)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoSourceConfigurationExtension2(struct soap*, tt__VideoSourceConfigurationExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoSourceConfigurationExtension2(struct soap*, const char *, int, tt__VideoSourceConfigurationExtension2 *const*, const char *);
SOAP_FMAC3 tt__VideoSourceConfigurationExtension2 ** SOAP_FMAC4 soap_in_PointerTott__VideoSourceConfigurationExtension2(struct soap*, const char*, tt__VideoSourceConfigurationExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoSourceConfigurationExtension2(struct soap*, tt__VideoSourceConfigurationExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoSourceConfigurationExtension2
#define soap_write_PointerTott__VideoSourceConfigurationExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoSourceConfigurationExtension2(soap, data),0) || soap_put_PointerTott__VideoSourceConfigurationExtension2(soap, data, "tt:VideoSourceConfigurationExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceConfigurationExtension2 ** SOAP_FMAC4 soap_get_PointerTott__VideoSourceConfigurationExtension2(struct soap*, tt__VideoSourceConfigurationExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoSourceConfigurationExtension2
#define soap_read_PointerTott__VideoSourceConfigurationExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__VideoSourceConfigurationExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Rotate
#define SOAP_TYPE_PointerTott__Rotate (1002)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Rotate(struct soap*, tt__Rotate *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Rotate(struct soap*, const char *, int, tt__Rotate *const*, const char *);
SOAP_FMAC3 tt__Rotate ** SOAP_FMAC4 soap_in_PointerTott__Rotate(struct soap*, const char*, tt__Rotate **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Rotate(struct soap*, tt__Rotate *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Rotate
#define soap_write_PointerTott__Rotate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Rotate(soap, data),0) || soap_put_PointerTott__Rotate(soap, data, "tt:Rotate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Rotate ** SOAP_FMAC4 soap_get_PointerTott__Rotate(struct soap*, tt__Rotate **, const char*, const char*);

#ifndef soap_read_PointerTott__Rotate
#define soap_read_PointerTott__Rotate(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Rotate(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ProfileExtension2
#define SOAP_TYPE_PointerTott__ProfileExtension2 (1001)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ProfileExtension2(struct soap*, tt__ProfileExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ProfileExtension2(struct soap*, const char *, int, tt__ProfileExtension2 *const*, const char *);
SOAP_FMAC3 tt__ProfileExtension2 ** SOAP_FMAC4 soap_in_PointerTott__ProfileExtension2(struct soap*, const char*, tt__ProfileExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ProfileExtension2(struct soap*, tt__ProfileExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ProfileExtension2
#define soap_write_PointerTott__ProfileExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ProfileExtension2(soap, data),0) || soap_put_PointerTott__ProfileExtension2(soap, data, "tt:ProfileExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ProfileExtension2 ** SOAP_FMAC4 soap_get_PointerTott__ProfileExtension2(struct soap*, tt__ProfileExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__ProfileExtension2
#define soap_read_PointerTott__ProfileExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ProfileExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioDecoderConfiguration
#define SOAP_TYPE_PointerTott__AudioDecoderConfiguration (1000)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioDecoderConfiguration(struct soap*, tt__AudioDecoderConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioDecoderConfiguration(struct soap*, const char *, int, tt__AudioDecoderConfiguration *const*, const char *);
SOAP_FMAC3 tt__AudioDecoderConfiguration ** SOAP_FMAC4 soap_in_PointerTott__AudioDecoderConfiguration(struct soap*, const char*, tt__AudioDecoderConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioDecoderConfiguration(struct soap*, tt__AudioDecoderConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioDecoderConfiguration
#define soap_write_PointerTott__AudioDecoderConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioDecoderConfiguration(soap, data),0) || soap_put_PointerTott__AudioDecoderConfiguration(soap, data, "tt:AudioDecoderConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioDecoderConfiguration ** SOAP_FMAC4 soap_get_PointerTott__AudioDecoderConfiguration(struct soap*, tt__AudioDecoderConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioDecoderConfiguration
#define soap_read_PointerTott__AudioDecoderConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AudioDecoderConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioOutputConfiguration
#define SOAP_TYPE_PointerTott__AudioOutputConfiguration (999)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioOutputConfiguration(struct soap*, tt__AudioOutputConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioOutputConfiguration(struct soap*, const char *, int, tt__AudioOutputConfiguration *const*, const char *);
SOAP_FMAC3 tt__AudioOutputConfiguration ** SOAP_FMAC4 soap_in_PointerTott__AudioOutputConfiguration(struct soap*, const char*, tt__AudioOutputConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioOutputConfiguration(struct soap*, tt__AudioOutputConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioOutputConfiguration
#define soap_write_PointerTott__AudioOutputConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioOutputConfiguration(soap, data),0) || soap_put_PointerTott__AudioOutputConfiguration(soap, data, "tt:AudioOutputConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioOutputConfiguration ** SOAP_FMAC4 soap_get_PointerTott__AudioOutputConfiguration(struct soap*, tt__AudioOutputConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioOutputConfiguration
#define soap_read_PointerTott__AudioOutputConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AudioOutputConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ProfileExtension
#define SOAP_TYPE_PointerTott__ProfileExtension (998)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ProfileExtension(struct soap*, tt__ProfileExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ProfileExtension(struct soap*, const char *, int, tt__ProfileExtension *const*, const char *);
SOAP_FMAC3 tt__ProfileExtension ** SOAP_FMAC4 soap_in_PointerTott__ProfileExtension(struct soap*, const char*, tt__ProfileExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ProfileExtension(struct soap*, tt__ProfileExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ProfileExtension
#define soap_write_PointerTott__ProfileExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ProfileExtension(soap, data),0) || soap_put_PointerTott__ProfileExtension(soap, data, "tt:ProfileExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ProfileExtension ** SOAP_FMAC4 soap_get_PointerTott__ProfileExtension(struct soap*, tt__ProfileExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__ProfileExtension
#define soap_read_PointerTott__ProfileExtension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ProfileExtension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MetadataConfiguration
#define SOAP_TYPE_PointerTott__MetadataConfiguration (997)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MetadataConfiguration(struct soap*, tt__MetadataConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MetadataConfiguration(struct soap*, const char *, int, tt__MetadataConfiguration *const*, const char *);
SOAP_FMAC3 tt__MetadataConfiguration ** SOAP_FMAC4 soap_in_PointerTott__MetadataConfiguration(struct soap*, const char*, tt__MetadataConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MetadataConfiguration(struct soap*, tt__MetadataConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MetadataConfiguration
#define soap_write_PointerTott__MetadataConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MetadataConfiguration(soap, data),0) || soap_put_PointerTott__MetadataConfiguration(soap, data, "tt:MetadataConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataConfiguration ** SOAP_FMAC4 soap_get_PointerTott__MetadataConfiguration(struct soap*, tt__MetadataConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__MetadataConfiguration
#define soap_read_PointerTott__MetadataConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__MetadataConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZConfiguration
#define SOAP_TYPE_PointerTott__PTZConfiguration (996)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZConfiguration(struct soap*, tt__PTZConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZConfiguration(struct soap*, const char *, int, tt__PTZConfiguration *const*, const char *);
SOAP_FMAC3 tt__PTZConfiguration ** SOAP_FMAC4 soap_in_PointerTott__PTZConfiguration(struct soap*, const char*, tt__PTZConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZConfiguration(struct soap*, tt__PTZConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZConfiguration
#define soap_write_PointerTott__PTZConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZConfiguration(soap, data),0) || soap_put_PointerTott__PTZConfiguration(soap, data, "tt:PTZConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZConfiguration ** SOAP_FMAC4 soap_get_PointerTott__PTZConfiguration(struct soap*, tt__PTZConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZConfiguration
#define soap_read_PointerTott__PTZConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__PTZConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoAnalyticsConfiguration
#define SOAP_TYPE_PointerTott__VideoAnalyticsConfiguration (995)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoAnalyticsConfiguration(struct soap*, tt__VideoAnalyticsConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoAnalyticsConfiguration(struct soap*, const char *, int, tt__VideoAnalyticsConfiguration *const*, const char *);
SOAP_FMAC3 tt__VideoAnalyticsConfiguration ** SOAP_FMAC4 soap_in_PointerTott__VideoAnalyticsConfiguration(struct soap*, const char*, tt__VideoAnalyticsConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoAnalyticsConfiguration(struct soap*, tt__VideoAnalyticsConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoAnalyticsConfiguration
#define soap_write_PointerTott__VideoAnalyticsConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoAnalyticsConfiguration(soap, data),0) || soap_put_PointerTott__VideoAnalyticsConfiguration(soap, data, "tt:VideoAnalyticsConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoAnalyticsConfiguration ** SOAP_FMAC4 soap_get_PointerTott__VideoAnalyticsConfiguration(struct soap*, tt__VideoAnalyticsConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoAnalyticsConfiguration
#define soap_read_PointerTott__VideoAnalyticsConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__VideoAnalyticsConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioEncoderConfiguration
#define SOAP_TYPE_PointerTott__AudioEncoderConfiguration (994)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioEncoderConfiguration(struct soap*, tt__AudioEncoderConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioEncoderConfiguration(struct soap*, const char *, int, tt__AudioEncoderConfiguration *const*, const char *);
SOAP_FMAC3 tt__AudioEncoderConfiguration ** SOAP_FMAC4 soap_in_PointerTott__AudioEncoderConfiguration(struct soap*, const char*, tt__AudioEncoderConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioEncoderConfiguration(struct soap*, tt__AudioEncoderConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioEncoderConfiguration
#define soap_write_PointerTott__AudioEncoderConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioEncoderConfiguration(soap, data),0) || soap_put_PointerTott__AudioEncoderConfiguration(soap, data, "tt:AudioEncoderConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioEncoderConfiguration ** SOAP_FMAC4 soap_get_PointerTott__AudioEncoderConfiguration(struct soap*, tt__AudioEncoderConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioEncoderConfiguration
#define soap_read_PointerTott__AudioEncoderConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AudioEncoderConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoEncoderConfiguration
#define SOAP_TYPE_PointerTott__VideoEncoderConfiguration (993)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoEncoderConfiguration(struct soap*, tt__VideoEncoderConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoEncoderConfiguration(struct soap*, const char *, int, tt__VideoEncoderConfiguration *const*, const char *);
SOAP_FMAC3 tt__VideoEncoderConfiguration ** SOAP_FMAC4 soap_in_PointerTott__VideoEncoderConfiguration(struct soap*, const char*, tt__VideoEncoderConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoEncoderConfiguration(struct soap*, tt__VideoEncoderConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoEncoderConfiguration
#define soap_write_PointerTott__VideoEncoderConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoEncoderConfiguration(soap, data),0) || soap_put_PointerTott__VideoEncoderConfiguration(soap, data, "tt:VideoEncoderConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoEncoderConfiguration ** SOAP_FMAC4 soap_get_PointerTott__VideoEncoderConfiguration(struct soap*, tt__VideoEncoderConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoEncoderConfiguration
#define soap_read_PointerTott__VideoEncoderConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__VideoEncoderConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioSourceConfiguration
#define SOAP_TYPE_PointerTott__AudioSourceConfiguration (992)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioSourceConfiguration(struct soap*, tt__AudioSourceConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioSourceConfiguration(struct soap*, const char *, int, tt__AudioSourceConfiguration *const*, const char *);
SOAP_FMAC3 tt__AudioSourceConfiguration ** SOAP_FMAC4 soap_in_PointerTott__AudioSourceConfiguration(struct soap*, const char*, tt__AudioSourceConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioSourceConfiguration(struct soap*, tt__AudioSourceConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioSourceConfiguration
#define soap_write_PointerTott__AudioSourceConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioSourceConfiguration(soap, data),0) || soap_put_PointerTott__AudioSourceConfiguration(soap, data, "tt:AudioSourceConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioSourceConfiguration ** SOAP_FMAC4 soap_get_PointerTott__AudioSourceConfiguration(struct soap*, tt__AudioSourceConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioSourceConfiguration
#define soap_read_PointerTott__AudioSourceConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AudioSourceConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoSourceConfiguration
#define SOAP_TYPE_PointerTott__VideoSourceConfiguration (991)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoSourceConfiguration(struct soap*, tt__VideoSourceConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoSourceConfiguration(struct soap*, const char *, int, tt__VideoSourceConfiguration *const*, const char *);
SOAP_FMAC3 tt__VideoSourceConfiguration ** SOAP_FMAC4 soap_in_PointerTott__VideoSourceConfiguration(struct soap*, const char*, tt__VideoSourceConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoSourceConfiguration(struct soap*, tt__VideoSourceConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoSourceConfiguration
#define soap_write_PointerTott__VideoSourceConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoSourceConfiguration(soap, data),0) || soap_put_PointerTott__VideoSourceConfiguration(soap, data, "tt:VideoSourceConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceConfiguration ** SOAP_FMAC4 soap_get_PointerTott__VideoSourceConfiguration(struct soap*, tt__VideoSourceConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoSourceConfiguration
#define soap_read_PointerTott__VideoSourceConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__VideoSourceConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoSourceExtension2
#define SOAP_TYPE_PointerTott__VideoSourceExtension2 (990)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoSourceExtension2(struct soap*, tt__VideoSourceExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoSourceExtension2(struct soap*, const char *, int, tt__VideoSourceExtension2 *const*, const char *);
SOAP_FMAC3 tt__VideoSourceExtension2 ** SOAP_FMAC4 soap_in_PointerTott__VideoSourceExtension2(struct soap*, const char*, tt__VideoSourceExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoSourceExtension2(struct soap*, tt__VideoSourceExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoSourceExtension2
#define soap_write_PointerTott__VideoSourceExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoSourceExtension2(soap, data),0) || soap_put_PointerTott__VideoSourceExtension2(soap, data, "tt:VideoSourceExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceExtension2 ** SOAP_FMAC4 soap_get_PointerTott__VideoSourceExtension2(struct soap*, tt__VideoSourceExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoSourceExtension2
#define soap_read_PointerTott__VideoSourceExtension2(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__VideoSourceExtension2(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImagingSettings20
#define SOAP_TYPE_PointerTott__ImagingSettings20 (989)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImagingSettings20(struct soap*, tt__ImagingSettings20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImagingSettings20(struct soap*, const char *, int, tt__ImagingSettings20 *const*, const char *);
SOAP_FMAC3 tt__ImagingSettings20 ** SOAP_FMAC4 soap_in_PointerTott__ImagingSettings20(struct soap*, const char*, tt__ImagingSettings20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImagingSettings20(struct soap*, tt__ImagingSettings20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImagingSettings20
#define soap_write_PointerTott__ImagingSettings20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImagingSettings20(soap, data),0) || soap_put_PointerTott__ImagingSettings20(soap, data, "tt:ImagingSettings20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingSettings20 ** SOAP_FMAC4 soap_get_PointerTott__ImagingSettings20(struct soap*, tt__ImagingSettings20 **, const char*, const char*);

#ifndef soap_read_PointerTott__ImagingSettings20
#define soap_read_PointerTott__ImagingSettings20(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__ImagingSettings20(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IntRange
#define SOAP_TYPE_PointerTott__IntRange (985)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IntRange(struct soap*, tt__IntRange *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IntRange(struct soap*, const char *, int, tt__IntRange *const*, const char *);
SOAP_FMAC3 tt__IntRange ** SOAP_FMAC4 soap_in_PointerTott__IntRange(struct soap*, const char*, tt__IntRange **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IntRange(struct soap*, tt__IntRange *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IntRange
#define soap_write_PointerTott__IntRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IntRange(soap, data),0) || soap_put_PointerTott__IntRange(soap, data, "tt:IntRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IntRange ** SOAP_FMAC4 soap_get_PointerTott__IntRange(struct soap*, tt__IntRange **, const char*, const char*);

#ifndef soap_read_PointerTott__IntRange
#define soap_read_PointerTott__IntRange(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__IntRange(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetSystemUrisResponse_Extension
#define SOAP_TYPE_PointerTo_tds__GetSystemUrisResponse_Extension (984)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetSystemUrisResponse_Extension(struct soap*, _tds__GetSystemUrisResponse_Extension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetSystemUrisResponse_Extension(struct soap*, const char *, int, _tds__GetSystemUrisResponse_Extension *const*, const char *);
SOAP_FMAC3 _tds__GetSystemUrisResponse_Extension ** SOAP_FMAC4 soap_in_PointerTo_tds__GetSystemUrisResponse_Extension(struct soap*, const char*, _tds__GetSystemUrisResponse_Extension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetSystemUrisResponse_Extension(struct soap*, _tds__GetSystemUrisResponse_Extension *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetSystemUrisResponse_Extension
#define soap_write_PointerTo_tds__GetSystemUrisResponse_Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetSystemUrisResponse_Extension(soap, data),0) || soap_put_PointerTo_tds__GetSystemUrisResponse_Extension(soap, data, "tds:GetSystemUrisResponse-Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemUrisResponse_Extension ** SOAP_FMAC4 soap_get_PointerTo_tds__GetSystemUrisResponse_Extension(struct soap*, _tds__GetSystemUrisResponse_Extension **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetSystemUrisResponse_Extension
#define soap_read_PointerTo_tds__GetSystemUrisResponse_Extension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetSystemUrisResponse_Extension(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToxsd__anyURI
#define SOAP_TYPE_PointerToxsd__anyURI (982)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__anyURI(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__anyURI(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToxsd__anyURI(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__anyURI(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__anyURI
#define soap_write_PointerToxsd__anyURI(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToxsd__anyURI(soap, data),0) || soap_put_PointerToxsd__anyURI(soap, data, "xsd:anyURI", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToxsd__anyURI(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerToxsd__anyURI
#define soap_read_PointerToxsd__anyURI(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxsd__anyURI(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SystemLogUriList
#define SOAP_TYPE_PointerTott__SystemLogUriList (981)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SystemLogUriList(struct soap*, tt__SystemLogUriList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SystemLogUriList(struct soap*, const char *, int, tt__SystemLogUriList *const*, const char *);
SOAP_FMAC3 tt__SystemLogUriList ** SOAP_FMAC4 soap_in_PointerTott__SystemLogUriList(struct soap*, const char*, tt__SystemLogUriList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SystemLogUriList(struct soap*, tt__SystemLogUriList *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SystemLogUriList
#define soap_write_PointerTott__SystemLogUriList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SystemLogUriList(soap, data),0) || soap_put_PointerTott__SystemLogUriList(soap, data, "tt:SystemLogUriList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemLogUriList ** SOAP_FMAC4 soap_get_PointerTott__SystemLogUriList(struct soap*, tt__SystemLogUriList **, const char*, const char*);

#ifndef soap_read_PointerTott__SystemLogUriList
#define soap_read_PointerTott__SystemLogUriList(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__SystemLogUriList(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot11AvailableNetworks
#define SOAP_TYPE_PointerTott__Dot11AvailableNetworks (979)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot11AvailableNetworks(struct soap*, tt__Dot11AvailableNetworks *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot11AvailableNetworks(struct soap*, const char *, int, tt__Dot11AvailableNetworks *const*, const char *);
SOAP_FMAC3 tt__Dot11AvailableNetworks ** SOAP_FMAC4 soap_in_PointerTott__Dot11AvailableNetworks(struct soap*, const char*, tt__Dot11AvailableNetworks **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot11AvailableNetworks(struct soap*, tt__Dot11AvailableNetworks *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot11AvailableNetworks
#define soap_write_PointerTott__Dot11AvailableNetworks(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot11AvailableNetworks(soap, data),0) || soap_put_PointerTott__Dot11AvailableNetworks(soap, data, "tt:Dot11AvailableNetworks", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11AvailableNetworks ** SOAP_FMAC4 soap_get_PointerTott__Dot11AvailableNetworks(struct soap*, tt__Dot11AvailableNetworks **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot11AvailableNetworks
#define soap_read_PointerTott__Dot11AvailableNetworks(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Dot11AvailableNetworks(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot11Status
#define SOAP_TYPE_PointerTott__Dot11Status (978)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot11Status(struct soap*, tt__Dot11Status *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot11Status(struct soap*, const char *, int, tt__Dot11Status *const*, const char *);
SOAP_FMAC3 tt__Dot11Status ** SOAP_FMAC4 soap_in_PointerTott__Dot11Status(struct soap*, const char*, tt__Dot11Status **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot11Status(struct soap*, tt__Dot11Status *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot11Status
#define soap_write_PointerTott__Dot11Status(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot11Status(soap, data),0) || soap_put_PointerTott__Dot11Status(soap, data, "tt:Dot11Status", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11Status ** SOAP_FMAC4 soap_get_PointerTott__Dot11Status(struct soap*, tt__Dot11Status **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot11Status
#define soap_read_PointerTott__Dot11Status(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Dot11Status(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot11Capabilities
#define SOAP_TYPE_PointerTott__Dot11Capabilities (977)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot11Capabilities(struct soap*, tt__Dot11Capabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot11Capabilities(struct soap*, const char *, int, tt__Dot11Capabilities *const*, const char *);
SOAP_FMAC3 tt__Dot11Capabilities ** SOAP_FMAC4 soap_in_PointerTott__Dot11Capabilities(struct soap*, const char*, tt__Dot11Capabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot11Capabilities(struct soap*, tt__Dot11Capabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot11Capabilities
#define soap_write_PointerTott__Dot11Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot11Capabilities(soap, data),0) || soap_put_PointerTott__Dot11Capabilities(soap, data, "tt:Dot11Capabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11Capabilities ** SOAP_FMAC4 soap_get_PointerTott__Dot11Capabilities(struct soap*, tt__Dot11Capabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot11Capabilities
#define soap_read_PointerTott__Dot11Capabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Dot11Capabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AuxiliaryData
#define SOAP_TYPE_PointerTott__AuxiliaryData (976)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AuxiliaryData(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AuxiliaryData(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTott__AuxiliaryData(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AuxiliaryData(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AuxiliaryData
#define soap_write_PointerTott__AuxiliaryData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AuxiliaryData(soap, data),0) || soap_put_PointerTott__AuxiliaryData(soap, data, "tt:AuxiliaryData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTott__AuxiliaryData(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTott__AuxiliaryData
#define soap_read_PointerTott__AuxiliaryData(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AuxiliaryData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RelayOutputSettings
#define SOAP_TYPE_PointerTott__RelayOutputSettings (975)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RelayOutputSettings(struct soap*, tt__RelayOutputSettings *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RelayOutputSettings(struct soap*, const char *, int, tt__RelayOutputSettings *const*, const char *);
SOAP_FMAC3 tt__RelayOutputSettings ** SOAP_FMAC4 soap_in_PointerTott__RelayOutputSettings(struct soap*, const char*, tt__RelayOutputSettings **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RelayOutputSettings(struct soap*, tt__RelayOutputSettings *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RelayOutputSettings
#define soap_write_PointerTott__RelayOutputSettings(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RelayOutputSettings(soap, data),0) || soap_put_PointerTott__RelayOutputSettings(soap, data, "tt:RelayOutputSettings", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RelayOutputSettings ** SOAP_FMAC4 soap_get_PointerTott__RelayOutputSettings(struct soap*, tt__RelayOutputSettings **, const char*, const char*);

#ifndef soap_read_PointerTott__RelayOutputSettings
#define soap_read_PointerTott__RelayOutputSettings(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__RelayOutputSettings(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RelayOutput
#define SOAP_TYPE_PointerTott__RelayOutput (973)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RelayOutput(struct soap*, tt__RelayOutput *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RelayOutput(struct soap*, const char *, int, tt__RelayOutput *const*, const char *);
SOAP_FMAC3 tt__RelayOutput ** SOAP_FMAC4 soap_in_PointerTott__RelayOutput(struct soap*, const char*, tt__RelayOutput **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RelayOutput(struct soap*, tt__RelayOutput *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RelayOutput
#define soap_write_PointerTott__RelayOutput(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RelayOutput(soap, data),0) || soap_put_PointerTott__RelayOutput(soap, data, "tt:RelayOutput", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RelayOutput ** SOAP_FMAC4 soap_get_PointerTott__RelayOutput(struct soap*, tt__RelayOutput **, const char*, const char*);

#ifndef soap_read_PointerTott__RelayOutput
#define soap_read_PointerTott__RelayOutput(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__RelayOutput(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot1XConfiguration
#define SOAP_TYPE_PointerTott__Dot1XConfiguration (970)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot1XConfiguration(struct soap*, tt__Dot1XConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot1XConfiguration(struct soap*, const char *, int, tt__Dot1XConfiguration *const*, const char *);
SOAP_FMAC3 tt__Dot1XConfiguration ** SOAP_FMAC4 soap_in_PointerTott__Dot1XConfiguration(struct soap*, const char*, tt__Dot1XConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot1XConfiguration(struct soap*, tt__Dot1XConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot1XConfiguration
#define soap_write_PointerTott__Dot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot1XConfiguration(soap, data),0) || soap_put_PointerTott__Dot1XConfiguration(soap, data, "tt:Dot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot1XConfiguration ** SOAP_FMAC4 soap_get_PointerTott__Dot1XConfiguration(struct soap*, tt__Dot1XConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot1XConfiguration
#define soap_read_PointerTott__Dot1XConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Dot1XConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__CertificateInformation
#define SOAP_TYPE_PointerTott__CertificateInformation (969)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__CertificateInformation(struct soap*, tt__CertificateInformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__CertificateInformation(struct soap*, const char *, int, tt__CertificateInformation *const*, const char *);
SOAP_FMAC3 tt__CertificateInformation ** SOAP_FMAC4 soap_in_PointerTott__CertificateInformation(struct soap*, const char*, tt__CertificateInformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__CertificateInformation(struct soap*, tt__CertificateInformation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__CertificateInformation
#define soap_write_PointerTott__CertificateInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__CertificateInformation(soap, data),0) || soap_put_PointerTott__CertificateInformation(soap, data, "tt:CertificateInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CertificateInformation ** SOAP_FMAC4 soap_get_PointerTott__CertificateInformation(struct soap*, tt__CertificateInformation **, const char*, const char*);

#ifndef soap_read_PointerTott__CertificateInformation
#define soap_read_PointerTott__CertificateInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__CertificateInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__CertificateWithPrivateKey
#define SOAP_TYPE_PointerTott__CertificateWithPrivateKey (967)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__CertificateWithPrivateKey(struct soap*, tt__CertificateWithPrivateKey *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__CertificateWithPrivateKey(struct soap*, const char *, int, tt__CertificateWithPrivateKey *const*, const char *);
SOAP_FMAC3 tt__CertificateWithPrivateKey ** SOAP_FMAC4 soap_in_PointerTott__CertificateWithPrivateKey(struct soap*, const char*, tt__CertificateWithPrivateKey **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__CertificateWithPrivateKey(struct soap*, tt__CertificateWithPrivateKey *const*, const char*, const char*);

#ifndef soap_write_PointerTott__CertificateWithPrivateKey
#define soap_write_PointerTott__CertificateWithPrivateKey(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__CertificateWithPrivateKey(soap, data),0) || soap_put_PointerTott__CertificateWithPrivateKey(soap, data, "tt:CertificateWithPrivateKey", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CertificateWithPrivateKey ** SOAP_FMAC4 soap_get_PointerTott__CertificateWithPrivateKey(struct soap*, tt__CertificateWithPrivateKey **, const char*, const char*);

#ifndef soap_read_PointerTott__CertificateWithPrivateKey
#define soap_read_PointerTott__CertificateWithPrivateKey(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__CertificateWithPrivateKey(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__CertificateStatus
#define SOAP_TYPE_PointerTott__CertificateStatus (965)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__CertificateStatus(struct soap*, tt__CertificateStatus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__CertificateStatus(struct soap*, const char *, int, tt__CertificateStatus *const*, const char *);
SOAP_FMAC3 tt__CertificateStatus ** SOAP_FMAC4 soap_in_PointerTott__CertificateStatus(struct soap*, const char*, tt__CertificateStatus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__CertificateStatus(struct soap*, tt__CertificateStatus *const*, const char*, const char*);

#ifndef soap_write_PointerTott__CertificateStatus
#define soap_write_PointerTott__CertificateStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__CertificateStatus(soap, data),0) || soap_put_PointerTott__CertificateStatus(soap, data, "tt:CertificateStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CertificateStatus ** SOAP_FMAC4 soap_get_PointerTott__CertificateStatus(struct soap*, tt__CertificateStatus **, const char*, const char*);

#ifndef soap_read_PointerTott__CertificateStatus
#define soap_read_PointerTott__CertificateStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__CertificateStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Certificate
#define SOAP_TYPE_PointerTott__Certificate (963)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Certificate(struct soap*, tt__Certificate *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Certificate(struct soap*, const char *, int, tt__Certificate *const*, const char *);
SOAP_FMAC3 tt__Certificate ** SOAP_FMAC4 soap_in_PointerTott__Certificate(struct soap*, const char*, tt__Certificate **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Certificate(struct soap*, tt__Certificate *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Certificate
#define soap_write_PointerTott__Certificate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Certificate(soap, data),0) || soap_put_PointerTott__Certificate(soap, data, "tt:Certificate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Certificate ** SOAP_FMAC4 soap_get_PointerTott__Certificate(struct soap*, tt__Certificate **, const char*, const char*);

#ifndef soap_read_PointerTott__Certificate
#define soap_read_PointerTott__Certificate(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Certificate(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotime
#define SOAP_TYPE_PointerTotime (962)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotime(struct soap*, time_t *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotime(struct soap*, const char *, int, time_t *const*, const char *);
SOAP_FMAC3 time_t ** SOAP_FMAC4 soap_in_PointerTotime(struct soap*, const char*, time_t **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotime(struct soap*, time_t *const*, const char*, const char*);

#ifndef soap_write_PointerTotime
#define soap_write_PointerTotime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotime(soap, data),0) || soap_put_PointerTotime(soap, data, "dateTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 time_t ** SOAP_FMAC4 soap_get_PointerTotime(struct soap*, time_t **, const char*, const char*);

#ifndef soap_read_PointerTotime
#define soap_read_PointerTotime(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTotime(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToxsd__token
#define SOAP_TYPE_PointerToxsd__token (960)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__token(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__token(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToxsd__token(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__token(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__token
#define soap_write_PointerToxsd__token(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToxsd__token(soap, data),0) || soap_put_PointerToxsd__token(soap, data, "xsd:token", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToxsd__token(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerToxsd__token
#define soap_read_PointerToxsd__token(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxsd__token(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__BinaryData
#define SOAP_TYPE_PointerTott__BinaryData (959)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__BinaryData(struct soap*, tt__BinaryData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__BinaryData(struct soap*, const char *, int, tt__BinaryData *const*, const char *);
SOAP_FMAC3 tt__BinaryData ** SOAP_FMAC4 soap_in_PointerTott__BinaryData(struct soap*, const char*, tt__BinaryData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__BinaryData(struct soap*, tt__BinaryData *const*, const char*, const char*);

#ifndef soap_write_PointerTott__BinaryData
#define soap_write_PointerTott__BinaryData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__BinaryData(soap, data),0) || soap_put_PointerTott__BinaryData(soap, data, "tt:BinaryData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__BinaryData ** SOAP_FMAC4 soap_get_PointerTott__BinaryData(struct soap*, tt__BinaryData **, const char*, const char*);

#ifndef soap_read_PointerTott__BinaryData
#define soap_read_PointerTott__BinaryData(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__BinaryData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IPAddressFilter
#define SOAP_TYPE_PointerTott__IPAddressFilter (958)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPAddressFilter(struct soap*, tt__IPAddressFilter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPAddressFilter(struct soap*, const char *, int, tt__IPAddressFilter *const*, const char *);
SOAP_FMAC3 tt__IPAddressFilter ** SOAP_FMAC4 soap_in_PointerTott__IPAddressFilter(struct soap*, const char*, tt__IPAddressFilter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPAddressFilter(struct soap*, tt__IPAddressFilter *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IPAddressFilter
#define soap_write_PointerTott__IPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IPAddressFilter(soap, data),0) || soap_put_PointerTott__IPAddressFilter(soap, data, "tt:IPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPAddressFilter ** SOAP_FMAC4 soap_get_PointerTott__IPAddressFilter(struct soap*, tt__IPAddressFilter **, const char*, const char*);

#ifndef soap_read_PointerTott__IPAddressFilter
#define soap_read_PointerTott__IPAddressFilter(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__IPAddressFilter(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkZeroConfiguration
#define SOAP_TYPE_PointerTott__NetworkZeroConfiguration (957)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkZeroConfiguration(struct soap*, tt__NetworkZeroConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkZeroConfiguration(struct soap*, const char *, int, tt__NetworkZeroConfiguration *const*, const char *);
SOAP_FMAC3 tt__NetworkZeroConfiguration ** SOAP_FMAC4 soap_in_PointerTott__NetworkZeroConfiguration(struct soap*, const char*, tt__NetworkZeroConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkZeroConfiguration(struct soap*, tt__NetworkZeroConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkZeroConfiguration
#define soap_write_PointerTott__NetworkZeroConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkZeroConfiguration(soap, data),0) || soap_put_PointerTott__NetworkZeroConfiguration(soap, data, "tt:NetworkZeroConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkZeroConfiguration ** SOAP_FMAC4 soap_get_PointerTott__NetworkZeroConfiguration(struct soap*, tt__NetworkZeroConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkZeroConfiguration
#define soap_read_PointerTott__NetworkZeroConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__NetworkZeroConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkGateway
#define SOAP_TYPE_PointerTott__NetworkGateway (954)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkGateway(struct soap*, tt__NetworkGateway *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkGateway(struct soap*, const char *, int, tt__NetworkGateway *const*, const char *);
SOAP_FMAC3 tt__NetworkGateway ** SOAP_FMAC4 soap_in_PointerTott__NetworkGateway(struct soap*, const char*, tt__NetworkGateway **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkGateway(struct soap*, tt__NetworkGateway *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkGateway
#define soap_write_PointerTott__NetworkGateway(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkGateway(soap, data),0) || soap_put_PointerTott__NetworkGateway(soap, data, "tt:NetworkGateway", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkGateway ** SOAP_FMAC4 soap_get_PointerTott__NetworkGateway(struct soap*, tt__NetworkGateway **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkGateway
#define soap_read_PointerTott__NetworkGateway(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__NetworkGateway(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkProtocol
#define SOAP_TYPE_PointerTott__NetworkProtocol (952)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkProtocol(struct soap*, tt__NetworkProtocol *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkProtocol(struct soap*, const char *, int, tt__NetworkProtocol *const*, const char *);
SOAP_FMAC3 tt__NetworkProtocol ** SOAP_FMAC4 soap_in_PointerTott__NetworkProtocol(struct soap*, const char*, tt__NetworkProtocol **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkProtocol(struct soap*, tt__NetworkProtocol *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkProtocol
#define soap_write_PointerTott__NetworkProtocol(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkProtocol(soap, data),0) || soap_put_PointerTott__NetworkProtocol(soap, data, "tt:NetworkProtocol", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkProtocol ** SOAP_FMAC4 soap_get_PointerTott__NetworkProtocol(struct soap*, tt__NetworkProtocol **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkProtocol
#define soap_read_PointerTott__NetworkProtocol(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__NetworkProtocol(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkInterfaceSetConfiguration
#define SOAP_TYPE_PointerTott__NetworkInterfaceSetConfiguration (951)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkInterfaceSetConfiguration(struct soap*, tt__NetworkInterfaceSetConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkInterfaceSetConfiguration(struct soap*, const char *, int, tt__NetworkInterfaceSetConfiguration *const*, const char *);
SOAP_FMAC3 tt__NetworkInterfaceSetConfiguration ** SOAP_FMAC4 soap_in_PointerTott__NetworkInterfaceSetConfiguration(struct soap*, const char*, tt__NetworkInterfaceSetConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkInterfaceSetConfiguration(struct soap*, tt__NetworkInterfaceSetConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkInterfaceSetConfiguration
#define soap_write_PointerTott__NetworkInterfaceSetConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkInterfaceSetConfiguration(soap, data),0) || soap_put_PointerTott__NetworkInterfaceSetConfiguration(soap, data, "tt:NetworkInterfaceSetConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceSetConfiguration ** SOAP_FMAC4 soap_get_PointerTott__NetworkInterfaceSetConfiguration(struct soap*, tt__NetworkInterfaceSetConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkInterfaceSetConfiguration
#define soap_read_PointerTott__NetworkInterfaceSetConfiguration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__NetworkInterfaceSetConfiguration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkInterface
#define SOAP_TYPE_PointerTott__NetworkInterface (949)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkInterface(struct soap*, tt__NetworkInterface *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkInterface(struct soap*, const char *, int, tt__NetworkInterface *const*, const char *);
SOAP_FMAC3 tt__NetworkInterface ** SOAP_FMAC4 soap_in_PointerTott__NetworkInterface(struct soap*, const char*, tt__NetworkInterface **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkInterface(struct soap*, tt__NetworkInterface *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkInterface
#define soap_write_PointerTott__NetworkInterface(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkInterface(soap, data),0) || soap_put_PointerTott__NetworkInterface(soap, data, "tt:NetworkInterface", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterface ** SOAP_FMAC4 soap_get_PointerTott__NetworkInterface(struct soap*, tt__NetworkInterface **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkInterface
#define soap_read_PointerTott__NetworkInterface(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__NetworkInterface(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToxsd__duration
#define SOAP_TYPE_PointerToxsd__duration (948)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__duration(struct soap*, LONG64 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__duration(struct soap*, const char *, int, LONG64 *const*, const char *);
SOAP_FMAC3 LONG64 ** SOAP_FMAC4 soap_in_PointerToxsd__duration(struct soap*, const char*, LONG64 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__duration(struct soap*, LONG64 *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__duration
#define soap_write_PointerToxsd__duration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToxsd__duration(soap, data),0) || soap_put_PointerToxsd__duration(soap, data, "xsd:duration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 LONG64 ** SOAP_FMAC4 soap_get_PointerToxsd__duration(struct soap*, LONG64 **, const char*, const char*);

#ifndef soap_read_PointerToxsd__duration
#define soap_read_PointerToxsd__duration(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxsd__duration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DNSName
#define SOAP_TYPE_PointerTott__DNSName (947)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DNSName(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DNSName(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTott__DNSName(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DNSName(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DNSName
#define soap_write_PointerTott__DNSName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DNSName(soap, data),0) || soap_put_PointerTott__DNSName(soap, data, "tt:DNSName", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTott__DNSName(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTott__DNSName
#define soap_read_PointerTott__DNSName(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__DNSName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DynamicDNSInformation
#define SOAP_TYPE_PointerTott__DynamicDNSInformation (946)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DynamicDNSInformation(struct soap*, tt__DynamicDNSInformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DynamicDNSInformation(struct soap*, const char *, int, tt__DynamicDNSInformation *const*, const char *);
SOAP_FMAC3 tt__DynamicDNSInformation ** SOAP_FMAC4 soap_in_PointerTott__DynamicDNSInformation(struct soap*, const char*, tt__DynamicDNSInformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DynamicDNSInformation(struct soap*, tt__DynamicDNSInformation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DynamicDNSInformation
#define soap_write_PointerTott__DynamicDNSInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DynamicDNSInformation(soap, data),0) || soap_put_PointerTott__DynamicDNSInformation(soap, data, "tt:DynamicDNSInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DynamicDNSInformation ** SOAP_FMAC4 soap_get_PointerTott__DynamicDNSInformation(struct soap*, tt__DynamicDNSInformation **, const char*, const char*);

#ifndef soap_read_PointerTott__DynamicDNSInformation
#define soap_read_PointerTott__DynamicDNSInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__DynamicDNSInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NTPInformation
#define SOAP_TYPE_PointerTott__NTPInformation (945)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NTPInformation(struct soap*, tt__NTPInformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NTPInformation(struct soap*, const char *, int, tt__NTPInformation *const*, const char *);
SOAP_FMAC3 tt__NTPInformation ** SOAP_FMAC4 soap_in_PointerTott__NTPInformation(struct soap*, const char*, tt__NTPInformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NTPInformation(struct soap*, tt__NTPInformation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NTPInformation
#define soap_write_PointerTott__NTPInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NTPInformation(soap, data),0) || soap_put_PointerTott__NTPInformation(soap, data, "tt:NTPInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NTPInformation ** SOAP_FMAC4 soap_get_PointerTott__NTPInformation(struct soap*, tt__NTPInformation **, const char*, const char*);

#ifndef soap_read_PointerTott__NTPInformation
#define soap_read_PointerTott__NTPInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__NTPInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IPAddress
#define SOAP_TYPE_PointerTott__IPAddress (943)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPAddress(struct soap*, tt__IPAddress *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPAddress(struct soap*, const char *, int, tt__IPAddress *const*, const char *);
SOAP_FMAC3 tt__IPAddress ** SOAP_FMAC4 soap_in_PointerTott__IPAddress(struct soap*, const char*, tt__IPAddress **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPAddress(struct soap*, tt__IPAddress *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IPAddress
#define soap_write_PointerTott__IPAddress(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IPAddress(soap, data),0) || soap_put_PointerTott__IPAddress(soap, data, "tt:IPAddress", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPAddress ** SOAP_FMAC4 soap_get_PointerTott__IPAddress(struct soap*, tt__IPAddress **, const char*, const char*);

#ifndef soap_read_PointerTott__IPAddress
#define soap_read_PointerTott__IPAddress(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__IPAddress(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DNSInformation
#define SOAP_TYPE_PointerTott__DNSInformation (941)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DNSInformation(struct soap*, tt__DNSInformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DNSInformation(struct soap*, const char *, int, tt__DNSInformation *const*, const char *);
SOAP_FMAC3 tt__DNSInformation ** SOAP_FMAC4 soap_in_PointerTott__DNSInformation(struct soap*, const char*, tt__DNSInformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DNSInformation(struct soap*, tt__DNSInformation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DNSInformation
#define soap_write_PointerTott__DNSInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DNSInformation(soap, data),0) || soap_put_PointerTott__DNSInformation(soap, data, "tt:DNSInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DNSInformation ** SOAP_FMAC4 soap_get_PointerTott__DNSInformation(struct soap*, tt__DNSInformation **, const char*, const char*);

#ifndef soap_read_PointerTott__DNSInformation
#define soap_read_PointerTott__DNSInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__DNSInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__HostnameInformation
#define SOAP_TYPE_PointerTott__HostnameInformation (940)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__HostnameInformation(struct soap*, tt__HostnameInformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__HostnameInformation(struct soap*, const char *, int, tt__HostnameInformation *const*, const char *);
SOAP_FMAC3 tt__HostnameInformation ** SOAP_FMAC4 soap_in_PointerTott__HostnameInformation(struct soap*, const char*, tt__HostnameInformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__HostnameInformation(struct soap*, tt__HostnameInformation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__HostnameInformation
#define soap_write_PointerTott__HostnameInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__HostnameInformation(soap, data),0) || soap_put_PointerTott__HostnameInformation(soap, data, "tt:HostnameInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__HostnameInformation ** SOAP_FMAC4 soap_get_PointerTott__HostnameInformation(struct soap*, tt__HostnameInformation **, const char*, const char*);

#ifndef soap_read_PointerTott__HostnameInformation
#define soap_read_PointerTott__HostnameInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__HostnameInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Capabilities
#define SOAP_TYPE_PointerTott__Capabilities (939)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Capabilities(struct soap*, tt__Capabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Capabilities(struct soap*, const char *, int, tt__Capabilities *const*, const char *);
SOAP_FMAC3 tt__Capabilities ** SOAP_FMAC4 soap_in_PointerTott__Capabilities(struct soap*, const char*, tt__Capabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Capabilities(struct soap*, tt__Capabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Capabilities
#define soap_write_PointerTott__Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Capabilities(soap, data),0) || soap_put_PointerTott__Capabilities(soap, data, "tt:Capabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Capabilities ** SOAP_FMAC4 soap_get_PointerTott__Capabilities(struct soap*, tt__Capabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__Capabilities
#define soap_read_PointerTott__Capabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Capabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__User
#define SOAP_TYPE_PointerTott__User (935)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__User(struct soap*, tt__User *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__User(struct soap*, const char *, int, tt__User *const*, const char *);
SOAP_FMAC3 tt__User ** SOAP_FMAC4 soap_in_PointerTott__User(struct soap*, const char*, tt__User **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__User(struct soap*, tt__User *const*, const char*, const char*);

#ifndef soap_write_PointerTott__User
#define soap_write_PointerTott__User(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__User(soap, data),0) || soap_put_PointerTott__User(soap, data, "tt:User", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__User ** SOAP_FMAC4 soap_get_PointerTott__User(struct soap*, tt__User **, const char*, const char*);

#ifndef soap_read_PointerTott__User
#define soap_read_PointerTott__User(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__User(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RemoteUser
#define SOAP_TYPE_PointerTott__RemoteUser (934)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RemoteUser(struct soap*, tt__RemoteUser *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RemoteUser(struct soap*, const char *, int, tt__RemoteUser *const*, const char *);
SOAP_FMAC3 tt__RemoteUser ** SOAP_FMAC4 soap_in_PointerTott__RemoteUser(struct soap*, const char*, tt__RemoteUser **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RemoteUser(struct soap*, tt__RemoteUser *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RemoteUser
#define soap_write_PointerTott__RemoteUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RemoteUser(soap, data),0) || soap_put_PointerTott__RemoteUser(soap, data, "tt:RemoteUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RemoteUser ** SOAP_FMAC4 soap_get_PointerTott__RemoteUser(struct soap*, tt__RemoteUser **, const char*, const char*);

#ifndef soap_read_PointerTott__RemoteUser
#define soap_read_PointerTott__RemoteUser(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__RemoteUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkHost
#define SOAP_TYPE_PointerTott__NetworkHost (932)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkHost(struct soap*, tt__NetworkHost *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkHost(struct soap*, const char *, int, tt__NetworkHost *const*, const char *);
SOAP_FMAC3 tt__NetworkHost ** SOAP_FMAC4 soap_in_PointerTott__NetworkHost(struct soap*, const char*, tt__NetworkHost **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkHost(struct soap*, tt__NetworkHost *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkHost
#define soap_write_PointerTott__NetworkHost(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkHost(soap, data),0) || soap_put_PointerTott__NetworkHost(soap, data, "tt:NetworkHost", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkHost ** SOAP_FMAC4 soap_get_PointerTott__NetworkHost(struct soap*, tt__NetworkHost **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkHost
#define soap_read_PointerTott__NetworkHost(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__NetworkHost(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Scope
#define SOAP_TYPE_PointerTott__Scope (929)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Scope(struct soap*, tt__Scope *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Scope(struct soap*, const char *, int, tt__Scope *const*, const char *);
SOAP_FMAC3 tt__Scope ** SOAP_FMAC4 soap_in_PointerTott__Scope(struct soap*, const char*, tt__Scope **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Scope(struct soap*, tt__Scope *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Scope
#define soap_write_PointerTott__Scope(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Scope(soap, data),0) || soap_put_PointerTott__Scope(soap, data, "tt:Scope", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Scope ** SOAP_FMAC4 soap_get_PointerTott__Scope(struct soap*, tt__Scope **, const char*, const char*);

#ifndef soap_read_PointerTott__Scope
#define soap_read_PointerTott__Scope(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__Scope(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SystemLog
#define SOAP_TYPE_PointerTott__SystemLog (928)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SystemLog(struct soap*, tt__SystemLog *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SystemLog(struct soap*, const char *, int, tt__SystemLog *const*, const char *);
SOAP_FMAC3 tt__SystemLog ** SOAP_FMAC4 soap_in_PointerTott__SystemLog(struct soap*, const char*, tt__SystemLog **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SystemLog(struct soap*, tt__SystemLog *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SystemLog
#define soap_write_PointerTott__SystemLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SystemLog(soap, data),0) || soap_put_PointerTott__SystemLog(soap, data, "tt:SystemLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemLog ** SOAP_FMAC4 soap_get_PointerTott__SystemLog(struct soap*, tt__SystemLog **, const char*, const char*);

#ifndef soap_read_PointerTott__SystemLog
#define soap_read_PointerTott__SystemLog(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__SystemLog(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SupportInformation
#define SOAP_TYPE_PointerTott__SupportInformation (927)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SupportInformation(struct soap*, tt__SupportInformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SupportInformation(struct soap*, const char *, int, tt__SupportInformation *const*, const char *);
SOAP_FMAC3 tt__SupportInformation ** SOAP_FMAC4 soap_in_PointerTott__SupportInformation(struct soap*, const char*, tt__SupportInformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SupportInformation(struct soap*, tt__SupportInformation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SupportInformation
#define soap_write_PointerTott__SupportInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SupportInformation(soap, data),0) || soap_put_PointerTott__SupportInformation(soap, data, "tt:SupportInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SupportInformation ** SOAP_FMAC4 soap_get_PointerTott__SupportInformation(struct soap*, tt__SupportInformation **, const char*, const char*);

#ifndef soap_read_PointerTott__SupportInformation
#define soap_read_PointerTott__SupportInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__SupportInformation(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__BackupFile
#define SOAP_TYPE_PointerTott__BackupFile (925)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__BackupFile(struct soap*, tt__BackupFile *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__BackupFile(struct soap*, const char *, int, tt__BackupFile *const*, const char *);
SOAP_FMAC3 tt__BackupFile ** SOAP_FMAC4 soap_in_PointerTott__BackupFile(struct soap*, const char*, tt__BackupFile **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__BackupFile(struct soap*, tt__BackupFile *const*, const char*, const char*);

#ifndef soap_write_PointerTott__BackupFile
#define soap_write_PointerTott__BackupFile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__BackupFile(soap, data),0) || soap_put_PointerTott__BackupFile(soap, data, "tt:BackupFile", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__BackupFile ** SOAP_FMAC4 soap_get_PointerTott__BackupFile(struct soap*, tt__BackupFile **, const char*, const char*);

#ifndef soap_read_PointerTott__BackupFile
#define soap_read_PointerTott__BackupFile(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__BackupFile(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__string
#define SOAP_TYPE_PointerTostd__string (924)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__string
#define soap_write_PointerTostd__string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__string(soap, data),0) || soap_put_PointerTostd__string(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTostd__string
#define soap_read_PointerTostd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AttachmentData
#define SOAP_TYPE_PointerTott__AttachmentData (923)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AttachmentData(struct soap*, tt__AttachmentData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AttachmentData(struct soap*, const char *, int, tt__AttachmentData *const*, const char *);
SOAP_FMAC3 tt__AttachmentData ** SOAP_FMAC4 soap_in_PointerTott__AttachmentData(struct soap*, const char*, tt__AttachmentData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AttachmentData(struct soap*, tt__AttachmentData *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AttachmentData
#define soap_write_PointerTott__AttachmentData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AttachmentData(soap, data),0) || soap_put_PointerTott__AttachmentData(soap, data, "tt:AttachmentData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AttachmentData ** SOAP_FMAC4 soap_get_PointerTott__AttachmentData(struct soap*, tt__AttachmentData **, const char*, const char*);

#ifndef soap_read_PointerTott__AttachmentData
#define soap_read_PointerTott__AttachmentData(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__AttachmentData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SystemDateTime
#define SOAP_TYPE_PointerTott__SystemDateTime (922)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SystemDateTime(struct soap*, tt__SystemDateTime *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SystemDateTime(struct soap*, const char *, int, tt__SystemDateTime *const*, const char *);
SOAP_FMAC3 tt__SystemDateTime ** SOAP_FMAC4 soap_in_PointerTott__SystemDateTime(struct soap*, const char*, tt__SystemDateTime **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SystemDateTime(struct soap*, tt__SystemDateTime *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SystemDateTime
#define soap_write_PointerTott__SystemDateTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SystemDateTime(soap, data),0) || soap_put_PointerTott__SystemDateTime(soap, data, "tt:SystemDateTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemDateTime ** SOAP_FMAC4 soap_get_PointerTott__SystemDateTime(struct soap*, tt__SystemDateTime **, const char*, const char*);

#ifndef soap_read_PointerTott__SystemDateTime
#define soap_read_PointerTott__SystemDateTime(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__SystemDateTime(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DateTime
#define SOAP_TYPE_PointerTott__DateTime (921)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DateTime(struct soap*, tt__DateTime *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DateTime(struct soap*, const char *, int, tt__DateTime *const*, const char *);
SOAP_FMAC3 tt__DateTime ** SOAP_FMAC4 soap_in_PointerTott__DateTime(struct soap*, const char*, tt__DateTime **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DateTime(struct soap*, tt__DateTime *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DateTime
#define soap_write_PointerTott__DateTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DateTime(soap, data),0) || soap_put_PointerTott__DateTime(soap, data, "tt:DateTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DateTime ** SOAP_FMAC4 soap_get_PointerTott__DateTime(struct soap*, tt__DateTime **, const char*, const char*);

#ifndef soap_read_PointerTott__DateTime
#define soap_read_PointerTott__DateTime(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__DateTime(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__TimeZone
#define SOAP_TYPE_PointerTott__TimeZone (920)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__TimeZone(struct soap*, tt__TimeZone *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__TimeZone(struct soap*, const char *, int, tt__TimeZone *const*, const char *);
SOAP_FMAC3 tt__TimeZone ** SOAP_FMAC4 soap_in_PointerTott__TimeZone(struct soap*, const char*, tt__TimeZone **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__TimeZone(struct soap*, tt__TimeZone *const*, const char*, const char*);

#ifndef soap_write_PointerTott__TimeZone
#define soap_write_PointerTott__TimeZone(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__TimeZone(soap, data),0) || soap_put_PointerTott__TimeZone(soap, data, "tt:TimeZone", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TimeZone ** SOAP_FMAC4 soap_get_PointerTott__TimeZone(struct soap*, tt__TimeZone **, const char*, const char*);

#ifndef soap_read_PointerTott__TimeZone
#define soap_read_PointerTott__TimeZone(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__TimeZone(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotds__DeviceServiceCapabilities
#define SOAP_TYPE_PointerTotds__DeviceServiceCapabilities (919)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotds__DeviceServiceCapabilities(struct soap*, tds__DeviceServiceCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotds__DeviceServiceCapabilities(struct soap*, const char *, int, tds__DeviceServiceCapabilities *const*, const char *);
SOAP_FMAC3 tds__DeviceServiceCapabilities ** SOAP_FMAC4 soap_in_PointerTotds__DeviceServiceCapabilities(struct soap*, const char*, tds__DeviceServiceCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotds__DeviceServiceCapabilities(struct soap*, tds__DeviceServiceCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTotds__DeviceServiceCapabilities
#define soap_write_PointerTotds__DeviceServiceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotds__DeviceServiceCapabilities(soap, data),0) || soap_put_PointerTotds__DeviceServiceCapabilities(soap, data, "tds:DeviceServiceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__DeviceServiceCapabilities ** SOAP_FMAC4 soap_get_PointerTotds__DeviceServiceCapabilities(struct soap*, tds__DeviceServiceCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTotds__DeviceServiceCapabilities
#define soap_read_PointerTotds__DeviceServiceCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTotds__DeviceServiceCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotds__Service
#define SOAP_TYPE_PointerTotds__Service (917)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotds__Service(struct soap*, tds__Service *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotds__Service(struct soap*, const char *, int, tds__Service *const*, const char *);
SOAP_FMAC3 tds__Service ** SOAP_FMAC4 soap_in_PointerTotds__Service(struct soap*, const char*, tds__Service **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotds__Service(struct soap*, tds__Service *const*, const char*, const char*);

#ifndef soap_write_PointerTotds__Service
#define soap_write_PointerTotds__Service(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotds__Service(soap, data),0) || soap_put_PointerTotds__Service(soap, data, "tds:Service", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__Service ** SOAP_FMAC4 soap_get_PointerTotds__Service(struct soap*, tds__Service **, const char*, const char*);

#ifndef soap_read_PointerTotds__Service
#define soap_read_PointerTotds__Service(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTotds__Service(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__StringAttrList
#define SOAP_TYPE_PointerTott__StringAttrList (916)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__StringAttrList(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__StringAttrList(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTott__StringAttrList(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__StringAttrList(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTott__StringAttrList
#define soap_write_PointerTott__StringAttrList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__StringAttrList(soap, data),0) || soap_put_PointerTott__StringAttrList(soap, data, "tt:StringAttrList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTott__StringAttrList(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTott__StringAttrList
#define soap_read_PointerTott__StringAttrList(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__StringAttrList(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotds__EAPMethodTypes
#define SOAP_TYPE_PointerTotds__EAPMethodTypes (915)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotds__EAPMethodTypes(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotds__EAPMethodTypes(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTotds__EAPMethodTypes(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotds__EAPMethodTypes(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTotds__EAPMethodTypes
#define soap_write_PointerTotds__EAPMethodTypes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotds__EAPMethodTypes(soap, data),0) || soap_put_PointerTotds__EAPMethodTypes(soap, data, "tds:EAPMethodTypes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTotds__EAPMethodTypes(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTotds__EAPMethodTypes
#define soap_read_PointerTotds__EAPMethodTypes(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTotds__EAPMethodTypes(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTobool
#define SOAP_TYPE_PointerTobool (914)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTobool(struct soap*, bool *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTobool(struct soap*, const char *, int, bool *const*, const char *);
SOAP_FMAC3 bool ** SOAP_FMAC4 soap_in_PointerTobool(struct soap*, const char*, bool **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTobool(struct soap*, bool *const*, const char*, const char*);

#ifndef soap_write_PointerTobool
#define soap_write_PointerTobool(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTobool(soap, data),0) || soap_put_PointerTobool(soap, data, "boolean", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 bool ** SOAP_FMAC4 soap_get_PointerTobool(struct soap*, bool **, const char*, const char*);

#ifndef soap_read_PointerTobool
#define soap_read_PointerTobool(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTobool(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotds__MiscCapabilities
#define SOAP_TYPE_PointerTotds__MiscCapabilities (912)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotds__MiscCapabilities(struct soap*, tds__MiscCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotds__MiscCapabilities(struct soap*, const char *, int, tds__MiscCapabilities *const*, const char *);
SOAP_FMAC3 tds__MiscCapabilities ** SOAP_FMAC4 soap_in_PointerTotds__MiscCapabilities(struct soap*, const char*, tds__MiscCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotds__MiscCapabilities(struct soap*, tds__MiscCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTotds__MiscCapabilities
#define soap_write_PointerTotds__MiscCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotds__MiscCapabilities(soap, data),0) || soap_put_PointerTotds__MiscCapabilities(soap, data, "tds:MiscCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__MiscCapabilities ** SOAP_FMAC4 soap_get_PointerTotds__MiscCapabilities(struct soap*, tds__MiscCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTotds__MiscCapabilities
#define soap_read_PointerTotds__MiscCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTotds__MiscCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotds__SystemCapabilities
#define SOAP_TYPE_PointerTotds__SystemCapabilities (911)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotds__SystemCapabilities(struct soap*, tds__SystemCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotds__SystemCapabilities(struct soap*, const char *, int, tds__SystemCapabilities *const*, const char *);
SOAP_FMAC3 tds__SystemCapabilities ** SOAP_FMAC4 soap_in_PointerTotds__SystemCapabilities(struct soap*, const char*, tds__SystemCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotds__SystemCapabilities(struct soap*, tds__SystemCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTotds__SystemCapabilities
#define soap_write_PointerTotds__SystemCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotds__SystemCapabilities(soap, data),0) || soap_put_PointerTotds__SystemCapabilities(soap, data, "tds:SystemCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__SystemCapabilities ** SOAP_FMAC4 soap_get_PointerTotds__SystemCapabilities(struct soap*, tds__SystemCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTotds__SystemCapabilities
#define soap_read_PointerTotds__SystemCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTotds__SystemCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotds__SecurityCapabilities
#define SOAP_TYPE_PointerTotds__SecurityCapabilities (910)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotds__SecurityCapabilities(struct soap*, tds__SecurityCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotds__SecurityCapabilities(struct soap*, const char *, int, tds__SecurityCapabilities *const*, const char *);
SOAP_FMAC3 tds__SecurityCapabilities ** SOAP_FMAC4 soap_in_PointerTotds__SecurityCapabilities(struct soap*, const char*, tds__SecurityCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotds__SecurityCapabilities(struct soap*, tds__SecurityCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTotds__SecurityCapabilities
#define soap_write_PointerTotds__SecurityCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotds__SecurityCapabilities(soap, data),0) || soap_put_PointerTotds__SecurityCapabilities(soap, data, "tds:SecurityCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__SecurityCapabilities ** SOAP_FMAC4 soap_get_PointerTotds__SecurityCapabilities(struct soap*, tds__SecurityCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTotds__SecurityCapabilities
#define soap_read_PointerTotds__SecurityCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTotds__SecurityCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotds__NetworkCapabilities
#define SOAP_TYPE_PointerTotds__NetworkCapabilities (909)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotds__NetworkCapabilities(struct soap*, tds__NetworkCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotds__NetworkCapabilities(struct soap*, const char *, int, tds__NetworkCapabilities *const*, const char *);
SOAP_FMAC3 tds__NetworkCapabilities ** SOAP_FMAC4 soap_in_PointerTotds__NetworkCapabilities(struct soap*, const char*, tds__NetworkCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotds__NetworkCapabilities(struct soap*, tds__NetworkCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTotds__NetworkCapabilities
#define soap_write_PointerTotds__NetworkCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotds__NetworkCapabilities(soap, data),0) || soap_put_PointerTotds__NetworkCapabilities(soap, data, "tds:NetworkCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__NetworkCapabilities ** SOAP_FMAC4 soap_get_PointerTotds__NetworkCapabilities(struct soap*, tds__NetworkCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTotds__NetworkCapabilities
#define soap_read_PointerTotds__NetworkCapabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTotds__NetworkCapabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OnvifVersion
#define SOAP_TYPE_PointerTott__OnvifVersion (908)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OnvifVersion(struct soap*, tt__OnvifVersion *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OnvifVersion(struct soap*, const char *, int, tt__OnvifVersion *const*, const char *);
SOAP_FMAC3 tt__OnvifVersion ** SOAP_FMAC4 soap_in_PointerTott__OnvifVersion(struct soap*, const char*, tt__OnvifVersion **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OnvifVersion(struct soap*, tt__OnvifVersion *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OnvifVersion
#define soap_write_PointerTott__OnvifVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OnvifVersion(soap, data),0) || soap_put_PointerTott__OnvifVersion(soap, data, "tt:OnvifVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OnvifVersion ** SOAP_FMAC4 soap_get_PointerTott__OnvifVersion(struct soap*, tt__OnvifVersion **, const char*, const char*);

#ifndef soap_read_PointerTott__OnvifVersion
#define soap_read_PointerTott__OnvifVersion(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTott__OnvifVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__Service_Capabilities
#define SOAP_TYPE_PointerTo_tds__Service_Capabilities (907)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__Service_Capabilities(struct soap*, _tds__Service_Capabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__Service_Capabilities(struct soap*, const char *, int, _tds__Service_Capabilities *const*, const char *);
SOAP_FMAC3 _tds__Service_Capabilities ** SOAP_FMAC4 soap_in_PointerTo_tds__Service_Capabilities(struct soap*, const char*, _tds__Service_Capabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__Service_Capabilities(struct soap*, _tds__Service_Capabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__Service_Capabilities
#define soap_write_PointerTo_tds__Service_Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__Service_Capabilities(soap, data),0) || soap_put_PointerTo_tds__Service_Capabilities(soap, data, "tds:Service-Capabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__Service_Capabilities ** SOAP_FMAC4 soap_get_PointerTo_tds__Service_Capabilities(struct soap*, _tds__Service_Capabilities **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__Service_Capabilities
#define soap_read_PointerTo_tds__Service_Capabilities(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_tds__Service_Capabilities(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Header
#define SOAP_TYPE_PointerToSOAP_ENV__Header (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Header(struct soap*, const char *, int, struct SOAP_ENV__Header *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Header ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Header
#define soap_write_PointerToSOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Header(soap, data),0) || soap_put_PointerToSOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Header
#define soap_read_PointerToSOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data),0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data),0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data),0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTochan__ChannelInstanceType
#define SOAP_TYPE_PointerTochan__ChannelInstanceType (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTochan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTochan__ChannelInstanceType(struct soap*, const char *, int, struct chan__ChannelInstanceType *const*, const char *);
SOAP_FMAC3 struct chan__ChannelInstanceType ** SOAP_FMAC4 soap_in_PointerTochan__ChannelInstanceType(struct soap*, const char*, struct chan__ChannelInstanceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTochan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *const*, const char*, const char*);

#ifndef soap_write_PointerTochan__ChannelInstanceType
#define soap_write_PointerTochan__ChannelInstanceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTochan__ChannelInstanceType(soap, data),0) || soap_put_PointerTochan__ChannelInstanceType(soap, data, "chan:ChannelInstanceType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct chan__ChannelInstanceType ** SOAP_FMAC4 soap_get_PointerTochan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType **, const char*, const char*);

#ifndef soap_read_PointerTochan__ChannelInstanceType
#define soap_read_PointerTochan__ChannelInstanceType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTochan__ChannelInstanceType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsa5__FaultTo
#define SOAP_TYPE_PointerTo_wsa5__FaultTo (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__FaultTo(struct soap*, struct wsa5__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__FaultTo(struct soap*, const char *, int, struct wsa5__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__FaultTo(struct soap*, const char*, struct wsa5__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__FaultTo(struct soap*, struct wsa5__EndpointReferenceType *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsa5__FaultTo
#define soap_write_PointerTo_wsa5__FaultTo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_wsa5__FaultTo(soap, data),0) || soap_put_PointerTo_wsa5__FaultTo(soap, data, "wsa5:FaultTo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__FaultTo(struct soap*, struct wsa5__EndpointReferenceType **, const char*, const char*);

#ifndef soap_read_PointerTo_wsa5__FaultTo
#define soap_read_PointerTo_wsa5__FaultTo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_wsa5__FaultTo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsa5__ReplyTo
#define SOAP_TYPE_PointerTo_wsa5__ReplyTo (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__ReplyTo(struct soap*, struct wsa5__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__ReplyTo(struct soap*, const char *, int, struct wsa5__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__ReplyTo(struct soap*, const char*, struct wsa5__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__ReplyTo(struct soap*, struct wsa5__EndpointReferenceType *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsa5__ReplyTo
#define soap_write_PointerTo_wsa5__ReplyTo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_wsa5__ReplyTo(soap, data),0) || soap_put_PointerTo_wsa5__ReplyTo(soap, data, "wsa5:ReplyTo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__ReplyTo(struct soap*, struct wsa5__EndpointReferenceType **, const char*, const char*);

#ifndef soap_read_PointerTo_wsa5__ReplyTo
#define soap_read_PointerTo_wsa5__ReplyTo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_wsa5__ReplyTo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsa5__From
#define SOAP_TYPE_PointerTo_wsa5__From (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__From(struct soap*, struct wsa5__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__From(struct soap*, const char *, int, struct wsa5__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__From(struct soap*, const char*, struct wsa5__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__From(struct soap*, struct wsa5__EndpointReferenceType *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsa5__From
#define soap_write_PointerTo_wsa5__From(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_wsa5__From(soap, data),0) || soap_put_PointerTo_wsa5__From(soap, data, "wsa5:From", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__From(struct soap*, struct wsa5__EndpointReferenceType **, const char*, const char*);

#ifndef soap_read_PointerTo_wsa5__From
#define soap_read_PointerTo_wsa5__From(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_wsa5__From(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsa5__RelatesTo
#define SOAP_TYPE_PointerTo_wsa5__RelatesTo (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__RelatesTo(struct soap*, struct wsa5__RelatesToType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__RelatesTo(struct soap*, const char *, int, struct wsa5__RelatesToType *const*, const char *);
SOAP_FMAC3 struct wsa5__RelatesToType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__RelatesTo(struct soap*, const char*, struct wsa5__RelatesToType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__RelatesTo(struct soap*, struct wsa5__RelatesToType *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsa5__RelatesTo
#define soap_write_PointerTo_wsa5__RelatesTo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_wsa5__RelatesTo(soap, data),0) || soap_put_PointerTo_wsa5__RelatesTo(soap, data, "wsa5:RelatesTo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__RelatesToType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__RelatesTo(struct soap*, struct wsa5__RelatesToType **, const char*, const char*);

#ifndef soap_read_PointerTo_wsa5__RelatesTo
#define soap_read_PointerTo_wsa5__RelatesTo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_wsa5__RelatesTo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


/* _wsa5__ProblemIRI is a typedef element/attribute synonym for string */

#ifndef SOAP_TYPE__wsa5__ProblemIRI
#define SOAP_TYPE__wsa5__ProblemIRI (38)
#endif

#define soap_default__wsa5__ProblemIRI(soap, a) soap_default_string(soap, a)


#define soap_serialize__wsa5__ProblemIRI soap_serialize_string


#define soap_out__wsa5__ProblemIRI soap_out_string


#define soap_in__wsa5__ProblemIRI soap_in_string


#define soap_put__wsa5__ProblemIRI soap_put_string


#define soap_get__wsa5__ProblemIRI soap_get_string


#ifndef SOAP_TYPE__wsa5__ProblemHeaderQName
#define SOAP_TYPE__wsa5__ProblemHeaderQName (37)
#endif

#define soap_default__wsa5__ProblemHeaderQName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsa5__ProblemHeaderQName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsa5__ProblemHeaderQName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__wsa5__ProblemHeaderQName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__ProblemHeaderQName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__wsa5__ProblemHeaderQName
#define soap_write__wsa5__ProblemHeaderQName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa5__ProblemHeaderQName(soap, data),0) || soap_put__wsa5__ProblemHeaderQName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__wsa5__ProblemHeaderQName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__wsa5__ProblemHeaderQName
#define soap_read__wsa5__ProblemHeaderQName(soap, data) ( soap_begin_recv(soap) || !soap_get__wsa5__ProblemHeaderQName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


/* _wsa5__Action is a typedef element/attribute synonym for string */

#ifndef SOAP_TYPE__wsa5__Action
#define SOAP_TYPE__wsa5__Action (34)
#endif

#define soap_default__wsa5__Action(soap, a) soap_default_string(soap, a)


#define soap_serialize__wsa5__Action soap_serialize_string


#define soap_out__wsa5__Action soap_out_string


#define soap_in__wsa5__Action soap_in_string


#define soap_put__wsa5__Action soap_put_string


#define soap_get__wsa5__Action soap_get_string


/* _wsa5__To is a typedef element/attribute synonym for string */

#ifndef SOAP_TYPE__wsa5__To
#define SOAP_TYPE__wsa5__To (33)
#endif

#define soap_default__wsa5__To(soap, a) soap_default_string(soap, a)


#define soap_serialize__wsa5__To soap_serialize_string


#define soap_out__wsa5__To soap_out_string


#define soap_in__wsa5__To soap_in_string


#define soap_put__wsa5__To soap_put_string


#define soap_get__wsa5__To soap_get_string


/* _wsa5__MessageID is a typedef element/attribute synonym for string */

#ifndef SOAP_TYPE__wsa5__MessageID
#define SOAP_TYPE__wsa5__MessageID (28)
#endif

#define soap_default__wsa5__MessageID(soap, a) soap_default_string(soap, a)


#define soap_serialize__wsa5__MessageID soap_serialize_string


#define soap_out__wsa5__MessageID soap_out_string


#define soap_in__wsa5__MessageID soap_in_string


#define soap_put__wsa5__MessageID soap_put_string


#define soap_get__wsa5__MessageID soap_get_string


#ifndef SOAP_TYPE_PointerToint
#define SOAP_TYPE_PointerToint (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToint(struct soap*, int *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToint(struct soap*, const char *, int, int *const*, const char *);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_in_PointerToint(struct soap*, const char*, int **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToint(struct soap*, int *const*, const char*, const char*);

#ifndef soap_write_PointerToint
#define soap_write_PointerToint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToint(soap, data),0) || soap_put_PointerToint(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int ** SOAP_FMAC4 soap_get_PointerToint(struct soap*, int **, const char*, const char*);

#ifndef soap_read_PointerToint
#define soap_read_PointerToint(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToint(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsa5__MetadataType
#define SOAP_TYPE_PointerTowsa5__MetadataType (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsa5__MetadataType(struct soap*, struct wsa5__MetadataType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsa5__MetadataType(struct soap*, const char *, int, struct wsa5__MetadataType *const*, const char *);
SOAP_FMAC3 struct wsa5__MetadataType ** SOAP_FMAC4 soap_in_PointerTowsa5__MetadataType(struct soap*, const char*, struct wsa5__MetadataType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsa5__MetadataType(struct soap*, struct wsa5__MetadataType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsa5__MetadataType
#define soap_write_PointerTowsa5__MetadataType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsa5__MetadataType(soap, data),0) || soap_put_PointerTowsa5__MetadataType(soap, data, "wsa5:MetadataType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__MetadataType ** SOAP_FMAC4 soap_get_PointerTowsa5__MetadataType(struct soap*, struct wsa5__MetadataType **, const char*, const char*);

#ifndef soap_read_PointerTowsa5__MetadataType
#define soap_read_PointerTowsa5__MetadataType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsa5__MetadataType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsa5__ReferenceParametersType
#define SOAP_TYPE_PointerTowsa5__ReferenceParametersType (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsa5__ReferenceParametersType(struct soap*, const char *, int, struct wsa5__ReferenceParametersType *const*, const char *);
SOAP_FMAC3 struct wsa5__ReferenceParametersType ** SOAP_FMAC4 soap_in_PointerTowsa5__ReferenceParametersType(struct soap*, const char*, struct wsa5__ReferenceParametersType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsa5__ReferenceParametersType
#define soap_write_PointerTowsa5__ReferenceParametersType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsa5__ReferenceParametersType(soap, data),0) || soap_put_PointerTowsa5__ReferenceParametersType(soap, data, "wsa5:ReferenceParametersType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__ReferenceParametersType ** SOAP_FMAC4 soap_get_PointerTowsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType **, const char*, const char*);

#ifndef soap_read_PointerTowsa5__ReferenceParametersType
#define soap_read_PointerTowsa5__ReferenceParametersType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsa5__ReferenceParametersType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsa5__FaultCodesOpenEnumType
#define SOAP_TYPE_wsa5__FaultCodesOpenEnumType (18)
#endif

#define soap_default_wsa5__FaultCodesOpenEnumType(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__FaultCodesOpenEnumType(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__FaultCodesOpenEnumType(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wsa5__FaultCodesOpenEnumType(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__FaultCodesOpenEnumType(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wsa5__FaultCodesOpenEnumType
#define soap_write_wsa5__FaultCodesOpenEnumType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__FaultCodesOpenEnumType(soap, data),0) || soap_put_wsa5__FaultCodesOpenEnumType(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wsa5__FaultCodesOpenEnumType(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wsa5__FaultCodesOpenEnumType
#define soap_read_wsa5__FaultCodesOpenEnumType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__FaultCodesOpenEnumType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsa5__RelationshipTypeOpenEnum
#define SOAP_TYPE_wsa5__RelationshipTypeOpenEnum (17)
#endif

#define soap_default_wsa5__RelationshipTypeOpenEnum(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__RelationshipTypeOpenEnum(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__RelationshipTypeOpenEnum(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wsa5__RelationshipTypeOpenEnum(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__RelationshipTypeOpenEnum(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wsa5__RelationshipTypeOpenEnum
#define soap_write_wsa5__RelationshipTypeOpenEnum(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__RelationshipTypeOpenEnum(soap, data),0) || soap_put_wsa5__RelationshipTypeOpenEnum(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wsa5__RelationshipTypeOpenEnum(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wsa5__RelationshipTypeOpenEnum
#define soap_read_wsa5__RelationshipTypeOpenEnum(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__RelationshipTypeOpenEnum(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTounsignedByte
#define SOAP_TYPE_PointerTounsignedByte (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedByte(struct soap*, unsigned char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedByte(struct soap*, const char *, int, unsigned char *const*, const char *);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_in_PointerTounsignedByte(struct soap*, const char*, unsigned char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedByte(struct soap*, unsigned char *const*, const char*, const char*);

#ifndef soap_write_PointerTounsignedByte
#define soap_write_PointerTounsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTounsignedByte(soap, data),0) || soap_put_PointerTounsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_get_PointerTounsignedByte(struct soap*, unsigned char **, const char*, const char*);

#ifndef soap_read_PointerTounsignedByte
#define soap_read_PointerTounsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTounsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data),0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data),0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_std__vectorTemplateOf_wstop__TopicNamespaceType_Topic
#define SOAP_TYPE_std__vectorTemplateOf_wstop__TopicNamespaceType_Topic (1515)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOf_wstop__TopicNamespaceType_Topic(struct soap*, std::vector<_wstop__TopicNamespaceType_Topic >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOf_wstop__TopicNamespaceType_Topic(struct soap*, const std::vector<_wstop__TopicNamespaceType_Topic >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOf_wstop__TopicNamespaceType_Topic(struct soap*, const char*, int, const std::vector<_wstop__TopicNamespaceType_Topic >*, const char*);
SOAP_FMAC3 std::vector<_wstop__TopicNamespaceType_Topic >* SOAP_FMAC4 soap_in_std__vectorTemplateOf_wstop__TopicNamespaceType_Topic(struct soap*, const char*, std::vector<_wstop__TopicNamespaceType_Topic >*, const char*);
SOAP_FMAC1 std::vector<_wstop__TopicNamespaceType_Topic > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOf_wstop__TopicNamespaceType_Topic(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<_wstop__TopicNamespaceType_Topic > * soap_new_std__vectorTemplateOf_wstop__TopicNamespaceType_Topic(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOf_wstop__TopicNamespaceType_Topic(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOf_wstop__TopicNamespaceType_Topic(struct soap *soap, std::vector<_wstop__TopicNamespaceType_Topic >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOf_wstop__TopicNamespaceType_Topic(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTowstop__TopicType
#define SOAP_TYPE_std__vectorTemplateOfPointerTowstop__TopicType (1512)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowstop__TopicType(struct soap*, std::vector<wstop__TopicType * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowstop__TopicType(struct soap*, const std::vector<wstop__TopicType * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowstop__TopicType(struct soap*, const char*, int, const std::vector<wstop__TopicType * >*, const char*);
SOAP_FMAC3 std::vector<wstop__TopicType * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowstop__TopicType(struct soap*, const char*, std::vector<wstop__TopicType * >*, const char*);
SOAP_FMAC1 std::vector<wstop__TopicType * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowstop__TopicType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<wstop__TopicType * > * soap_new_std__vectorTemplateOfPointerTowstop__TopicType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTowstop__TopicType(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTowstop__TopicType(struct soap *soap, std::vector<wstop__TopicType * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTowstop__TopicType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfxsd__QName
#define SOAP_TYPE_std__vectorTemplateOfxsd__QName (1508)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxsd__QName(struct soap*, std::vector<std::string >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxsd__QName(struct soap*, const std::vector<std::string >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxsd__QName(struct soap*, const char*, int, const std::vector<std::string >*, const char*);
SOAP_FMAC3 std::vector<std::string >* SOAP_FMAC4 soap_in_std__vectorTemplateOfxsd__QName(struct soap*, const char*, std::vector<std::string >*, const char*);
SOAP_FMAC1 std::vector<std::string > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxsd__QName(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string > * soap_new_std__vectorTemplateOfxsd__QName(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfxsd__QName(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfxsd__QName(struct soap *soap, std::vector<std::string >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfxsd__QName(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__PresetTour
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__PresetTour (1471)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__PresetTour(struct soap*, std::vector<tt__PresetTour * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__PresetTour(struct soap*, const std::vector<tt__PresetTour * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__PresetTour(struct soap*, const char*, int, const std::vector<tt__PresetTour * >*, const char*);
SOAP_FMAC3 std::vector<tt__PresetTour * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__PresetTour(struct soap*, const char*, std::vector<tt__PresetTour * >*, const char*);
SOAP_FMAC1 std::vector<tt__PresetTour * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__PresetTour(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__PresetTour * > * soap_new_std__vectorTemplateOfPointerTott__PresetTour(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__PresetTour(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__PresetTour(struct soap *soap, std::vector<tt__PresetTour * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__PresetTour(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__PTZPreset
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__PTZPreset (1469)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__PTZPreset(struct soap*, std::vector<tt__PTZPreset * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__PTZPreset(struct soap*, const std::vector<tt__PTZPreset * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__PTZPreset(struct soap*, const char*, int, const std::vector<tt__PTZPreset * >*, const char*);
SOAP_FMAC3 std::vector<tt__PTZPreset * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__PTZPreset(struct soap*, const char*, std::vector<tt__PTZPreset * >*, const char*);
SOAP_FMAC1 std::vector<tt__PTZPreset * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__PTZPreset(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__PTZPreset * > * soap_new_std__vectorTemplateOfPointerTott__PTZPreset(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__PTZPreset(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__PTZPreset(struct soap *soap, std::vector<tt__PTZPreset * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__PTZPreset(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__PTZConfiguration
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__PTZConfiguration (1464)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__PTZConfiguration(struct soap*, std::vector<tt__PTZConfiguration * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__PTZConfiguration(struct soap*, const std::vector<tt__PTZConfiguration * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__PTZConfiguration(struct soap*, const char*, int, const std::vector<tt__PTZConfiguration * >*, const char*);
SOAP_FMAC3 std::vector<tt__PTZConfiguration * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__PTZConfiguration(struct soap*, const char*, std::vector<tt__PTZConfiguration * >*, const char*);
SOAP_FMAC1 std::vector<tt__PTZConfiguration * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__PTZConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__PTZConfiguration * > * soap_new_std__vectorTemplateOfPointerTott__PTZConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__PTZConfiguration(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__PTZConfiguration(struct soap *soap, std::vector<tt__PTZConfiguration * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__PTZConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__PTZNode
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__PTZNode (1463)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__PTZNode(struct soap*, std::vector<tt__PTZNode * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__PTZNode(struct soap*, const std::vector<tt__PTZNode * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__PTZNode(struct soap*, const char*, int, const std::vector<tt__PTZNode * >*, const char*);
SOAP_FMAC3 std::vector<tt__PTZNode * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__PTZNode(struct soap*, const char*, std::vector<tt__PTZNode * >*, const char*);
SOAP_FMAC1 std::vector<tt__PTZNode * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__PTZNode(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__PTZNode * > * soap_new_std__vectorTemplateOfPointerTott__PTZNode(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__PTZNode(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__PTZNode(struct soap *soap, std::vector<tt__PTZNode * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__PTZNode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOf_wsrfbf__BaseFaultType_Description
#define SOAP_TYPE_std__vectorTemplateOf_wsrfbf__BaseFaultType_Description (1456)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOf_wsrfbf__BaseFaultType_Description(struct soap*, std::vector<_wsrfbf__BaseFaultType_Description >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOf_wsrfbf__BaseFaultType_Description(struct soap*, const std::vector<_wsrfbf__BaseFaultType_Description >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOf_wsrfbf__BaseFaultType_Description(struct soap*, const char*, int, const std::vector<_wsrfbf__BaseFaultType_Description >*, const char*);
SOAP_FMAC3 std::vector<_wsrfbf__BaseFaultType_Description >* SOAP_FMAC4 soap_in_std__vectorTemplateOf_wsrfbf__BaseFaultType_Description(struct soap*, const char*, std::vector<_wsrfbf__BaseFaultType_Description >*, const char*);
SOAP_FMAC1 std::vector<_wsrfbf__BaseFaultType_Description > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOf_wsrfbf__BaseFaultType_Description(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<_wsrfbf__BaseFaultType_Description > * soap_new_std__vectorTemplateOf_wsrfbf__BaseFaultType_Description(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOf_wsrfbf__BaseFaultType_Description(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOf_wsrfbf__BaseFaultType_Description(struct soap *soap, std::vector<_wsrfbf__BaseFaultType_Description >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOf_wsrfbf__BaseFaultType_Description(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTowsnt__NotificationMessageHolderType
#define SOAP_TYPE_std__vectorTemplateOfPointerTowsnt__NotificationMessageHolderType (1447)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowsnt__NotificationMessageHolderType(struct soap*, std::vector<wsnt__NotificationMessageHolderType * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowsnt__NotificationMessageHolderType(struct soap*, const std::vector<wsnt__NotificationMessageHolderType * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowsnt__NotificationMessageHolderType(struct soap*, const char*, int, const std::vector<wsnt__NotificationMessageHolderType * >*, const char*);
SOAP_FMAC3 std::vector<wsnt__NotificationMessageHolderType * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowsnt__NotificationMessageHolderType(struct soap*, const char*, std::vector<wsnt__NotificationMessageHolderType * >*, const char*);
SOAP_FMAC1 std::vector<wsnt__NotificationMessageHolderType * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowsnt__NotificationMessageHolderType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<wsnt__NotificationMessageHolderType * > * soap_new_std__vectorTemplateOfPointerTowsnt__NotificationMessageHolderType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTowsnt__NotificationMessageHolderType(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTowsnt__NotificationMessageHolderType(struct soap *soap, std::vector<wsnt__NotificationMessageHolderType * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTowsnt__NotificationMessageHolderType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTowsnt__TopicExpressionType
#define SOAP_TYPE_std__vectorTemplateOfPointerTowsnt__TopicExpressionType (1444)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowsnt__TopicExpressionType(struct soap*, std::vector<wsnt__TopicExpressionType * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowsnt__TopicExpressionType(struct soap*, const std::vector<wsnt__TopicExpressionType * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowsnt__TopicExpressionType(struct soap*, const char*, int, const std::vector<wsnt__TopicExpressionType * >*, const char*);
SOAP_FMAC3 std::vector<wsnt__TopicExpressionType * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowsnt__TopicExpressionType(struct soap*, const char*, std::vector<wsnt__TopicExpressionType * >*, const char*);
SOAP_FMAC1 std::vector<wsnt__TopicExpressionType * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowsnt__TopicExpressionType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<wsnt__TopicExpressionType * > * soap_new_std__vectorTemplateOfPointerTowsnt__TopicExpressionType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTowsnt__TopicExpressionType(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTowsnt__TopicExpressionType(struct soap *soap, std::vector<wsnt__TopicExpressionType * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTowsnt__TopicExpressionType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOftt__OSDType
#define SOAP_TYPE_std__vectorTemplateOftt__OSDType (1435)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__OSDType(struct soap*, std::vector<enum tt__OSDType >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__OSDType(struct soap*, const std::vector<enum tt__OSDType >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__OSDType(struct soap*, const char*, int, const std::vector<enum tt__OSDType >*, const char*);
SOAP_FMAC3 std::vector<enum tt__OSDType >* SOAP_FMAC4 soap_in_std__vectorTemplateOftt__OSDType(struct soap*, const char*, std::vector<enum tt__OSDType >*, const char*);
SOAP_FMAC1 std::vector<enum tt__OSDType > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__OSDType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__OSDType > * soap_new_std__vectorTemplateOftt__OSDType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__OSDType(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOftt__OSDType(struct soap *soap, std::vector<enum tt__OSDType >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOftt__OSDType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__ColorspaceRange
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__ColorspaceRange (1426)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__ColorspaceRange(struct soap*, std::vector<tt__ColorspaceRange * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__ColorspaceRange(struct soap*, const std::vector<tt__ColorspaceRange * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__ColorspaceRange(struct soap*, const char*, int, const std::vector<tt__ColorspaceRange * >*, const char*);
SOAP_FMAC3 std::vector<tt__ColorspaceRange * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__ColorspaceRange(struct soap*, const char*, std::vector<tt__ColorspaceRange * >*, const char*);
SOAP_FMAC1 std::vector<tt__ColorspaceRange * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__ColorspaceRange(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__ColorspaceRange * > * soap_new_std__vectorTemplateOfPointerTott__ColorspaceRange(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__ColorspaceRange(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__ColorspaceRange(struct soap *soap, std::vector<tt__ColorspaceRange * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__ColorspaceRange(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Color
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Color (1423)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Color(struct soap*, std::vector<tt__Color * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Color(struct soap*, const std::vector<tt__Color * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Color(struct soap*, const char*, int, const std::vector<tt__Color * >*, const char*);
SOAP_FMAC3 std::vector<tt__Color * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Color(struct soap*, const char*, std::vector<tt__Color * >*, const char*);
SOAP_FMAC1 std::vector<tt__Color * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Color(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Color * > * soap_new_std__vectorTemplateOfPointerTott__Color(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Color(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__Color(struct soap *soap, std::vector<tt__Color * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__Color(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__AudioClassCandidate
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__AudioClassCandidate (1417)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__AudioClassCandidate(struct soap*, std::vector<tt__AudioClassCandidate * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__AudioClassCandidate(struct soap*, const std::vector<tt__AudioClassCandidate * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__AudioClassCandidate(struct soap*, const char*, int, const std::vector<tt__AudioClassCandidate * >*, const char*);
SOAP_FMAC3 std::vector<tt__AudioClassCandidate * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__AudioClassCandidate(struct soap*, const char*, std::vector<tt__AudioClassCandidate * >*, const char*);
SOAP_FMAC1 std::vector<tt__AudioClassCandidate * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__AudioClassCandidate(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__AudioClassCandidate * > * soap_new_std__vectorTemplateOfPointerTott__AudioClassCandidate(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__AudioClassCandidate(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__AudioClassCandidate(struct soap *soap, std::vector<tt__AudioClassCandidate * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__AudioClassCandidate(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__EngineConfiguration
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__EngineConfiguration (1406)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__EngineConfiguration(struct soap*, std::vector<tt__EngineConfiguration * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__EngineConfiguration(struct soap*, const std::vector<tt__EngineConfiguration * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__EngineConfiguration(struct soap*, const char*, int, const std::vector<tt__EngineConfiguration * >*, const char*);
SOAP_FMAC3 std::vector<tt__EngineConfiguration * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__EngineConfiguration(struct soap*, const char*, std::vector<tt__EngineConfiguration * >*, const char*);
SOAP_FMAC1 std::vector<tt__EngineConfiguration * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__EngineConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__EngineConfiguration * > * soap_new_std__vectorTemplateOfPointerTott__EngineConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__EngineConfiguration(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__EngineConfiguration(struct soap *soap, std::vector<tt__EngineConfiguration * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__EngineConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__RecordingJobStateTrack
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__RecordingJobStateTrack (1403)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__RecordingJobStateTrack(struct soap*, std::vector<tt__RecordingJobStateTrack * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__RecordingJobStateTrack(struct soap*, const std::vector<tt__RecordingJobStateTrack * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__RecordingJobStateTrack(struct soap*, const char*, int, const std::vector<tt__RecordingJobStateTrack * >*, const char*);
SOAP_FMAC3 std::vector<tt__RecordingJobStateTrack * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__RecordingJobStateTrack(struct soap*, const char*, std::vector<tt__RecordingJobStateTrack * >*, const char*);
SOAP_FMAC1 std::vector<tt__RecordingJobStateTrack * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__RecordingJobStateTrack(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__RecordingJobStateTrack * > * soap_new_std__vectorTemplateOfPointerTott__RecordingJobStateTrack(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__RecordingJobStateTrack(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__RecordingJobStateTrack(struct soap *soap, std::vector<tt__RecordingJobStateTrack * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__RecordingJobStateTrack(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__RecordingJobStateSource
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__RecordingJobStateSource (1399)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__RecordingJobStateSource(struct soap*, std::vector<tt__RecordingJobStateSource * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__RecordingJobStateSource(struct soap*, const std::vector<tt__RecordingJobStateSource * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__RecordingJobStateSource(struct soap*, const char*, int, const std::vector<tt__RecordingJobStateSource * >*, const char*);
SOAP_FMAC3 std::vector<tt__RecordingJobStateSource * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__RecordingJobStateSource(struct soap*, const char*, std::vector<tt__RecordingJobStateSource * >*, const char*);
SOAP_FMAC1 std::vector<tt__RecordingJobStateSource * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__RecordingJobStateSource(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__RecordingJobStateSource * > * soap_new_std__vectorTemplateOfPointerTott__RecordingJobStateSource(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__RecordingJobStateSource(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__RecordingJobStateSource(struct soap *soap, std::vector<tt__RecordingJobStateSource * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__RecordingJobStateSource(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__RecordingJobTrack
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__RecordingJobTrack (1396)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__RecordingJobTrack(struct soap*, std::vector<tt__RecordingJobTrack * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__RecordingJobTrack(struct soap*, const std::vector<tt__RecordingJobTrack * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__RecordingJobTrack(struct soap*, const char*, int, const std::vector<tt__RecordingJobTrack * >*, const char*);
SOAP_FMAC3 std::vector<tt__RecordingJobTrack * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__RecordingJobTrack(struct soap*, const char*, std::vector<tt__RecordingJobTrack * >*, const char*);
SOAP_FMAC1 std::vector<tt__RecordingJobTrack * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__RecordingJobTrack(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__RecordingJobTrack * > * soap_new_std__vectorTemplateOfPointerTott__RecordingJobTrack(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__RecordingJobTrack(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__RecordingJobTrack(struct soap *soap, std::vector<tt__RecordingJobTrack * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__RecordingJobTrack(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__RecordingJobSource
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__RecordingJobSource (1393)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__RecordingJobSource(struct soap*, std::vector<tt__RecordingJobSource * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__RecordingJobSource(struct soap*, const std::vector<tt__RecordingJobSource * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__RecordingJobSource(struct soap*, const char*, int, const std::vector<tt__RecordingJobSource * >*, const char*);
SOAP_FMAC3 std::vector<tt__RecordingJobSource * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__RecordingJobSource(struct soap*, const char*, std::vector<tt__RecordingJobSource * >*, const char*);
SOAP_FMAC1 std::vector<tt__RecordingJobSource * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__RecordingJobSource(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__RecordingJobSource * > * soap_new_std__vectorTemplateOfPointerTott__RecordingJobSource(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__RecordingJobSource(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__RecordingJobSource(struct soap *soap, std::vector<tt__RecordingJobSource * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__RecordingJobSource(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__GetTracksResponseItem
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__GetTracksResponseItem (1390)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__GetTracksResponseItem(struct soap*, std::vector<tt__GetTracksResponseItem * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__GetTracksResponseItem(struct soap*, const std::vector<tt__GetTracksResponseItem * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__GetTracksResponseItem(struct soap*, const char*, int, const std::vector<tt__GetTracksResponseItem * >*, const char*);
SOAP_FMAC3 std::vector<tt__GetTracksResponseItem * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__GetTracksResponseItem(struct soap*, const char*, std::vector<tt__GetTracksResponseItem * >*, const char*);
SOAP_FMAC1 std::vector<tt__GetTracksResponseItem * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__GetTracksResponseItem(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__GetTracksResponseItem * > * soap_new_std__vectorTemplateOfPointerTott__GetTracksResponseItem(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__GetTracksResponseItem(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__GetTracksResponseItem(struct soap *soap, std::vector<tt__GetTracksResponseItem * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__GetTracksResponseItem(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__TrackAttributes
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__TrackAttributes (1382)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__TrackAttributes(struct soap*, std::vector<tt__TrackAttributes * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__TrackAttributes(struct soap*, const std::vector<tt__TrackAttributes * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__TrackAttributes(struct soap*, const char*, int, const std::vector<tt__TrackAttributes * >*, const char*);
SOAP_FMAC3 std::vector<tt__TrackAttributes * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__TrackAttributes(struct soap*, const char*, std::vector<tt__TrackAttributes * >*, const char*);
SOAP_FMAC1 std::vector<tt__TrackAttributes * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__TrackAttributes(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__TrackAttributes * > * soap_new_std__vectorTemplateOfPointerTott__TrackAttributes(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__TrackAttributes(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__TrackAttributes(struct soap *soap, std::vector<tt__TrackAttributes * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__TrackAttributes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__TrackInformation
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__TrackInformation (1380)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__TrackInformation(struct soap*, std::vector<tt__TrackInformation * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__TrackInformation(struct soap*, const std::vector<tt__TrackInformation * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__TrackInformation(struct soap*, const char*, int, const std::vector<tt__TrackInformation * >*, const char*);
SOAP_FMAC3 std::vector<tt__TrackInformation * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__TrackInformation(struct soap*, const char*, std::vector<tt__TrackInformation * >*, const char*);
SOAP_FMAC1 std::vector<tt__TrackInformation * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__TrackInformation(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__TrackInformation * > * soap_new_std__vectorTemplateOfPointerTott__TrackInformation(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__TrackInformation(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__TrackInformation(struct soap *soap, std::vector<tt__TrackInformation * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__TrackInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__FindMetadataResult
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__FindMetadataResult (1377)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__FindMetadataResult(struct soap*, std::vector<tt__FindMetadataResult * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__FindMetadataResult(struct soap*, const std::vector<tt__FindMetadataResult * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__FindMetadataResult(struct soap*, const char*, int, const std::vector<tt__FindMetadataResult * >*, const char*);
SOAP_FMAC3 std::vector<tt__FindMetadataResult * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__FindMetadataResult(struct soap*, const char*, std::vector<tt__FindMetadataResult * >*, const char*);
SOAP_FMAC1 std::vector<tt__FindMetadataResult * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__FindMetadataResult(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__FindMetadataResult * > * soap_new_std__vectorTemplateOfPointerTott__FindMetadataResult(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__FindMetadataResult(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__FindMetadataResult(struct soap *soap, std::vector<tt__FindMetadataResult * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__FindMetadataResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__FindPTZPositionResult
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__FindPTZPositionResult (1375)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__FindPTZPositionResult(struct soap*, std::vector<tt__FindPTZPositionResult * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__FindPTZPositionResult(struct soap*, const std::vector<tt__FindPTZPositionResult * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__FindPTZPositionResult(struct soap*, const char*, int, const std::vector<tt__FindPTZPositionResult * >*, const char*);
SOAP_FMAC3 std::vector<tt__FindPTZPositionResult * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__FindPTZPositionResult(struct soap*, const char*, std::vector<tt__FindPTZPositionResult * >*, const char*);
SOAP_FMAC1 std::vector<tt__FindPTZPositionResult * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__FindPTZPositionResult(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__FindPTZPositionResult * > * soap_new_std__vectorTemplateOfPointerTott__FindPTZPositionResult(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__FindPTZPositionResult(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__FindPTZPositionResult(struct soap *soap, std::vector<tt__FindPTZPositionResult * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__FindPTZPositionResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__FindEventResult
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__FindEventResult (1373)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__FindEventResult(struct soap*, std::vector<tt__FindEventResult * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__FindEventResult(struct soap*, const std::vector<tt__FindEventResult * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__FindEventResult(struct soap*, const char*, int, const std::vector<tt__FindEventResult * >*, const char*);
SOAP_FMAC3 std::vector<tt__FindEventResult * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__FindEventResult(struct soap*, const char*, std::vector<tt__FindEventResult * >*, const char*);
SOAP_FMAC1 std::vector<tt__FindEventResult * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__FindEventResult(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__FindEventResult * > * soap_new_std__vectorTemplateOfPointerTott__FindEventResult(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__FindEventResult(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__FindEventResult(struct soap *soap, std::vector<tt__FindEventResult * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__FindEventResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__RecordingInformation
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__RecordingInformation (1371)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__RecordingInformation(struct soap*, std::vector<tt__RecordingInformation * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__RecordingInformation(struct soap*, const std::vector<tt__RecordingInformation * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__RecordingInformation(struct soap*, const char*, int, const std::vector<tt__RecordingInformation * >*, const char*);
SOAP_FMAC3 std::vector<tt__RecordingInformation * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__RecordingInformation(struct soap*, const char*, std::vector<tt__RecordingInformation * >*, const char*);
SOAP_FMAC1 std::vector<tt__RecordingInformation * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__RecordingInformation(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__RecordingInformation * > * soap_new_std__vectorTemplateOfPointerTott__RecordingInformation(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__RecordingInformation(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__RecordingInformation(struct soap *soap, std::vector<tt__RecordingInformation * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__RecordingInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOftt__RecordingReference
#define SOAP_TYPE_std__vectorTemplateOftt__RecordingReference (1367)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__RecordingReference(struct soap*, std::vector<std::string >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__RecordingReference(struct soap*, const std::vector<std::string >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__RecordingReference(struct soap*, const char*, int, const std::vector<std::string >*, const char*);
SOAP_FMAC3 std::vector<std::string >* SOAP_FMAC4 soap_in_std__vectorTemplateOftt__RecordingReference(struct soap*, const char*, std::vector<std::string >*, const char*);
SOAP_FMAC1 std::vector<std::string > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__RecordingReference(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string > * soap_new_std__vectorTemplateOftt__RecordingReference(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__RecordingReference(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOftt__RecordingReference(struct soap *soap, std::vector<std::string >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOftt__RecordingReference(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__SourceReference
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__SourceReference (1366)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__SourceReference(struct soap*, std::vector<tt__SourceReference * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__SourceReference(struct soap*, const std::vector<tt__SourceReference * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__SourceReference(struct soap*, const char*, int, const std::vector<tt__SourceReference * >*, const char*);
SOAP_FMAC3 std::vector<tt__SourceReference * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__SourceReference(struct soap*, const char*, std::vector<tt__SourceReference * >*, const char*);
SOAP_FMAC1 std::vector<tt__SourceReference * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__SourceReference(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__SourceReference * > * soap_new_std__vectorTemplateOfPointerTott__SourceReference(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__SourceReference(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__SourceReference(struct soap *soap, std::vector<tt__SourceReference * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__SourceReference(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Rectangle
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Rectangle (1361)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Rectangle(struct soap*, std::vector<tt__Rectangle * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Rectangle(struct soap*, const std::vector<tt__Rectangle * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Rectangle(struct soap*, const char*, int, const std::vector<tt__Rectangle * >*, const char*);
SOAP_FMAC3 std::vector<tt__Rectangle * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Rectangle(struct soap*, const char*, std::vector<tt__Rectangle * >*, const char*);
SOAP_FMAC1 std::vector<tt__Rectangle * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Rectangle(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Rectangle * > * soap_new_std__vectorTemplateOfPointerTott__Rectangle(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Rectangle(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__Rectangle(struct soap *soap, std::vector<tt__Rectangle * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__Rectangle(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__PaneLayoutOptions
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__PaneLayoutOptions (1359)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__PaneLayoutOptions(struct soap*, std::vector<tt__PaneLayoutOptions * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__PaneLayoutOptions(struct soap*, const std::vector<tt__PaneLayoutOptions * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__PaneLayoutOptions(struct soap*, const char*, int, const std::vector<tt__PaneLayoutOptions * >*, const char*);
SOAP_FMAC3 std::vector<tt__PaneLayoutOptions * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__PaneLayoutOptions(struct soap*, const char*, std::vector<tt__PaneLayoutOptions * >*, const char*);
SOAP_FMAC1 std::vector<tt__PaneLayoutOptions * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__PaneLayoutOptions(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__PaneLayoutOptions * > * soap_new_std__vectorTemplateOfPointerTott__PaneLayoutOptions(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__PaneLayoutOptions(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__PaneLayoutOptions(struct soap *soap, std::vector<tt__PaneLayoutOptions * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__PaneLayoutOptions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__PaneLayout
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__PaneLayout (1353)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__PaneLayout(struct soap*, std::vector<tt__PaneLayout * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__PaneLayout(struct soap*, const std::vector<tt__PaneLayout * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__PaneLayout(struct soap*, const char*, int, const std::vector<tt__PaneLayout * >*, const char*);
SOAP_FMAC3 std::vector<tt__PaneLayout * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__PaneLayout(struct soap*, const char*, std::vector<tt__PaneLayout * >*, const char*);
SOAP_FMAC1 std::vector<tt__PaneLayout * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__PaneLayout(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__PaneLayout * > * soap_new_std__vectorTemplateOfPointerTott__PaneLayout(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__PaneLayout(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__PaneLayout(struct soap *soap, std::vector<tt__PaneLayout * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__PaneLayout(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__AudioDescriptor
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__AudioDescriptor (1336)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__AudioDescriptor(struct soap*, std::vector<tt__AudioDescriptor * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__AudioDescriptor(struct soap*, const std::vector<tt__AudioDescriptor * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__AudioDescriptor(struct soap*, const char*, int, const std::vector<tt__AudioDescriptor * >*, const char*);
SOAP_FMAC3 std::vector<tt__AudioDescriptor * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__AudioDescriptor(struct soap*, const char*, std::vector<tt__AudioDescriptor * >*, const char*);
SOAP_FMAC1 std::vector<tt__AudioDescriptor * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__AudioDescriptor(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__AudioDescriptor * > * soap_new_std__vectorTemplateOfPointerTott__AudioDescriptor(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__AudioDescriptor(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__AudioDescriptor(struct soap *soap, std::vector<tt__AudioDescriptor * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__AudioDescriptor(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Polyline
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Polyline (1322)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Polyline(struct soap*, std::vector<tt__Polyline * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Polyline(struct soap*, const std::vector<tt__Polyline * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Polyline(struct soap*, const char*, int, const std::vector<tt__Polyline * >*, const char*);
SOAP_FMAC3 std::vector<tt__Polyline * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Polyline(struct soap*, const char*, std::vector<tt__Polyline * >*, const char*);
SOAP_FMAC1 std::vector<tt__Polyline * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Polyline(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Polyline * > * soap_new_std__vectorTemplateOfPointerTott__Polyline(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Polyline(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__Polyline(struct soap *soap, std::vector<tt__Polyline * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__Polyline(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__ConfigDescription
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__ConfigDescription (1318)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__ConfigDescription(struct soap*, std::vector<tt__ConfigDescription * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__ConfigDescription(struct soap*, const std::vector<tt__ConfigDescription * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__ConfigDescription(struct soap*, const char*, int, const std::vector<tt__ConfigDescription * >*, const char*);
SOAP_FMAC3 std::vector<tt__ConfigDescription * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__ConfigDescription(struct soap*, const char*, std::vector<tt__ConfigDescription * >*, const char*);
SOAP_FMAC1 std::vector<tt__ConfigDescription * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__ConfigDescription(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__ConfigDescription * > * soap_new_std__vectorTemplateOfPointerTott__ConfigDescription(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__ConfigDescription(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__ConfigDescription(struct soap *soap, std::vector<tt__ConfigDescription * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__ConfigDescription(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOf_tt__ConfigDescription_Messages
#define SOAP_TYPE_std__vectorTemplateOf_tt__ConfigDescription_Messages (1314)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOf_tt__ConfigDescription_Messages(struct soap*, std::vector<_tt__ConfigDescription_Messages >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOf_tt__ConfigDescription_Messages(struct soap*, const std::vector<_tt__ConfigDescription_Messages >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOf_tt__ConfigDescription_Messages(struct soap*, const char*, int, const std::vector<_tt__ConfigDescription_Messages >*, const char*);
SOAP_FMAC3 std::vector<_tt__ConfigDescription_Messages >* SOAP_FMAC4 soap_in_std__vectorTemplateOf_tt__ConfigDescription_Messages(struct soap*, const char*, std::vector<_tt__ConfigDescription_Messages >*, const char*);
SOAP_FMAC1 std::vector<_tt__ConfigDescription_Messages > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOf_tt__ConfigDescription_Messages(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<_tt__ConfigDescription_Messages > * soap_new_std__vectorTemplateOf_tt__ConfigDescription_Messages(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOf_tt__ConfigDescription_Messages(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOf_tt__ConfigDescription_Messages(struct soap *soap, std::vector<_tt__ConfigDescription_Messages >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOf_tt__ConfigDescription_Messages(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Config
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Config (1309)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Config(struct soap*, std::vector<tt__Config * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Config(struct soap*, const std::vector<tt__Config * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Config(struct soap*, const char*, int, const std::vector<tt__Config * >*, const char*);
SOAP_FMAC3 std::vector<tt__Config * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Config(struct soap*, const char*, std::vector<tt__Config * >*, const char*);
SOAP_FMAC1 std::vector<tt__Config * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Config(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Config * > * soap_new_std__vectorTemplateOfPointerTott__Config(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Config(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__Config(struct soap *soap, std::vector<tt__Config * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__Config(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Merge
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Merge (1306)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Merge(struct soap*, std::vector<tt__Merge * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Merge(struct soap*, const std::vector<tt__Merge * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Merge(struct soap*, const char*, int, const std::vector<tt__Merge * >*, const char*);
SOAP_FMAC3 std::vector<tt__Merge * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Merge(struct soap*, const char*, std::vector<tt__Merge * >*, const char*);
SOAP_FMAC1 std::vector<tt__Merge * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Merge(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Merge * > * soap_new_std__vectorTemplateOfPointerTott__Merge(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Merge(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__Merge(struct soap *soap, std::vector<tt__Merge * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__Merge(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Split
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Split (1304)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Split(struct soap*, std::vector<tt__Split * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Split(struct soap*, const std::vector<tt__Split * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Split(struct soap*, const char*, int, const std::vector<tt__Split * >*, const char*);
SOAP_FMAC3 std::vector<tt__Split * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Split(struct soap*, const char*, std::vector<tt__Split * >*, const char*);
SOAP_FMAC1 std::vector<tt__Split * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Split(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Split * > * soap_new_std__vectorTemplateOfPointerTott__Split(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Split(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__Split(struct soap *soap, std::vector<tt__Split * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__Split(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Rename
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Rename (1302)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Rename(struct soap*, std::vector<tt__Rename * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Rename(struct soap*, const std::vector<tt__Rename * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Rename(struct soap*, const char*, int, const std::vector<tt__Rename * >*, const char*);
SOAP_FMAC3 std::vector<tt__Rename * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Rename(struct soap*, const char*, std::vector<tt__Rename * >*, const char*);
SOAP_FMAC1 std::vector<tt__Rename * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Rename(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Rename * > * soap_new_std__vectorTemplateOfPointerTott__Rename(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Rename(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__Rename(struct soap *soap, std::vector<tt__Rename * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__Rename(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__ObjectId
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__ObjectId (1294)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__ObjectId(struct soap*, std::vector<tt__ObjectId * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__ObjectId(struct soap*, const std::vector<tt__ObjectId * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__ObjectId(struct soap*, const char*, int, const std::vector<tt__ObjectId * >*, const char*);
SOAP_FMAC3 std::vector<tt__ObjectId * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__ObjectId(struct soap*, const char*, std::vector<tt__ObjectId * >*, const char*);
SOAP_FMAC1 std::vector<tt__ObjectId * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__ObjectId(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__ObjectId * > * soap_new_std__vectorTemplateOfPointerTott__ObjectId(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__ObjectId(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__ObjectId(struct soap *soap, std::vector<tt__ObjectId * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__ObjectId(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Object
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Object (1288)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Object(struct soap*, std::vector<tt__Object * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Object(struct soap*, const std::vector<tt__Object * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Object(struct soap*, const char*, int, const std::vector<tt__Object * >*, const char*);
SOAP_FMAC3 std::vector<tt__Object * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Object(struct soap*, const char*, std::vector<tt__Object * >*, const char*);
SOAP_FMAC1 std::vector<tt__Object * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Object(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Object * > * soap_new_std__vectorTemplateOfPointerTott__Object(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Object(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__Object(struct soap *soap, std::vector<tt__Object * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__Object(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__OtherType
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__OtherType (1283)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__OtherType(struct soap*, std::vector<tt__OtherType * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__OtherType(struct soap*, const std::vector<tt__OtherType * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__OtherType(struct soap*, const char*, int, const std::vector<tt__OtherType * >*, const char*);
SOAP_FMAC3 std::vector<tt__OtherType * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__OtherType(struct soap*, const char*, std::vector<tt__OtherType * >*, const char*);
SOAP_FMAC1 std::vector<tt__OtherType * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__OtherType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__OtherType * > * soap_new_std__vectorTemplateOfPointerTott__OtherType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__OtherType(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__OtherType(struct soap *soap, std::vector<tt__OtherType * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__OtherType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOf_tt__ClassDescriptor_ClassCandidate
#define SOAP_TYPE_std__vectorTemplateOf_tt__ClassDescriptor_ClassCandidate (1279)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOf_tt__ClassDescriptor_ClassCandidate(struct soap*, std::vector<_tt__ClassDescriptor_ClassCandidate >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOf_tt__ClassDescriptor_ClassCandidate(struct soap*, const std::vector<_tt__ClassDescriptor_ClassCandidate >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOf_tt__ClassDescriptor_ClassCandidate(struct soap*, const char*, int, const std::vector<_tt__ClassDescriptor_ClassCandidate >*, const char*);
SOAP_FMAC3 std::vector<_tt__ClassDescriptor_ClassCandidate >* SOAP_FMAC4 soap_in_std__vectorTemplateOf_tt__ClassDescriptor_ClassCandidate(struct soap*, const char*, std::vector<_tt__ClassDescriptor_ClassCandidate >*, const char*);
SOAP_FMAC1 std::vector<_tt__ClassDescriptor_ClassCandidate > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOf_tt__ClassDescriptor_ClassCandidate(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<_tt__ClassDescriptor_ClassCandidate > * soap_new_std__vectorTemplateOf_tt__ClassDescriptor_ClassCandidate(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOf_tt__ClassDescriptor_ClassCandidate(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOf_tt__ClassDescriptor_ClassCandidate(struct soap *soap, std::vector<_tt__ClassDescriptor_ClassCandidate >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOf_tt__ClassDescriptor_ClassCandidate(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOf_tt__ColorDescriptor_ColorCluster
#define SOAP_TYPE_std__vectorTemplateOf_tt__ColorDescriptor_ColorCluster (1275)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOf_tt__ColorDescriptor_ColorCluster(struct soap*, std::vector<_tt__ColorDescriptor_ColorCluster >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOf_tt__ColorDescriptor_ColorCluster(struct soap*, const std::vector<_tt__ColorDescriptor_ColorCluster >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOf_tt__ColorDescriptor_ColorCluster(struct soap*, const char*, int, const std::vector<_tt__ColorDescriptor_ColorCluster >*, const char*);
SOAP_FMAC3 std::vector<_tt__ColorDescriptor_ColorCluster >* SOAP_FMAC4 soap_in_std__vectorTemplateOf_tt__ColorDescriptor_ColorCluster(struct soap*, const char*, std::vector<_tt__ColorDescriptor_ColorCluster >*, const char*);
SOAP_FMAC1 std::vector<_tt__ColorDescriptor_ColorCluster > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOf_tt__ColorDescriptor_ColorCluster(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<_tt__ColorDescriptor_ColorCluster > * soap_new_std__vectorTemplateOf_tt__ColorDescriptor_ColorCluster(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOf_tt__ColorDescriptor_ColorCluster(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOf_tt__ColorDescriptor_ColorCluster(struct soap *soap, std::vector<_tt__ColorDescriptor_ColorCluster >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOf_tt__ColorDescriptor_ColorCluster(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Polygon
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Polygon (1270)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Polygon(struct soap*, std::vector<tt__Polygon * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Polygon(struct soap*, const std::vector<tt__Polygon * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Polygon(struct soap*, const char*, int, const std::vector<tt__Polygon * >*, const char*);
SOAP_FMAC3 std::vector<tt__Polygon * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Polygon(struct soap*, const char*, std::vector<tt__Polygon * >*, const char*);
SOAP_FMAC1 std::vector<tt__Polygon * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Polygon(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Polygon * > * soap_new_std__vectorTemplateOfPointerTott__Polygon(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Polygon(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__Polygon(struct soap *soap, std::vector<tt__Polygon * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__Polygon(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Vector
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Vector (1263)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Vector(struct soap*, std::vector<tt__Vector * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Vector(struct soap*, const std::vector<tt__Vector * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Vector(struct soap*, const char*, int, const std::vector<tt__Vector * >*, const char*);
SOAP_FMAC3 std::vector<tt__Vector * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Vector(struct soap*, const char*, std::vector<tt__Vector * >*, const char*);
SOAP_FMAC1 std::vector<tt__Vector * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Vector(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Vector * > * soap_new_std__vectorTemplateOfPointerTott__Vector(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Vector(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__Vector(struct soap *soap, std::vector<tt__Vector * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__Vector(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription
#define SOAP_TYPE_std__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription (1259)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(struct soap*, std::vector<_tt__ItemListDescription_ElementItemDescription >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(struct soap*, const std::vector<_tt__ItemListDescription_ElementItemDescription >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(struct soap*, const char*, int, const std::vector<_tt__ItemListDescription_ElementItemDescription >*, const char*);
SOAP_FMAC3 std::vector<_tt__ItemListDescription_ElementItemDescription >* SOAP_FMAC4 soap_in_std__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(struct soap*, const char*, std::vector<_tt__ItemListDescription_ElementItemDescription >*, const char*);
SOAP_FMAC1 std::vector<_tt__ItemListDescription_ElementItemDescription > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<_tt__ItemListDescription_ElementItemDescription > * soap_new_std__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(struct soap *soap, std::vector<_tt__ItemListDescription_ElementItemDescription >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription
#define SOAP_TYPE_std__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription (1256)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(struct soap*, std::vector<_tt__ItemListDescription_SimpleItemDescription >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(struct soap*, const std::vector<_tt__ItemListDescription_SimpleItemDescription >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(struct soap*, const char*, int, const std::vector<_tt__ItemListDescription_SimpleItemDescription >*, const char*);
SOAP_FMAC3 std::vector<_tt__ItemListDescription_SimpleItemDescription >* SOAP_FMAC4 soap_in_std__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(struct soap*, const char*, std::vector<_tt__ItemListDescription_SimpleItemDescription >*, const char*);
SOAP_FMAC1 std::vector<_tt__ItemListDescription_SimpleItemDescription > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<_tt__ItemListDescription_SimpleItemDescription > * soap_new_std__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(struct soap *soap, std::vector<_tt__ItemListDescription_SimpleItemDescription >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOf_tt__ItemList_ElementItem
#define SOAP_TYPE_std__vectorTemplateOf_tt__ItemList_ElementItem (1250)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOf_tt__ItemList_ElementItem(struct soap*, std::vector<_tt__ItemList_ElementItem >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOf_tt__ItemList_ElementItem(struct soap*, const std::vector<_tt__ItemList_ElementItem >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOf_tt__ItemList_ElementItem(struct soap*, const char*, int, const std::vector<_tt__ItemList_ElementItem >*, const char*);
SOAP_FMAC3 std::vector<_tt__ItemList_ElementItem >* SOAP_FMAC4 soap_in_std__vectorTemplateOf_tt__ItemList_ElementItem(struct soap*, const char*, std::vector<_tt__ItemList_ElementItem >*, const char*);
SOAP_FMAC1 std::vector<_tt__ItemList_ElementItem > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOf_tt__ItemList_ElementItem(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<_tt__ItemList_ElementItem > * soap_new_std__vectorTemplateOf_tt__ItemList_ElementItem(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOf_tt__ItemList_ElementItem(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOf_tt__ItemList_ElementItem(struct soap *soap, std::vector<_tt__ItemList_ElementItem >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOf_tt__ItemList_ElementItem(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOf_tt__ItemList_SimpleItem
#define SOAP_TYPE_std__vectorTemplateOf_tt__ItemList_SimpleItem (1247)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOf_tt__ItemList_SimpleItem(struct soap*, std::vector<_tt__ItemList_SimpleItem >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOf_tt__ItemList_SimpleItem(struct soap*, const std::vector<_tt__ItemList_SimpleItem >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOf_tt__ItemList_SimpleItem(struct soap*, const char*, int, const std::vector<_tt__ItemList_SimpleItem >*, const char*);
SOAP_FMAC3 std::vector<_tt__ItemList_SimpleItem >* SOAP_FMAC4 soap_in_std__vectorTemplateOf_tt__ItemList_SimpleItem(struct soap*, const char*, std::vector<_tt__ItemList_SimpleItem >*, const char*);
SOAP_FMAC1 std::vector<_tt__ItemList_SimpleItem > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOf_tt__ItemList_SimpleItem(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<_tt__ItemList_SimpleItem > * soap_new_std__vectorTemplateOf_tt__ItemList_SimpleItem(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOf_tt__ItemList_SimpleItem(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOf_tt__ItemList_SimpleItem(struct soap *soap, std::vector<_tt__ItemList_SimpleItem >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOf_tt__ItemList_SimpleItem(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOftt__BacklightCompensationMode
#define SOAP_TYPE_std__vectorTemplateOftt__BacklightCompensationMode (1240)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__BacklightCompensationMode(struct soap*, std::vector<enum tt__BacklightCompensationMode >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__BacklightCompensationMode(struct soap*, const std::vector<enum tt__BacklightCompensationMode >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__BacklightCompensationMode(struct soap*, const char*, int, const std::vector<enum tt__BacklightCompensationMode >*, const char*);
SOAP_FMAC3 std::vector<enum tt__BacklightCompensationMode >* SOAP_FMAC4 soap_in_std__vectorTemplateOftt__BacklightCompensationMode(struct soap*, const char*, std::vector<enum tt__BacklightCompensationMode >*, const char*);
SOAP_FMAC1 std::vector<enum tt__BacklightCompensationMode > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__BacklightCompensationMode(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__BacklightCompensationMode > * soap_new_std__vectorTemplateOftt__BacklightCompensationMode(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__BacklightCompensationMode(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOftt__BacklightCompensationMode(struct soap *soap, std::vector<enum tt__BacklightCompensationMode >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOftt__BacklightCompensationMode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOftt__ImageStabilizationMode
#define SOAP_TYPE_std__vectorTemplateOftt__ImageStabilizationMode (1237)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__ImageStabilizationMode(struct soap*, std::vector<enum tt__ImageStabilizationMode >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__ImageStabilizationMode(struct soap*, const std::vector<enum tt__ImageStabilizationMode >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__ImageStabilizationMode(struct soap*, const char*, int, const std::vector<enum tt__ImageStabilizationMode >*, const char*);
SOAP_FMAC3 std::vector<enum tt__ImageStabilizationMode >* SOAP_FMAC4 soap_in_std__vectorTemplateOftt__ImageStabilizationMode(struct soap*, const char*, std::vector<enum tt__ImageStabilizationMode >*, const char*);
SOAP_FMAC1 std::vector<enum tt__ImageStabilizationMode > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__ImageStabilizationMode(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__ImageStabilizationMode > * soap_new_std__vectorTemplateOftt__ImageStabilizationMode(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__ImageStabilizationMode(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOftt__ImageStabilizationMode(struct soap *soap, std::vector<enum tt__ImageStabilizationMode >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOftt__ImageStabilizationMode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__IrCutFilterAutoAdjustment
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__IrCutFilterAutoAdjustment (1222)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__IrCutFilterAutoAdjustment(struct soap*, std::vector<tt__IrCutFilterAutoAdjustment * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__IrCutFilterAutoAdjustment(struct soap*, const std::vector<tt__IrCutFilterAutoAdjustment * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__IrCutFilterAutoAdjustment(struct soap*, const char*, int, const std::vector<tt__IrCutFilterAutoAdjustment * >*, const char*);
SOAP_FMAC3 std::vector<tt__IrCutFilterAutoAdjustment * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__IrCutFilterAutoAdjustment(struct soap*, const char*, std::vector<tt__IrCutFilterAutoAdjustment * >*, const char*);
SOAP_FMAC1 std::vector<tt__IrCutFilterAutoAdjustment * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__IrCutFilterAutoAdjustment(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__IrCutFilterAutoAdjustment * > * soap_new_std__vectorTemplateOfPointerTott__IrCutFilterAutoAdjustment(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__IrCutFilterAutoAdjustment(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__IrCutFilterAutoAdjustment(struct soap *soap, std::vector<tt__IrCutFilterAutoAdjustment * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__IrCutFilterAutoAdjustment(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOftt__WhiteBalanceMode
#define SOAP_TYPE_std__vectorTemplateOftt__WhiteBalanceMode (1203)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__WhiteBalanceMode(struct soap*, std::vector<enum tt__WhiteBalanceMode >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__WhiteBalanceMode(struct soap*, const std::vector<enum tt__WhiteBalanceMode >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__WhiteBalanceMode(struct soap*, const char*, int, const std::vector<enum tt__WhiteBalanceMode >*, const char*);
SOAP_FMAC3 std::vector<enum tt__WhiteBalanceMode >* SOAP_FMAC4 soap_in_std__vectorTemplateOftt__WhiteBalanceMode(struct soap*, const char*, std::vector<enum tt__WhiteBalanceMode >*, const char*);
SOAP_FMAC1 std::vector<enum tt__WhiteBalanceMode > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__WhiteBalanceMode(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__WhiteBalanceMode > * soap_new_std__vectorTemplateOftt__WhiteBalanceMode(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__WhiteBalanceMode(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOftt__WhiteBalanceMode(struct soap *soap, std::vector<enum tt__WhiteBalanceMode >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOftt__WhiteBalanceMode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOftt__ExposurePriority
#define SOAP_TYPE_std__vectorTemplateOftt__ExposurePriority (1202)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__ExposurePriority(struct soap*, std::vector<enum tt__ExposurePriority >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__ExposurePriority(struct soap*, const std::vector<enum tt__ExposurePriority >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__ExposurePriority(struct soap*, const char*, int, const std::vector<enum tt__ExposurePriority >*, const char*);
SOAP_FMAC3 std::vector<enum tt__ExposurePriority >* SOAP_FMAC4 soap_in_std__vectorTemplateOftt__ExposurePriority(struct soap*, const char*, std::vector<enum tt__ExposurePriority >*, const char*);
SOAP_FMAC1 std::vector<enum tt__ExposurePriority > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__ExposurePriority(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__ExposurePriority > * soap_new_std__vectorTemplateOftt__ExposurePriority(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__ExposurePriority(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOftt__ExposurePriority(struct soap *soap, std::vector<enum tt__ExposurePriority >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOftt__ExposurePriority(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOftt__ExposureMode
#define SOAP_TYPE_std__vectorTemplateOftt__ExposureMode (1201)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__ExposureMode(struct soap*, std::vector<enum tt__ExposureMode >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__ExposureMode(struct soap*, const std::vector<enum tt__ExposureMode >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__ExposureMode(struct soap*, const char*, int, const std::vector<enum tt__ExposureMode >*, const char*);
SOAP_FMAC3 std::vector<enum tt__ExposureMode >* SOAP_FMAC4 soap_in_std__vectorTemplateOftt__ExposureMode(struct soap*, const char*, std::vector<enum tt__ExposureMode >*, const char*);
SOAP_FMAC1 std::vector<enum tt__ExposureMode > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__ExposureMode(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__ExposureMode > * soap_new_std__vectorTemplateOftt__ExposureMode(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__ExposureMode(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOftt__ExposureMode(struct soap *soap, std::vector<enum tt__ExposureMode >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOftt__ExposureMode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOftt__AutoFocusMode
#define SOAP_TYPE_std__vectorTemplateOftt__AutoFocusMode (1200)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__AutoFocusMode(struct soap*, std::vector<enum tt__AutoFocusMode >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__AutoFocusMode(struct soap*, const std::vector<enum tt__AutoFocusMode >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__AutoFocusMode(struct soap*, const char*, int, const std::vector<enum tt__AutoFocusMode >*, const char*);
SOAP_FMAC3 std::vector<enum tt__AutoFocusMode >* SOAP_FMAC4 soap_in_std__vectorTemplateOftt__AutoFocusMode(struct soap*, const char*, std::vector<enum tt__AutoFocusMode >*, const char*);
SOAP_FMAC1 std::vector<enum tt__AutoFocusMode > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__AutoFocusMode(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__AutoFocusMode > * soap_new_std__vectorTemplateOftt__AutoFocusMode(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__AutoFocusMode(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOftt__AutoFocusMode(struct soap *soap, std::vector<enum tt__AutoFocusMode >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOftt__AutoFocusMode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOftt__WideDynamicMode
#define SOAP_TYPE_std__vectorTemplateOftt__WideDynamicMode (1199)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__WideDynamicMode(struct soap*, std::vector<enum tt__WideDynamicMode >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__WideDynamicMode(struct soap*, const std::vector<enum tt__WideDynamicMode >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__WideDynamicMode(struct soap*, const char*, int, const std::vector<enum tt__WideDynamicMode >*, const char*);
SOAP_FMAC3 std::vector<enum tt__WideDynamicMode >* SOAP_FMAC4 soap_in_std__vectorTemplateOftt__WideDynamicMode(struct soap*, const char*, std::vector<enum tt__WideDynamicMode >*, const char*);
SOAP_FMAC1 std::vector<enum tt__WideDynamicMode > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__WideDynamicMode(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__WideDynamicMode > * soap_new_std__vectorTemplateOftt__WideDynamicMode(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__WideDynamicMode(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOftt__WideDynamicMode(struct soap *soap, std::vector<enum tt__WideDynamicMode >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOftt__WideDynamicMode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOftt__IrCutFilterMode
#define SOAP_TYPE_std__vectorTemplateOftt__IrCutFilterMode (1196)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__IrCutFilterMode(struct soap*, std::vector<enum tt__IrCutFilterMode >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__IrCutFilterMode(struct soap*, const std::vector<enum tt__IrCutFilterMode >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__IrCutFilterMode(struct soap*, const char*, int, const std::vector<enum tt__IrCutFilterMode >*, const char*);
SOAP_FMAC3 std::vector<enum tt__IrCutFilterMode >* SOAP_FMAC4 soap_in_std__vectorTemplateOftt__IrCutFilterMode(struct soap*, const char*, std::vector<enum tt__IrCutFilterMode >*, const char*);
SOAP_FMAC1 std::vector<enum tt__IrCutFilterMode > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__IrCutFilterMode(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__IrCutFilterMode > * soap_new_std__vectorTemplateOftt__IrCutFilterMode(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__IrCutFilterMode(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOftt__IrCutFilterMode(struct soap *soap, std::vector<enum tt__IrCutFilterMode >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOftt__IrCutFilterMode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOftt__PTZPresetTourDirection
#define SOAP_TYPE_std__vectorTemplateOftt__PTZPresetTourDirection (1181)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__PTZPresetTourDirection(struct soap*, std::vector<enum tt__PTZPresetTourDirection >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__PTZPresetTourDirection(struct soap*, const std::vector<enum tt__PTZPresetTourDirection >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__PTZPresetTourDirection(struct soap*, const char*, int, const std::vector<enum tt__PTZPresetTourDirection >*, const char*);
SOAP_FMAC3 std::vector<enum tt__PTZPresetTourDirection >* SOAP_FMAC4 soap_in_std__vectorTemplateOftt__PTZPresetTourDirection(struct soap*, const char*, std::vector<enum tt__PTZPresetTourDirection >*, const char*);
SOAP_FMAC1 std::vector<enum tt__PTZPresetTourDirection > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__PTZPresetTourDirection(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__PTZPresetTourDirection > * soap_new_std__vectorTemplateOftt__PTZPresetTourDirection(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__PTZPresetTourDirection(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOftt__PTZPresetTourDirection(struct soap *soap, std::vector<enum tt__PTZPresetTourDirection >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOftt__PTZPresetTourDirection(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__PTZPresetTourSpot
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__PTZPresetTourSpot (1167)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__PTZPresetTourSpot(struct soap*, std::vector<tt__PTZPresetTourSpot * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__PTZPresetTourSpot(struct soap*, const std::vector<tt__PTZPresetTourSpot * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__PTZPresetTourSpot(struct soap*, const char*, int, const std::vector<tt__PTZPresetTourSpot * >*, const char*);
SOAP_FMAC3 std::vector<tt__PTZPresetTourSpot * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__PTZPresetTourSpot(struct soap*, const char*, std::vector<tt__PTZPresetTourSpot * >*, const char*);
SOAP_FMAC1 std::vector<tt__PTZPresetTourSpot * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__PTZPresetTourSpot(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__PTZPresetTourSpot * > * soap_new_std__vectorTemplateOfPointerTott__PTZPresetTourSpot(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__PTZPresetTourSpot(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__PTZPresetTourSpot(struct soap *soap, std::vector<tt__PTZPresetTourSpot * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__PTZPresetTourSpot(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Space1DDescription
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Space1DDescription (1155)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Space1DDescription(struct soap*, std::vector<tt__Space1DDescription * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Space1DDescription(struct soap*, const std::vector<tt__Space1DDescription * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Space1DDescription(struct soap*, const char*, int, const std::vector<tt__Space1DDescription * >*, const char*);
SOAP_FMAC3 std::vector<tt__Space1DDescription * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Space1DDescription(struct soap*, const char*, std::vector<tt__Space1DDescription * >*, const char*);
SOAP_FMAC1 std::vector<tt__Space1DDescription * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Space1DDescription(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Space1DDescription * > * soap_new_std__vectorTemplateOfPointerTott__Space1DDescription(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Space1DDescription(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__Space1DDescription(struct soap *soap, std::vector<tt__Space1DDescription * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__Space1DDescription(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Space2DDescription
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Space2DDescription (1154)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Space2DDescription(struct soap*, std::vector<tt__Space2DDescription * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Space2DDescription(struct soap*, const std::vector<tt__Space2DDescription * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Space2DDescription(struct soap*, const char*, int, const std::vector<tt__Space2DDescription * >*, const char*);
SOAP_FMAC3 std::vector<tt__Space2DDescription * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Space2DDescription(struct soap*, const char*, std::vector<tt__Space2DDescription * >*, const char*);
SOAP_FMAC1 std::vector<tt__Space2DDescription * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Space2DDescription(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Space2DDescription * > * soap_new_std__vectorTemplateOfPointerTott__Space2DDescription(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Space2DDescription(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__Space2DDescription(struct soap *soap, std::vector<tt__Space2DDescription * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__Space2DDescription(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOftt__ReverseMode
#define SOAP_TYPE_std__vectorTemplateOftt__ReverseMode (1150)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__ReverseMode(struct soap*, std::vector<enum tt__ReverseMode >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__ReverseMode(struct soap*, const std::vector<enum tt__ReverseMode >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__ReverseMode(struct soap*, const char*, int, const std::vector<enum tt__ReverseMode >*, const char*);
SOAP_FMAC3 std::vector<enum tt__ReverseMode >* SOAP_FMAC4 soap_in_std__vectorTemplateOftt__ReverseMode(struct soap*, const char*, std::vector<enum tt__ReverseMode >*, const char*);
SOAP_FMAC1 std::vector<enum tt__ReverseMode > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__ReverseMode(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__ReverseMode > * soap_new_std__vectorTemplateOftt__ReverseMode(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__ReverseMode(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOftt__ReverseMode(struct soap *soap, std::vector<enum tt__ReverseMode >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOftt__ReverseMode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOftt__EFlipMode
#define SOAP_TYPE_std__vectorTemplateOftt__EFlipMode (1148)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__EFlipMode(struct soap*, std::vector<enum tt__EFlipMode >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__EFlipMode(struct soap*, const std::vector<enum tt__EFlipMode >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__EFlipMode(struct soap*, const char*, int, const std::vector<enum tt__EFlipMode >*, const char*);
SOAP_FMAC3 std::vector<enum tt__EFlipMode >* SOAP_FMAC4 soap_in_std__vectorTemplateOftt__EFlipMode(struct soap*, const char*, std::vector<enum tt__EFlipMode >*, const char*);
SOAP_FMAC1 std::vector<enum tt__EFlipMode > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__EFlipMode(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__EFlipMode > * soap_new_std__vectorTemplateOftt__EFlipMode(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__EFlipMode(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOftt__EFlipMode(struct soap *soap, std::vector<enum tt__EFlipMode >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOftt__EFlipMode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOftt__PTZPresetTourOperation
#define SOAP_TYPE_std__vectorTemplateOftt__PTZPresetTourOperation (1134)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__PTZPresetTourOperation(struct soap*, std::vector<enum tt__PTZPresetTourOperation >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__PTZPresetTourOperation(struct soap*, const std::vector<enum tt__PTZPresetTourOperation >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__PTZPresetTourOperation(struct soap*, const char*, int, const std::vector<enum tt__PTZPresetTourOperation >*, const char*);
SOAP_FMAC3 std::vector<enum tt__PTZPresetTourOperation >* SOAP_FMAC4 soap_in_std__vectorTemplateOftt__PTZPresetTourOperation(struct soap*, const char*, std::vector<enum tt__PTZPresetTourOperation >*, const char*);
SOAP_FMAC1 std::vector<enum tt__PTZPresetTourOperation > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__PTZPresetTourOperation(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__PTZPresetTourOperation > * soap_new_std__vectorTemplateOftt__PTZPresetTourOperation(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__PTZPresetTourOperation(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOftt__PTZPresetTourOperation(struct soap *soap, std::vector<enum tt__PTZPresetTourOperation >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOftt__PTZPresetTourOperation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__SystemLogUri
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__SystemLogUri (1119)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__SystemLogUri(struct soap*, std::vector<tt__SystemLogUri * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__SystemLogUri(struct soap*, const std::vector<tt__SystemLogUri * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__SystemLogUri(struct soap*, const char*, int, const std::vector<tt__SystemLogUri * >*, const char*);
SOAP_FMAC3 std::vector<tt__SystemLogUri * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__SystemLogUri(struct soap*, const char*, std::vector<tt__SystemLogUri * >*, const char*);
SOAP_FMAC1 std::vector<tt__SystemLogUri * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__SystemLogUri(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__SystemLogUri * > * soap_new_std__vectorTemplateOfPointerTott__SystemLogUri(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__SystemLogUri(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__SystemLogUri(struct soap *soap, std::vector<tt__SystemLogUri * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__SystemLogUri(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__OnvifVersion
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__OnvifVersion (1114)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__OnvifVersion(struct soap*, std::vector<tt__OnvifVersion * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__OnvifVersion(struct soap*, const std::vector<tt__OnvifVersion * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__OnvifVersion(struct soap*, const char*, int, const std::vector<tt__OnvifVersion * >*, const char*);
SOAP_FMAC3 std::vector<tt__OnvifVersion * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__OnvifVersion(struct soap*, const char*, std::vector<tt__OnvifVersion * >*, const char*);
SOAP_FMAC1 std::vector<tt__OnvifVersion * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__OnvifVersion(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__OnvifVersion * > * soap_new_std__vectorTemplateOfPointerTott__OnvifVersion(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__OnvifVersion(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__OnvifVersion(struct soap *soap, std::vector<tt__OnvifVersion * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__OnvifVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOftt__AuxiliaryData
#define SOAP_TYPE_std__vectorTemplateOftt__AuxiliaryData (1104)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__AuxiliaryData(struct soap*, std::vector<std::string >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__AuxiliaryData(struct soap*, const std::vector<std::string >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__AuxiliaryData(struct soap*, const char*, int, const std::vector<std::string >*, const char*);
SOAP_FMAC3 std::vector<std::string >* SOAP_FMAC4 soap_in_std__vectorTemplateOftt__AuxiliaryData(struct soap*, const char*, std::vector<std::string >*, const char*);
SOAP_FMAC1 std::vector<std::string > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__AuxiliaryData(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string > * soap_new_std__vectorTemplateOftt__AuxiliaryData(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__AuxiliaryData(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOftt__AuxiliaryData(struct soap *soap, std::vector<std::string >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOftt__AuxiliaryData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOftt__Dot11Cipher
#define SOAP_TYPE_std__vectorTemplateOftt__Dot11Cipher (1081)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__Dot11Cipher(struct soap*, std::vector<enum tt__Dot11Cipher >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__Dot11Cipher(struct soap*, const std::vector<enum tt__Dot11Cipher >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__Dot11Cipher(struct soap*, const char*, int, const std::vector<enum tt__Dot11Cipher >*, const char*);
SOAP_FMAC3 std::vector<enum tt__Dot11Cipher >* SOAP_FMAC4 soap_in_std__vectorTemplateOftt__Dot11Cipher(struct soap*, const char*, std::vector<enum tt__Dot11Cipher >*, const char*);
SOAP_FMAC1 std::vector<enum tt__Dot11Cipher > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__Dot11Cipher(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__Dot11Cipher > * soap_new_std__vectorTemplateOftt__Dot11Cipher(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__Dot11Cipher(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOftt__Dot11Cipher(struct soap *soap, std::vector<enum tt__Dot11Cipher >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOftt__Dot11Cipher(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOftt__Dot11AuthAndMangementSuite
#define SOAP_TYPE_std__vectorTemplateOftt__Dot11AuthAndMangementSuite (1080)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__Dot11AuthAndMangementSuite(struct soap*, std::vector<enum tt__Dot11AuthAndMangementSuite >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__Dot11AuthAndMangementSuite(struct soap*, const std::vector<enum tt__Dot11AuthAndMangementSuite >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__Dot11AuthAndMangementSuite(struct soap*, const char*, int, const std::vector<enum tt__Dot11AuthAndMangementSuite >*, const char*);
SOAP_FMAC3 std::vector<enum tt__Dot11AuthAndMangementSuite >* SOAP_FMAC4 soap_in_std__vectorTemplateOftt__Dot11AuthAndMangementSuite(struct soap*, const char*, std::vector<enum tt__Dot11AuthAndMangementSuite >*, const char*);
SOAP_FMAC1 std::vector<enum tt__Dot11AuthAndMangementSuite > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__Dot11AuthAndMangementSuite(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__Dot11AuthAndMangementSuite > * soap_new_std__vectorTemplateOftt__Dot11AuthAndMangementSuite(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__Dot11AuthAndMangementSuite(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOftt__Dot11AuthAndMangementSuite(struct soap *soap, std::vector<enum tt__Dot11AuthAndMangementSuite >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOftt__Dot11AuthAndMangementSuite(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__NetworkZeroConfiguration
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__NetworkZeroConfiguration (1068)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__NetworkZeroConfiguration(struct soap*, std::vector<tt__NetworkZeroConfiguration * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__NetworkZeroConfiguration(struct soap*, const std::vector<tt__NetworkZeroConfiguration * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__NetworkZeroConfiguration(struct soap*, const char*, int, const std::vector<tt__NetworkZeroConfiguration * >*, const char*);
SOAP_FMAC3 std::vector<tt__NetworkZeroConfiguration * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__NetworkZeroConfiguration(struct soap*, const char*, std::vector<tt__NetworkZeroConfiguration * >*, const char*);
SOAP_FMAC1 std::vector<tt__NetworkZeroConfiguration * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__NetworkZeroConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__NetworkZeroConfiguration * > * soap_new_std__vectorTemplateOfPointerTott__NetworkZeroConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__NetworkZeroConfiguration(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__NetworkZeroConfiguration(struct soap *soap, std::vector<tt__NetworkZeroConfiguration * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__NetworkZeroConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__PrefixedIPv6Address
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__PrefixedIPv6Address (1052)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__PrefixedIPv6Address(struct soap*, std::vector<tt__PrefixedIPv6Address * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__PrefixedIPv6Address(struct soap*, const std::vector<tt__PrefixedIPv6Address * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__PrefixedIPv6Address(struct soap*, const char*, int, const std::vector<tt__PrefixedIPv6Address * >*, const char*);
SOAP_FMAC3 std::vector<tt__PrefixedIPv6Address * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__PrefixedIPv6Address(struct soap*, const char*, std::vector<tt__PrefixedIPv6Address * >*, const char*);
SOAP_FMAC1 std::vector<tt__PrefixedIPv6Address * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__PrefixedIPv6Address(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__PrefixedIPv6Address * > * soap_new_std__vectorTemplateOfPointerTott__PrefixedIPv6Address(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__PrefixedIPv6Address(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__PrefixedIPv6Address(struct soap *soap, std::vector<tt__PrefixedIPv6Address * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__PrefixedIPv6Address(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__PrefixedIPv4Address
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__PrefixedIPv4Address (1050)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__PrefixedIPv4Address(struct soap*, std::vector<tt__PrefixedIPv4Address * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__PrefixedIPv4Address(struct soap*, const std::vector<tt__PrefixedIPv4Address * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__PrefixedIPv4Address(struct soap*, const char*, int, const std::vector<tt__PrefixedIPv4Address * >*, const char*);
SOAP_FMAC3 std::vector<tt__PrefixedIPv4Address * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__PrefixedIPv4Address(struct soap*, const char*, std::vector<tt__PrefixedIPv4Address * >*, const char*);
SOAP_FMAC1 std::vector<tt__PrefixedIPv4Address * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__PrefixedIPv4Address(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__PrefixedIPv4Address * > * soap_new_std__vectorTemplateOfPointerTott__PrefixedIPv4Address(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__PrefixedIPv4Address(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__PrefixedIPv4Address(struct soap *soap, std::vector<tt__PrefixedIPv4Address * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__PrefixedIPv4Address(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Dot11Configuration
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Dot11Configuration (1044)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Dot11Configuration(struct soap*, std::vector<tt__Dot11Configuration * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Dot11Configuration(struct soap*, const std::vector<tt__Dot11Configuration * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Dot11Configuration(struct soap*, const char*, int, const std::vector<tt__Dot11Configuration * >*, const char*);
SOAP_FMAC3 std::vector<tt__Dot11Configuration * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Dot11Configuration(struct soap*, const char*, std::vector<tt__Dot11Configuration * >*, const char*);
SOAP_FMAC1 std::vector<tt__Dot11Configuration * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Dot11Configuration(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Dot11Configuration * > * soap_new_std__vectorTemplateOfPointerTott__Dot11Configuration(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Dot11Configuration(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__Dot11Configuration(struct soap *soap, std::vector<tt__Dot11Configuration * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__Dot11Configuration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Dot3Configuration
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Dot3Configuration (1042)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Dot3Configuration(struct soap*, std::vector<tt__Dot3Configuration * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Dot3Configuration(struct soap*, const std::vector<tt__Dot3Configuration * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Dot3Configuration(struct soap*, const char*, int, const std::vector<tt__Dot3Configuration * >*, const char*);
SOAP_FMAC3 std::vector<tt__Dot3Configuration * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Dot3Configuration(struct soap*, const char*, std::vector<tt__Dot3Configuration * >*, const char*);
SOAP_FMAC1 std::vector<tt__Dot3Configuration * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Dot3Configuration(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Dot3Configuration * > * soap_new_std__vectorTemplateOfPointerTott__Dot3Configuration(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Dot3Configuration(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__Dot3Configuration(struct soap *soap, std::vector<tt__Dot3Configuration * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__Dot3Configuration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__AudioEncoderConfigurationOption
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__AudioEncoderConfigurationOption (1026)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__AudioEncoderConfigurationOption(struct soap*, std::vector<tt__AudioEncoderConfigurationOption * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__AudioEncoderConfigurationOption(struct soap*, const std::vector<tt__AudioEncoderConfigurationOption * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__AudioEncoderConfigurationOption(struct soap*, const char*, int, const std::vector<tt__AudioEncoderConfigurationOption * >*, const char*);
SOAP_FMAC3 std::vector<tt__AudioEncoderConfigurationOption * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__AudioEncoderConfigurationOption(struct soap*, const char*, std::vector<tt__AudioEncoderConfigurationOption * >*, const char*);
SOAP_FMAC1 std::vector<tt__AudioEncoderConfigurationOption * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__AudioEncoderConfigurationOption(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__AudioEncoderConfigurationOption * > * soap_new_std__vectorTemplateOfPointerTott__AudioEncoderConfigurationOption(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__AudioEncoderConfigurationOption(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__AudioEncoderConfigurationOption(struct soap *soap, std::vector<tt__AudioEncoderConfigurationOption * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__AudioEncoderConfigurationOption(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOftt__H264Profile
#define SOAP_TYPE_std__vectorTemplateOftt__H264Profile (1023)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__H264Profile(struct soap*, std::vector<enum tt__H264Profile >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__H264Profile(struct soap*, const std::vector<enum tt__H264Profile >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__H264Profile(struct soap*, const char*, int, const std::vector<enum tt__H264Profile >*, const char*);
SOAP_FMAC3 std::vector<enum tt__H264Profile >* SOAP_FMAC4 soap_in_std__vectorTemplateOftt__H264Profile(struct soap*, const char*, std::vector<enum tt__H264Profile >*, const char*);
SOAP_FMAC1 std::vector<enum tt__H264Profile > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__H264Profile(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__H264Profile > * soap_new_std__vectorTemplateOftt__H264Profile(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__H264Profile(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOftt__H264Profile(struct soap *soap, std::vector<enum tt__H264Profile >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOftt__H264Profile(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOftt__Mpeg4Profile
#define SOAP_TYPE_std__vectorTemplateOftt__Mpeg4Profile (1022)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__Mpeg4Profile(struct soap*, std::vector<enum tt__Mpeg4Profile >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__Mpeg4Profile(struct soap*, const std::vector<enum tt__Mpeg4Profile >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__Mpeg4Profile(struct soap*, const char*, int, const std::vector<enum tt__Mpeg4Profile >*, const char*);
SOAP_FMAC3 std::vector<enum tt__Mpeg4Profile >* SOAP_FMAC4 soap_in_std__vectorTemplateOftt__Mpeg4Profile(struct soap*, const char*, std::vector<enum tt__Mpeg4Profile >*, const char*);
SOAP_FMAC1 std::vector<enum tt__Mpeg4Profile > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__Mpeg4Profile(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__Mpeg4Profile > * soap_new_std__vectorTemplateOftt__Mpeg4Profile(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__Mpeg4Profile(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOftt__Mpeg4Profile(struct soap *soap, std::vector<enum tt__Mpeg4Profile >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOftt__Mpeg4Profile(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__VideoResolution
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__VideoResolution (1021)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__VideoResolution(struct soap*, std::vector<tt__VideoResolution * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__VideoResolution(struct soap*, const std::vector<tt__VideoResolution * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__VideoResolution(struct soap*, const char*, int, const std::vector<tt__VideoResolution * >*, const char*);
SOAP_FMAC3 std::vector<tt__VideoResolution * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__VideoResolution(struct soap*, const char*, std::vector<tt__VideoResolution * >*, const char*);
SOAP_FMAC1 std::vector<tt__VideoResolution * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__VideoResolution(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__VideoResolution * > * soap_new_std__vectorTemplateOfPointerTott__VideoResolution(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__VideoResolution(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__VideoResolution(struct soap *soap, std::vector<tt__VideoResolution * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__VideoResolution(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOftt__RotateMode
#define SOAP_TYPE_std__vectorTemplateOftt__RotateMode (1009)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__RotateMode(struct soap*, std::vector<enum tt__RotateMode >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__RotateMode(struct soap*, const std::vector<enum tt__RotateMode >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__RotateMode(struct soap*, const char*, int, const std::vector<enum tt__RotateMode >*, const char*);
SOAP_FMAC3 std::vector<enum tt__RotateMode >* SOAP_FMAC4 soap_in_std__vectorTemplateOftt__RotateMode(struct soap*, const char*, std::vector<enum tt__RotateMode >*, const char*);
SOAP_FMAC1 std::vector<enum tt__RotateMode > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__RotateMode(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__RotateMode > * soap_new_std__vectorTemplateOftt__RotateMode(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__RotateMode(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOftt__RotateMode(struct soap *soap, std::vector<enum tt__RotateMode >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOftt__RotateMode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOffloat
#define SOAP_TYPE_std__vectorTemplateOffloat (988)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOffloat(struct soap*, std::vector<float >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOffloat(struct soap*, const std::vector<float >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOffloat(struct soap*, const char*, int, const std::vector<float >*, const char*);
SOAP_FMAC3 std::vector<float >* SOAP_FMAC4 soap_in_std__vectorTemplateOffloat(struct soap*, const char*, std::vector<float >*, const char*);
SOAP_FMAC1 std::vector<float > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOffloat(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<float > * soap_new_std__vectorTemplateOffloat(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOffloat(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOffloat(struct soap *soap, std::vector<float >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOffloat(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfint
#define SOAP_TYPE_std__vectorTemplateOfint (987)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfint(struct soap*, std::vector<int >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfint(struct soap*, const std::vector<int >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfint(struct soap*, const char*, int, const std::vector<int >*, const char*);
SOAP_FMAC3 std::vector<int >* SOAP_FMAC4 soap_in_std__vectorTemplateOfint(struct soap*, const char*, std::vector<int >*, const char*);
SOAP_FMAC1 std::vector<int > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfint(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<int > * soap_new_std__vectorTemplateOfint(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfint(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfint(struct soap *soap, std::vector<int >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfint(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Dot11AvailableNetworks
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Dot11AvailableNetworks (980)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Dot11AvailableNetworks(struct soap*, std::vector<tt__Dot11AvailableNetworks * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Dot11AvailableNetworks(struct soap*, const std::vector<tt__Dot11AvailableNetworks * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Dot11AvailableNetworks(struct soap*, const char*, int, const std::vector<tt__Dot11AvailableNetworks * >*, const char*);
SOAP_FMAC3 std::vector<tt__Dot11AvailableNetworks * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Dot11AvailableNetworks(struct soap*, const char*, std::vector<tt__Dot11AvailableNetworks * >*, const char*);
SOAP_FMAC1 std::vector<tt__Dot11AvailableNetworks * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Dot11AvailableNetworks(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Dot11AvailableNetworks * > * soap_new_std__vectorTemplateOfPointerTott__Dot11AvailableNetworks(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Dot11AvailableNetworks(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__Dot11AvailableNetworks(struct soap *soap, std::vector<tt__Dot11AvailableNetworks * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__Dot11AvailableNetworks(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__RelayOutput
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__RelayOutput (974)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__RelayOutput(struct soap*, std::vector<tt__RelayOutput * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__RelayOutput(struct soap*, const std::vector<tt__RelayOutput * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__RelayOutput(struct soap*, const char*, int, const std::vector<tt__RelayOutput * >*, const char*);
SOAP_FMAC3 std::vector<tt__RelayOutput * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__RelayOutput(struct soap*, const char*, std::vector<tt__RelayOutput * >*, const char*);
SOAP_FMAC1 std::vector<tt__RelayOutput * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__RelayOutput(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__RelayOutput * > * soap_new_std__vectorTemplateOfPointerTott__RelayOutput(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__RelayOutput(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__RelayOutput(struct soap *soap, std::vector<tt__RelayOutput * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__RelayOutput(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOftt__ReferenceToken
#define SOAP_TYPE_std__vectorTemplateOftt__ReferenceToken (972)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__ReferenceToken(struct soap*, std::vector<std::string >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__ReferenceToken(struct soap*, const std::vector<std::string >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__ReferenceToken(struct soap*, const char*, int, const std::vector<std::string >*, const char*);
SOAP_FMAC3 std::vector<std::string >* SOAP_FMAC4 soap_in_std__vectorTemplateOftt__ReferenceToken(struct soap*, const char*, std::vector<std::string >*, const char*);
SOAP_FMAC1 std::vector<std::string > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__ReferenceToken(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string > * soap_new_std__vectorTemplateOftt__ReferenceToken(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__ReferenceToken(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOftt__ReferenceToken(struct soap *soap, std::vector<std::string >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOftt__ReferenceToken(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Dot1XConfiguration
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Dot1XConfiguration (971)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Dot1XConfiguration(struct soap*, std::vector<tt__Dot1XConfiguration * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Dot1XConfiguration(struct soap*, const std::vector<tt__Dot1XConfiguration * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Dot1XConfiguration(struct soap*, const char*, int, const std::vector<tt__Dot1XConfiguration * >*, const char*);
SOAP_FMAC3 std::vector<tt__Dot1XConfiguration * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Dot1XConfiguration(struct soap*, const char*, std::vector<tt__Dot1XConfiguration * >*, const char*);
SOAP_FMAC1 std::vector<tt__Dot1XConfiguration * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Dot1XConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Dot1XConfiguration * > * soap_new_std__vectorTemplateOfPointerTott__Dot1XConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Dot1XConfiguration(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__Dot1XConfiguration(struct soap *soap, std::vector<tt__Dot1XConfiguration * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__Dot1XConfiguration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__CertificateWithPrivateKey
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__CertificateWithPrivateKey (968)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__CertificateWithPrivateKey(struct soap*, std::vector<tt__CertificateWithPrivateKey * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__CertificateWithPrivateKey(struct soap*, const std::vector<tt__CertificateWithPrivateKey * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__CertificateWithPrivateKey(struct soap*, const char*, int, const std::vector<tt__CertificateWithPrivateKey * >*, const char*);
SOAP_FMAC3 std::vector<tt__CertificateWithPrivateKey * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__CertificateWithPrivateKey(struct soap*, const char*, std::vector<tt__CertificateWithPrivateKey * >*, const char*);
SOAP_FMAC1 std::vector<tt__CertificateWithPrivateKey * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__CertificateWithPrivateKey(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__CertificateWithPrivateKey * > * soap_new_std__vectorTemplateOfPointerTott__CertificateWithPrivateKey(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__CertificateWithPrivateKey(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__CertificateWithPrivateKey(struct soap *soap, std::vector<tt__CertificateWithPrivateKey * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__CertificateWithPrivateKey(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__CertificateStatus
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__CertificateStatus (966)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__CertificateStatus(struct soap*, std::vector<tt__CertificateStatus * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__CertificateStatus(struct soap*, const std::vector<tt__CertificateStatus * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__CertificateStatus(struct soap*, const char*, int, const std::vector<tt__CertificateStatus * >*, const char*);
SOAP_FMAC3 std::vector<tt__CertificateStatus * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__CertificateStatus(struct soap*, const char*, std::vector<tt__CertificateStatus * >*, const char*);
SOAP_FMAC1 std::vector<tt__CertificateStatus * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__CertificateStatus(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__CertificateStatus * > * soap_new_std__vectorTemplateOfPointerTott__CertificateStatus(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__CertificateStatus(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__CertificateStatus(struct soap *soap, std::vector<tt__CertificateStatus * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__CertificateStatus(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Certificate
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Certificate (964)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Certificate(struct soap*, std::vector<tt__Certificate * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Certificate(struct soap*, const std::vector<tt__Certificate * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Certificate(struct soap*, const char*, int, const std::vector<tt__Certificate * >*, const char*);
SOAP_FMAC3 std::vector<tt__Certificate * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Certificate(struct soap*, const char*, std::vector<tt__Certificate * >*, const char*);
SOAP_FMAC1 std::vector<tt__Certificate * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Certificate(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Certificate * > * soap_new_std__vectorTemplateOfPointerTott__Certificate(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Certificate(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__Certificate(struct soap *soap, std::vector<tt__Certificate * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__Certificate(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOftt__IPv6Address
#define SOAP_TYPE_std__vectorTemplateOftt__IPv6Address (956)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__IPv6Address(struct soap*, std::vector<std::string >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__IPv6Address(struct soap*, const std::vector<std::string >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__IPv6Address(struct soap*, const char*, int, const std::vector<std::string >*, const char*);
SOAP_FMAC3 std::vector<std::string >* SOAP_FMAC4 soap_in_std__vectorTemplateOftt__IPv6Address(struct soap*, const char*, std::vector<std::string >*, const char*);
SOAP_FMAC1 std::vector<std::string > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__IPv6Address(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string > * soap_new_std__vectorTemplateOftt__IPv6Address(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__IPv6Address(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOftt__IPv6Address(struct soap *soap, std::vector<std::string >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOftt__IPv6Address(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOftt__IPv4Address
#define SOAP_TYPE_std__vectorTemplateOftt__IPv4Address (955)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__IPv4Address(struct soap*, std::vector<std::string >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__IPv4Address(struct soap*, const std::vector<std::string >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__IPv4Address(struct soap*, const char*, int, const std::vector<std::string >*, const char*);
SOAP_FMAC3 std::vector<std::string >* SOAP_FMAC4 soap_in_std__vectorTemplateOftt__IPv4Address(struct soap*, const char*, std::vector<std::string >*, const char*);
SOAP_FMAC1 std::vector<std::string > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__IPv4Address(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string > * soap_new_std__vectorTemplateOftt__IPv4Address(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__IPv4Address(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOftt__IPv4Address(struct soap *soap, std::vector<std::string >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOftt__IPv4Address(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__NetworkProtocol
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__NetworkProtocol (953)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__NetworkProtocol(struct soap*, std::vector<tt__NetworkProtocol * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__NetworkProtocol(struct soap*, const std::vector<tt__NetworkProtocol * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__NetworkProtocol(struct soap*, const char*, int, const std::vector<tt__NetworkProtocol * >*, const char*);
SOAP_FMAC3 std::vector<tt__NetworkProtocol * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__NetworkProtocol(struct soap*, const char*, std::vector<tt__NetworkProtocol * >*, const char*);
SOAP_FMAC1 std::vector<tt__NetworkProtocol * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__NetworkProtocol(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__NetworkProtocol * > * soap_new_std__vectorTemplateOfPointerTott__NetworkProtocol(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__NetworkProtocol(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__NetworkProtocol(struct soap *soap, std::vector<tt__NetworkProtocol * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__NetworkProtocol(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__NetworkInterface
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__NetworkInterface (950)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__NetworkInterface(struct soap*, std::vector<tt__NetworkInterface * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__NetworkInterface(struct soap*, const std::vector<tt__NetworkInterface * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__NetworkInterface(struct soap*, const char*, int, const std::vector<tt__NetworkInterface * >*, const char*);
SOAP_FMAC3 std::vector<tt__NetworkInterface * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__NetworkInterface(struct soap*, const char*, std::vector<tt__NetworkInterface * >*, const char*);
SOAP_FMAC1 std::vector<tt__NetworkInterface * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__NetworkInterface(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__NetworkInterface * > * soap_new_std__vectorTemplateOfPointerTott__NetworkInterface(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__NetworkInterface(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__NetworkInterface(struct soap *soap, std::vector<tt__NetworkInterface * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__NetworkInterface(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__IPAddress
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__IPAddress (944)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__IPAddress(struct soap*, std::vector<tt__IPAddress * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__IPAddress(struct soap*, const std::vector<tt__IPAddress * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__IPAddress(struct soap*, const char*, int, const std::vector<tt__IPAddress * >*, const char*);
SOAP_FMAC3 std::vector<tt__IPAddress * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__IPAddress(struct soap*, const char*, std::vector<tt__IPAddress * >*, const char*);
SOAP_FMAC1 std::vector<tt__IPAddress * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__IPAddress(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__IPAddress * > * soap_new_std__vectorTemplateOfPointerTott__IPAddress(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__IPAddress(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__IPAddress(struct soap *soap, std::vector<tt__IPAddress * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__IPAddress(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfxsd__token
#define SOAP_TYPE_std__vectorTemplateOfxsd__token (942)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxsd__token(struct soap*, std::vector<std::string >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxsd__token(struct soap*, const std::vector<std::string >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxsd__token(struct soap*, const char*, int, const std::vector<std::string >*, const char*);
SOAP_FMAC3 std::vector<std::string >* SOAP_FMAC4 soap_in_std__vectorTemplateOfxsd__token(struct soap*, const char*, std::vector<std::string >*, const char*);
SOAP_FMAC1 std::vector<std::string > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxsd__token(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string > * soap_new_std__vectorTemplateOfxsd__token(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfxsd__token(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfxsd__token(struct soap *soap, std::vector<std::string >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfxsd__token(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOftt__CapabilityCategory
#define SOAP_TYPE_std__vectorTemplateOftt__CapabilityCategory (938)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__CapabilityCategory(struct soap*, std::vector<enum tt__CapabilityCategory >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__CapabilityCategory(struct soap*, const std::vector<enum tt__CapabilityCategory >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__CapabilityCategory(struct soap*, const char*, int, const std::vector<enum tt__CapabilityCategory >*, const char*);
SOAP_FMAC3 std::vector<enum tt__CapabilityCategory >* SOAP_FMAC4 soap_in_std__vectorTemplateOftt__CapabilityCategory(struct soap*, const char*, std::vector<enum tt__CapabilityCategory >*, const char*);
SOAP_FMAC1 std::vector<enum tt__CapabilityCategory > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__CapabilityCategory(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__CapabilityCategory > * soap_new_std__vectorTemplateOftt__CapabilityCategory(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__CapabilityCategory(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOftt__CapabilityCategory(struct soap *soap, std::vector<enum tt__CapabilityCategory >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOftt__CapabilityCategory(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfstd__string
#define SOAP_TYPE_std__vectorTemplateOfstd__string (937)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfstd__string(struct soap*, std::vector<std::string >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfstd__string(struct soap*, const std::vector<std::string >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfstd__string(struct soap*, const char*, int, const std::vector<std::string >*, const char*);
SOAP_FMAC3 std::vector<std::string >* SOAP_FMAC4 soap_in_std__vectorTemplateOfstd__string(struct soap*, const char*, std::vector<std::string >*, const char*);
SOAP_FMAC1 std::vector<std::string > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfstd__string(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string > * soap_new_std__vectorTemplateOfstd__string(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfstd__string(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfstd__string(struct soap *soap, std::vector<std::string >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfstd__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__User
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__User (936)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__User(struct soap*, std::vector<tt__User * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__User(struct soap*, const std::vector<tt__User * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__User(struct soap*, const char*, int, const std::vector<tt__User * >*, const char*);
SOAP_FMAC3 std::vector<tt__User * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__User(struct soap*, const char*, std::vector<tt__User * >*, const char*);
SOAP_FMAC1 std::vector<tt__User * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__User(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__User * > * soap_new_std__vectorTemplateOfPointerTott__User(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__User(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__User(struct soap *soap, std::vector<tt__User * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__User(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__NetworkHost
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__NetworkHost (933)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__NetworkHost(struct soap*, std::vector<tt__NetworkHost * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__NetworkHost(struct soap*, const std::vector<tt__NetworkHost * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__NetworkHost(struct soap*, const char*, int, const std::vector<tt__NetworkHost * >*, const char*);
SOAP_FMAC3 std::vector<tt__NetworkHost * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__NetworkHost(struct soap*, const char*, std::vector<tt__NetworkHost * >*, const char*);
SOAP_FMAC1 std::vector<tt__NetworkHost * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__NetworkHost(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__NetworkHost * > * soap_new_std__vectorTemplateOfPointerTott__NetworkHost(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__NetworkHost(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__NetworkHost(struct soap *soap, std::vector<tt__NetworkHost * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__NetworkHost(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfxsd__anyURI
#define SOAP_TYPE_std__vectorTemplateOfxsd__anyURI (931)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxsd__anyURI(struct soap*, std::vector<std::string >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxsd__anyURI(struct soap*, const std::vector<std::string >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxsd__anyURI(struct soap*, const char*, int, const std::vector<std::string >*, const char*);
SOAP_FMAC3 std::vector<std::string >* SOAP_FMAC4 soap_in_std__vectorTemplateOfxsd__anyURI(struct soap*, const char*, std::vector<std::string >*, const char*);
SOAP_FMAC1 std::vector<std::string > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxsd__anyURI(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string > * soap_new_std__vectorTemplateOfxsd__anyURI(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfxsd__anyURI(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfxsd__anyURI(struct soap *soap, std::vector<std::string >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfxsd__anyURI(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Scope
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Scope (930)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Scope(struct soap*, std::vector<tt__Scope * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Scope(struct soap*, const std::vector<tt__Scope * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Scope(struct soap*, const char*, int, const std::vector<tt__Scope * >*, const char*);
SOAP_FMAC3 std::vector<tt__Scope * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Scope(struct soap*, const char*, std::vector<tt__Scope * >*, const char*);
SOAP_FMAC1 std::vector<tt__Scope * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Scope(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Scope * > * soap_new_std__vectorTemplateOfPointerTott__Scope(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Scope(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__Scope(struct soap *soap, std::vector<tt__Scope * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__Scope(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__BackupFile
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__BackupFile (926)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__BackupFile(struct soap*, std::vector<tt__BackupFile * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__BackupFile(struct soap*, const std::vector<tt__BackupFile * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__BackupFile(struct soap*, const char*, int, const std::vector<tt__BackupFile * >*, const char*);
SOAP_FMAC3 std::vector<tt__BackupFile * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__BackupFile(struct soap*, const char*, std::vector<tt__BackupFile * >*, const char*);
SOAP_FMAC1 std::vector<tt__BackupFile * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__BackupFile(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__BackupFile * > * soap_new_std__vectorTemplateOfPointerTott__BackupFile(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__BackupFile(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTott__BackupFile(struct soap *soap, std::vector<tt__BackupFile * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTott__BackupFile(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTotds__Service
#define SOAP_TYPE_std__vectorTemplateOfPointerTotds__Service (918)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTotds__Service(struct soap*, std::vector<tds__Service * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTotds__Service(struct soap*, const std::vector<tds__Service * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTotds__Service(struct soap*, const char*, int, const std::vector<tds__Service * >*, const char*);
SOAP_FMAC3 std::vector<tds__Service * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTotds__Service(struct soap*, const char*, std::vector<tds__Service * >*, const char*);
SOAP_FMAC1 std::vector<tds__Service * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTotds__Service(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tds__Service * > * soap_new_std__vectorTemplateOfPointerTotds__Service(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTotds__Service(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTotds__Service(struct soap *soap, std::vector<tds__Service * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTotds__Service(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

/* End of soapH.h */
